

#### beginning ####

------------------------Semantic analysis---------------------
Type: 'int' on line: 1, column: 1
Id: 'x' at line: 1, column: 5
';' at line: 1, column: 6
Type: 'int' on line: 3, column: 1
Id: 'main' at line: 3, column: 5
'(' at line: 3, column: 9
')' at line: 3, column: 10
'{' on line: 4, column: 1
Keyword [FOR]: 'for' at line: 5, column: 5
'(' at line: 5, column: 9
Id: 'x' at line: 5, column: 10
';' at line: 5, column: 11
Id: 'x' at line: 5, column: 13
OP [SMALLER THAN]: '<' at line: 5, column: 15
Integer: '5' at line: 5, column: 17
';' at line: 5, column: 18
Id: 'x' at line: 5, column: 20
'=' at line: 5, column: 22
Id: 'x' at line: 5, column: 24
'+' at line: 5, column: 26
Integer: '1' at line: 5, column: 28
')' at line: 5, column: 29
'{' on line: 6, column: 5
Id: 'x' at line: 7, column: 9
'=' at line: 7, column: 11
Id: 'x' at line: 7, column: 13
'+' at line: 7, column: 15
Integer: '1' at line: 7, column: 17
';' at line: 7, column: 18
Keyword [WRITELN]: 'writeln' at line: 8, column: 9
'(' at line: 8, column: 16
Id: 'x' at line: 8, column: 17
')' at line: 8, column: 18
';' at line: 8, column: 19
Integer: '2' at line: 9, column: 9
'+' at line: 9, column: 11
Integer: '-2' at line: 9, column: 13
'*' at line: 9, column: 16
Integer: '3' at line: 9, column: 18
';' at line: 9, column: 19
'}' at line: 10, column: 5
Keyword [IF]: 'if' at line: 11, column: 5
'(' at line: 11, column: 8
Integer: '1' at line: 11, column: 9
OP [SMALLER THAN]: '<' at line: 11, column: 11
Integer: '2' at line: 11, column: 13
')' at line: 11, column: 14
'{' on line: 12, column: 5
Keyword [WRITELN]: 'writeln' at line: 13, column: 9
'(' at line: 13, column: 16
Id: 'x' at line: 13, column: 17
')' at line: 13, column: 18
';' at line: 13, column: 19
'}' at line: 14, column: 5
Keyword [ELSE]: 'else' at line: 15, column: 5
'{' on line: 16, column: 5
Keyword [IF]: 'if' at line: 17, column: 9
'(' at line: 17, column: 12
Integer: '2' at line: 17, column: 13
OP [SMALLER THAN]: '<' at line: 17, column: 15
Integer: '1' at line: 17, column: 17
')' at line: 17, column: 18
Keyword [WRITELN]: 'writeln' at line: 18, column: 13
'(' at line: 18, column: 20
Id: 'x' at line: 18, column: 21
')' at line: 18, column: 22
';' at line: 18, column: 23
'}' at line: 19, column: 5
Keyword [RETURN]: 'return' at line: 20, column: 5
Integer: '0' at line: 20, column: 12
';' at line: 20, column: 13
'}' at line: 21, column: 1


#### EOF ####



------------------------------------------------------symbols------------------------------------------------



|         Value         |         Symbol type             |         Return type           |         Scope       |     Parameters      |

|   x                   |    var                          |      int                     |         0            |         0          |
|   main                |    func                         |      int                     |         0            |         0          |


--------------------------------tree--------------------------------

>declarationsList declaration
->declaration
-->varDeclaration
--->simpleVarDeclaration
---->TYPE ID
->funcDeclaration
-->TYPE ID PARENL PARENR stmtList ENDFUNC 
--->stmtList primitiveStmt
---->stmtList primitiveStmt
----->primitiveStmt
------>iterStmt
------->FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
-------->binLogicalExp
--------->relationalExp
---------->sumExp
----------->mulExp
------------>factor
------------->ID
~~~~~~~~~~~~~~-------->binLogicalExp
--------->relationalExp
---------->relationalExp SMALLER sumExp
----------->sumExp
------------>mulExp
------------->factor
-------------->ID
~~~~~~~~~~~~~~~----------->mulExp
------------>factor
~~~~~~~~~~~~~5
-------->ID ASSIGN expression
--------->simpleExp
---------->binLogicalExp
----------->relationalExp
------------>sumExp
------------->sumExp add mulExp
-------------->mulExp
--------------->factor
---------------->ID
~~~~~~~~~~~~~~~~~-------------->factor
~~~~~~~~~~~~~~~1
-------->compoundStmt
--------->compoundStmt
---------->stmtList primitiveStmt
----------->stmtList primitiveStmt
------------>primitiveStmt
------------->exprStmt
-------------->expression SEMIC
--------------->assignExp
---------------->ID ASSIGN expression
----------------->simpleExp
------------------>binLogicalExp
------------------->relationalExp
-------------------->sumExp
--------------------->sumExp add mulExp
---------------------->mulExp
----------------------->factor
------------------------>ID
~~~~~~~~~~~~~~~~~~~~~~~~~---------------------->factor
~~~~~~~~~~~~~~~~~~~~~~~1
------------>outOp
------------->WRITELN PARENL outConst PARENR SEMIC
-------------->simpleExp
--------------->binLogicalExp
---------------->relationalExp
----------------->sumExp
------------------>mulExp
------------------->factor
-------------------->ID
~~~~~~~~~~~~~~~~~~~~~----------->exprStmt
------------>expression SEMIC
------------->simpleExp
-------------->binLogicalExp
--------------->relationalExp
---------------->sumExp
----------------->sumExp add mulExp
------------------>mulExp
------------------->factor
~~~~~~~~~~~~~~~~~~~~2
------------------>mulExp mulOp factor
------------------->factor
~~~~~~~~~~~~~~~~~~~~-2
~~~~~~~~~~~~~~~~~~~3
----->condStmt
------>ifStmt primitiveStmt elseStmt
------->IF PARENL simpleExp PARENR
-------->binLogicalExp
--------->relationalExp
---------->relationalExp SMALLER sumExp
----------->sumExp
------------>mulExp
------------->factor
~~~~~~~~~~~~~~1
----------->mulExp
------------>factor
~~~~~~~~~~~~~2
------->compoundStmt
-------->compoundStmt
--------->primitiveStmt
---------->outOp
----------->WRITELN PARENL outConst PARENR SEMIC
------------>simpleExp
------------->binLogicalExp
-------------->relationalExp
--------------->sumExp
---------------->mulExp
----------------->factor
------------------>ID
~~~~~~~~~~~~~~~~~~~------->ELSE primitiveStmt
-------->compoundStmt
--------->compoundStmt
---------->primitiveStmt
----------->condStmt
------------>ifStmt primitiveStmt
------------->IF PARENL simpleExp PARENR
-------------->binLogicalExp
--------------->relationalExp
---------------->relationalExp SMALLER sumExp
----------------->sumExp
------------------>mulExp
------------------->factor
~~~~~~~~~~~~~~~~~~~~2
----------------->mulExp
------------------>factor
~~~~~~~~~~~~~~~~~~~1
------------->outOp
-------------->WRITELN PARENL outConst PARENR SEMIC
--------------->simpleExp
---------------->binLogicalExp
----------------->relationalExp
------------------>sumExp
------------------->mulExp
-------------------->factor
--------------------->ID
~~~~~~~~~~~~~~~~~~~~~~---->returnStmt
----->RETURN expression SEMIC
------>simpleExp
------->binLogicalExp
-------->relationalExp
--------->sumExp
---------->mulExp
----------->factor
~~~~~~~~~~~~0


 There is 0 errors and 0 warnings in the file

