Terminais sem uso na gramática

    FILTER
    MAIN


Gramática

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funcDeclaration

    6 varDeclaration: simpleVDeclaration

    7 funcDeclaration: simpleFDeclaration PARENL params PARENR compoundStmt
    8                | simpleFDeclaration PARENL PARENR compoundStmt

    9 simpleVDeclaration: TYPE ID

   10 simpleFDeclaration: TYPE ID

   11 params: params param
   12       | param

   13 param: simpleVDeclaration

   14 compoundStmt: STFUNC stmtList ENDFUNC

   15 stmtList: stmtList primitiveStmt
   16         | primitiveStmt

   17 primitiveStmt: exprStmt
   18              | compoundStmt
   19              | condStmt
   20              | iterStmt
   21              | returnStmt
   22              | listStmt
   23              | inOp
   24              | outOp
   25              | varDeclaration

   26 exprStmt: expression SEMIC

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt
   28         | IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   30 returnStmt: RETURN expression SEMIC

   31 listStmt: appendOps
   32         | returnListOps
   33         | destroyHeadOps
   34         | mapFilterOps

   35 appendOps: simpleExp APPEND ID SEMIC

   36 returnListOps: returnListOp ID

   37 returnListOp: HEADLIST
   38             | TAILLIST

   39 destroyHeadOps: DESTROYHEAD ID SEMIC

   40 mapFilterOps: fCall MAP ID SEMIC

   41 expression: assignExp
   42           | simpleExp

   43 assignExp: ID ASSIGN expression

   44 simpleExp: binLogicalExp

   45 constOp: INTEGER
   46        | DECIMAL
   47        | LIST
   48        | NIL

   49 inOp: READ PARENL ID PARENR

   50 outOp: WRITE PARENL outConst PARENR SEMIC
   51      | WRITELN PARENL outConst PARENR SEMIC

   52 outConst: STRING
   53         | simpleExp

   54 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp
   55              | unLogicalExp

   56 binLogicalOp: OR
   57             | AND
   58             | NEG

   59 unLogicalExp: unLogicalOp unLogicalExp
   60             | relationalExp

   61 unLogicalOp: NOT

   62 relationalExp: relationalExp relationalOp sumExp
   63              | sumExp

   64 relationalOp: SMALLER
   65             | GREATER
   66             | SMALLEQ
   67             | GREATEQ
   68             | EQUALS
   69             | DIFFERENT

   70 sumExp: sumExp sumOp mulExp
   71       | mulExp

   72 sumOp: ADD
   73      | SUB

   74 mulExp: mulExp mulOp factor
   75       | factor
   76       | sumOp factor

   77 mulOp: MULT
   78      | DIV

   79 factor: ID
   80       | fCall
   81       | PARENL simpleExp PARENR
   82       | constOp

   83 fCall: ID PARENL callParams PARENR
   84      | ID PARENL PARENR

   85 callParams: callParams COMMA simpleExp
   86           | simpleExp


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    ID <str> (258) 9 10 35 36 39 40 43 49 79 83 84
    TYPE <str> (259) 9 10
    INTEGER <integer> (260) 45
    DECIMAL <dec> (261) 46
    LIST <str> (262) 47
    STRING <str> (263) 52
    NIL <str> (264) 48
    ADD (265) 72
    SUB (266) 73
    MULT (267) 77
    DIV (268) 78
    OR (269) 56
    AND (270) 57
    SMALLER (271) 64
    GREATER (272) 65
    SMALLEQ (273) 66
    GREATEQ (274) 67
    EQUALS (275) 68
    DIFFERENT (276) 69
    APPEND (277) 35
    HEADLIST (278) 37
    TAILLIST (279) 38
    DESTROYHEAD (280) 39
    FILTER (281)
    ASSIGN (282) 43
    NEG (283) 58
    NOT (284) 61
    MAP (285) 40
    ELSE (286) 28
    THEN (287)
    IF (288) 27 28
    FOR (289) 29
    READ (290) 49
    WRITE (291) 50
    WRITELN (292) 51
    MAIN (293)
    RETURN (294) 30
    SEMIC (295) 26 29 30 35 39 40 50 51
    COMMA (296) 85
    STFUNC (297) 14
    ENDFUNC (298) 14
    PARENL (299) 7 8 27 28 29 49 50 51 81 83 84
    PARENR (300) 7 8 27 28 29 49 50 51 81 83 84


Não terminais com as regras onde eles aparecem

    $accept (46)
        à esquerda: 0
    program (47)
        à esquerda: 1
        à direita: 0
    declarationList <ast> (48)
        à esquerda: 2 3
        à direita: 1 2
    declaration <ast> (49)
        à esquerda: 4 5
        à direita: 2 3
    varDeclaration <ast> (50)
        à esquerda: 6
        à direita: 4 25
    funcDeclaration <ast> (51)
        à esquerda: 7 8
        à direita: 5
    simpleVDeclaration <ast> (52)
        à esquerda: 9
        à direita: 6 13
    simpleFDeclaration <ast> (53)
        à esquerda: 10
        à direita: 7 8
    params <ast> (54)
        à esquerda: 11 12
        à direita: 7 11
    param <ast> (55)
        à esquerda: 13
        à direita: 11 12
    compoundStmt <ast> (56)
        à esquerda: 14
        à direita: 7 8 18
    stmtList <ast> (57)
        à esquerda: 15 16
        à direita: 14 15
    primitiveStmt <ast> (58)
        à esquerda: 17 18 19 20 21 22 23 24 25
        à direita: 15 16 27 28 29
    exprStmt <ast> (59)
        à esquerda: 26
        à direita: 17
    condStmt <ast> (60)
        à esquerda: 27 28
        à direita: 19
    iterStmt <ast> (61)
        à esquerda: 29
        à direita: 20
    returnStmt <ast> (62)
        à esquerda: 30
        à direita: 21
    listStmt <ast> (63)
        à esquerda: 31 32 33 34
        à direita: 22
    appendOps <ast> (64)
        à esquerda: 35
        à direita: 31
    returnListOps <ast> (65)
        à esquerda: 36
        à direita: 32
    returnListOp <ast> (66)
        à esquerda: 37 38
        à direita: 36
    destroyHeadOps <ast> (67)
        à esquerda: 39
        à direita: 33
    mapFilterOps <ast> (68)
        à esquerda: 40
        à direita: 34
    expression <ast> (69)
        à esquerda: 41 42
        à direita: 26 30 43
    assignExp <ast> (70)
        à esquerda: 43
        à direita: 29 41
    simpleExp <ast> (71)
        à esquerda: 44
        à direita: 27 28 29 35 42 53 81 85 86
    constOp <ast> (72)
        à esquerda: 45 46 47 48
        à direita: 82
    inOp <ast> (73)
        à esquerda: 49
        à direita: 23
    outOp <ast> (74)
        à esquerda: 50 51
        à direita: 24
    outConst <ast> (75)
        à esquerda: 52 53
        à direita: 50 51
    binLogicalExp <ast> (76)
        à esquerda: 54 55
        à direita: 44 54
    binLogicalOp <ast> (77)
        à esquerda: 56 57 58
        à direita: 54
    unLogicalExp <ast> (78)
        à esquerda: 59 60
        à direita: 55 59
    unLogicalOp <ast> (79)
        à esquerda: 61
        à direita: 54 59
    relationalExp <ast> (80)
        à esquerda: 62 63
        à direita: 60 62
    relationalOp <ast> (81)
        à esquerda: 64 65 66 67 68 69
        à direita: 62
    sumExp <ast> (82)
        à esquerda: 70 71
        à direita: 62 63 70
    sumOp <ast> (83)
        à esquerda: 72 73
        à direita: 70 76
    mulExp <ast> (84)
        à esquerda: 74 75 76
        à direita: 70 71 74
    mulOp <ast> (85)
        à esquerda: 77 78
        à direita: 74
    factor <ast> (86)
        à esquerda: 79 80 81 82
        à direita: 74 75 76
    fCall <ast> (87)
        à esquerda: 83 84
        à direita: 40 80
    callParams <ast> (88)
        à esquerda: 85 86
        à direita: 83 85


Estado 0

    0 $accept: • program $end

    TYPE  deslocar, e ir ao estado 1

    program             ir ao estado 2
    declarationList     ir ao estado 3
    declaration         ir ao estado 4
    varDeclaration      ir ao estado 5
    funcDeclaration     ir ao estado 6
    simpleVDeclaration  ir ao estado 7
    simpleFDeclaration  ir ao estado 8


Estado 1

    9 simpleVDeclaration: TYPE • ID
   10 simpleFDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 9


Estado 2

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 10


Estado 3

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  deslocar, e ir ao estado 1

    $end  reduzir usando a regra 1 (program)

    declaration         ir ao estado 11
    varDeclaration      ir ao estado 5
    funcDeclaration     ir ao estado 6
    simpleVDeclaration  ir ao estado 7
    simpleFDeclaration  ir ao estado 8


Estado 4

    3 declarationList: declaration •

    $end  reduzir usando a regra 3 (declarationList)
    TYPE  reduzir usando a regra 3 (declarationList)


Estado 5

    4 declaration: varDeclaration •

    $end  reduzir usando a regra 4 (declaration)
    TYPE  reduzir usando a regra 4 (declaration)


Estado 6

    5 declaration: funcDeclaration •

    $end  reduzir usando a regra 5 (declaration)
    TYPE  reduzir usando a regra 5 (declaration)


Estado 7

    6 varDeclaration: simpleVDeclaration •

    $end  reduzir usando a regra 6 (varDeclaration)
    TYPE  reduzir usando a regra 6 (varDeclaration)


Estado 8

    7 funcDeclaration: simpleFDeclaration • PARENL params PARENR compoundStmt
    8                | simpleFDeclaration • PARENL PARENR compoundStmt

    PARENL  deslocar, e ir ao estado 12


Estado 9

    9 simpleVDeclaration: TYPE ID •
   10 simpleFDeclaration: TYPE ID •

    $end    reduzir usando a regra 9 (simpleVDeclaration)
    TYPE    reduzir usando a regra 9 (simpleVDeclaration)
    PARENL  reduzir usando a regra 10 (simpleFDeclaration)


Estado 10

    0 $accept: program $end •

    $padrão  aceitar


Estado 11

    2 declarationList: declarationList declaration •

    $end  reduzir usando a regra 2 (declarationList)
    TYPE  reduzir usando a regra 2 (declarationList)


Estado 12

    7 funcDeclaration: simpleFDeclaration PARENL • params PARENR compoundStmt
    8                | simpleFDeclaration PARENL • PARENR compoundStmt

    TYPE    deslocar, e ir ao estado 13
    PARENR  deslocar, e ir ao estado 14

    simpleVDeclaration  ir ao estado 15
    params              ir ao estado 16
    param               ir ao estado 17


Estado 13

    9 simpleVDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 18


Estado 14

    8 funcDeclaration: simpleFDeclaration PARENL PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 19

    compoundStmt  ir ao estado 20


Estado 15

   13 param: simpleVDeclaration •

    TYPE    reduzir usando a regra 13 (param)
    PARENR  reduzir usando a regra 13 (param)


Estado 16

    7 funcDeclaration: simpleFDeclaration PARENL params • PARENR compoundStmt
   11 params: params • param

    TYPE    deslocar, e ir ao estado 13
    PARENR  deslocar, e ir ao estado 21

    simpleVDeclaration  ir ao estado 15
    param               ir ao estado 22


Estado 17

   12 params: param •

    TYPE    reduzir usando a regra 12 (params)
    PARENR  reduzir usando a regra 12 (params)


Estado 18

    9 simpleVDeclaration: TYPE ID •

    TYPE    reduzir usando a regra 9 (simpleVDeclaration)
    PARENR  reduzir usando a regra 9 (simpleVDeclaration)


Estado 19

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 148
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 32
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 149
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 41
    simpleVDeclaration  ir ao estado 150
    compoundStmt        ir ao estado 42
    stmtList            ir ao estado 43
    primitiveStmt       ir ao estado 44
    exprStmt            ir ao estado 45
    condStmt            ir ao estado 46
    iterStmt            ir ao estado 47
    returnStmt          ir ao estado 48
    listStmt            ir ao estado 49
    appendOps           ir ao estado 50
    returnListOps       ir ao estado 51
    returnListOp        ir ao estado 52
    destroyHeadOps      ir ao estado 53
    mapFilterOps        ir ao estado 54
    expression          ir ao estado 55
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 57
    constOp             ir ao estado 58
    inOp                ir ao estado 59
    outOp               ir ao estado 60
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 69


Estado 20

    8 funcDeclaration: simpleFDeclaration PARENL PARENR compoundStmt •

    $end  reduzir usando a regra 8 (funcDeclaration)
    TYPE  reduzir usando a regra 8 (funcDeclaration)


Estado 21

    7 funcDeclaration: simpleFDeclaration PARENL params PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 19

    compoundStmt  ir ao estado 70


Estado 22

   11 params: params param •

    TYPE    reduzir usando a regra 11 (params)
    PARENR  reduzir usando a regra 11 (params)


Estado 23

   43 assignExp: ID • ASSIGN expression
   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 71
    PARENL  deslocar, e ir ao estado 72

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    APPEND     reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    SEMIC      reduzir usando a regra 79 (factor)


Estado 24

   45 constOp: INTEGER •

    ADD        reduzir usando a regra 45 (constOp)
    SUB        reduzir usando a regra 45 (constOp)
    MULT       reduzir usando a regra 45 (constOp)
    DIV        reduzir usando a regra 45 (constOp)
    OR         reduzir usando a regra 45 (constOp)
    AND        reduzir usando a regra 45 (constOp)
    SMALLER    reduzir usando a regra 45 (constOp)
    GREATER    reduzir usando a regra 45 (constOp)
    SMALLEQ    reduzir usando a regra 45 (constOp)
    GREATEQ    reduzir usando a regra 45 (constOp)
    EQUALS     reduzir usando a regra 45 (constOp)
    DIFFERENT  reduzir usando a regra 45 (constOp)
    APPEND     reduzir usando a regra 45 (constOp)
    NEG        reduzir usando a regra 45 (constOp)
    SEMIC      reduzir usando a regra 45 (constOp)


Estado 25

   46 constOp: DECIMAL •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    APPEND     reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    SEMIC      reduzir usando a regra 46 (constOp)


Estado 26

   47 constOp: LIST •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    APPEND     reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    SEMIC      reduzir usando a regra 47 (constOp)


Estado 27

   48 constOp: NIL •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    APPEND     reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    SEMIC      reduzir usando a regra 48 (constOp)


Estado 28

   72 sumOp: ADD •

    ID       reduzir usando a regra 72 (sumOp)
    INTEGER  reduzir usando a regra 72 (sumOp)
    DECIMAL  reduzir usando a regra 72 (sumOp)
    LIST     reduzir usando a regra 72 (sumOp)
    NIL      reduzir usando a regra 72 (sumOp)
    PARENL   reduzir usando a regra 72 (sumOp)


Estado 29

   73 sumOp: SUB •

    ID       reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    LIST     reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 30

   37 returnListOp: HEADLIST •

    ID  reduzir usando a regra 37 (returnListOp)


Estado 31

   38 returnListOp: TAILLIST •

    ID  reduzir usando a regra 38 (returnListOp)


Estado 32

   39 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 73


Estado 33

   61 unLogicalOp: NOT •

    ID       reduzir usando a regra 61 (unLogicalOp)
    INTEGER  reduzir usando a regra 61 (unLogicalOp)
    DECIMAL  reduzir usando a regra 61 (unLogicalOp)
    LIST     reduzir usando a regra 61 (unLogicalOp)
    NIL      reduzir usando a regra 61 (unLogicalOp)
    ADD      reduzir usando a regra 61 (unLogicalOp)
    SUB      reduzir usando a regra 61 (unLogicalOp)
    NOT      reduzir usando a regra 61 (unLogicalOp)
    PARENL   reduzir usando a regra 61 (unLogicalOp)


Estado 34

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 74


Estado 35

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 75


Estado 36

   49 inOp: READ • PARENL ID PARENR

    PARENL  deslocar, e ir ao estado 76


Estado 37

   50 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 77


Estado 38

   51 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 78


Estado 39

   30 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 151
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 156

    expression     ir ao estado 79
    assignExp      ir ao estado 56
    simpleExp      ir ao estado 80
    constOp        ir ao estado 157
    binLogicalExp  ir ao estado 158
    unLogicalExp   ir ao estado 159
    unLogicalOp    ir ao estado 160
    relationalExp  ir ao estado 161
    sumExp         ir ao estado 162
    sumOp          ir ao estado 163
    mulExp         ir ao estado 164
    factor         ir ao estado 165
    fCall          ir ao estado 81


Estado 40

   81 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 83
    constOp        ir ao estado 171
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 41

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    LIST         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    NOT          reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 42

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    LIST         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    NOT          reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 43

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 148
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 32
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 149
    ENDFUNC      deslocar, e ir ao estado 84
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 41
    simpleVDeclaration  ir ao estado 150
    compoundStmt        ir ao estado 42
    primitiveStmt       ir ao estado 85
    exprStmt            ir ao estado 45
    condStmt            ir ao estado 46
    iterStmt            ir ao estado 47
    returnStmt          ir ao estado 48
    listStmt            ir ao estado 49
    appendOps           ir ao estado 50
    returnListOps       ir ao estado 51
    returnListOp        ir ao estado 52
    destroyHeadOps      ir ao estado 53
    mapFilterOps        ir ao estado 54
    expression          ir ao estado 55
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 57
    constOp             ir ao estado 58
    inOp                ir ao estado 59
    outOp               ir ao estado 60
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 69


Estado 44

   16 stmtList: primitiveStmt •

    ID           reduzir usando a regra 16 (stmtList)
    TYPE         reduzir usando a regra 16 (stmtList)
    INTEGER      reduzir usando a regra 16 (stmtList)
    DECIMAL      reduzir usando a regra 16 (stmtList)
    LIST         reduzir usando a regra 16 (stmtList)
    NIL          reduzir usando a regra 16 (stmtList)
    ADD          reduzir usando a regra 16 (stmtList)
    SUB          reduzir usando a regra 16 (stmtList)
    HEADLIST     reduzir usando a regra 16 (stmtList)
    TAILLIST     reduzir usando a regra 16 (stmtList)
    DESTROYHEAD  reduzir usando a regra 16 (stmtList)
    NOT          reduzir usando a regra 16 (stmtList)
    IF           reduzir usando a regra 16 (stmtList)
    FOR          reduzir usando a regra 16 (stmtList)
    READ         reduzir usando a regra 16 (stmtList)
    WRITE        reduzir usando a regra 16 (stmtList)
    WRITELN      reduzir usando a regra 16 (stmtList)
    RETURN       reduzir usando a regra 16 (stmtList)
    STFUNC       reduzir usando a regra 16 (stmtList)
    ENDFUNC      reduzir usando a regra 16 (stmtList)
    PARENL       reduzir usando a regra 16 (stmtList)


Estado 45

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    LIST         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    NOT          reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 46

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    LIST         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    NOT          reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 47

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    LIST         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    NOT          reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 48

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    LIST         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    NOT          reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 49

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    LIST         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    NOT          reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 50

   31 listStmt: appendOps •

    ID           reduzir usando a regra 31 (listStmt)
    TYPE         reduzir usando a regra 31 (listStmt)
    INTEGER      reduzir usando a regra 31 (listStmt)
    DECIMAL      reduzir usando a regra 31 (listStmt)
    LIST         reduzir usando a regra 31 (listStmt)
    NIL          reduzir usando a regra 31 (listStmt)
    ADD          reduzir usando a regra 31 (listStmt)
    SUB          reduzir usando a regra 31 (listStmt)
    HEADLIST     reduzir usando a regra 31 (listStmt)
    TAILLIST     reduzir usando a regra 31 (listStmt)
    DESTROYHEAD  reduzir usando a regra 31 (listStmt)
    NOT          reduzir usando a regra 31 (listStmt)
    IF           reduzir usando a regra 31 (listStmt)
    FOR          reduzir usando a regra 31 (listStmt)
    READ         reduzir usando a regra 31 (listStmt)
    WRITE        reduzir usando a regra 31 (listStmt)
    WRITELN      reduzir usando a regra 31 (listStmt)
    RETURN       reduzir usando a regra 31 (listStmt)
    STFUNC       reduzir usando a regra 31 (listStmt)
    ENDFUNC      reduzir usando a regra 31 (listStmt)
    PARENL       reduzir usando a regra 31 (listStmt)


Estado 51

   32 listStmt: returnListOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    LIST         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    NOT          reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 52

   36 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 86


Estado 53

   33 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    LIST         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    NOT          reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 54

   34 listStmt: mapFilterOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    LIST         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    NOT          reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 55

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 87


Estado 56

   41 expression: assignExp •

    SEMIC  reduzir usando a regra 41 (expression)


Estado 57

   35 appendOps: simpleExp • APPEND ID SEMIC
   42 expression: simpleExp •

    APPEND  deslocar, e ir ao estado 88

    SEMIC  reduzir usando a regra 42 (expression)


Estado 58

   82 factor: constOp •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    APPEND     reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    SEMIC      reduzir usando a regra 82 (factor)


Estado 59

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    LIST         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    NOT          reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 60

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    LIST         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    NOT          reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 61

   44 simpleExp: binLogicalExp •
   54 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 89
    AND  deslocar, e ir ao estado 90
    NEG  deslocar, e ir ao estado 91

    APPEND  reduzir usando a regra 44 (simpleExp)
    SEMIC   reduzir usando a regra 44 (simpleExp)

    binLogicalOp  ir ao estado 92


Estado 62

   55 binLogicalExp: unLogicalExp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    APPEND  reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    SEMIC   reduzir usando a regra 55 (binLogicalExp)


Estado 63

   59 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 181
    INTEGER  deslocar, e ir ao estado 24
    DECIMAL  deslocar, e ir ao estado 25
    LIST     deslocar, e ir ao estado 26
    NIL      deslocar, e ir ao estado 27
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 40

    constOp        ir ao estado 58
    unLogicalExp   ir ao estado 93
    unLogicalOp    ir ao estado 63
    relationalExp  ir ao estado 64
    sumExp         ir ao estado 65
    sumOp          ir ao estado 66
    mulExp         ir ao estado 67
    factor         ir ao estado 68
    fCall          ir ao estado 182


Estado 64

   60 unLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 94
    GREATER    deslocar, e ir ao estado 95
    SMALLEQ    deslocar, e ir ao estado 96
    GREATEQ    deslocar, e ir ao estado 97
    EQUALS     deslocar, e ir ao estado 98
    DIFFERENT  deslocar, e ir ao estado 99

    OR      reduzir usando a regra 60 (unLogicalExp)
    AND     reduzir usando a regra 60 (unLogicalExp)
    APPEND  reduzir usando a regra 60 (unLogicalExp)
    NEG     reduzir usando a regra 60 (unLogicalExp)
    SEMIC   reduzir usando a regra 60 (unLogicalExp)

    relationalOp  ir ao estado 100


Estado 65

   63 relationalExp: sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 183
    SUB  deslocar, e ir ao estado 184

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    APPEND     reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    SEMIC      reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 101


Estado 66

   76 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 181
    INTEGER  deslocar, e ir ao estado 24
    DECIMAL  deslocar, e ir ao estado 25
    LIST     deslocar, e ir ao estado 26
    NIL      deslocar, e ir ao estado 27
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    factor   ir ao estado 102
    fCall    ir ao estado 182


Estado 67

   71 sumExp: mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 103
    DIV   deslocar, e ir ao estado 104

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    APPEND     reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    SEMIC      reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 105


Estado 68

   75 mulExp: factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    APPEND     reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    SEMIC      reduzir usando a regra 75 (mulExp)


Estado 69

   40 mapFilterOps: fCall • MAP ID SEMIC
   80 factor: fCall •

    MAP  deslocar, e ir ao estado 106

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    APPEND     reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 70

    7 funcDeclaration: simpleFDeclaration PARENL params PARENR compoundStmt •

    $end  reduzir usando a regra 7 (funcDeclaration)
    TYPE  reduzir usando a regra 7 (funcDeclaration)


Estado 71

   43 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 151
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 156

    expression     ir ao estado 107
    assignExp      ir ao estado 56
    simpleExp      ir ao estado 80
    constOp        ir ao estado 157
    binLogicalExp  ir ao estado 158
    unLogicalExp   ir ao estado 159
    unLogicalOp    ir ao estado 160
    relationalExp  ir ao estado 161
    sumExp         ir ao estado 162
    sumOp          ir ao estado 163
    mulExp         ir ao estado 164
    factor         ir ao estado 165
    fCall          ir ao estado 81


Estado 72

   83 fCall: ID PARENL • callParams PARENR
   84      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 190
    PARENR   deslocar, e ir ao estado 108

    simpleExp      ir ao estado 109
    constOp        ir ao estado 191
    binLogicalExp  ir ao estado 192
    unLogicalExp   ir ao estado 193
    unLogicalOp    ir ao estado 194
    relationalExp  ir ao estado 195
    sumExp         ir ao estado 196
    sumOp          ir ao estado 197
    mulExp         ir ao estado 198
    factor         ir ao estado 199
    fCall          ir ao estado 200
    callParams     ir ao estado 110


Estado 73

   39 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 111


Estado 74

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 112
    constOp        ir ao estado 171
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 75

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 113

    assignExp  ir ao estado 114


Estado 76

   49 inOp: READ PARENL • ID PARENR

    ID  deslocar, e ir ao estado 115


Estado 77

   50 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    STRING   deslocar, e ir ao estado 116
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 117
    constOp        ir ao estado 171
    outConst       ir ao estado 118
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 78

   51 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    STRING   deslocar, e ir ao estado 116
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 117
    constOp        ir ao estado 171
    outConst       ir ao estado 119
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 79

   30 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 120


Estado 80

   42 expression: simpleExp •

    SEMIC  reduzir usando a regra 42 (expression)


Estado 81

   80 factor: fCall •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 82

   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 201

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 83

   81 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 121


Estado 84

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    $end  reduzir usando a regra 14 (compoundStmt)
    TYPE  reduzir usando a regra 14 (compoundStmt)


Estado 85

   15 stmtList: stmtList primitiveStmt •

    ID           reduzir usando a regra 15 (stmtList)
    TYPE         reduzir usando a regra 15 (stmtList)
    INTEGER      reduzir usando a regra 15 (stmtList)
    DECIMAL      reduzir usando a regra 15 (stmtList)
    LIST         reduzir usando a regra 15 (stmtList)
    NIL          reduzir usando a regra 15 (stmtList)
    ADD          reduzir usando a regra 15 (stmtList)
    SUB          reduzir usando a regra 15 (stmtList)
    HEADLIST     reduzir usando a regra 15 (stmtList)
    TAILLIST     reduzir usando a regra 15 (stmtList)
    DESTROYHEAD  reduzir usando a regra 15 (stmtList)
    NOT          reduzir usando a regra 15 (stmtList)
    IF           reduzir usando a regra 15 (stmtList)
    FOR          reduzir usando a regra 15 (stmtList)
    READ         reduzir usando a regra 15 (stmtList)
    WRITE        reduzir usando a regra 15 (stmtList)
    WRITELN      reduzir usando a regra 15 (stmtList)
    RETURN       reduzir usando a regra 15 (stmtList)
    STFUNC       reduzir usando a regra 15 (stmtList)
    ENDFUNC      reduzir usando a regra 15 (stmtList)
    PARENL       reduzir usando a regra 15 (stmtList)


Estado 86

   36 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 36 (returnListOps)
    TYPE         reduzir usando a regra 36 (returnListOps)
    INTEGER      reduzir usando a regra 36 (returnListOps)
    DECIMAL      reduzir usando a regra 36 (returnListOps)
    LIST         reduzir usando a regra 36 (returnListOps)
    NIL          reduzir usando a regra 36 (returnListOps)
    ADD          reduzir usando a regra 36 (returnListOps)
    SUB          reduzir usando a regra 36 (returnListOps)
    HEADLIST     reduzir usando a regra 36 (returnListOps)
    TAILLIST     reduzir usando a regra 36 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 36 (returnListOps)
    NOT          reduzir usando a regra 36 (returnListOps)
    IF           reduzir usando a regra 36 (returnListOps)
    FOR          reduzir usando a regra 36 (returnListOps)
    READ         reduzir usando a regra 36 (returnListOps)
    WRITE        reduzir usando a regra 36 (returnListOps)
    WRITELN      reduzir usando a regra 36 (returnListOps)
    RETURN       reduzir usando a regra 36 (returnListOps)
    STFUNC       reduzir usando a regra 36 (returnListOps)
    ENDFUNC      reduzir usando a regra 36 (returnListOps)
    PARENL       reduzir usando a regra 36 (returnListOps)


Estado 87

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    LIST         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    NOT          reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 88

   35 appendOps: simpleExp APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 122


Estado 89

   56 binLogicalOp: OR •

    NOT  reduzir usando a regra 56 (binLogicalOp)


Estado 90

   57 binLogicalOp: AND •

    NOT  reduzir usando a regra 57 (binLogicalOp)


Estado 91

   58 binLogicalOp: NEG •

    NOT  reduzir usando a regra 58 (binLogicalOp)


Estado 92

   54 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 202

    unLogicalOp  ir ao estado 123


Estado 93

   59 unLogicalExp: unLogicalOp unLogicalExp •

    OR      reduzir usando a regra 59 (unLogicalExp)
    AND     reduzir usando a regra 59 (unLogicalExp)
    APPEND  reduzir usando a regra 59 (unLogicalExp)
    NEG     reduzir usando a regra 59 (unLogicalExp)
    SEMIC   reduzir usando a regra 59 (unLogicalExp)


Estado 94

   64 relationalOp: SMALLER •

    ID       reduzir usando a regra 64 (relationalOp)
    INTEGER  reduzir usando a regra 64 (relationalOp)
    DECIMAL  reduzir usando a regra 64 (relationalOp)
    LIST     reduzir usando a regra 64 (relationalOp)
    NIL      reduzir usando a regra 64 (relationalOp)
    ADD      reduzir usando a regra 64 (relationalOp)
    SUB      reduzir usando a regra 64 (relationalOp)
    PARENL   reduzir usando a regra 64 (relationalOp)


Estado 95

   65 relationalOp: GREATER •

    ID       reduzir usando a regra 65 (relationalOp)
    INTEGER  reduzir usando a regra 65 (relationalOp)
    DECIMAL  reduzir usando a regra 65 (relationalOp)
    LIST     reduzir usando a regra 65 (relationalOp)
    NIL      reduzir usando a regra 65 (relationalOp)
    ADD      reduzir usando a regra 65 (relationalOp)
    SUB      reduzir usando a regra 65 (relationalOp)
    PARENL   reduzir usando a regra 65 (relationalOp)


Estado 96

   66 relationalOp: SMALLEQ •

    ID       reduzir usando a regra 66 (relationalOp)
    INTEGER  reduzir usando a regra 66 (relationalOp)
    DECIMAL  reduzir usando a regra 66 (relationalOp)
    LIST     reduzir usando a regra 66 (relationalOp)
    NIL      reduzir usando a regra 66 (relationalOp)
    ADD      reduzir usando a regra 66 (relationalOp)
    SUB      reduzir usando a regra 66 (relationalOp)
    PARENL   reduzir usando a regra 66 (relationalOp)


Estado 97

   67 relationalOp: GREATEQ •

    ID       reduzir usando a regra 67 (relationalOp)
    INTEGER  reduzir usando a regra 67 (relationalOp)
    DECIMAL  reduzir usando a regra 67 (relationalOp)
    LIST     reduzir usando a regra 67 (relationalOp)
    NIL      reduzir usando a regra 67 (relationalOp)
    ADD      reduzir usando a regra 67 (relationalOp)
    SUB      reduzir usando a regra 67 (relationalOp)
    PARENL   reduzir usando a regra 67 (relationalOp)


Estado 98

   68 relationalOp: EQUALS •

    ID       reduzir usando a regra 68 (relationalOp)
    INTEGER  reduzir usando a regra 68 (relationalOp)
    DECIMAL  reduzir usando a regra 68 (relationalOp)
    LIST     reduzir usando a regra 68 (relationalOp)
    NIL      reduzir usando a regra 68 (relationalOp)
    ADD      reduzir usando a regra 68 (relationalOp)
    SUB      reduzir usando a regra 68 (relationalOp)
    PARENL   reduzir usando a regra 68 (relationalOp)


Estado 99

   69 relationalOp: DIFFERENT •

    ID       reduzir usando a regra 69 (relationalOp)
    INTEGER  reduzir usando a regra 69 (relationalOp)
    DECIMAL  reduzir usando a regra 69 (relationalOp)
    LIST     reduzir usando a regra 69 (relationalOp)
    NIL      reduzir usando a regra 69 (relationalOp)
    ADD      reduzir usando a regra 69 (relationalOp)
    SUB      reduzir usando a regra 69 (relationalOp)
    PARENL   reduzir usando a regra 69 (relationalOp)


Estado 100

   62 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 181
    INTEGER  deslocar, e ir ao estado 24
    DECIMAL  deslocar, e ir ao estado 25
    LIST     deslocar, e ir ao estado 26
    NIL      deslocar, e ir ao estado 27
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    sumExp   ir ao estado 124
    sumOp    ir ao estado 66
    mulExp   ir ao estado 67
    factor   ir ao estado 68
    fCall    ir ao estado 182


Estado 101

   70 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 181
    INTEGER  deslocar, e ir ao estado 24
    DECIMAL  deslocar, e ir ao estado 25
    LIST     deslocar, e ir ao estado 26
    NIL      deslocar, e ir ao estado 27
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    sumOp    ir ao estado 66
    mulExp   ir ao estado 125
    factor   ir ao estado 68
    fCall    ir ao estado 182


Estado 102

   76 mulExp: sumOp factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    APPEND     reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    SEMIC      reduzir usando a regra 76 (mulExp)


Estado 103

   77 mulOp: MULT •

    ID       reduzir usando a regra 77 (mulOp)
    INTEGER  reduzir usando a regra 77 (mulOp)
    DECIMAL  reduzir usando a regra 77 (mulOp)
    LIST     reduzir usando a regra 77 (mulOp)
    NIL      reduzir usando a regra 77 (mulOp)
    PARENL   reduzir usando a regra 77 (mulOp)


Estado 104

   78 mulOp: DIV •

    ID       reduzir usando a regra 78 (mulOp)
    INTEGER  reduzir usando a regra 78 (mulOp)
    DECIMAL  reduzir usando a regra 78 (mulOp)
    LIST     reduzir usando a regra 78 (mulOp)
    NIL      reduzir usando a regra 78 (mulOp)
    PARENL   reduzir usando a regra 78 (mulOp)


Estado 105

   74 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 181
    INTEGER  deslocar, e ir ao estado 24
    DECIMAL  deslocar, e ir ao estado 25
    LIST     deslocar, e ir ao estado 26
    NIL      deslocar, e ir ao estado 27
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    factor   ir ao estado 126
    fCall    ir ao estado 182


Estado 106

   40 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 127


Estado 107

   43 assignExp: ID ASSIGN expression •

    SEMIC  reduzir usando a regra 43 (assignExp)


Estado 108

   84 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    APPEND     reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    MAP        reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 109

   86 callParams: simpleExp •

    COMMA   reduzir usando a regra 86 (callParams)
    PARENR  reduzir usando a regra 86 (callParams)


Estado 110

   83 fCall: ID PARENL callParams • PARENR
   85 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 128
    PARENR  deslocar, e ir ao estado 129


Estado 111

   39 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 39 (destroyHeadOps)
    TYPE         reduzir usando a regra 39 (destroyHeadOps)
    INTEGER      reduzir usando a regra 39 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 39 (destroyHeadOps)
    LIST         reduzir usando a regra 39 (destroyHeadOps)
    NIL          reduzir usando a regra 39 (destroyHeadOps)
    ADD          reduzir usando a regra 39 (destroyHeadOps)
    SUB          reduzir usando a regra 39 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 39 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 39 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 39 (destroyHeadOps)
    NOT          reduzir usando a regra 39 (destroyHeadOps)
    IF           reduzir usando a regra 39 (destroyHeadOps)
    FOR          reduzir usando a regra 39 (destroyHeadOps)
    READ         reduzir usando a regra 39 (destroyHeadOps)
    WRITE        reduzir usando a regra 39 (destroyHeadOps)
    WRITELN      reduzir usando a regra 39 (destroyHeadOps)
    RETURN       reduzir usando a regra 39 (destroyHeadOps)
    STFUNC       reduzir usando a regra 39 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 39 (destroyHeadOps)
    PARENL       reduzir usando a regra 39 (destroyHeadOps)


Estado 112

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 130


Estado 113

   43 assignExp: ID • ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 71


Estado 114

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 131


Estado 115

   49 inOp: READ PARENL ID • PARENR

    PARENR  deslocar, e ir ao estado 132


Estado 116

   52 outConst: STRING •

    PARENR  reduzir usando a regra 52 (outConst)


Estado 117

   53 outConst: simpleExp •

    PARENR  reduzir usando a regra 53 (outConst)


Estado 118

   50 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 133


Estado 119

   51 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 134


Estado 120

   30 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 30 (returnStmt)
    TYPE         reduzir usando a regra 30 (returnStmt)
    INTEGER      reduzir usando a regra 30 (returnStmt)
    DECIMAL      reduzir usando a regra 30 (returnStmt)
    LIST         reduzir usando a regra 30 (returnStmt)
    NIL          reduzir usando a regra 30 (returnStmt)
    ADD          reduzir usando a regra 30 (returnStmt)
    SUB          reduzir usando a regra 30 (returnStmt)
    HEADLIST     reduzir usando a regra 30 (returnStmt)
    TAILLIST     reduzir usando a regra 30 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 30 (returnStmt)
    NOT          reduzir usando a regra 30 (returnStmt)
    IF           reduzir usando a regra 30 (returnStmt)
    FOR          reduzir usando a regra 30 (returnStmt)
    READ         reduzir usando a regra 30 (returnStmt)
    WRITE        reduzir usando a regra 30 (returnStmt)
    WRITELN      reduzir usando a regra 30 (returnStmt)
    RETURN       reduzir usando a regra 30 (returnStmt)
    STFUNC       reduzir usando a regra 30 (returnStmt)
    ENDFUNC      reduzir usando a regra 30 (returnStmt)
    PARENL       reduzir usando a regra 30 (returnStmt)


Estado 121

   81 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    APPEND     reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 122

   35 appendOps: simpleExp APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 135


Estado 123

   54 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR      reduzir usando a regra 54 (binLogicalExp)
    AND     reduzir usando a regra 54 (binLogicalExp)
    APPEND  reduzir usando a regra 54 (binLogicalExp)
    NEG     reduzir usando a regra 54 (binLogicalExp)
    SEMIC   reduzir usando a regra 54 (binLogicalExp)


Estado 124

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 183
    SUB  deslocar, e ir ao estado 184

    OR         reduzir usando a regra 62 (relationalExp)
    AND        reduzir usando a regra 62 (relationalExp)
    SMALLER    reduzir usando a regra 62 (relationalExp)
    GREATER    reduzir usando a regra 62 (relationalExp)
    SMALLEQ    reduzir usando a regra 62 (relationalExp)
    GREATEQ    reduzir usando a regra 62 (relationalExp)
    EQUALS     reduzir usando a regra 62 (relationalExp)
    DIFFERENT  reduzir usando a regra 62 (relationalExp)
    APPEND     reduzir usando a regra 62 (relationalExp)
    NEG        reduzir usando a regra 62 (relationalExp)
    SEMIC      reduzir usando a regra 62 (relationalExp)

    sumOp  ir ao estado 101


Estado 125

   70 sumExp: sumExp sumOp mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 103
    DIV   deslocar, e ir ao estado 104

    ADD        reduzir usando a regra 70 (sumExp)
    SUB        reduzir usando a regra 70 (sumExp)
    OR         reduzir usando a regra 70 (sumExp)
    AND        reduzir usando a regra 70 (sumExp)
    SMALLER    reduzir usando a regra 70 (sumExp)
    GREATER    reduzir usando a regra 70 (sumExp)
    SMALLEQ    reduzir usando a regra 70 (sumExp)
    GREATEQ    reduzir usando a regra 70 (sumExp)
    EQUALS     reduzir usando a regra 70 (sumExp)
    DIFFERENT  reduzir usando a regra 70 (sumExp)
    APPEND     reduzir usando a regra 70 (sumExp)
    NEG        reduzir usando a regra 70 (sumExp)
    SEMIC      reduzir usando a regra 70 (sumExp)

    mulOp  ir ao estado 105


Estado 126

   74 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    APPEND     reduzir usando a regra 74 (mulExp)
    NEG        reduzir usando a regra 74 (mulExp)
    SEMIC      reduzir usando a regra 74 (mulExp)


Estado 127

   40 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 136


Estado 128

   85 callParams: callParams COMMA • simpleExp

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 190

    simpleExp      ir ao estado 137
    constOp        ir ao estado 191
    binLogicalExp  ir ao estado 192
    unLogicalExp   ir ao estado 193
    unLogicalOp    ir ao estado 194
    relationalExp  ir ao estado 195
    sumExp         ir ao estado 196
    sumOp          ir ao estado 197
    mulExp         ir ao estado 198
    factor         ir ao estado 199
    fCall          ir ao estado 200


Estado 129

   83 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 83 (fCall)
    SUB        reduzir usando a regra 83 (fCall)
    MULT       reduzir usando a regra 83 (fCall)
    DIV        reduzir usando a regra 83 (fCall)
    OR         reduzir usando a regra 83 (fCall)
    AND        reduzir usando a regra 83 (fCall)
    SMALLER    reduzir usando a regra 83 (fCall)
    GREATER    reduzir usando a regra 83 (fCall)
    SMALLEQ    reduzir usando a regra 83 (fCall)
    GREATEQ    reduzir usando a regra 83 (fCall)
    EQUALS     reduzir usando a regra 83 (fCall)
    DIFFERENT  reduzir usando a regra 83 (fCall)
    APPEND     reduzir usando a regra 83 (fCall)
    NEG        reduzir usando a regra 83 (fCall)
    MAP        reduzir usando a regra 83 (fCall)
    SEMIC      reduzir usando a regra 83 (fCall)


Estado 130

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 203
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 204
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 205
    FOR          deslocar, e ir ao estado 206
    READ         deslocar, e ir ao estado 207
    WRITE        deslocar, e ir ao estado 208
    WRITELN      deslocar, e ir ao estado 209
    RETURN       deslocar, e ir ao estado 210
    STFUNC       deslocar, e ir ao estado 211
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 212
    simpleVDeclaration  ir ao estado 213
    compoundStmt        ir ao estado 214
    primitiveStmt       ir ao estado 138
    exprStmt            ir ao estado 215
    condStmt            ir ao estado 216
    iterStmt            ir ao estado 217
    returnStmt          ir ao estado 218
    listStmt            ir ao estado 219
    appendOps           ir ao estado 220
    returnListOps       ir ao estado 221
    returnListOp        ir ao estado 222
    destroyHeadOps      ir ao estado 223
    mapFilterOps        ir ao estado 224
    expression          ir ao estado 225
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 226
    constOp             ir ao estado 58
    inOp                ir ao estado 227
    outOp               ir ao estado 228
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 229


Estado 131

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 230
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 156

    simpleExp      ir ao estado 139
    constOp        ir ao estado 157
    binLogicalExp  ir ao estado 158
    unLogicalExp   ir ao estado 159
    unLogicalOp    ir ao estado 160
    relationalExp  ir ao estado 161
    sumExp         ir ao estado 162
    sumOp          ir ao estado 163
    mulExp         ir ao estado 164
    factor         ir ao estado 165
    fCall          ir ao estado 81


Estado 132

   49 inOp: READ PARENL ID PARENR •

    ID           reduzir usando a regra 49 (inOp)
    TYPE         reduzir usando a regra 49 (inOp)
    INTEGER      reduzir usando a regra 49 (inOp)
    DECIMAL      reduzir usando a regra 49 (inOp)
    LIST         reduzir usando a regra 49 (inOp)
    NIL          reduzir usando a regra 49 (inOp)
    ADD          reduzir usando a regra 49 (inOp)
    SUB          reduzir usando a regra 49 (inOp)
    HEADLIST     reduzir usando a regra 49 (inOp)
    TAILLIST     reduzir usando a regra 49 (inOp)
    DESTROYHEAD  reduzir usando a regra 49 (inOp)
    NOT          reduzir usando a regra 49 (inOp)
    IF           reduzir usando a regra 49 (inOp)
    FOR          reduzir usando a regra 49 (inOp)
    READ         reduzir usando a regra 49 (inOp)
    WRITE        reduzir usando a regra 49 (inOp)
    WRITELN      reduzir usando a regra 49 (inOp)
    RETURN       reduzir usando a regra 49 (inOp)
    STFUNC       reduzir usando a regra 49 (inOp)
    ENDFUNC      reduzir usando a regra 49 (inOp)
    PARENL       reduzir usando a regra 49 (inOp)


Estado 133

   50 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 140


Estado 134

   51 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 141


Estado 135

   35 appendOps: simpleExp APPEND ID SEMIC •

    ID           reduzir usando a regra 35 (appendOps)
    TYPE         reduzir usando a regra 35 (appendOps)
    INTEGER      reduzir usando a regra 35 (appendOps)
    DECIMAL      reduzir usando a regra 35 (appendOps)
    LIST         reduzir usando a regra 35 (appendOps)
    NIL          reduzir usando a regra 35 (appendOps)
    ADD          reduzir usando a regra 35 (appendOps)
    SUB          reduzir usando a regra 35 (appendOps)
    HEADLIST     reduzir usando a regra 35 (appendOps)
    TAILLIST     reduzir usando a regra 35 (appendOps)
    DESTROYHEAD  reduzir usando a regra 35 (appendOps)
    NOT          reduzir usando a regra 35 (appendOps)
    IF           reduzir usando a regra 35 (appendOps)
    FOR          reduzir usando a regra 35 (appendOps)
    READ         reduzir usando a regra 35 (appendOps)
    WRITE        reduzir usando a regra 35 (appendOps)
    WRITELN      reduzir usando a regra 35 (appendOps)
    RETURN       reduzir usando a regra 35 (appendOps)
    STFUNC       reduzir usando a regra 35 (appendOps)
    ENDFUNC      reduzir usando a regra 35 (appendOps)
    PARENL       reduzir usando a regra 35 (appendOps)


Estado 136

   40 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 40 (mapFilterOps)
    TYPE         reduzir usando a regra 40 (mapFilterOps)
    INTEGER      reduzir usando a regra 40 (mapFilterOps)
    DECIMAL      reduzir usando a regra 40 (mapFilterOps)
    LIST         reduzir usando a regra 40 (mapFilterOps)
    NIL          reduzir usando a regra 40 (mapFilterOps)
    ADD          reduzir usando a regra 40 (mapFilterOps)
    SUB          reduzir usando a regra 40 (mapFilterOps)
    HEADLIST     reduzir usando a regra 40 (mapFilterOps)
    TAILLIST     reduzir usando a regra 40 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 40 (mapFilterOps)
    NOT          reduzir usando a regra 40 (mapFilterOps)
    IF           reduzir usando a regra 40 (mapFilterOps)
    FOR          reduzir usando a regra 40 (mapFilterOps)
    READ         reduzir usando a regra 40 (mapFilterOps)
    WRITE        reduzir usando a regra 40 (mapFilterOps)
    WRITELN      reduzir usando a regra 40 (mapFilterOps)
    RETURN       reduzir usando a regra 40 (mapFilterOps)
    STFUNC       reduzir usando a regra 40 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 40 (mapFilterOps)
    PARENL       reduzir usando a regra 40 (mapFilterOps)


Estado 137

   85 callParams: callParams COMMA simpleExp •

    COMMA   reduzir usando a regra 85 (callParams)
    PARENR  reduzir usando a regra 85 (callParams)


Estado 138

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 142

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    LIST         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    NOT          reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 139

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 143


Estado 140

   50 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 50 (outOp)
    TYPE         reduzir usando a regra 50 (outOp)
    INTEGER      reduzir usando a regra 50 (outOp)
    DECIMAL      reduzir usando a regra 50 (outOp)
    LIST         reduzir usando a regra 50 (outOp)
    NIL          reduzir usando a regra 50 (outOp)
    ADD          reduzir usando a regra 50 (outOp)
    SUB          reduzir usando a regra 50 (outOp)
    HEADLIST     reduzir usando a regra 50 (outOp)
    TAILLIST     reduzir usando a regra 50 (outOp)
    DESTROYHEAD  reduzir usando a regra 50 (outOp)
    NOT          reduzir usando a regra 50 (outOp)
    IF           reduzir usando a regra 50 (outOp)
    FOR          reduzir usando a regra 50 (outOp)
    READ         reduzir usando a regra 50 (outOp)
    WRITE        reduzir usando a regra 50 (outOp)
    WRITELN      reduzir usando a regra 50 (outOp)
    RETURN       reduzir usando a regra 50 (outOp)
    STFUNC       reduzir usando a regra 50 (outOp)
    ENDFUNC      reduzir usando a regra 50 (outOp)
    PARENL       reduzir usando a regra 50 (outOp)


Estado 141

   51 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    LIST         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    NOT          reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 142

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 148
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 32
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 149
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 41
    simpleVDeclaration  ir ao estado 150
    compoundStmt        ir ao estado 42
    primitiveStmt       ir ao estado 144
    exprStmt            ir ao estado 45
    condStmt            ir ao estado 46
    iterStmt            ir ao estado 47
    returnStmt          ir ao estado 48
    listStmt            ir ao estado 49
    appendOps           ir ao estado 50
    returnListOps       ir ao estado 51
    returnListOp        ir ao estado 52
    destroyHeadOps      ir ao estado 53
    mapFilterOps        ir ao estado 54
    expression          ir ao estado 55
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 57
    constOp             ir ao estado 58
    inOp                ir ao estado 59
    outOp               ir ao estado 60
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 69


Estado 143

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 231

    assignExp  ir ao estado 145


Estado 144

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    LIST         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    NOT          reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 145

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 146


Estado 146

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 148
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 32
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 149
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 41
    simpleVDeclaration  ir ao estado 150
    compoundStmt        ir ao estado 42
    primitiveStmt       ir ao estado 147
    exprStmt            ir ao estado 45
    condStmt            ir ao estado 46
    iterStmt            ir ao estado 47
    returnStmt          ir ao estado 48
    listStmt            ir ao estado 49
    appendOps           ir ao estado 50
    returnListOps       ir ao estado 51
    returnListOp        ir ao estado 52
    destroyHeadOps      ir ao estado 53
    mapFilterOps        ir ao estado 54
    expression          ir ao estado 55
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 57
    constOp             ir ao estado 58
    inOp                ir ao estado 59
    outOp               ir ao estado 60
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 69


Estado 147

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    LIST         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    NOT          reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)


Estado 148

    9 simpleVDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 232


Estado 149

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 148
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 32
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 149
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 41
    simpleVDeclaration  ir ao estado 150
    compoundStmt        ir ao estado 42
    stmtList            ir ao estado 233
    primitiveStmt       ir ao estado 44
    exprStmt            ir ao estado 45
    condStmt            ir ao estado 46
    iterStmt            ir ao estado 47
    returnStmt          ir ao estado 48
    listStmt            ir ao estado 49
    appendOps           ir ao estado 50
    returnListOps       ir ao estado 51
    returnListOp        ir ao estado 52
    destroyHeadOps      ir ao estado 53
    mapFilterOps        ir ao estado 54
    expression          ir ao estado 55
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 57
    constOp             ir ao estado 58
    inOp                ir ao estado 59
    outOp               ir ao estado 60
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 69


Estado 150

    6 varDeclaration: simpleVDeclaration •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    LIST         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    NOT          reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 151

   43 assignExp: ID • ASSIGN expression
   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 71
    PARENL  deslocar, e ir ao estado 234

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    SEMIC      reduzir usando a regra 79 (factor)


Estado 152

   45 constOp: INTEGER •

    ADD        reduzir usando a regra 45 (constOp)
    SUB        reduzir usando a regra 45 (constOp)
    MULT       reduzir usando a regra 45 (constOp)
    DIV        reduzir usando a regra 45 (constOp)
    OR         reduzir usando a regra 45 (constOp)
    AND        reduzir usando a regra 45 (constOp)
    SMALLER    reduzir usando a regra 45 (constOp)
    GREATER    reduzir usando a regra 45 (constOp)
    SMALLEQ    reduzir usando a regra 45 (constOp)
    GREATEQ    reduzir usando a regra 45 (constOp)
    EQUALS     reduzir usando a regra 45 (constOp)
    DIFFERENT  reduzir usando a regra 45 (constOp)
    NEG        reduzir usando a regra 45 (constOp)
    SEMIC      reduzir usando a regra 45 (constOp)


Estado 153

   46 constOp: DECIMAL •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    SEMIC      reduzir usando a regra 46 (constOp)


Estado 154

   47 constOp: LIST •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    SEMIC      reduzir usando a regra 47 (constOp)


Estado 155

   48 constOp: NIL •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    SEMIC      reduzir usando a regra 48 (constOp)


Estado 156

   81 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 235
    constOp        ir ao estado 171
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 157

   82 factor: constOp •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    SEMIC      reduzir usando a regra 82 (factor)


Estado 158

   44 simpleExp: binLogicalExp •
   54 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 89
    AND  deslocar, e ir ao estado 90
    NEG  deslocar, e ir ao estado 91

    SEMIC  reduzir usando a regra 44 (simpleExp)

    binLogicalOp  ir ao estado 236


Estado 159

   55 binLogicalExp: unLogicalExp •

    OR     reduzir usando a regra 55 (binLogicalExp)
    AND    reduzir usando a regra 55 (binLogicalExp)
    NEG    reduzir usando a regra 55 (binLogicalExp)
    SEMIC  reduzir usando a regra 55 (binLogicalExp)


Estado 160

   59 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 230
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 156

    constOp        ir ao estado 157
    unLogicalExp   ir ao estado 237
    unLogicalOp    ir ao estado 160
    relationalExp  ir ao estado 161
    sumExp         ir ao estado 162
    sumOp          ir ao estado 163
    mulExp         ir ao estado 164
    factor         ir ao estado 165
    fCall          ir ao estado 81


Estado 161

   60 unLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 94
    GREATER    deslocar, e ir ao estado 95
    SMALLEQ    deslocar, e ir ao estado 96
    GREATEQ    deslocar, e ir ao estado 97
    EQUALS     deslocar, e ir ao estado 98
    DIFFERENT  deslocar, e ir ao estado 99

    OR     reduzir usando a regra 60 (unLogicalExp)
    AND    reduzir usando a regra 60 (unLogicalExp)
    NEG    reduzir usando a regra 60 (unLogicalExp)
    SEMIC  reduzir usando a regra 60 (unLogicalExp)

    relationalOp  ir ao estado 238


Estado 162

   63 relationalExp: sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 183
    SUB  deslocar, e ir ao estado 184

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    SEMIC      reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 239


Estado 163

   76 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 230
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    PARENL   deslocar, e ir ao estado 156

    constOp  ir ao estado 157
    factor   ir ao estado 240
    fCall    ir ao estado 81


Estado 164

   71 sumExp: mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 103
    DIV   deslocar, e ir ao estado 104

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    SEMIC      reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 241


Estado 165

   75 mulExp: factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    SEMIC      reduzir usando a regra 75 (mulExp)


Estado 166

   45 constOp: INTEGER •

    ADD        reduzir usando a regra 45 (constOp)
    SUB        reduzir usando a regra 45 (constOp)
    MULT       reduzir usando a regra 45 (constOp)
    DIV        reduzir usando a regra 45 (constOp)
    OR         reduzir usando a regra 45 (constOp)
    AND        reduzir usando a regra 45 (constOp)
    SMALLER    reduzir usando a regra 45 (constOp)
    GREATER    reduzir usando a regra 45 (constOp)
    SMALLEQ    reduzir usando a regra 45 (constOp)
    GREATEQ    reduzir usando a regra 45 (constOp)
    EQUALS     reduzir usando a regra 45 (constOp)
    DIFFERENT  reduzir usando a regra 45 (constOp)
    NEG        reduzir usando a regra 45 (constOp)
    PARENR     reduzir usando a regra 45 (constOp)


Estado 167

   46 constOp: DECIMAL •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    PARENR     reduzir usando a regra 46 (constOp)


Estado 168

   47 constOp: LIST •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 169

   48 constOp: NIL •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 170

   81 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 242
    constOp        ir ao estado 171
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 171

   82 factor: constOp •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 172

   44 simpleExp: binLogicalExp •
   54 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 89
    AND  deslocar, e ir ao estado 90
    NEG  deslocar, e ir ao estado 91

    PARENR  reduzir usando a regra 44 (simpleExp)

    binLogicalOp  ir ao estado 243


Estado 173

   55 binLogicalExp: unLogicalExp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 174

   59 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    constOp        ir ao estado 171
    unLogicalExp   ir ao estado 244
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 175

   60 unLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 94
    GREATER    deslocar, e ir ao estado 95
    SMALLEQ    deslocar, e ir ao estado 96
    GREATEQ    deslocar, e ir ao estado 97
    EQUALS     deslocar, e ir ao estado 98
    DIFFERENT  deslocar, e ir ao estado 99

    OR      reduzir usando a regra 60 (unLogicalExp)
    AND     reduzir usando a regra 60 (unLogicalExp)
    NEG     reduzir usando a regra 60 (unLogicalExp)
    PARENR  reduzir usando a regra 60 (unLogicalExp)

    relationalOp  ir ao estado 245


Estado 176

   63 relationalExp: sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 183
    SUB  deslocar, e ir ao estado 184

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 246


Estado 177

   76 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    PARENL   deslocar, e ir ao estado 170

    constOp  ir ao estado 171
    factor   ir ao estado 247
    fCall    ir ao estado 180


Estado 178

   71 sumExp: mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 103
    DIV   deslocar, e ir ao estado 104

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 248


Estado 179

   75 mulExp: factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 180

   80 factor: fCall •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 181

   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 249

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    APPEND     reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    SEMIC      reduzir usando a regra 79 (factor)


Estado 182

   80 factor: fCall •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    APPEND     reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 183

   72 sumOp: ADD •

    ID       reduzir usando a regra 72 (sumOp)
    INTEGER  reduzir usando a regra 72 (sumOp)
    DECIMAL  reduzir usando a regra 72 (sumOp)
    LIST     reduzir usando a regra 72 (sumOp)
    NIL      reduzir usando a regra 72 (sumOp)
    ADD      reduzir usando a regra 72 (sumOp)
    SUB      reduzir usando a regra 72 (sumOp)
    PARENL   reduzir usando a regra 72 (sumOp)


Estado 184

   73 sumOp: SUB •

    ID       reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    LIST     reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    ADD      reduzir usando a regra 73 (sumOp)
    SUB      reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 185

   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 250

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    COMMA      reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 186

   45 constOp: INTEGER •

    ADD        reduzir usando a regra 45 (constOp)
    SUB        reduzir usando a regra 45 (constOp)
    MULT       reduzir usando a regra 45 (constOp)
    DIV        reduzir usando a regra 45 (constOp)
    OR         reduzir usando a regra 45 (constOp)
    AND        reduzir usando a regra 45 (constOp)
    SMALLER    reduzir usando a regra 45 (constOp)
    GREATER    reduzir usando a regra 45 (constOp)
    SMALLEQ    reduzir usando a regra 45 (constOp)
    GREATEQ    reduzir usando a regra 45 (constOp)
    EQUALS     reduzir usando a regra 45 (constOp)
    DIFFERENT  reduzir usando a regra 45 (constOp)
    NEG        reduzir usando a regra 45 (constOp)
    COMMA      reduzir usando a regra 45 (constOp)
    PARENR     reduzir usando a regra 45 (constOp)


Estado 187

   46 constOp: DECIMAL •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    COMMA      reduzir usando a regra 46 (constOp)
    PARENR     reduzir usando a regra 46 (constOp)


Estado 188

   47 constOp: LIST •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    COMMA      reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 189

   48 constOp: NIL •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    COMMA      reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 190

   81 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 251
    constOp        ir ao estado 171
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 191

   82 factor: constOp •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    COMMA      reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 192

   44 simpleExp: binLogicalExp •
   54 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 89
    AND  deslocar, e ir ao estado 90
    NEG  deslocar, e ir ao estado 91

    COMMA   reduzir usando a regra 44 (simpleExp)
    PARENR  reduzir usando a regra 44 (simpleExp)

    binLogicalOp  ir ao estado 252


Estado 193

   55 binLogicalExp: unLogicalExp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    COMMA   reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 194

   59 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 190

    constOp        ir ao estado 191
    unLogicalExp   ir ao estado 253
    unLogicalOp    ir ao estado 194
    relationalExp  ir ao estado 195
    sumExp         ir ao estado 196
    sumOp          ir ao estado 197
    mulExp         ir ao estado 198
    factor         ir ao estado 199
    fCall          ir ao estado 200


Estado 195

   60 unLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 94
    GREATER    deslocar, e ir ao estado 95
    SMALLEQ    deslocar, e ir ao estado 96
    GREATEQ    deslocar, e ir ao estado 97
    EQUALS     deslocar, e ir ao estado 98
    DIFFERENT  deslocar, e ir ao estado 99

    OR      reduzir usando a regra 60 (unLogicalExp)
    AND     reduzir usando a regra 60 (unLogicalExp)
    NEG     reduzir usando a regra 60 (unLogicalExp)
    COMMA   reduzir usando a regra 60 (unLogicalExp)
    PARENR  reduzir usando a regra 60 (unLogicalExp)

    relationalOp  ir ao estado 254


Estado 196

   63 relationalExp: sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 183
    SUB  deslocar, e ir ao estado 184

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    COMMA      reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 255


Estado 197

   76 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    PARENL   deslocar, e ir ao estado 190

    constOp  ir ao estado 191
    factor   ir ao estado 256
    fCall    ir ao estado 200


Estado 198

   71 sumExp: mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 103
    DIV   deslocar, e ir ao estado 104

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    COMMA      reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 257


Estado 199

   75 mulExp: factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    COMMA      reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 200

   80 factor: fCall •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    COMMA      reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 201

   83 fCall: ID PARENL • callParams PARENR
   84      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 190
    PARENR   deslocar, e ir ao estado 258

    simpleExp      ir ao estado 109
    constOp        ir ao estado 191
    binLogicalExp  ir ao estado 192
    unLogicalExp   ir ao estado 193
    unLogicalOp    ir ao estado 194
    relationalExp  ir ao estado 195
    sumExp         ir ao estado 196
    sumOp          ir ao estado 197
    mulExp         ir ao estado 198
    factor         ir ao estado 199
    fCall          ir ao estado 200
    callParams     ir ao estado 259


Estado 202

   61 unLogicalOp: NOT •

    OR      reduzir usando a regra 61 (unLogicalOp)
    AND     reduzir usando a regra 61 (unLogicalOp)
    APPEND  reduzir usando a regra 61 (unLogicalOp)
    NEG     reduzir usando a regra 61 (unLogicalOp)
    SEMIC   reduzir usando a regra 61 (unLogicalOp)


Estado 203

    9 simpleVDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 260


Estado 204

   39 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 261


Estado 205

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 262


Estado 206

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 263


Estado 207

   49 inOp: READ • PARENL ID PARENR

    PARENL  deslocar, e ir ao estado 264


Estado 208

   50 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 265


Estado 209

   51 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 266


Estado 210

   30 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 151
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 156

    expression     ir ao estado 267
    assignExp      ir ao estado 56
    simpleExp      ir ao estado 80
    constOp        ir ao estado 157
    binLogicalExp  ir ao estado 158
    unLogicalExp   ir ao estado 159
    unLogicalOp    ir ao estado 160
    relationalExp  ir ao estado 161
    sumExp         ir ao estado 162
    sumOp          ir ao estado 163
    mulExp         ir ao estado 164
    factor         ir ao estado 165
    fCall          ir ao estado 81


Estado 211

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 148
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 32
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 149
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 41
    simpleVDeclaration  ir ao estado 150
    compoundStmt        ir ao estado 42
    stmtList            ir ao estado 268
    primitiveStmt       ir ao estado 44
    exprStmt            ir ao estado 45
    condStmt            ir ao estado 46
    iterStmt            ir ao estado 47
    returnStmt          ir ao estado 48
    listStmt            ir ao estado 49
    appendOps           ir ao estado 50
    returnListOps       ir ao estado 51
    returnListOp        ir ao estado 52
    destroyHeadOps      ir ao estado 53
    mapFilterOps        ir ao estado 54
    expression          ir ao estado 55
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 57
    constOp             ir ao estado 58
    inOp                ir ao estado 59
    outOp               ir ao estado 60
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 69


Estado 212

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    LIST         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    NOT          reduzir usando a regra 25 (primitiveStmt)
    ELSE         reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 213

    6 varDeclaration: simpleVDeclaration •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    LIST         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    NOT          reduzir usando a regra 6 (varDeclaration)
    ELSE         reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 214

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    LIST         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    NOT          reduzir usando a regra 18 (primitiveStmt)
    ELSE         reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 215

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    LIST         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    NOT          reduzir usando a regra 17 (primitiveStmt)
    ELSE         reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 216

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    LIST         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    NOT          reduzir usando a regra 19 (primitiveStmt)
    ELSE         reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 217

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    LIST         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    NOT          reduzir usando a regra 20 (primitiveStmt)
    ELSE         reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 218

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    LIST         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    NOT          reduzir usando a regra 21 (primitiveStmt)
    ELSE         reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 219

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    LIST         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    NOT          reduzir usando a regra 22 (primitiveStmt)
    ELSE         reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 220

   31 listStmt: appendOps •

    ID           reduzir usando a regra 31 (listStmt)
    TYPE         reduzir usando a regra 31 (listStmt)
    INTEGER      reduzir usando a regra 31 (listStmt)
    DECIMAL      reduzir usando a regra 31 (listStmt)
    LIST         reduzir usando a regra 31 (listStmt)
    NIL          reduzir usando a regra 31 (listStmt)
    ADD          reduzir usando a regra 31 (listStmt)
    SUB          reduzir usando a regra 31 (listStmt)
    HEADLIST     reduzir usando a regra 31 (listStmt)
    TAILLIST     reduzir usando a regra 31 (listStmt)
    DESTROYHEAD  reduzir usando a regra 31 (listStmt)
    NOT          reduzir usando a regra 31 (listStmt)
    ELSE         reduzir usando a regra 31 (listStmt)
    IF           reduzir usando a regra 31 (listStmt)
    FOR          reduzir usando a regra 31 (listStmt)
    READ         reduzir usando a regra 31 (listStmt)
    WRITE        reduzir usando a regra 31 (listStmt)
    WRITELN      reduzir usando a regra 31 (listStmt)
    RETURN       reduzir usando a regra 31 (listStmt)
    STFUNC       reduzir usando a regra 31 (listStmt)
    ENDFUNC      reduzir usando a regra 31 (listStmt)
    PARENL       reduzir usando a regra 31 (listStmt)


Estado 221

   32 listStmt: returnListOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    LIST         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    NOT          reduzir usando a regra 32 (listStmt)
    ELSE         reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 222

   36 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 269


Estado 223

   33 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    LIST         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    NOT          reduzir usando a regra 33 (listStmt)
    ELSE         reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 224

   34 listStmt: mapFilterOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    LIST         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    NOT          reduzir usando a regra 34 (listStmt)
    ELSE         reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 225

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 270


Estado 226

   35 appendOps: simpleExp • APPEND ID SEMIC
   42 expression: simpleExp •

    APPEND  deslocar, e ir ao estado 271

    SEMIC  reduzir usando a regra 42 (expression)


Estado 227

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    LIST         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    NOT          reduzir usando a regra 23 (primitiveStmt)
    ELSE         reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 228

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    LIST         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    NOT          reduzir usando a regra 24 (primitiveStmt)
    ELSE         reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 229

   40 mapFilterOps: fCall • MAP ID SEMIC
   80 factor: fCall •

    MAP  deslocar, e ir ao estado 272

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    APPEND     reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 230

   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 234

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    SEMIC      reduzir usando a regra 79 (factor)


Estado 231

   43 assignExp: ID • ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 273


Estado 232

    9 simpleVDeclaration: TYPE ID •

    ID           reduzir usando a regra 9 (simpleVDeclaration)
    TYPE         reduzir usando a regra 9 (simpleVDeclaration)
    INTEGER      reduzir usando a regra 9 (simpleVDeclaration)
    DECIMAL      reduzir usando a regra 9 (simpleVDeclaration)
    LIST         reduzir usando a regra 9 (simpleVDeclaration)
    NIL          reduzir usando a regra 9 (simpleVDeclaration)
    ADD          reduzir usando a regra 9 (simpleVDeclaration)
    SUB          reduzir usando a regra 9 (simpleVDeclaration)
    HEADLIST     reduzir usando a regra 9 (simpleVDeclaration)
    TAILLIST     reduzir usando a regra 9 (simpleVDeclaration)
    DESTROYHEAD  reduzir usando a regra 9 (simpleVDeclaration)
    NOT          reduzir usando a regra 9 (simpleVDeclaration)
    IF           reduzir usando a regra 9 (simpleVDeclaration)
    FOR          reduzir usando a regra 9 (simpleVDeclaration)
    READ         reduzir usando a regra 9 (simpleVDeclaration)
    WRITE        reduzir usando a regra 9 (simpleVDeclaration)
    WRITELN      reduzir usando a regra 9 (simpleVDeclaration)
    RETURN       reduzir usando a regra 9 (simpleVDeclaration)
    STFUNC       reduzir usando a regra 9 (simpleVDeclaration)
    ENDFUNC      reduzir usando a regra 9 (simpleVDeclaration)
    PARENL       reduzir usando a regra 9 (simpleVDeclaration)


Estado 233

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 148
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 32
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 149
    ENDFUNC      deslocar, e ir ao estado 274
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 41
    simpleVDeclaration  ir ao estado 150
    compoundStmt        ir ao estado 42
    primitiveStmt       ir ao estado 85
    exprStmt            ir ao estado 45
    condStmt            ir ao estado 46
    iterStmt            ir ao estado 47
    returnStmt          ir ao estado 48
    listStmt            ir ao estado 49
    appendOps           ir ao estado 50
    returnListOps       ir ao estado 51
    returnListOp        ir ao estado 52
    destroyHeadOps      ir ao estado 53
    mapFilterOps        ir ao estado 54
    expression          ir ao estado 55
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 57
    constOp             ir ao estado 58
    inOp                ir ao estado 59
    outOp               ir ao estado 60
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 69


Estado 234

   83 fCall: ID PARENL • callParams PARENR
   84      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 190
    PARENR   deslocar, e ir ao estado 275

    simpleExp      ir ao estado 109
    constOp        ir ao estado 191
    binLogicalExp  ir ao estado 192
    unLogicalExp   ir ao estado 193
    unLogicalOp    ir ao estado 194
    relationalExp  ir ao estado 195
    sumExp         ir ao estado 196
    sumOp          ir ao estado 197
    mulExp         ir ao estado 198
    factor         ir ao estado 199
    fCall          ir ao estado 200
    callParams     ir ao estado 276


Estado 235

   81 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 277


Estado 236

   54 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 278

    unLogicalOp  ir ao estado 279


Estado 237

   59 unLogicalExp: unLogicalOp unLogicalExp •

    OR     reduzir usando a regra 59 (unLogicalExp)
    AND    reduzir usando a regra 59 (unLogicalExp)
    NEG    reduzir usando a regra 59 (unLogicalExp)
    SEMIC  reduzir usando a regra 59 (unLogicalExp)


Estado 238

   62 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 230
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    PARENL   deslocar, e ir ao estado 156

    constOp  ir ao estado 157
    sumExp   ir ao estado 280
    sumOp    ir ao estado 163
    mulExp   ir ao estado 164
    factor   ir ao estado 165
    fCall    ir ao estado 81


Estado 239

   70 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 230
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    PARENL   deslocar, e ir ao estado 156

    constOp  ir ao estado 157
    sumOp    ir ao estado 163
    mulExp   ir ao estado 281
    factor   ir ao estado 165
    fCall    ir ao estado 81


Estado 240

   76 mulExp: sumOp factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    SEMIC      reduzir usando a regra 76 (mulExp)


Estado 241

   74 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 230
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    PARENL   deslocar, e ir ao estado 156

    constOp  ir ao estado 157
    factor   ir ao estado 282
    fCall    ir ao estado 81


Estado 242

   81 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 283


Estado 243

   54 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 284

    unLogicalOp  ir ao estado 285


Estado 244

   59 unLogicalExp: unLogicalOp unLogicalExp •

    OR      reduzir usando a regra 59 (unLogicalExp)
    AND     reduzir usando a regra 59 (unLogicalExp)
    NEG     reduzir usando a regra 59 (unLogicalExp)
    PARENR  reduzir usando a regra 59 (unLogicalExp)


Estado 245

   62 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    PARENL   deslocar, e ir ao estado 170

    constOp  ir ao estado 171
    sumExp   ir ao estado 286
    sumOp    ir ao estado 177
    mulExp   ir ao estado 178
    factor   ir ao estado 179
    fCall    ir ao estado 180


Estado 246

   70 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    PARENL   deslocar, e ir ao estado 170

    constOp  ir ao estado 171
    sumOp    ir ao estado 177
    mulExp   ir ao estado 287
    factor   ir ao estado 179
    fCall    ir ao estado 180


Estado 247

   76 mulExp: sumOp factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 248

   74 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    PARENL   deslocar, e ir ao estado 170

    constOp  ir ao estado 171
    factor   ir ao estado 288
    fCall    ir ao estado 180


Estado 249

   83 fCall: ID PARENL • callParams PARENR
   84      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 190
    PARENR   deslocar, e ir ao estado 289

    simpleExp      ir ao estado 109
    constOp        ir ao estado 191
    binLogicalExp  ir ao estado 192
    unLogicalExp   ir ao estado 193
    unLogicalOp    ir ao estado 194
    relationalExp  ir ao estado 195
    sumExp         ir ao estado 196
    sumOp          ir ao estado 197
    mulExp         ir ao estado 198
    factor         ir ao estado 199
    fCall          ir ao estado 200
    callParams     ir ao estado 290


Estado 250

   83 fCall: ID PARENL • callParams PARENR
   84      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 190
    PARENR   deslocar, e ir ao estado 291

    simpleExp      ir ao estado 109
    constOp        ir ao estado 191
    binLogicalExp  ir ao estado 192
    unLogicalExp   ir ao estado 193
    unLogicalOp    ir ao estado 194
    relationalExp  ir ao estado 195
    sumExp         ir ao estado 196
    sumOp          ir ao estado 197
    mulExp         ir ao estado 198
    factor         ir ao estado 199
    fCall          ir ao estado 200
    callParams     ir ao estado 292


Estado 251

   81 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 293


Estado 252

   54 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 294

    unLogicalOp  ir ao estado 295


Estado 253

   59 unLogicalExp: unLogicalOp unLogicalExp •

    OR      reduzir usando a regra 59 (unLogicalExp)
    AND     reduzir usando a regra 59 (unLogicalExp)
    NEG     reduzir usando a regra 59 (unLogicalExp)
    COMMA   reduzir usando a regra 59 (unLogicalExp)
    PARENR  reduzir usando a regra 59 (unLogicalExp)


Estado 254

   62 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    PARENL   deslocar, e ir ao estado 190

    constOp  ir ao estado 191
    sumExp   ir ao estado 296
    sumOp    ir ao estado 197
    mulExp   ir ao estado 198
    factor   ir ao estado 199
    fCall    ir ao estado 200


Estado 255

   70 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    PARENL   deslocar, e ir ao estado 190

    constOp  ir ao estado 191
    sumOp    ir ao estado 197
    mulExp   ir ao estado 297
    factor   ir ao estado 199
    fCall    ir ao estado 200


Estado 256

   76 mulExp: sumOp factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    COMMA      reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 257

   74 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 185
    INTEGER  deslocar, e ir ao estado 186
    DECIMAL  deslocar, e ir ao estado 187
    LIST     deslocar, e ir ao estado 188
    NIL      deslocar, e ir ao estado 189
    PARENL   deslocar, e ir ao estado 190

    constOp  ir ao estado 191
    factor   ir ao estado 298
    fCall    ir ao estado 200


Estado 258

   84 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 259

   83 fCall: ID PARENL callParams • PARENR
   85 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 128
    PARENR  deslocar, e ir ao estado 299


Estado 260

    9 simpleVDeclaration: TYPE ID •

    ID           reduzir usando a regra 9 (simpleVDeclaration)
    TYPE         reduzir usando a regra 9 (simpleVDeclaration)
    INTEGER      reduzir usando a regra 9 (simpleVDeclaration)
    DECIMAL      reduzir usando a regra 9 (simpleVDeclaration)
    LIST         reduzir usando a regra 9 (simpleVDeclaration)
    NIL          reduzir usando a regra 9 (simpleVDeclaration)
    ADD          reduzir usando a regra 9 (simpleVDeclaration)
    SUB          reduzir usando a regra 9 (simpleVDeclaration)
    HEADLIST     reduzir usando a regra 9 (simpleVDeclaration)
    TAILLIST     reduzir usando a regra 9 (simpleVDeclaration)
    DESTROYHEAD  reduzir usando a regra 9 (simpleVDeclaration)
    NOT          reduzir usando a regra 9 (simpleVDeclaration)
    ELSE         reduzir usando a regra 9 (simpleVDeclaration)
    IF           reduzir usando a regra 9 (simpleVDeclaration)
    FOR          reduzir usando a regra 9 (simpleVDeclaration)
    READ         reduzir usando a regra 9 (simpleVDeclaration)
    WRITE        reduzir usando a regra 9 (simpleVDeclaration)
    WRITELN      reduzir usando a regra 9 (simpleVDeclaration)
    RETURN       reduzir usando a regra 9 (simpleVDeclaration)
    STFUNC       reduzir usando a regra 9 (simpleVDeclaration)
    ENDFUNC      reduzir usando a regra 9 (simpleVDeclaration)
    PARENL       reduzir usando a regra 9 (simpleVDeclaration)


Estado 261

   39 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 300


Estado 262

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 301
    constOp        ir ao estado 171
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 263

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 113

    assignExp  ir ao estado 302


Estado 264

   49 inOp: READ PARENL • ID PARENR

    ID  deslocar, e ir ao estado 303


Estado 265

   50 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    STRING   deslocar, e ir ao estado 116
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 117
    constOp        ir ao estado 171
    outConst       ir ao estado 304
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 266

   51 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 82
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    STRING   deslocar, e ir ao estado 116
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    simpleExp      ir ao estado 117
    constOp        ir ao estado 171
    outConst       ir ao estado 305
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 267

   30 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 306


Estado 268

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 148
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 32
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 149
    ENDFUNC      deslocar, e ir ao estado 307
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 41
    simpleVDeclaration  ir ao estado 150
    compoundStmt        ir ao estado 42
    primitiveStmt       ir ao estado 85
    exprStmt            ir ao estado 45
    condStmt            ir ao estado 46
    iterStmt            ir ao estado 47
    returnStmt          ir ao estado 48
    listStmt            ir ao estado 49
    appendOps           ir ao estado 50
    returnListOps       ir ao estado 51
    returnListOp        ir ao estado 52
    destroyHeadOps      ir ao estado 53
    mapFilterOps        ir ao estado 54
    expression          ir ao estado 55
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 57
    constOp             ir ao estado 58
    inOp                ir ao estado 59
    outOp               ir ao estado 60
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 69


Estado 269

   36 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 36 (returnListOps)
    TYPE         reduzir usando a regra 36 (returnListOps)
    INTEGER      reduzir usando a regra 36 (returnListOps)
    DECIMAL      reduzir usando a regra 36 (returnListOps)
    LIST         reduzir usando a regra 36 (returnListOps)
    NIL          reduzir usando a regra 36 (returnListOps)
    ADD          reduzir usando a regra 36 (returnListOps)
    SUB          reduzir usando a regra 36 (returnListOps)
    HEADLIST     reduzir usando a regra 36 (returnListOps)
    TAILLIST     reduzir usando a regra 36 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 36 (returnListOps)
    NOT          reduzir usando a regra 36 (returnListOps)
    ELSE         reduzir usando a regra 36 (returnListOps)
    IF           reduzir usando a regra 36 (returnListOps)
    FOR          reduzir usando a regra 36 (returnListOps)
    READ         reduzir usando a regra 36 (returnListOps)
    WRITE        reduzir usando a regra 36 (returnListOps)
    WRITELN      reduzir usando a regra 36 (returnListOps)
    RETURN       reduzir usando a regra 36 (returnListOps)
    STFUNC       reduzir usando a regra 36 (returnListOps)
    ENDFUNC      reduzir usando a regra 36 (returnListOps)
    PARENL       reduzir usando a regra 36 (returnListOps)


Estado 270

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    LIST         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    NOT          reduzir usando a regra 26 (exprStmt)
    ELSE         reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 271

   35 appendOps: simpleExp APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 308


Estado 272

   40 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 309


Estado 273

   43 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 310
    INTEGER  deslocar, e ir ao estado 166
    DECIMAL  deslocar, e ir ao estado 167
    LIST     deslocar, e ir ao estado 168
    NIL      deslocar, e ir ao estado 169
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 170

    expression     ir ao estado 311
    assignExp      ir ao estado 312
    simpleExp      ir ao estado 313
    constOp        ir ao estado 171
    binLogicalExp  ir ao estado 172
    unLogicalExp   ir ao estado 173
    unLogicalOp    ir ao estado 174
    relationalExp  ir ao estado 175
    sumExp         ir ao estado 176
    sumOp          ir ao estado 177
    mulExp         ir ao estado 178
    factor         ir ao estado 179
    fCall          ir ao estado 180


Estado 274

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    LIST         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    NOT          reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 275

   84 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 276

   83 fCall: ID PARENL callParams • PARENR
   85 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 128
    PARENR  deslocar, e ir ao estado 314


Estado 277

   81 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 278

   61 unLogicalOp: NOT •

    OR     reduzir usando a regra 61 (unLogicalOp)
    AND    reduzir usando a regra 61 (unLogicalOp)
    NEG    reduzir usando a regra 61 (unLogicalOp)
    SEMIC  reduzir usando a regra 61 (unLogicalOp)


Estado 279

   54 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR     reduzir usando a regra 54 (binLogicalExp)
    AND    reduzir usando a regra 54 (binLogicalExp)
    NEG    reduzir usando a regra 54 (binLogicalExp)
    SEMIC  reduzir usando a regra 54 (binLogicalExp)


Estado 280

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 183
    SUB  deslocar, e ir ao estado 184

    OR         reduzir usando a regra 62 (relationalExp)
    AND        reduzir usando a regra 62 (relationalExp)
    SMALLER    reduzir usando a regra 62 (relationalExp)
    GREATER    reduzir usando a regra 62 (relationalExp)
    SMALLEQ    reduzir usando a regra 62 (relationalExp)
    GREATEQ    reduzir usando a regra 62 (relationalExp)
    EQUALS     reduzir usando a regra 62 (relationalExp)
    DIFFERENT  reduzir usando a regra 62 (relationalExp)
    NEG        reduzir usando a regra 62 (relationalExp)
    SEMIC      reduzir usando a regra 62 (relationalExp)

    sumOp  ir ao estado 239


Estado 281

   70 sumExp: sumExp sumOp mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 103
    DIV   deslocar, e ir ao estado 104

    ADD        reduzir usando a regra 70 (sumExp)
    SUB        reduzir usando a regra 70 (sumExp)
    OR         reduzir usando a regra 70 (sumExp)
    AND        reduzir usando a regra 70 (sumExp)
    SMALLER    reduzir usando a regra 70 (sumExp)
    GREATER    reduzir usando a regra 70 (sumExp)
    SMALLEQ    reduzir usando a regra 70 (sumExp)
    GREATEQ    reduzir usando a regra 70 (sumExp)
    EQUALS     reduzir usando a regra 70 (sumExp)
    DIFFERENT  reduzir usando a regra 70 (sumExp)
    NEG        reduzir usando a regra 70 (sumExp)
    SEMIC      reduzir usando a regra 70 (sumExp)

    mulOp  ir ao estado 241


Estado 282

   74 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    NEG        reduzir usando a regra 74 (mulExp)
    SEMIC      reduzir usando a regra 74 (mulExp)


Estado 283

   81 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 284

   61 unLogicalOp: NOT •

    OR      reduzir usando a regra 61 (unLogicalOp)
    AND     reduzir usando a regra 61 (unLogicalOp)
    NEG     reduzir usando a regra 61 (unLogicalOp)
    PARENR  reduzir usando a regra 61 (unLogicalOp)


Estado 285

   54 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR      reduzir usando a regra 54 (binLogicalExp)
    AND     reduzir usando a regra 54 (binLogicalExp)
    NEG     reduzir usando a regra 54 (binLogicalExp)
    PARENR  reduzir usando a regra 54 (binLogicalExp)


Estado 286

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 183
    SUB  deslocar, e ir ao estado 184

    OR         reduzir usando a regra 62 (relationalExp)
    AND        reduzir usando a regra 62 (relationalExp)
    SMALLER    reduzir usando a regra 62 (relationalExp)
    GREATER    reduzir usando a regra 62 (relationalExp)
    SMALLEQ    reduzir usando a regra 62 (relationalExp)
    GREATEQ    reduzir usando a regra 62 (relationalExp)
    EQUALS     reduzir usando a regra 62 (relationalExp)
    DIFFERENT  reduzir usando a regra 62 (relationalExp)
    NEG        reduzir usando a regra 62 (relationalExp)
    PARENR     reduzir usando a regra 62 (relationalExp)

    sumOp  ir ao estado 246


Estado 287

   70 sumExp: sumExp sumOp mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 103
    DIV   deslocar, e ir ao estado 104

    ADD        reduzir usando a regra 70 (sumExp)
    SUB        reduzir usando a regra 70 (sumExp)
    OR         reduzir usando a regra 70 (sumExp)
    AND        reduzir usando a regra 70 (sumExp)
    SMALLER    reduzir usando a regra 70 (sumExp)
    GREATER    reduzir usando a regra 70 (sumExp)
    SMALLEQ    reduzir usando a regra 70 (sumExp)
    GREATEQ    reduzir usando a regra 70 (sumExp)
    EQUALS     reduzir usando a regra 70 (sumExp)
    DIFFERENT  reduzir usando a regra 70 (sumExp)
    NEG        reduzir usando a regra 70 (sumExp)
    PARENR     reduzir usando a regra 70 (sumExp)

    mulOp  ir ao estado 248


Estado 288

   74 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    NEG        reduzir usando a regra 74 (mulExp)
    PARENR     reduzir usando a regra 74 (mulExp)


Estado 289

   84 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    APPEND     reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 290

   83 fCall: ID PARENL callParams • PARENR
   85 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 128
    PARENR  deslocar, e ir ao estado 315


Estado 291

   84 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    COMMA      reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 292

   83 fCall: ID PARENL callParams • PARENR
   85 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 128
    PARENR  deslocar, e ir ao estado 316


Estado 293

   81 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    COMMA      reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 294

   61 unLogicalOp: NOT •

    OR      reduzir usando a regra 61 (unLogicalOp)
    AND     reduzir usando a regra 61 (unLogicalOp)
    NEG     reduzir usando a regra 61 (unLogicalOp)
    COMMA   reduzir usando a regra 61 (unLogicalOp)
    PARENR  reduzir usando a regra 61 (unLogicalOp)


Estado 295

   54 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR      reduzir usando a regra 54 (binLogicalExp)
    AND     reduzir usando a regra 54 (binLogicalExp)
    NEG     reduzir usando a regra 54 (binLogicalExp)
    COMMA   reduzir usando a regra 54 (binLogicalExp)
    PARENR  reduzir usando a regra 54 (binLogicalExp)


Estado 296

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 183
    SUB  deslocar, e ir ao estado 184

    OR         reduzir usando a regra 62 (relationalExp)
    AND        reduzir usando a regra 62 (relationalExp)
    SMALLER    reduzir usando a regra 62 (relationalExp)
    GREATER    reduzir usando a regra 62 (relationalExp)
    SMALLEQ    reduzir usando a regra 62 (relationalExp)
    GREATEQ    reduzir usando a regra 62 (relationalExp)
    EQUALS     reduzir usando a regra 62 (relationalExp)
    DIFFERENT  reduzir usando a regra 62 (relationalExp)
    NEG        reduzir usando a regra 62 (relationalExp)
    COMMA      reduzir usando a regra 62 (relationalExp)
    PARENR     reduzir usando a regra 62 (relationalExp)

    sumOp  ir ao estado 255


Estado 297

   70 sumExp: sumExp sumOp mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 103
    DIV   deslocar, e ir ao estado 104

    ADD        reduzir usando a regra 70 (sumExp)
    SUB        reduzir usando a regra 70 (sumExp)
    OR         reduzir usando a regra 70 (sumExp)
    AND        reduzir usando a regra 70 (sumExp)
    SMALLER    reduzir usando a regra 70 (sumExp)
    GREATER    reduzir usando a regra 70 (sumExp)
    SMALLEQ    reduzir usando a regra 70 (sumExp)
    GREATEQ    reduzir usando a regra 70 (sumExp)
    EQUALS     reduzir usando a regra 70 (sumExp)
    DIFFERENT  reduzir usando a regra 70 (sumExp)
    NEG        reduzir usando a regra 70 (sumExp)
    COMMA      reduzir usando a regra 70 (sumExp)
    PARENR     reduzir usando a regra 70 (sumExp)

    mulOp  ir ao estado 257


Estado 298

   74 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    NEG        reduzir usando a regra 74 (mulExp)
    COMMA      reduzir usando a regra 74 (mulExp)
    PARENR     reduzir usando a regra 74 (mulExp)


Estado 299

   83 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 83 (fCall)
    SUB        reduzir usando a regra 83 (fCall)
    MULT       reduzir usando a regra 83 (fCall)
    DIV        reduzir usando a regra 83 (fCall)
    OR         reduzir usando a regra 83 (fCall)
    AND        reduzir usando a regra 83 (fCall)
    SMALLER    reduzir usando a regra 83 (fCall)
    GREATER    reduzir usando a regra 83 (fCall)
    SMALLEQ    reduzir usando a regra 83 (fCall)
    GREATEQ    reduzir usando a regra 83 (fCall)
    EQUALS     reduzir usando a regra 83 (fCall)
    DIFFERENT  reduzir usando a regra 83 (fCall)
    NEG        reduzir usando a regra 83 (fCall)
    PARENR     reduzir usando a regra 83 (fCall)


Estado 300

   39 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 39 (destroyHeadOps)
    TYPE         reduzir usando a regra 39 (destroyHeadOps)
    INTEGER      reduzir usando a regra 39 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 39 (destroyHeadOps)
    LIST         reduzir usando a regra 39 (destroyHeadOps)
    NIL          reduzir usando a regra 39 (destroyHeadOps)
    ADD          reduzir usando a regra 39 (destroyHeadOps)
    SUB          reduzir usando a regra 39 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 39 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 39 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 39 (destroyHeadOps)
    NOT          reduzir usando a regra 39 (destroyHeadOps)
    ELSE         reduzir usando a regra 39 (destroyHeadOps)
    IF           reduzir usando a regra 39 (destroyHeadOps)
    FOR          reduzir usando a regra 39 (destroyHeadOps)
    READ         reduzir usando a regra 39 (destroyHeadOps)
    WRITE        reduzir usando a regra 39 (destroyHeadOps)
    WRITELN      reduzir usando a regra 39 (destroyHeadOps)
    RETURN       reduzir usando a regra 39 (destroyHeadOps)
    STFUNC       reduzir usando a regra 39 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 39 (destroyHeadOps)
    PARENL       reduzir usando a regra 39 (destroyHeadOps)


Estado 301

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 317


Estado 302

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 318


Estado 303

   49 inOp: READ PARENL ID • PARENR

    PARENR  deslocar, e ir ao estado 319


Estado 304

   50 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 320


Estado 305

   51 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 321


Estado 306

   30 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 30 (returnStmt)
    TYPE         reduzir usando a regra 30 (returnStmt)
    INTEGER      reduzir usando a regra 30 (returnStmt)
    DECIMAL      reduzir usando a regra 30 (returnStmt)
    LIST         reduzir usando a regra 30 (returnStmt)
    NIL          reduzir usando a regra 30 (returnStmt)
    ADD          reduzir usando a regra 30 (returnStmt)
    SUB          reduzir usando a regra 30 (returnStmt)
    HEADLIST     reduzir usando a regra 30 (returnStmt)
    TAILLIST     reduzir usando a regra 30 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 30 (returnStmt)
    NOT          reduzir usando a regra 30 (returnStmt)
    ELSE         reduzir usando a regra 30 (returnStmt)
    IF           reduzir usando a regra 30 (returnStmt)
    FOR          reduzir usando a regra 30 (returnStmt)
    READ         reduzir usando a regra 30 (returnStmt)
    WRITE        reduzir usando a regra 30 (returnStmt)
    WRITELN      reduzir usando a regra 30 (returnStmt)
    RETURN       reduzir usando a regra 30 (returnStmt)
    STFUNC       reduzir usando a regra 30 (returnStmt)
    ENDFUNC      reduzir usando a regra 30 (returnStmt)
    PARENL       reduzir usando a regra 30 (returnStmt)


Estado 307

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    LIST         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    NOT          reduzir usando a regra 14 (compoundStmt)
    ELSE         reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 308

   35 appendOps: simpleExp APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 322


Estado 309

   40 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 323


Estado 310

   43 assignExp: ID • ASSIGN expression
   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 273
    PARENL  deslocar, e ir ao estado 201

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 311

   43 assignExp: ID ASSIGN expression •

    PARENR  reduzir usando a regra 43 (assignExp)


Estado 312

   41 expression: assignExp •

    PARENR  reduzir usando a regra 41 (expression)


Estado 313

   42 expression: simpleExp •

    PARENR  reduzir usando a regra 42 (expression)


Estado 314

   83 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 83 (fCall)
    SUB        reduzir usando a regra 83 (fCall)
    MULT       reduzir usando a regra 83 (fCall)
    DIV        reduzir usando a regra 83 (fCall)
    OR         reduzir usando a regra 83 (fCall)
    AND        reduzir usando a regra 83 (fCall)
    SMALLER    reduzir usando a regra 83 (fCall)
    GREATER    reduzir usando a regra 83 (fCall)
    SMALLEQ    reduzir usando a regra 83 (fCall)
    GREATEQ    reduzir usando a regra 83 (fCall)
    EQUALS     reduzir usando a regra 83 (fCall)
    DIFFERENT  reduzir usando a regra 83 (fCall)
    NEG        reduzir usando a regra 83 (fCall)
    SEMIC      reduzir usando a regra 83 (fCall)


Estado 315

   83 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 83 (fCall)
    SUB        reduzir usando a regra 83 (fCall)
    MULT       reduzir usando a regra 83 (fCall)
    DIV        reduzir usando a regra 83 (fCall)
    OR         reduzir usando a regra 83 (fCall)
    AND        reduzir usando a regra 83 (fCall)
    SMALLER    reduzir usando a regra 83 (fCall)
    GREATER    reduzir usando a regra 83 (fCall)
    SMALLEQ    reduzir usando a regra 83 (fCall)
    GREATEQ    reduzir usando a regra 83 (fCall)
    EQUALS     reduzir usando a regra 83 (fCall)
    DIFFERENT  reduzir usando a regra 83 (fCall)
    APPEND     reduzir usando a regra 83 (fCall)
    NEG        reduzir usando a regra 83 (fCall)
    SEMIC      reduzir usando a regra 83 (fCall)


Estado 316

   83 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 83 (fCall)
    SUB        reduzir usando a regra 83 (fCall)
    MULT       reduzir usando a regra 83 (fCall)
    DIV        reduzir usando a regra 83 (fCall)
    OR         reduzir usando a regra 83 (fCall)
    AND        reduzir usando a regra 83 (fCall)
    SMALLER    reduzir usando a regra 83 (fCall)
    GREATER    reduzir usando a regra 83 (fCall)
    SMALLEQ    reduzir usando a regra 83 (fCall)
    GREATEQ    reduzir usando a regra 83 (fCall)
    EQUALS     reduzir usando a regra 83 (fCall)
    DIFFERENT  reduzir usando a regra 83 (fCall)
    NEG        reduzir usando a regra 83 (fCall)
    COMMA      reduzir usando a regra 83 (fCall)
    PARENR     reduzir usando a regra 83 (fCall)


Estado 317

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 203
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 204
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 205
    FOR          deslocar, e ir ao estado 206
    READ         deslocar, e ir ao estado 207
    WRITE        deslocar, e ir ao estado 208
    WRITELN      deslocar, e ir ao estado 209
    RETURN       deslocar, e ir ao estado 210
    STFUNC       deslocar, e ir ao estado 211
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 212
    simpleVDeclaration  ir ao estado 213
    compoundStmt        ir ao estado 214
    primitiveStmt       ir ao estado 324
    exprStmt            ir ao estado 215
    condStmt            ir ao estado 216
    iterStmt            ir ao estado 217
    returnStmt          ir ao estado 218
    listStmt            ir ao estado 219
    appendOps           ir ao estado 220
    returnListOps       ir ao estado 221
    returnListOp        ir ao estado 222
    destroyHeadOps      ir ao estado 223
    mapFilterOps        ir ao estado 224
    expression          ir ao estado 225
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 226
    constOp             ir ao estado 58
    inOp                ir ao estado 227
    outOp               ir ao estado 228
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 229


Estado 318

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 230
    INTEGER  deslocar, e ir ao estado 152
    DECIMAL  deslocar, e ir ao estado 153
    LIST     deslocar, e ir ao estado 154
    NIL      deslocar, e ir ao estado 155
    ADD      deslocar, e ir ao estado 28
    SUB      deslocar, e ir ao estado 29
    NOT      deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 156

    simpleExp      ir ao estado 325
    constOp        ir ao estado 157
    binLogicalExp  ir ao estado 158
    unLogicalExp   ir ao estado 159
    unLogicalOp    ir ao estado 160
    relationalExp  ir ao estado 161
    sumExp         ir ao estado 162
    sumOp          ir ao estado 163
    mulExp         ir ao estado 164
    factor         ir ao estado 165
    fCall          ir ao estado 81


Estado 319

   49 inOp: READ PARENL ID PARENR •

    ID           reduzir usando a regra 49 (inOp)
    TYPE         reduzir usando a regra 49 (inOp)
    INTEGER      reduzir usando a regra 49 (inOp)
    DECIMAL      reduzir usando a regra 49 (inOp)
    LIST         reduzir usando a regra 49 (inOp)
    NIL          reduzir usando a regra 49 (inOp)
    ADD          reduzir usando a regra 49 (inOp)
    SUB          reduzir usando a regra 49 (inOp)
    HEADLIST     reduzir usando a regra 49 (inOp)
    TAILLIST     reduzir usando a regra 49 (inOp)
    DESTROYHEAD  reduzir usando a regra 49 (inOp)
    NOT          reduzir usando a regra 49 (inOp)
    ELSE         reduzir usando a regra 49 (inOp)
    IF           reduzir usando a regra 49 (inOp)
    FOR          reduzir usando a regra 49 (inOp)
    READ         reduzir usando a regra 49 (inOp)
    WRITE        reduzir usando a regra 49 (inOp)
    WRITELN      reduzir usando a regra 49 (inOp)
    RETURN       reduzir usando a regra 49 (inOp)
    STFUNC       reduzir usando a regra 49 (inOp)
    ENDFUNC      reduzir usando a regra 49 (inOp)
    PARENL       reduzir usando a regra 49 (inOp)


Estado 320

   50 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 326


Estado 321

   51 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 327


Estado 322

   35 appendOps: simpleExp APPEND ID SEMIC •

    ID           reduzir usando a regra 35 (appendOps)
    TYPE         reduzir usando a regra 35 (appendOps)
    INTEGER      reduzir usando a regra 35 (appendOps)
    DECIMAL      reduzir usando a regra 35 (appendOps)
    LIST         reduzir usando a regra 35 (appendOps)
    NIL          reduzir usando a regra 35 (appendOps)
    ADD          reduzir usando a regra 35 (appendOps)
    SUB          reduzir usando a regra 35 (appendOps)
    HEADLIST     reduzir usando a regra 35 (appendOps)
    TAILLIST     reduzir usando a regra 35 (appendOps)
    DESTROYHEAD  reduzir usando a regra 35 (appendOps)
    NOT          reduzir usando a regra 35 (appendOps)
    ELSE         reduzir usando a regra 35 (appendOps)
    IF           reduzir usando a regra 35 (appendOps)
    FOR          reduzir usando a regra 35 (appendOps)
    READ         reduzir usando a regra 35 (appendOps)
    WRITE        reduzir usando a regra 35 (appendOps)
    WRITELN      reduzir usando a regra 35 (appendOps)
    RETURN       reduzir usando a regra 35 (appendOps)
    STFUNC       reduzir usando a regra 35 (appendOps)
    ENDFUNC      reduzir usando a regra 35 (appendOps)
    PARENL       reduzir usando a regra 35 (appendOps)


Estado 323

   40 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 40 (mapFilterOps)
    TYPE         reduzir usando a regra 40 (mapFilterOps)
    INTEGER      reduzir usando a regra 40 (mapFilterOps)
    DECIMAL      reduzir usando a regra 40 (mapFilterOps)
    LIST         reduzir usando a regra 40 (mapFilterOps)
    NIL          reduzir usando a regra 40 (mapFilterOps)
    ADD          reduzir usando a regra 40 (mapFilterOps)
    SUB          reduzir usando a regra 40 (mapFilterOps)
    HEADLIST     reduzir usando a regra 40 (mapFilterOps)
    TAILLIST     reduzir usando a regra 40 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 40 (mapFilterOps)
    NOT          reduzir usando a regra 40 (mapFilterOps)
    ELSE         reduzir usando a regra 40 (mapFilterOps)
    IF           reduzir usando a regra 40 (mapFilterOps)
    FOR          reduzir usando a regra 40 (mapFilterOps)
    READ         reduzir usando a regra 40 (mapFilterOps)
    WRITE        reduzir usando a regra 40 (mapFilterOps)
    WRITELN      reduzir usando a regra 40 (mapFilterOps)
    RETURN       reduzir usando a regra 40 (mapFilterOps)
    STFUNC       reduzir usando a regra 40 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 40 (mapFilterOps)
    PARENL       reduzir usando a regra 40 (mapFilterOps)


Estado 324

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 328

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    LIST         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    NOT          reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 325

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 329


Estado 326

   50 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 50 (outOp)
    TYPE         reduzir usando a regra 50 (outOp)
    INTEGER      reduzir usando a regra 50 (outOp)
    DECIMAL      reduzir usando a regra 50 (outOp)
    LIST         reduzir usando a regra 50 (outOp)
    NIL          reduzir usando a regra 50 (outOp)
    ADD          reduzir usando a regra 50 (outOp)
    SUB          reduzir usando a regra 50 (outOp)
    HEADLIST     reduzir usando a regra 50 (outOp)
    TAILLIST     reduzir usando a regra 50 (outOp)
    DESTROYHEAD  reduzir usando a regra 50 (outOp)
    NOT          reduzir usando a regra 50 (outOp)
    ELSE         reduzir usando a regra 50 (outOp)
    IF           reduzir usando a regra 50 (outOp)
    FOR          reduzir usando a regra 50 (outOp)
    READ         reduzir usando a regra 50 (outOp)
    WRITE        reduzir usando a regra 50 (outOp)
    WRITELN      reduzir usando a regra 50 (outOp)
    RETURN       reduzir usando a regra 50 (outOp)
    STFUNC       reduzir usando a regra 50 (outOp)
    ENDFUNC      reduzir usando a regra 50 (outOp)
    PARENL       reduzir usando a regra 50 (outOp)


Estado 327

   51 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    LIST         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    NOT          reduzir usando a regra 51 (outOp)
    ELSE         reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 328

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 203
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 204
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 205
    FOR          deslocar, e ir ao estado 206
    READ         deslocar, e ir ao estado 207
    WRITE        deslocar, e ir ao estado 208
    WRITELN      deslocar, e ir ao estado 209
    RETURN       deslocar, e ir ao estado 210
    STFUNC       deslocar, e ir ao estado 211
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 212
    simpleVDeclaration  ir ao estado 213
    compoundStmt        ir ao estado 214
    primitiveStmt       ir ao estado 330
    exprStmt            ir ao estado 215
    condStmt            ir ao estado 216
    iterStmt            ir ao estado 217
    returnStmt          ir ao estado 218
    listStmt            ir ao estado 219
    appendOps           ir ao estado 220
    returnListOps       ir ao estado 221
    returnListOp        ir ao estado 222
    destroyHeadOps      ir ao estado 223
    mapFilterOps        ir ao estado 224
    expression          ir ao estado 225
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 226
    constOp             ir ao estado 58
    inOp                ir ao estado 227
    outOp               ir ao estado 228
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 229


Estado 329

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 231

    assignExp  ir ao estado 331


Estado 330

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    LIST         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    NOT          reduzir usando a regra 28 (condStmt)
    ELSE         reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 331

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 332


Estado 332

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 23
    TYPE         deslocar, e ir ao estado 203
    INTEGER      deslocar, e ir ao estado 24
    DECIMAL      deslocar, e ir ao estado 25
    LIST         deslocar, e ir ao estado 26
    NIL          deslocar, e ir ao estado 27
    ADD          deslocar, e ir ao estado 28
    SUB          deslocar, e ir ao estado 29
    HEADLIST     deslocar, e ir ao estado 30
    TAILLIST     deslocar, e ir ao estado 31
    DESTROYHEAD  deslocar, e ir ao estado 204
    NOT          deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 205
    FOR          deslocar, e ir ao estado 206
    READ         deslocar, e ir ao estado 207
    WRITE        deslocar, e ir ao estado 208
    WRITELN      deslocar, e ir ao estado 209
    RETURN       deslocar, e ir ao estado 210
    STFUNC       deslocar, e ir ao estado 211
    PARENL       deslocar, e ir ao estado 40

    varDeclaration      ir ao estado 212
    simpleVDeclaration  ir ao estado 213
    compoundStmt        ir ao estado 214
    primitiveStmt       ir ao estado 333
    exprStmt            ir ao estado 215
    condStmt            ir ao estado 216
    iterStmt            ir ao estado 217
    returnStmt          ir ao estado 218
    listStmt            ir ao estado 219
    appendOps           ir ao estado 220
    returnListOps       ir ao estado 221
    returnListOp        ir ao estado 222
    destroyHeadOps      ir ao estado 223
    mapFilterOps        ir ao estado 224
    expression          ir ao estado 225
    assignExp           ir ao estado 56
    simpleExp           ir ao estado 226
    constOp             ir ao estado 58
    inOp                ir ao estado 227
    outOp               ir ao estado 228
    binLogicalExp       ir ao estado 61
    unLogicalExp        ir ao estado 62
    unLogicalOp         ir ao estado 63
    relationalExp       ir ao estado 64
    sumExp              ir ao estado 65
    sumOp               ir ao estado 66
    mulExp              ir ao estado 67
    factor              ir ao estado 68
    fCall               ir ao estado 229


Estado 333

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    LIST         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    NOT          reduzir usando a regra 29 (iterStmt)
    ELSE         reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)
