Gramática

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funcDeclaration

    6 varDeclaration: simpleVarDeclaration SEMIC

    7 funcDeclaration: TYPE ID PARENL params PARENR compoundStmt
    8                | TYPE ID PARENL PARENR compoundStmt
    9                | TYPE LISTTYPE ID PARENL params PARENR compoundStmt
   10                | TYPE LISTTYPE ID PARENL PARENR compoundStmt

   11 simpleVarDeclaration: TYPE ID
   12                     | TYPE LISTTYPE ID

   13 params: params param
   14       | param

   15 param: simpleVarDeclaration

   16 compoundStmt: STFUNC stmtList ENDFUNC

   17 stmtList: stmtList primitiveStmt
   18         | primitiveStmt

   19 primitiveStmt: exprStmt
   20              | compoundStmt
   21              | condStmt
   22              | iterStmt
   23              | returnStmt
   24              | inOp
   25              | outOp
   26              | varDeclaration

   27 exprStmt: expression SEMIC

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt
   29         | IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   31         | FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   32 returnStmt: RETURN expression SEMIC

   33 listExp: appendOps
   34        | returnListOps
   35        | destroyHeadOps
   36        | mapFilterOps

   37 appendOps: ID APPEND ID

   38 returnListOps: returnListOp ID

   39 returnListOp: HEADLIST
   40             | TAILLIST

   41 destroyHeadOps: DESTROYHEAD ID

   42 mapFilterOps: ID MAP ID
   43             | ID FILTER ID

   44 expression: assignExp
   45           | simpleExp
   46           | listExp

   47 assignExp: ID ASSIGN expression

   48 simpleExp: binLogicalExp

   49 constOp: INTEGER
   50        | DECIMAL
   51        | NIL

   52 inOp: READ PARENL ID PARENR SEMIC

   53 outOp: WRITE PARENL outConst PARENR SEMIC
   54      | WRITELN PARENL outConst PARENR SEMIC

   55 outConst: STRING
   56         | simpleExp
   57         | listExp

   58 binLogicalExp: binLogicalExp binLogicalOp relationalOp
   59              | relationalExp

   60 binLogicalOp: OR
   61             | AND

   62 relationalExp: relationalExp relationalOp sumExp
   63              | sumExp

   64 relationalOp: SMALLER
   65             | GREATER
   66             | SMALLEQ
   67             | GREATEQ
   68             | EQUALS
   69             | DIFFERENT

   70 sumExp: sumExp sumOp mulExp
   71       | mulExp

   72 sumOp: ADD
   73      | SUB

   74 mulExp: mulExp mulOp factor
   75       | factor
   76       | sumOp factor

   77 mulOp: MULT
   78      | DIV

   79 factor: ID
   80       | fCall
   81       | PARENL simpleExp PARENR
   82       | constOp

   83 fCall: ID PARENL callParams PARENR
   84      | ID PARENL PARENR

   85 callParams: callParams COMMA simpleExp
   86           | simpleExp


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    ID <str> (258) 7 8 9 10 11 12 37 38 41 42 43 47 52 79 83 84
    TYPE <str> (259) 7 8 9 10 11 12
    LISTTYPE <str> (260) 9 10 12
    STRING <str> (261) 55
    NIL <str> (262) 51
    INTEGER <integer> (263) 49
    DECIMAL <dec> (264) 50
    ADD <str> (265) 72
    SUB <str> (266) 73
    MULT <str> (267) 77
    DIV <str> (268) 78
    OR <str> (269) 60
    AND <str> (270) 61
    SMALLER <str> (271) 64
    GREATER <str> (272) 65
    SMALLEQ <str> (273) 66
    GREATEQ <str> (274) 67
    EQUALS <str> (275) 68
    DIFFERENT <str> (276) 69
    APPEND <str> (277) 37
    HEADLIST <str> (278) 39
    TAILLIST <str> (279) 40
    DESTROYHEAD <str> (280) 41
    FILTER <str> (281) 43
    ASSIGN <str> (282) 47
    MAP <str> (283) 42
    ELSE <str> (284) 29
    THEN <str> (285)
    IF <str> (286) 28 29
    FOR <str> (287) 30 31
    READ <str> (288) 52
    WRITE <str> (289) 53
    WRITELN <str> (290) 54
    RETURN <str> (291) 32
    SEMIC <str> (292) 6 27 30 31 32 52 53 54
    COMMA <str> (293) 85
    STFUNC <str> (294) 16
    ENDFUNC <str> (295) 16
    PARENL <str> (296) 7 8 9 10 28 29 30 31 52 53 54 81 83 84
    PARENR <str> (297) 7 8 9 10 28 29 30 31 52 53 54 81 83 84


Não terminais com as regras onde eles aparecem

    $accept (43)
        à esquerda: 0
    program <treeNode> (44)
        à esquerda: 1
        à direita: 0
    declarationList <treeNode> (45)
        à esquerda: 2 3
        à direita: 1 2
    declaration <treeNode> (46)
        à esquerda: 4 5
        à direita: 2 3
    varDeclaration <treeNode> (47)
        à esquerda: 6
        à direita: 4 26
    funcDeclaration <treeNode> (48)
        à esquerda: 7 8 9 10
        à direita: 5
    simpleVarDeclaration <treeNode> (49)
        à esquerda: 11 12
        à direita: 6 15
    params <treeNode> (50)
        à esquerda: 13 14
        à direita: 7 9 13
    param <treeNode> (51)
        à esquerda: 15
        à direita: 13 14
    compoundStmt <treeNode> (52)
        à esquerda: 16
        à direita: 7 8 9 10 20
    stmtList <treeNode> (53)
        à esquerda: 17 18
        à direita: 16 17
    primitiveStmt <treeNode> (54)
        à esquerda: 19 20 21 22 23 24 25 26
        à direita: 17 18 28 29 30 31
    exprStmt <treeNode> (55)
        à esquerda: 27
        à direita: 19
    condStmt <treeNode> (56)
        à esquerda: 28 29
        à direita: 21
    iterStmt <treeNode> (57)
        à esquerda: 30 31
        à direita: 22
    returnStmt <treeNode> (58)
        à esquerda: 32
        à direita: 23
    listExp <treeNode> (59)
        à esquerda: 33 34 35 36
        à direita: 46 57
    appendOps <treeNode> (60)
        à esquerda: 37
        à direita: 33
    returnListOps <treeNode> (61)
        à esquerda: 38
        à direita: 34
    returnListOp <treeNode> (62)
        à esquerda: 39 40
        à direita: 38
    destroyHeadOps <treeNode> (63)
        à esquerda: 41
        à direita: 35
    mapFilterOps <treeNode> (64)
        à esquerda: 42 43
        à direita: 36
    expression <treeNode> (65)
        à esquerda: 44 45 46
        à direita: 27 32 47
    assignExp <treeNode> (66)
        à esquerda: 47
        à direita: 30 31 44
    simpleExp <treeNode> (67)
        à esquerda: 48
        à direita: 28 29 30 31 45 56 81 85 86
    constOp <treeNode> (68)
        à esquerda: 49 50 51
        à direita: 82
    inOp <treeNode> (69)
        à esquerda: 52
        à direita: 24
    outOp <treeNode> (70)
        à esquerda: 53 54
        à direita: 25
    outConst <treeNode> (71)
        à esquerda: 55 56 57
        à direita: 53 54
    binLogicalExp <treeNode> (72)
        à esquerda: 58 59
        à direita: 48 58
    binLogicalOp <treeNode> (73)
        à esquerda: 60 61
        à direita: 58
    relationalExp <treeNode> (74)
        à esquerda: 62 63
        à direita: 59 62
    relationalOp <treeNode> (75)
        à esquerda: 64 65 66 67 68 69
        à direita: 58 62
    sumExp <treeNode> (76)
        à esquerda: 70 71
        à direita: 62 63 70
    sumOp <treeNode> (77)
        à esquerda: 72 73
        à direita: 70 76
    mulExp <treeNode> (78)
        à esquerda: 74 75 76
        à direita: 70 71 74
    mulOp <treeNode> (79)
        à esquerda: 77 78
        à direita: 74
    factor <treeNode> (80)
        à esquerda: 79 80 81 82
        à direita: 74 75 76
    fCall <treeNode> (81)
        à esquerda: 83 84
        à direita: 80
    callParams <treeNode> (82)
        à esquerda: 85 86
        à direita: 83 85


Estado 0

    0 $accept: • program $end

    TYPE  deslocar, e ir ao estado 1

    program               ir ao estado 2
    declarationList       ir ao estado 3
    declaration           ir ao estado 4
    varDeclaration        ir ao estado 5
    funcDeclaration       ir ao estado 6
    simpleVarDeclaration  ir ao estado 7


Estado 1

    7 funcDeclaration: TYPE • ID PARENL params PARENR compoundStmt
    8                | TYPE • ID PARENL PARENR compoundStmt
    9                | TYPE • LISTTYPE ID PARENL params PARENR compoundStmt
   10                | TYPE • LISTTYPE ID PARENL PARENR compoundStmt
   11 simpleVarDeclaration: TYPE • ID
   12                     | TYPE • LISTTYPE ID

    ID        deslocar, e ir ao estado 8
    LISTTYPE  deslocar, e ir ao estado 9


Estado 2

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 10


Estado 3

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  deslocar, e ir ao estado 1

    $end  reduzir usando a regra 1 (program)

    declaration           ir ao estado 11
    varDeclaration        ir ao estado 5
    funcDeclaration       ir ao estado 6
    simpleVarDeclaration  ir ao estado 7


Estado 4

    3 declarationList: declaration •

    $end  reduzir usando a regra 3 (declarationList)
    TYPE  reduzir usando a regra 3 (declarationList)


Estado 5

    4 declaration: varDeclaration •

    $end  reduzir usando a regra 4 (declaration)
    TYPE  reduzir usando a regra 4 (declaration)


Estado 6

    5 declaration: funcDeclaration •

    $end  reduzir usando a regra 5 (declaration)
    TYPE  reduzir usando a regra 5 (declaration)


Estado 7

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 12


Estado 8

    7 funcDeclaration: TYPE ID • PARENL params PARENR compoundStmt
    8                | TYPE ID • PARENL PARENR compoundStmt
   11 simpleVarDeclaration: TYPE ID •

    PARENL  deslocar, e ir ao estado 13

    SEMIC  reduzir usando a regra 11 (simpleVarDeclaration)


Estado 9

    9 funcDeclaration: TYPE LISTTYPE • ID PARENL params PARENR compoundStmt
   10                | TYPE LISTTYPE • ID PARENL PARENR compoundStmt
   12 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  deslocar, e ir ao estado 14


Estado 10

    0 $accept: program $end •

    $padrão  aceitar


Estado 11

    2 declarationList: declarationList declaration •

    $end  reduzir usando a regra 2 (declarationList)
    TYPE  reduzir usando a regra 2 (declarationList)


Estado 12

    6 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduzir usando a regra 6 (varDeclaration)
    TYPE  reduzir usando a regra 6 (varDeclaration)


Estado 13

    7 funcDeclaration: TYPE ID PARENL • params PARENR compoundStmt
    8                | TYPE ID PARENL • PARENR compoundStmt

    TYPE    deslocar, e ir ao estado 15
    PARENR  deslocar, e ir ao estado 16

    simpleVarDeclaration  ir ao estado 17
    params                ir ao estado 18
    param                 ir ao estado 19


Estado 14

    9 funcDeclaration: TYPE LISTTYPE ID • PARENL params PARENR compoundStmt
   10                | TYPE LISTTYPE ID • PARENL PARENR compoundStmt
   12 simpleVarDeclaration: TYPE LISTTYPE ID •

    PARENL  deslocar, e ir ao estado 20

    SEMIC  reduzir usando a regra 12 (simpleVarDeclaration)


Estado 15

   11 simpleVarDeclaration: TYPE • ID
   12                     | TYPE • LISTTYPE ID

    ID        deslocar, e ir ao estado 21
    LISTTYPE  deslocar, e ir ao estado 22


Estado 16

    8 funcDeclaration: TYPE ID PARENL PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 23

    compoundStmt  ir ao estado 24


Estado 17

   15 param: simpleVarDeclaration •

    TYPE    reduzir usando a regra 15 (param)
    PARENR  reduzir usando a regra 15 (param)


Estado 18

    7 funcDeclaration: TYPE ID PARENL params • PARENR compoundStmt
   13 params: params • param

    TYPE    deslocar, e ir ao estado 15
    PARENR  deslocar, e ir ao estado 25

    simpleVarDeclaration  ir ao estado 17
    param                 ir ao estado 26


Estado 19

   14 params: param •

    TYPE    reduzir usando a regra 14 (params)
    PARENR  reduzir usando a regra 14 (params)


Estado 20

    9 funcDeclaration: TYPE LISTTYPE ID PARENL • params PARENR compoundStmt
   10                | TYPE LISTTYPE ID PARENL • PARENR compoundStmt

    TYPE    deslocar, e ir ao estado 15
    PARENR  deslocar, e ir ao estado 27

    simpleVarDeclaration  ir ao estado 17
    params                ir ao estado 28
    param                 ir ao estado 19


Estado 21

   11 simpleVarDeclaration: TYPE ID •

    TYPE    reduzir usando a regra 11 (simpleVarDeclaration)
    PARENR  reduzir usando a regra 11 (simpleVarDeclaration)


Estado 22

   12 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  deslocar, e ir ao estado 29


Estado 23

   16 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 39
    FOR          deslocar, e ir ao estado 40
    READ         deslocar, e ir ao estado 41
    WRITE        deslocar, e ir ao estado 42
    WRITELN      deslocar, e ir ao estado 43
    RETURN       deslocar, e ir ao estado 44
    STFUNC       deslocar, e ir ao estado 161
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 46
    simpleVarDeclaration  ir ao estado 162
    compoundStmt          ir ao estado 47
    stmtList              ir ao estado 48
    primitiveStmt         ir ao estado 49
    exprStmt              ir ao estado 50
    condStmt              ir ao estado 51
    iterStmt              ir ao estado 52
    returnStmt            ir ao estado 53
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 60
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 64
    outOp                 ir ao estado 65
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 24

    8 funcDeclaration: TYPE ID PARENL PARENR compoundStmt •

    $end  reduzir usando a regra 8 (funcDeclaration)
    TYPE  reduzir usando a regra 8 (funcDeclaration)


Estado 25

    7 funcDeclaration: TYPE ID PARENL params PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 23

    compoundStmt  ir ao estado 73


Estado 26

   13 params: params param •

    TYPE    reduzir usando a regra 13 (params)
    PARENR  reduzir usando a regra 13 (params)


Estado 27

   10 funcDeclaration: TYPE LISTTYPE ID PARENL PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 23

    compoundStmt  ir ao estado 74


Estado 28

    9 funcDeclaration: TYPE LISTTYPE ID PARENL params • PARENR compoundStmt
   13 params: params • param

    TYPE    deslocar, e ir ao estado 15
    PARENR  deslocar, e ir ao estado 75

    simpleVarDeclaration  ir ao estado 17
    param                 ir ao estado 26


Estado 29

   12 simpleVarDeclaration: TYPE LISTTYPE ID •

    TYPE    reduzir usando a regra 12 (simpleVarDeclaration)
    PARENR  reduzir usando a regra 12 (simpleVarDeclaration)


Estado 30

   37 appendOps: ID • APPEND ID
   42 mapFilterOps: ID • MAP ID
   43             | ID • FILTER ID
   47 assignExp: ID • ASSIGN expression
   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 76
    FILTER  deslocar, e ir ao estado 77
    ASSIGN  deslocar, e ir ao estado 78
    MAP     deslocar, e ir ao estado 79
    PARENL  deslocar, e ir ao estado 80

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    SEMIC      reduzir usando a regra 79 (factor)


Estado 31

   51 constOp: NIL •

    ADD        reduzir usando a regra 51 (constOp)
    SUB        reduzir usando a regra 51 (constOp)
    MULT       reduzir usando a regra 51 (constOp)
    DIV        reduzir usando a regra 51 (constOp)
    OR         reduzir usando a regra 51 (constOp)
    AND        reduzir usando a regra 51 (constOp)
    SMALLER    reduzir usando a regra 51 (constOp)
    GREATER    reduzir usando a regra 51 (constOp)
    SMALLEQ    reduzir usando a regra 51 (constOp)
    GREATEQ    reduzir usando a regra 51 (constOp)
    EQUALS     reduzir usando a regra 51 (constOp)
    DIFFERENT  reduzir usando a regra 51 (constOp)
    SEMIC      reduzir usando a regra 51 (constOp)


Estado 32

   49 constOp: INTEGER •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    SEMIC      reduzir usando a regra 49 (constOp)


Estado 33

   50 constOp: DECIMAL •

    ADD        reduzir usando a regra 50 (constOp)
    SUB        reduzir usando a regra 50 (constOp)
    MULT       reduzir usando a regra 50 (constOp)
    DIV        reduzir usando a regra 50 (constOp)
    OR         reduzir usando a regra 50 (constOp)
    AND        reduzir usando a regra 50 (constOp)
    SMALLER    reduzir usando a regra 50 (constOp)
    GREATER    reduzir usando a regra 50 (constOp)
    SMALLEQ    reduzir usando a regra 50 (constOp)
    GREATEQ    reduzir usando a regra 50 (constOp)
    EQUALS     reduzir usando a regra 50 (constOp)
    DIFFERENT  reduzir usando a regra 50 (constOp)
    SEMIC      reduzir usando a regra 50 (constOp)


Estado 34

   72 sumOp: ADD •

    ID       reduzir usando a regra 72 (sumOp)
    NIL      reduzir usando a regra 72 (sumOp)
    INTEGER  reduzir usando a regra 72 (sumOp)
    DECIMAL  reduzir usando a regra 72 (sumOp)
    PARENL   reduzir usando a regra 72 (sumOp)


Estado 35

   73 sumOp: SUB •

    ID       reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 36

   39 returnListOp: HEADLIST •

    ID  reduzir usando a regra 39 (returnListOp)


Estado 37

   40 returnListOp: TAILLIST •

    ID  reduzir usando a regra 40 (returnListOp)


Estado 38

   41 destroyHeadOps: DESTROYHEAD • ID

    ID  deslocar, e ir ao estado 81


Estado 39

   28 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   29         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 82


Estado 40

   30 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   31         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 83


Estado 41

   52 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 84


Estado 42

   53 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 85


Estado 43

   54 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 86


Estado 44

   32 returnStmt: RETURN • expression SEMIC

    ID           deslocar, e ir ao estado 30
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    PARENL       deslocar, e ir ao estado 45

    listExp         ir ao estado 54
    appendOps       ir ao estado 55
    returnListOps   ir ao estado 56
    returnListOp    ir ao estado 57
    destroyHeadOps  ir ao estado 58
    mapFilterOps    ir ao estado 59
    expression      ir ao estado 87
    assignExp       ir ao estado 61
    simpleExp       ir ao estado 62
    constOp         ir ao estado 63
    binLogicalExp   ir ao estado 66
    relationalExp   ir ao estado 67
    sumExp          ir ao estado 68
    sumOp           ir ao estado 69
    mulExp          ir ao estado 70
    factor          ir ao estado 71
    fCall           ir ao estado 72


Estado 45

   81 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 88
    NIL      deslocar, e ir ao estado 163
    INTEGER  deslocar, e ir ao estado 164
    DECIMAL  deslocar, e ir ao estado 165
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 166

    simpleExp      ir ao estado 89
    constOp        ir ao estado 167
    binLogicalExp  ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 46

   26 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 26 (primitiveStmt)
    TYPE         reduzir usando a regra 26 (primitiveStmt)
    NIL          reduzir usando a regra 26 (primitiveStmt)
    INTEGER      reduzir usando a regra 26 (primitiveStmt)
    DECIMAL      reduzir usando a regra 26 (primitiveStmt)
    ADD          reduzir usando a regra 26 (primitiveStmt)
    SUB          reduzir usando a regra 26 (primitiveStmt)
    HEADLIST     reduzir usando a regra 26 (primitiveStmt)
    TAILLIST     reduzir usando a regra 26 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 26 (primitiveStmt)
    IF           reduzir usando a regra 26 (primitiveStmt)
    FOR          reduzir usando a regra 26 (primitiveStmt)
    READ         reduzir usando a regra 26 (primitiveStmt)
    WRITE        reduzir usando a regra 26 (primitiveStmt)
    WRITELN      reduzir usando a regra 26 (primitiveStmt)
    RETURN       reduzir usando a regra 26 (primitiveStmt)
    STFUNC       reduzir usando a regra 26 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 26 (primitiveStmt)
    PARENL       reduzir usando a regra 26 (primitiveStmt)


Estado 47

   20 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 48

   16 compoundStmt: STFUNC stmtList • ENDFUNC
   17 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 39
    FOR          deslocar, e ir ao estado 40
    READ         deslocar, e ir ao estado 41
    WRITE        deslocar, e ir ao estado 42
    WRITELN      deslocar, e ir ao estado 43
    RETURN       deslocar, e ir ao estado 44
    STFUNC       deslocar, e ir ao estado 161
    ENDFUNC      deslocar, e ir ao estado 90
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 46
    simpleVarDeclaration  ir ao estado 162
    compoundStmt          ir ao estado 47
    primitiveStmt         ir ao estado 91
    exprStmt              ir ao estado 50
    condStmt              ir ao estado 51
    iterStmt              ir ao estado 52
    returnStmt            ir ao estado 53
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 60
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 64
    outOp                 ir ao estado 65
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 49

   18 stmtList: primitiveStmt •

    ID           reduzir usando a regra 18 (stmtList)
    TYPE         reduzir usando a regra 18 (stmtList)
    NIL          reduzir usando a regra 18 (stmtList)
    INTEGER      reduzir usando a regra 18 (stmtList)
    DECIMAL      reduzir usando a regra 18 (stmtList)
    ADD          reduzir usando a regra 18 (stmtList)
    SUB          reduzir usando a regra 18 (stmtList)
    HEADLIST     reduzir usando a regra 18 (stmtList)
    TAILLIST     reduzir usando a regra 18 (stmtList)
    DESTROYHEAD  reduzir usando a regra 18 (stmtList)
    IF           reduzir usando a regra 18 (stmtList)
    FOR          reduzir usando a regra 18 (stmtList)
    READ         reduzir usando a regra 18 (stmtList)
    WRITE        reduzir usando a regra 18 (stmtList)
    WRITELN      reduzir usando a regra 18 (stmtList)
    RETURN       reduzir usando a regra 18 (stmtList)
    STFUNC       reduzir usando a regra 18 (stmtList)
    ENDFUNC      reduzir usando a regra 18 (stmtList)
    PARENL       reduzir usando a regra 18 (stmtList)


Estado 50

   19 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 51

   21 primitiveStmt: condStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 52

   22 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 53

   23 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 54

   46 expression: listExp •

    SEMIC  reduzir usando a regra 46 (expression)


Estado 55

   33 listExp: appendOps •

    SEMIC  reduzir usando a regra 33 (listExp)


Estado 56

   34 listExp: returnListOps •

    SEMIC  reduzir usando a regra 34 (listExp)


Estado 57

   38 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 92


Estado 58

   35 listExp: destroyHeadOps •

    SEMIC  reduzir usando a regra 35 (listExp)


Estado 59

   36 listExp: mapFilterOps •

    SEMIC  reduzir usando a regra 36 (listExp)


Estado 60

   27 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 93


Estado 61

   44 expression: assignExp •

    SEMIC  reduzir usando a regra 44 (expression)


Estado 62

   45 expression: simpleExp •

    SEMIC  reduzir usando a regra 45 (expression)


Estado 63

   82 factor: constOp •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    SEMIC      reduzir usando a regra 82 (factor)


Estado 64

   24 primitiveStmt: inOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 65

   25 primitiveStmt: outOp •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 66

   48 simpleExp: binLogicalExp •
   58 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   deslocar, e ir ao estado 94
    AND  deslocar, e ir ao estado 95

    SEMIC  reduzir usando a regra 48 (simpleExp)

    binLogicalOp  ir ao estado 96


Estado 67

   59 binLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 97
    GREATER    deslocar, e ir ao estado 98
    SMALLEQ    deslocar, e ir ao estado 99
    GREATEQ    deslocar, e ir ao estado 100
    EQUALS     deslocar, e ir ao estado 101
    DIFFERENT  deslocar, e ir ao estado 102

    OR     reduzir usando a regra 59 (binLogicalExp)
    AND    reduzir usando a regra 59 (binLogicalExp)
    SEMIC  reduzir usando a regra 59 (binLogicalExp)

    relationalOp  ir ao estado 103


Estado 68

   63 relationalExp: sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 175
    SUB  deslocar, e ir ao estado 176

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    SEMIC      reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 104


Estado 69

   76 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 177
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 45

    constOp  ir ao estado 63
    factor   ir ao estado 105
    fCall    ir ao estado 72


Estado 70

   71 sumExp: mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 106
    DIV   deslocar, e ir ao estado 107

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    SEMIC      reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 108


Estado 71

   75 mulExp: factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    SEMIC      reduzir usando a regra 75 (mulExp)


Estado 72

   80 factor: fCall •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 73

    7 funcDeclaration: TYPE ID PARENL params PARENR compoundStmt •

    $end  reduzir usando a regra 7 (funcDeclaration)
    TYPE  reduzir usando a regra 7 (funcDeclaration)


Estado 74

   10 funcDeclaration: TYPE LISTTYPE ID PARENL PARENR compoundStmt •

    $end  reduzir usando a regra 10 (funcDeclaration)
    TYPE  reduzir usando a regra 10 (funcDeclaration)


Estado 75

    9 funcDeclaration: TYPE LISTTYPE ID PARENL params PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 23

    compoundStmt  ir ao estado 109


Estado 76

   37 appendOps: ID APPEND • ID

    ID  deslocar, e ir ao estado 110


Estado 77

   43 mapFilterOps: ID FILTER • ID

    ID  deslocar, e ir ao estado 111


Estado 78

   47 assignExp: ID ASSIGN • expression

    ID           deslocar, e ir ao estado 30
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    PARENL       deslocar, e ir ao estado 45

    listExp         ir ao estado 54
    appendOps       ir ao estado 55
    returnListOps   ir ao estado 56
    returnListOp    ir ao estado 57
    destroyHeadOps  ir ao estado 58
    mapFilterOps    ir ao estado 59
    expression      ir ao estado 112
    assignExp       ir ao estado 61
    simpleExp       ir ao estado 62
    constOp         ir ao estado 63
    binLogicalExp   ir ao estado 66
    relationalExp   ir ao estado 67
    sumExp          ir ao estado 68
    sumOp           ir ao estado 69
    mulExp          ir ao estado 70
    factor          ir ao estado 71
    fCall           ir ao estado 72


Estado 79

   42 mapFilterOps: ID MAP • ID

    ID  deslocar, e ir ao estado 113


Estado 80

   83 fCall: ID PARENL • callParams PARENR
   84      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 179
    INTEGER  deslocar, e ir ao estado 180
    DECIMAL  deslocar, e ir ao estado 181
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 182
    PARENR   deslocar, e ir ao estado 114

    simpleExp      ir ao estado 115
    constOp        ir ao estado 183
    binLogicalExp  ir ao estado 184
    relationalExp  ir ao estado 185
    sumExp         ir ao estado 186
    sumOp          ir ao estado 187
    mulExp         ir ao estado 188
    factor         ir ao estado 189
    fCall          ir ao estado 190
    callParams     ir ao estado 116


Estado 81

   41 destroyHeadOps: DESTROYHEAD ID •

    SEMIC  reduzir usando a regra 41 (destroyHeadOps)


Estado 82

   28 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   29         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 88
    NIL      deslocar, e ir ao estado 163
    INTEGER  deslocar, e ir ao estado 164
    DECIMAL  deslocar, e ir ao estado 165
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 166

    simpleExp      ir ao estado 117
    constOp        ir ao estado 167
    binLogicalExp  ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 83

   30 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   31         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 118
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 45

    assignExp      ir ao estado 119
    simpleExp      ir ao estado 120
    constOp        ir ao estado 63
    binLogicalExp  ir ao estado 66
    relationalExp  ir ao estado 67
    sumExp         ir ao estado 68
    sumOp          ir ao estado 69
    mulExp         ir ao estado 70
    factor         ir ao estado 71
    fCall          ir ao estado 72


Estado 84

   52 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 121


Estado 85

   53 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID           deslocar, e ir ao estado 122
    STRING       deslocar, e ir ao estado 123
    NIL          deslocar, e ir ao estado 163
    INTEGER      deslocar, e ir ao estado 164
    DECIMAL      deslocar, e ir ao estado 165
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 191
    PARENL       deslocar, e ir ao estado 166

    listExp         ir ao estado 124
    appendOps       ir ao estado 192
    returnListOps   ir ao estado 193
    returnListOp    ir ao estado 194
    destroyHeadOps  ir ao estado 195
    mapFilterOps    ir ao estado 196
    simpleExp       ir ao estado 125
    constOp         ir ao estado 167
    outConst        ir ao estado 126
    binLogicalExp   ir ao estado 168
    relationalExp   ir ao estado 169
    sumExp          ir ao estado 170
    sumOp           ir ao estado 171
    mulExp          ir ao estado 172
    factor          ir ao estado 173
    fCall           ir ao estado 174


Estado 86

   54 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID           deslocar, e ir ao estado 122
    STRING       deslocar, e ir ao estado 123
    NIL          deslocar, e ir ao estado 163
    INTEGER      deslocar, e ir ao estado 164
    DECIMAL      deslocar, e ir ao estado 165
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 191
    PARENL       deslocar, e ir ao estado 166

    listExp         ir ao estado 124
    appendOps       ir ao estado 192
    returnListOps   ir ao estado 193
    returnListOp    ir ao estado 194
    destroyHeadOps  ir ao estado 195
    mapFilterOps    ir ao estado 196
    simpleExp       ir ao estado 125
    constOp         ir ao estado 167
    outConst        ir ao estado 127
    binLogicalExp   ir ao estado 168
    relationalExp   ir ao estado 169
    sumExp          ir ao estado 170
    sumOp           ir ao estado 171
    mulExp          ir ao estado 172
    factor          ir ao estado 173
    fCall           ir ao estado 174


Estado 87

   32 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 128


Estado 88

   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 197

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 89

   81 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 129


Estado 90

   16 compoundStmt: STFUNC stmtList ENDFUNC •

    $end  reduzir usando a regra 16 (compoundStmt)
    TYPE  reduzir usando a regra 16 (compoundStmt)


Estado 91

   17 stmtList: stmtList primitiveStmt •

    ID           reduzir usando a regra 17 (stmtList)
    TYPE         reduzir usando a regra 17 (stmtList)
    NIL          reduzir usando a regra 17 (stmtList)
    INTEGER      reduzir usando a regra 17 (stmtList)
    DECIMAL      reduzir usando a regra 17 (stmtList)
    ADD          reduzir usando a regra 17 (stmtList)
    SUB          reduzir usando a regra 17 (stmtList)
    HEADLIST     reduzir usando a regra 17 (stmtList)
    TAILLIST     reduzir usando a regra 17 (stmtList)
    DESTROYHEAD  reduzir usando a regra 17 (stmtList)
    IF           reduzir usando a regra 17 (stmtList)
    FOR          reduzir usando a regra 17 (stmtList)
    READ         reduzir usando a regra 17 (stmtList)
    WRITE        reduzir usando a regra 17 (stmtList)
    WRITELN      reduzir usando a regra 17 (stmtList)
    RETURN       reduzir usando a regra 17 (stmtList)
    STFUNC       reduzir usando a regra 17 (stmtList)
    ENDFUNC      reduzir usando a regra 17 (stmtList)
    PARENL       reduzir usando a regra 17 (stmtList)


Estado 92

   38 returnListOps: returnListOp ID •

    SEMIC  reduzir usando a regra 38 (returnListOps)


Estado 93

   27 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 27 (exprStmt)
    TYPE         reduzir usando a regra 27 (exprStmt)
    NIL          reduzir usando a regra 27 (exprStmt)
    INTEGER      reduzir usando a regra 27 (exprStmt)
    DECIMAL      reduzir usando a regra 27 (exprStmt)
    ADD          reduzir usando a regra 27 (exprStmt)
    SUB          reduzir usando a regra 27 (exprStmt)
    HEADLIST     reduzir usando a regra 27 (exprStmt)
    TAILLIST     reduzir usando a regra 27 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 27 (exprStmt)
    IF           reduzir usando a regra 27 (exprStmt)
    FOR          reduzir usando a regra 27 (exprStmt)
    READ         reduzir usando a regra 27 (exprStmt)
    WRITE        reduzir usando a regra 27 (exprStmt)
    WRITELN      reduzir usando a regra 27 (exprStmt)
    RETURN       reduzir usando a regra 27 (exprStmt)
    STFUNC       reduzir usando a regra 27 (exprStmt)
    ENDFUNC      reduzir usando a regra 27 (exprStmt)
    PARENL       reduzir usando a regra 27 (exprStmt)


Estado 94

   60 binLogicalOp: OR •

    SMALLER    reduzir usando a regra 60 (binLogicalOp)
    GREATER    reduzir usando a regra 60 (binLogicalOp)
    SMALLEQ    reduzir usando a regra 60 (binLogicalOp)
    GREATEQ    reduzir usando a regra 60 (binLogicalOp)
    EQUALS     reduzir usando a regra 60 (binLogicalOp)
    DIFFERENT  reduzir usando a regra 60 (binLogicalOp)


Estado 95

   61 binLogicalOp: AND •

    SMALLER    reduzir usando a regra 61 (binLogicalOp)
    GREATER    reduzir usando a regra 61 (binLogicalOp)
    SMALLEQ    reduzir usando a regra 61 (binLogicalOp)
    GREATEQ    reduzir usando a regra 61 (binLogicalOp)
    EQUALS     reduzir usando a regra 61 (binLogicalOp)
    DIFFERENT  reduzir usando a regra 61 (binLogicalOp)


Estado 96

   58 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    deslocar, e ir ao estado 198
    GREATER    deslocar, e ir ao estado 199
    SMALLEQ    deslocar, e ir ao estado 200
    GREATEQ    deslocar, e ir ao estado 201
    EQUALS     deslocar, e ir ao estado 202
    DIFFERENT  deslocar, e ir ao estado 203

    relationalOp  ir ao estado 130


Estado 97

   64 relationalOp: SMALLER •

    ID       reduzir usando a regra 64 (relationalOp)
    NIL      reduzir usando a regra 64 (relationalOp)
    INTEGER  reduzir usando a regra 64 (relationalOp)
    DECIMAL  reduzir usando a regra 64 (relationalOp)
    ADD      reduzir usando a regra 64 (relationalOp)
    SUB      reduzir usando a regra 64 (relationalOp)
    PARENL   reduzir usando a regra 64 (relationalOp)


Estado 98

   65 relationalOp: GREATER •

    ID       reduzir usando a regra 65 (relationalOp)
    NIL      reduzir usando a regra 65 (relationalOp)
    INTEGER  reduzir usando a regra 65 (relationalOp)
    DECIMAL  reduzir usando a regra 65 (relationalOp)
    ADD      reduzir usando a regra 65 (relationalOp)
    SUB      reduzir usando a regra 65 (relationalOp)
    PARENL   reduzir usando a regra 65 (relationalOp)


Estado 99

   66 relationalOp: SMALLEQ •

    ID       reduzir usando a regra 66 (relationalOp)
    NIL      reduzir usando a regra 66 (relationalOp)
    INTEGER  reduzir usando a regra 66 (relationalOp)
    DECIMAL  reduzir usando a regra 66 (relationalOp)
    ADD      reduzir usando a regra 66 (relationalOp)
    SUB      reduzir usando a regra 66 (relationalOp)
    PARENL   reduzir usando a regra 66 (relationalOp)


Estado 100

   67 relationalOp: GREATEQ •

    ID       reduzir usando a regra 67 (relationalOp)
    NIL      reduzir usando a regra 67 (relationalOp)
    INTEGER  reduzir usando a regra 67 (relationalOp)
    DECIMAL  reduzir usando a regra 67 (relationalOp)
    ADD      reduzir usando a regra 67 (relationalOp)
    SUB      reduzir usando a regra 67 (relationalOp)
    PARENL   reduzir usando a regra 67 (relationalOp)


Estado 101

   68 relationalOp: EQUALS •

    ID       reduzir usando a regra 68 (relationalOp)
    NIL      reduzir usando a regra 68 (relationalOp)
    INTEGER  reduzir usando a regra 68 (relationalOp)
    DECIMAL  reduzir usando a regra 68 (relationalOp)
    ADD      reduzir usando a regra 68 (relationalOp)
    SUB      reduzir usando a regra 68 (relationalOp)
    PARENL   reduzir usando a regra 68 (relationalOp)


Estado 102

   69 relationalOp: DIFFERENT •

    ID       reduzir usando a regra 69 (relationalOp)
    NIL      reduzir usando a regra 69 (relationalOp)
    INTEGER  reduzir usando a regra 69 (relationalOp)
    DECIMAL  reduzir usando a regra 69 (relationalOp)
    ADD      reduzir usando a regra 69 (relationalOp)
    SUB      reduzir usando a regra 69 (relationalOp)
    PARENL   reduzir usando a regra 69 (relationalOp)


Estado 103

   62 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 177
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 45

    constOp  ir ao estado 63
    sumExp   ir ao estado 131
    sumOp    ir ao estado 69
    mulExp   ir ao estado 70
    factor   ir ao estado 71
    fCall    ir ao estado 72


Estado 104

   70 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 177
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 45

    constOp  ir ao estado 63
    sumOp    ir ao estado 69
    mulExp   ir ao estado 132
    factor   ir ao estado 71
    fCall    ir ao estado 72


Estado 105

   76 mulExp: sumOp factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    SEMIC      reduzir usando a regra 76 (mulExp)


Estado 106

   77 mulOp: MULT •

    ID       reduzir usando a regra 77 (mulOp)
    NIL      reduzir usando a regra 77 (mulOp)
    INTEGER  reduzir usando a regra 77 (mulOp)
    DECIMAL  reduzir usando a regra 77 (mulOp)
    PARENL   reduzir usando a regra 77 (mulOp)


Estado 107

   78 mulOp: DIV •

    ID       reduzir usando a regra 78 (mulOp)
    NIL      reduzir usando a regra 78 (mulOp)
    INTEGER  reduzir usando a regra 78 (mulOp)
    DECIMAL  reduzir usando a regra 78 (mulOp)
    PARENL   reduzir usando a regra 78 (mulOp)


Estado 108

   74 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 177
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    PARENL   deslocar, e ir ao estado 45

    constOp  ir ao estado 63
    factor   ir ao estado 133
    fCall    ir ao estado 72


Estado 109

    9 funcDeclaration: TYPE LISTTYPE ID PARENL params PARENR compoundStmt •

    $end  reduzir usando a regra 9 (funcDeclaration)
    TYPE  reduzir usando a regra 9 (funcDeclaration)


Estado 110

   37 appendOps: ID APPEND ID •

    SEMIC  reduzir usando a regra 37 (appendOps)


Estado 111

   43 mapFilterOps: ID FILTER ID •

    SEMIC  reduzir usando a regra 43 (mapFilterOps)


Estado 112

   47 assignExp: ID ASSIGN expression •

    SEMIC  reduzir usando a regra 47 (assignExp)


Estado 113

   42 mapFilterOps: ID MAP ID •

    SEMIC  reduzir usando a regra 42 (mapFilterOps)


Estado 114

   84 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 115

   86 callParams: simpleExp •

    COMMA   reduzir usando a regra 86 (callParams)
    PARENR  reduzir usando a regra 86 (callParams)


Estado 116

   83 fCall: ID PARENL callParams • PARENR
   85 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 134
    PARENR  deslocar, e ir ao estado 135


Estado 117

   28 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   29         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 136


Estado 118

   47 assignExp: ID • ASSIGN expression
   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 78
    PARENL  deslocar, e ir ao estado 80

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    SEMIC      reduzir usando a regra 79 (factor)


Estado 119

   30 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 137


Estado 120

   31 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 138


Estado 121

   52 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 139


Estado 122

   37 appendOps: ID • APPEND ID
   42 mapFilterOps: ID • MAP ID
   43             | ID • FILTER ID
   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 204
    FILTER  deslocar, e ir ao estado 205
    MAP     deslocar, e ir ao estado 206
    PARENL  deslocar, e ir ao estado 197

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 123

   55 outConst: STRING •

    PARENR  reduzir usando a regra 55 (outConst)


Estado 124

   57 outConst: listExp •

    PARENR  reduzir usando a regra 57 (outConst)


Estado 125

   56 outConst: simpleExp •

    PARENR  reduzir usando a regra 56 (outConst)


Estado 126

   53 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 140


Estado 127

   54 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 141


Estado 128

   32 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 32 (returnStmt)
    TYPE         reduzir usando a regra 32 (returnStmt)
    NIL          reduzir usando a regra 32 (returnStmt)
    INTEGER      reduzir usando a regra 32 (returnStmt)
    DECIMAL      reduzir usando a regra 32 (returnStmt)
    ADD          reduzir usando a regra 32 (returnStmt)
    SUB          reduzir usando a regra 32 (returnStmt)
    HEADLIST     reduzir usando a regra 32 (returnStmt)
    TAILLIST     reduzir usando a regra 32 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 32 (returnStmt)
    IF           reduzir usando a regra 32 (returnStmt)
    FOR          reduzir usando a regra 32 (returnStmt)
    READ         reduzir usando a regra 32 (returnStmt)
    WRITE        reduzir usando a regra 32 (returnStmt)
    WRITELN      reduzir usando a regra 32 (returnStmt)
    RETURN       reduzir usando a regra 32 (returnStmt)
    STFUNC       reduzir usando a regra 32 (returnStmt)
    ENDFUNC      reduzir usando a regra 32 (returnStmt)
    PARENL       reduzir usando a regra 32 (returnStmt)


Estado 129

   81 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 130

   58 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR     reduzir usando a regra 58 (binLogicalExp)
    AND    reduzir usando a regra 58 (binLogicalExp)
    SEMIC  reduzir usando a regra 58 (binLogicalExp)


Estado 131

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 175
    SUB  deslocar, e ir ao estado 176

    OR         reduzir usando a regra 62 (relationalExp)
    AND        reduzir usando a regra 62 (relationalExp)
    SMALLER    reduzir usando a regra 62 (relationalExp)
    GREATER    reduzir usando a regra 62 (relationalExp)
    SMALLEQ    reduzir usando a regra 62 (relationalExp)
    GREATEQ    reduzir usando a regra 62 (relationalExp)
    EQUALS     reduzir usando a regra 62 (relationalExp)
    DIFFERENT  reduzir usando a regra 62 (relationalExp)
    SEMIC      reduzir usando a regra 62 (relationalExp)

    sumOp  ir ao estado 104


Estado 132

   70 sumExp: sumExp sumOp mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 106
    DIV   deslocar, e ir ao estado 107

    ADD        reduzir usando a regra 70 (sumExp)
    SUB        reduzir usando a regra 70 (sumExp)
    OR         reduzir usando a regra 70 (sumExp)
    AND        reduzir usando a regra 70 (sumExp)
    SMALLER    reduzir usando a regra 70 (sumExp)
    GREATER    reduzir usando a regra 70 (sumExp)
    SMALLEQ    reduzir usando a regra 70 (sumExp)
    GREATEQ    reduzir usando a regra 70 (sumExp)
    EQUALS     reduzir usando a regra 70 (sumExp)
    DIFFERENT  reduzir usando a regra 70 (sumExp)
    SEMIC      reduzir usando a regra 70 (sumExp)

    mulOp  ir ao estado 108


Estado 133

   74 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    SEMIC      reduzir usando a regra 74 (mulExp)


Estado 134

   85 callParams: callParams COMMA • simpleExp

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 179
    INTEGER  deslocar, e ir ao estado 180
    DECIMAL  deslocar, e ir ao estado 181
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 182

    simpleExp      ir ao estado 142
    constOp        ir ao estado 183
    binLogicalExp  ir ao estado 184
    relationalExp  ir ao estado 185
    sumExp         ir ao estado 186
    sumOp          ir ao estado 187
    mulExp         ir ao estado 188
    factor         ir ao estado 189
    fCall          ir ao estado 190


Estado 135

   83 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 83 (fCall)
    SUB        reduzir usando a regra 83 (fCall)
    MULT       reduzir usando a regra 83 (fCall)
    DIV        reduzir usando a regra 83 (fCall)
    OR         reduzir usando a regra 83 (fCall)
    AND        reduzir usando a regra 83 (fCall)
    SMALLER    reduzir usando a regra 83 (fCall)
    GREATER    reduzir usando a regra 83 (fCall)
    SMALLEQ    reduzir usando a regra 83 (fCall)
    GREATEQ    reduzir usando a regra 83 (fCall)
    EQUALS     reduzir usando a regra 83 (fCall)
    DIFFERENT  reduzir usando a regra 83 (fCall)
    SEMIC      reduzir usando a regra 83 (fCall)


Estado 136

   28 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   29         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 207
    FOR          deslocar, e ir ao estado 208
    READ         deslocar, e ir ao estado 209
    WRITE        deslocar, e ir ao estado 210
    WRITELN      deslocar, e ir ao estado 211
    RETURN       deslocar, e ir ao estado 212
    STFUNC       deslocar, e ir ao estado 213
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 214
    simpleVarDeclaration  ir ao estado 215
    compoundStmt          ir ao estado 216
    primitiveStmt         ir ao estado 143
    exprStmt              ir ao estado 217
    condStmt              ir ao estado 218
    iterStmt              ir ao estado 219
    returnStmt            ir ao estado 220
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 221
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 222
    outOp                 ir ao estado 223
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 137

   30 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 177
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 45

    simpleExp      ir ao estado 144
    constOp        ir ao estado 63
    binLogicalExp  ir ao estado 66
    relationalExp  ir ao estado 67
    sumExp         ir ao estado 68
    sumOp          ir ao estado 69
    mulExp         ir ao estado 70
    factor         ir ao estado 71
    fCall          ir ao estado 72


Estado 138

   31 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 177
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 45

    simpleExp      ir ao estado 145
    constOp        ir ao estado 63
    binLogicalExp  ir ao estado 66
    relationalExp  ir ao estado 67
    sumExp         ir ao estado 68
    sumOp          ir ao estado 69
    mulExp         ir ao estado 70
    factor         ir ao estado 71
    fCall          ir ao estado 72


Estado 139

   52 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 146


Estado 140

   53 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 147


Estado 141

   54 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 148


Estado 142

   85 callParams: callParams COMMA simpleExp •

    COMMA   reduzir usando a regra 85 (callParams)
    PARENR  reduzir usando a regra 85 (callParams)


Estado 143

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   29         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 149

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 144

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 150


Estado 145

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 151


Estado 146

   52 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 52 (inOp)
    TYPE         reduzir usando a regra 52 (inOp)
    NIL          reduzir usando a regra 52 (inOp)
    INTEGER      reduzir usando a regra 52 (inOp)
    DECIMAL      reduzir usando a regra 52 (inOp)
    ADD          reduzir usando a regra 52 (inOp)
    SUB          reduzir usando a regra 52 (inOp)
    HEADLIST     reduzir usando a regra 52 (inOp)
    TAILLIST     reduzir usando a regra 52 (inOp)
    DESTROYHEAD  reduzir usando a regra 52 (inOp)
    IF           reduzir usando a regra 52 (inOp)
    FOR          reduzir usando a regra 52 (inOp)
    READ         reduzir usando a regra 52 (inOp)
    WRITE        reduzir usando a regra 52 (inOp)
    WRITELN      reduzir usando a regra 52 (inOp)
    RETURN       reduzir usando a regra 52 (inOp)
    STFUNC       reduzir usando a regra 52 (inOp)
    ENDFUNC      reduzir usando a regra 52 (inOp)
    PARENL       reduzir usando a regra 52 (inOp)


Estado 147

   53 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 53 (outOp)
    TYPE         reduzir usando a regra 53 (outOp)
    NIL          reduzir usando a regra 53 (outOp)
    INTEGER      reduzir usando a regra 53 (outOp)
    DECIMAL      reduzir usando a regra 53 (outOp)
    ADD          reduzir usando a regra 53 (outOp)
    SUB          reduzir usando a regra 53 (outOp)
    HEADLIST     reduzir usando a regra 53 (outOp)
    TAILLIST     reduzir usando a regra 53 (outOp)
    DESTROYHEAD  reduzir usando a regra 53 (outOp)
    IF           reduzir usando a regra 53 (outOp)
    FOR          reduzir usando a regra 53 (outOp)
    READ         reduzir usando a regra 53 (outOp)
    WRITE        reduzir usando a regra 53 (outOp)
    WRITELN      reduzir usando a regra 53 (outOp)
    RETURN       reduzir usando a regra 53 (outOp)
    STFUNC       reduzir usando a regra 53 (outOp)
    ENDFUNC      reduzir usando a regra 53 (outOp)
    PARENL       reduzir usando a regra 53 (outOp)


Estado 148

   54 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 54 (outOp)
    TYPE         reduzir usando a regra 54 (outOp)
    NIL          reduzir usando a regra 54 (outOp)
    INTEGER      reduzir usando a regra 54 (outOp)
    DECIMAL      reduzir usando a regra 54 (outOp)
    ADD          reduzir usando a regra 54 (outOp)
    SUB          reduzir usando a regra 54 (outOp)
    HEADLIST     reduzir usando a regra 54 (outOp)
    TAILLIST     reduzir usando a regra 54 (outOp)
    DESTROYHEAD  reduzir usando a regra 54 (outOp)
    IF           reduzir usando a regra 54 (outOp)
    FOR          reduzir usando a regra 54 (outOp)
    READ         reduzir usando a regra 54 (outOp)
    WRITE        reduzir usando a regra 54 (outOp)
    WRITELN      reduzir usando a regra 54 (outOp)
    RETURN       reduzir usando a regra 54 (outOp)
    STFUNC       reduzir usando a regra 54 (outOp)
    ENDFUNC      reduzir usando a regra 54 (outOp)
    PARENL       reduzir usando a regra 54 (outOp)


Estado 149

   29 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 39
    FOR          deslocar, e ir ao estado 40
    READ         deslocar, e ir ao estado 41
    WRITE        deslocar, e ir ao estado 42
    WRITELN      deslocar, e ir ao estado 43
    RETURN       deslocar, e ir ao estado 44
    STFUNC       deslocar, e ir ao estado 161
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 46
    simpleVarDeclaration  ir ao estado 162
    compoundStmt          ir ao estado 47
    primitiveStmt         ir ao estado 152
    exprStmt              ir ao estado 50
    condStmt              ir ao estado 51
    iterStmt              ir ao estado 52
    returnStmt            ir ao estado 53
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 60
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 64
    outOp                 ir ao estado 65
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 150

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 153

    assignExp  ir ao estado 154


Estado 151

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 153

    assignExp  ir ao estado 155


Estado 152

   29 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 29 (condStmt)
    TYPE         reduzir usando a regra 29 (condStmt)
    NIL          reduzir usando a regra 29 (condStmt)
    INTEGER      reduzir usando a regra 29 (condStmt)
    DECIMAL      reduzir usando a regra 29 (condStmt)
    ADD          reduzir usando a regra 29 (condStmt)
    SUB          reduzir usando a regra 29 (condStmt)
    HEADLIST     reduzir usando a regra 29 (condStmt)
    TAILLIST     reduzir usando a regra 29 (condStmt)
    DESTROYHEAD  reduzir usando a regra 29 (condStmt)
    IF           reduzir usando a regra 29 (condStmt)
    FOR          reduzir usando a regra 29 (condStmt)
    READ         reduzir usando a regra 29 (condStmt)
    WRITE        reduzir usando a regra 29 (condStmt)
    WRITELN      reduzir usando a regra 29 (condStmt)
    RETURN       reduzir usando a regra 29 (condStmt)
    STFUNC       reduzir usando a regra 29 (condStmt)
    ENDFUNC      reduzir usando a regra 29 (condStmt)
    PARENL       reduzir usando a regra 29 (condStmt)


Estado 153

   47 assignExp: ID • ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 224


Estado 154

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 156


Estado 155

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 157


Estado 156

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 39
    FOR          deslocar, e ir ao estado 40
    READ         deslocar, e ir ao estado 41
    WRITE        deslocar, e ir ao estado 42
    WRITELN      deslocar, e ir ao estado 43
    RETURN       deslocar, e ir ao estado 44
    STFUNC       deslocar, e ir ao estado 161
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 46
    simpleVarDeclaration  ir ao estado 162
    compoundStmt          ir ao estado 47
    primitiveStmt         ir ao estado 158
    exprStmt              ir ao estado 50
    condStmt              ir ao estado 51
    iterStmt              ir ao estado 52
    returnStmt            ir ao estado 53
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 60
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 64
    outOp                 ir ao estado 65
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 157

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 39
    FOR          deslocar, e ir ao estado 40
    READ         deslocar, e ir ao estado 41
    WRITE        deslocar, e ir ao estado 42
    WRITELN      deslocar, e ir ao estado 43
    RETURN       deslocar, e ir ao estado 44
    STFUNC       deslocar, e ir ao estado 161
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 46
    simpleVarDeclaration  ir ao estado 162
    compoundStmt          ir ao estado 47
    primitiveStmt         ir ao estado 159
    exprStmt              ir ao estado 50
    condStmt              ir ao estado 51
    iterStmt              ir ao estado 52
    returnStmt            ir ao estado 53
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 60
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 64
    outOp                 ir ao estado 65
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 158

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)


Estado 159

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 31 (iterStmt)
    TYPE         reduzir usando a regra 31 (iterStmt)
    NIL          reduzir usando a regra 31 (iterStmt)
    INTEGER      reduzir usando a regra 31 (iterStmt)
    DECIMAL      reduzir usando a regra 31 (iterStmt)
    ADD          reduzir usando a regra 31 (iterStmt)
    SUB          reduzir usando a regra 31 (iterStmt)
    HEADLIST     reduzir usando a regra 31 (iterStmt)
    TAILLIST     reduzir usando a regra 31 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 31 (iterStmt)
    IF           reduzir usando a regra 31 (iterStmt)
    FOR          reduzir usando a regra 31 (iterStmt)
    READ         reduzir usando a regra 31 (iterStmt)
    WRITE        reduzir usando a regra 31 (iterStmt)
    WRITELN      reduzir usando a regra 31 (iterStmt)
    RETURN       reduzir usando a regra 31 (iterStmt)
    STFUNC       reduzir usando a regra 31 (iterStmt)
    ENDFUNC      reduzir usando a regra 31 (iterStmt)
    PARENL       reduzir usando a regra 31 (iterStmt)


Estado 160

   11 simpleVarDeclaration: TYPE • ID
   12                     | TYPE • LISTTYPE ID

    ID        deslocar, e ir ao estado 225
    LISTTYPE  deslocar, e ir ao estado 226


Estado 161

   16 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 39
    FOR          deslocar, e ir ao estado 40
    READ         deslocar, e ir ao estado 41
    WRITE        deslocar, e ir ao estado 42
    WRITELN      deslocar, e ir ao estado 43
    RETURN       deslocar, e ir ao estado 44
    STFUNC       deslocar, e ir ao estado 161
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 46
    simpleVarDeclaration  ir ao estado 162
    compoundStmt          ir ao estado 47
    stmtList              ir ao estado 227
    primitiveStmt         ir ao estado 49
    exprStmt              ir ao estado 50
    condStmt              ir ao estado 51
    iterStmt              ir ao estado 52
    returnStmt            ir ao estado 53
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 60
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 64
    outOp                 ir ao estado 65
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 162

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 228


Estado 163

   51 constOp: NIL •

    ADD        reduzir usando a regra 51 (constOp)
    SUB        reduzir usando a regra 51 (constOp)
    MULT       reduzir usando a regra 51 (constOp)
    DIV        reduzir usando a regra 51 (constOp)
    OR         reduzir usando a regra 51 (constOp)
    AND        reduzir usando a regra 51 (constOp)
    SMALLER    reduzir usando a regra 51 (constOp)
    GREATER    reduzir usando a regra 51 (constOp)
    SMALLEQ    reduzir usando a regra 51 (constOp)
    GREATEQ    reduzir usando a regra 51 (constOp)
    EQUALS     reduzir usando a regra 51 (constOp)
    DIFFERENT  reduzir usando a regra 51 (constOp)
    PARENR     reduzir usando a regra 51 (constOp)


Estado 164

   49 constOp: INTEGER •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 165

   50 constOp: DECIMAL •

    ADD        reduzir usando a regra 50 (constOp)
    SUB        reduzir usando a regra 50 (constOp)
    MULT       reduzir usando a regra 50 (constOp)
    DIV        reduzir usando a regra 50 (constOp)
    OR         reduzir usando a regra 50 (constOp)
    AND        reduzir usando a regra 50 (constOp)
    SMALLER    reduzir usando a regra 50 (constOp)
    GREATER    reduzir usando a regra 50 (constOp)
    SMALLEQ    reduzir usando a regra 50 (constOp)
    GREATEQ    reduzir usando a regra 50 (constOp)
    EQUALS     reduzir usando a regra 50 (constOp)
    DIFFERENT  reduzir usando a regra 50 (constOp)
    PARENR     reduzir usando a regra 50 (constOp)


Estado 166

   81 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 88
    NIL      deslocar, e ir ao estado 163
    INTEGER  deslocar, e ir ao estado 164
    DECIMAL  deslocar, e ir ao estado 165
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 166

    simpleExp      ir ao estado 229
    constOp        ir ao estado 167
    binLogicalExp  ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 167

   82 factor: constOp •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 168

   48 simpleExp: binLogicalExp •
   58 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   deslocar, e ir ao estado 94
    AND  deslocar, e ir ao estado 95

    PARENR  reduzir usando a regra 48 (simpleExp)

    binLogicalOp  ir ao estado 230


Estado 169

   59 binLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 97
    GREATER    deslocar, e ir ao estado 98
    SMALLEQ    deslocar, e ir ao estado 99
    GREATEQ    deslocar, e ir ao estado 100
    EQUALS     deslocar, e ir ao estado 101
    DIFFERENT  deslocar, e ir ao estado 102

    OR      reduzir usando a regra 59 (binLogicalExp)
    AND     reduzir usando a regra 59 (binLogicalExp)
    PARENR  reduzir usando a regra 59 (binLogicalExp)

    relationalOp  ir ao estado 231


Estado 170

   63 relationalExp: sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 175
    SUB  deslocar, e ir ao estado 176

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 232


Estado 171

   76 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 88
    NIL      deslocar, e ir ao estado 163
    INTEGER  deslocar, e ir ao estado 164
    DECIMAL  deslocar, e ir ao estado 165
    PARENL   deslocar, e ir ao estado 166

    constOp  ir ao estado 167
    factor   ir ao estado 233
    fCall    ir ao estado 174


Estado 172

   71 sumExp: mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 106
    DIV   deslocar, e ir ao estado 107

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 234


Estado 173

   75 mulExp: factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 174

   80 factor: fCall •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 175

   72 sumOp: ADD •

    ID       reduzir usando a regra 72 (sumOp)
    NIL      reduzir usando a regra 72 (sumOp)
    INTEGER  reduzir usando a regra 72 (sumOp)
    DECIMAL  reduzir usando a regra 72 (sumOp)
    ADD      reduzir usando a regra 72 (sumOp)
    SUB      reduzir usando a regra 72 (sumOp)
    PARENL   reduzir usando a regra 72 (sumOp)


Estado 176

   73 sumOp: SUB •

    ID       reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    ADD      reduzir usando a regra 73 (sumOp)
    SUB      reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 177

   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 80

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    SEMIC      reduzir usando a regra 79 (factor)


Estado 178

   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 235

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    COMMA      reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 179

   51 constOp: NIL •

    ADD        reduzir usando a regra 51 (constOp)
    SUB        reduzir usando a regra 51 (constOp)
    MULT       reduzir usando a regra 51 (constOp)
    DIV        reduzir usando a regra 51 (constOp)
    OR         reduzir usando a regra 51 (constOp)
    AND        reduzir usando a regra 51 (constOp)
    SMALLER    reduzir usando a regra 51 (constOp)
    GREATER    reduzir usando a regra 51 (constOp)
    SMALLEQ    reduzir usando a regra 51 (constOp)
    GREATEQ    reduzir usando a regra 51 (constOp)
    EQUALS     reduzir usando a regra 51 (constOp)
    DIFFERENT  reduzir usando a regra 51 (constOp)
    COMMA      reduzir usando a regra 51 (constOp)
    PARENR     reduzir usando a regra 51 (constOp)


Estado 180

   49 constOp: INTEGER •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    COMMA      reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 181

   50 constOp: DECIMAL •

    ADD        reduzir usando a regra 50 (constOp)
    SUB        reduzir usando a regra 50 (constOp)
    MULT       reduzir usando a regra 50 (constOp)
    DIV        reduzir usando a regra 50 (constOp)
    OR         reduzir usando a regra 50 (constOp)
    AND        reduzir usando a regra 50 (constOp)
    SMALLER    reduzir usando a regra 50 (constOp)
    GREATER    reduzir usando a regra 50 (constOp)
    SMALLEQ    reduzir usando a regra 50 (constOp)
    GREATEQ    reduzir usando a regra 50 (constOp)
    EQUALS     reduzir usando a regra 50 (constOp)
    DIFFERENT  reduzir usando a regra 50 (constOp)
    COMMA      reduzir usando a regra 50 (constOp)
    PARENR     reduzir usando a regra 50 (constOp)


Estado 182

   81 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 88
    NIL      deslocar, e ir ao estado 163
    INTEGER  deslocar, e ir ao estado 164
    DECIMAL  deslocar, e ir ao estado 165
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 166

    simpleExp      ir ao estado 236
    constOp        ir ao estado 167
    binLogicalExp  ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 183

   82 factor: constOp •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    COMMA      reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 184

   48 simpleExp: binLogicalExp •
   58 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   deslocar, e ir ao estado 94
    AND  deslocar, e ir ao estado 95

    COMMA   reduzir usando a regra 48 (simpleExp)
    PARENR  reduzir usando a regra 48 (simpleExp)

    binLogicalOp  ir ao estado 237


Estado 185

   59 binLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 97
    GREATER    deslocar, e ir ao estado 98
    SMALLEQ    deslocar, e ir ao estado 99
    GREATEQ    deslocar, e ir ao estado 100
    EQUALS     deslocar, e ir ao estado 101
    DIFFERENT  deslocar, e ir ao estado 102

    OR      reduzir usando a regra 59 (binLogicalExp)
    AND     reduzir usando a regra 59 (binLogicalExp)
    COMMA   reduzir usando a regra 59 (binLogicalExp)
    PARENR  reduzir usando a regra 59 (binLogicalExp)

    relationalOp  ir ao estado 238


Estado 186

   63 relationalExp: sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 175
    SUB  deslocar, e ir ao estado 176

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    COMMA      reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 239


Estado 187

   76 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 179
    INTEGER  deslocar, e ir ao estado 180
    DECIMAL  deslocar, e ir ao estado 181
    PARENL   deslocar, e ir ao estado 182

    constOp  ir ao estado 183
    factor   ir ao estado 240
    fCall    ir ao estado 190


Estado 188

   71 sumExp: mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 106
    DIV   deslocar, e ir ao estado 107

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    COMMA      reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 241


Estado 189

   75 mulExp: factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    COMMA      reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 190

   80 factor: fCall •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    COMMA      reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 191

   41 destroyHeadOps: DESTROYHEAD • ID

    ID  deslocar, e ir ao estado 242


Estado 192

   33 listExp: appendOps •

    PARENR  reduzir usando a regra 33 (listExp)


Estado 193

   34 listExp: returnListOps •

    PARENR  reduzir usando a regra 34 (listExp)


Estado 194

   38 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 243


Estado 195

   35 listExp: destroyHeadOps •

    PARENR  reduzir usando a regra 35 (listExp)


Estado 196

   36 listExp: mapFilterOps •

    PARENR  reduzir usando a regra 36 (listExp)


Estado 197

   83 fCall: ID PARENL • callParams PARENR
   84      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 179
    INTEGER  deslocar, e ir ao estado 180
    DECIMAL  deslocar, e ir ao estado 181
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 182
    PARENR   deslocar, e ir ao estado 244

    simpleExp      ir ao estado 115
    constOp        ir ao estado 183
    binLogicalExp  ir ao estado 184
    relationalExp  ir ao estado 185
    sumExp         ir ao estado 186
    sumOp          ir ao estado 187
    mulExp         ir ao estado 188
    factor         ir ao estado 189
    fCall          ir ao estado 190
    callParams     ir ao estado 245


Estado 198

   64 relationalOp: SMALLER •

    OR     reduzir usando a regra 64 (relationalOp)
    AND    reduzir usando a regra 64 (relationalOp)
    SEMIC  reduzir usando a regra 64 (relationalOp)


Estado 199

   65 relationalOp: GREATER •

    OR     reduzir usando a regra 65 (relationalOp)
    AND    reduzir usando a regra 65 (relationalOp)
    SEMIC  reduzir usando a regra 65 (relationalOp)


Estado 200

   66 relationalOp: SMALLEQ •

    OR     reduzir usando a regra 66 (relationalOp)
    AND    reduzir usando a regra 66 (relationalOp)
    SEMIC  reduzir usando a regra 66 (relationalOp)


Estado 201

   67 relationalOp: GREATEQ •

    OR     reduzir usando a regra 67 (relationalOp)
    AND    reduzir usando a regra 67 (relationalOp)
    SEMIC  reduzir usando a regra 67 (relationalOp)


Estado 202

   68 relationalOp: EQUALS •

    OR     reduzir usando a regra 68 (relationalOp)
    AND    reduzir usando a regra 68 (relationalOp)
    SEMIC  reduzir usando a regra 68 (relationalOp)


Estado 203

   69 relationalOp: DIFFERENT •

    OR     reduzir usando a regra 69 (relationalOp)
    AND    reduzir usando a regra 69 (relationalOp)
    SEMIC  reduzir usando a regra 69 (relationalOp)


Estado 204

   37 appendOps: ID APPEND • ID

    ID  deslocar, e ir ao estado 246


Estado 205

   43 mapFilterOps: ID FILTER • ID

    ID  deslocar, e ir ao estado 247


Estado 206

   42 mapFilterOps: ID MAP • ID

    ID  deslocar, e ir ao estado 248


Estado 207

   28 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   29         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 249


Estado 208

   30 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   31         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 250


Estado 209

   52 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 251


Estado 210

   53 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 252


Estado 211

   54 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 253


Estado 212

   32 returnStmt: RETURN • expression SEMIC

    ID           deslocar, e ir ao estado 30
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    PARENL       deslocar, e ir ao estado 45

    listExp         ir ao estado 54
    appendOps       ir ao estado 55
    returnListOps   ir ao estado 56
    returnListOp    ir ao estado 57
    destroyHeadOps  ir ao estado 58
    mapFilterOps    ir ao estado 59
    expression      ir ao estado 254
    assignExp       ir ao estado 61
    simpleExp       ir ao estado 62
    constOp         ir ao estado 63
    binLogicalExp   ir ao estado 66
    relationalExp   ir ao estado 67
    sumExp          ir ao estado 68
    sumOp           ir ao estado 69
    mulExp          ir ao estado 70
    factor          ir ao estado 71
    fCall           ir ao estado 72


Estado 213

   16 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 39
    FOR          deslocar, e ir ao estado 40
    READ         deslocar, e ir ao estado 41
    WRITE        deslocar, e ir ao estado 42
    WRITELN      deslocar, e ir ao estado 43
    RETURN       deslocar, e ir ao estado 44
    STFUNC       deslocar, e ir ao estado 161
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 46
    simpleVarDeclaration  ir ao estado 162
    compoundStmt          ir ao estado 47
    stmtList              ir ao estado 255
    primitiveStmt         ir ao estado 49
    exprStmt              ir ao estado 50
    condStmt              ir ao estado 51
    iterStmt              ir ao estado 52
    returnStmt            ir ao estado 53
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 60
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 64
    outOp                 ir ao estado 65
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 214

   26 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 26 (primitiveStmt)
    TYPE         reduzir usando a regra 26 (primitiveStmt)
    NIL          reduzir usando a regra 26 (primitiveStmt)
    INTEGER      reduzir usando a regra 26 (primitiveStmt)
    DECIMAL      reduzir usando a regra 26 (primitiveStmt)
    ADD          reduzir usando a regra 26 (primitiveStmt)
    SUB          reduzir usando a regra 26 (primitiveStmt)
    HEADLIST     reduzir usando a regra 26 (primitiveStmt)
    TAILLIST     reduzir usando a regra 26 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 26 (primitiveStmt)
    ELSE         reduzir usando a regra 26 (primitiveStmt)
    IF           reduzir usando a regra 26 (primitiveStmt)
    FOR          reduzir usando a regra 26 (primitiveStmt)
    READ         reduzir usando a regra 26 (primitiveStmt)
    WRITE        reduzir usando a regra 26 (primitiveStmt)
    WRITELN      reduzir usando a regra 26 (primitiveStmt)
    RETURN       reduzir usando a regra 26 (primitiveStmt)
    STFUNC       reduzir usando a regra 26 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 26 (primitiveStmt)
    PARENL       reduzir usando a regra 26 (primitiveStmt)


Estado 215

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 256


Estado 216

   20 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    ELSE         reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 217

   19 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    ELSE         reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 218

   21 primitiveStmt: condStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    ELSE         reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 219

   22 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    ELSE         reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 220

   23 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    ELSE         reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 221

   27 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 257


Estado 222

   24 primitiveStmt: inOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    ELSE         reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 223

   25 primitiveStmt: outOp •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    ELSE         reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 224

   47 assignExp: ID ASSIGN • expression

    ID           deslocar, e ir ao estado 258
    NIL          deslocar, e ir ao estado 163
    INTEGER      deslocar, e ir ao estado 164
    DECIMAL      deslocar, e ir ao estado 165
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 191
    PARENL       deslocar, e ir ao estado 166

    listExp         ir ao estado 259
    appendOps       ir ao estado 192
    returnListOps   ir ao estado 193
    returnListOp    ir ao estado 194
    destroyHeadOps  ir ao estado 195
    mapFilterOps    ir ao estado 196
    expression      ir ao estado 260
    assignExp       ir ao estado 261
    simpleExp       ir ao estado 262
    constOp         ir ao estado 167
    binLogicalExp   ir ao estado 168
    relationalExp   ir ao estado 169
    sumExp          ir ao estado 170
    sumOp           ir ao estado 171
    mulExp          ir ao estado 172
    factor          ir ao estado 173
    fCall           ir ao estado 174


Estado 225

   11 simpleVarDeclaration: TYPE ID •

    SEMIC  reduzir usando a regra 11 (simpleVarDeclaration)


Estado 226

   12 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  deslocar, e ir ao estado 263


Estado 227

   16 compoundStmt: STFUNC stmtList • ENDFUNC
   17 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 39
    FOR          deslocar, e ir ao estado 40
    READ         deslocar, e ir ao estado 41
    WRITE        deslocar, e ir ao estado 42
    WRITELN      deslocar, e ir ao estado 43
    RETURN       deslocar, e ir ao estado 44
    STFUNC       deslocar, e ir ao estado 161
    ENDFUNC      deslocar, e ir ao estado 264
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 46
    simpleVarDeclaration  ir ao estado 162
    compoundStmt          ir ao estado 47
    primitiveStmt         ir ao estado 91
    exprStmt              ir ao estado 50
    condStmt              ir ao estado 51
    iterStmt              ir ao estado 52
    returnStmt            ir ao estado 53
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 60
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 64
    outOp                 ir ao estado 65
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 228

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 229

   81 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 265


Estado 230

   58 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    deslocar, e ir ao estado 266
    GREATER    deslocar, e ir ao estado 267
    SMALLEQ    deslocar, e ir ao estado 268
    GREATEQ    deslocar, e ir ao estado 269
    EQUALS     deslocar, e ir ao estado 270
    DIFFERENT  deslocar, e ir ao estado 271

    relationalOp  ir ao estado 272


Estado 231

   62 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 88
    NIL      deslocar, e ir ao estado 163
    INTEGER  deslocar, e ir ao estado 164
    DECIMAL  deslocar, e ir ao estado 165
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 166

    constOp  ir ao estado 167
    sumExp   ir ao estado 273
    sumOp    ir ao estado 171
    mulExp   ir ao estado 172
    factor   ir ao estado 173
    fCall    ir ao estado 174


Estado 232

   70 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 88
    NIL      deslocar, e ir ao estado 163
    INTEGER  deslocar, e ir ao estado 164
    DECIMAL  deslocar, e ir ao estado 165
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 166

    constOp  ir ao estado 167
    sumOp    ir ao estado 171
    mulExp   ir ao estado 274
    factor   ir ao estado 173
    fCall    ir ao estado 174


Estado 233

   76 mulExp: sumOp factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 234

   74 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 88
    NIL      deslocar, e ir ao estado 163
    INTEGER  deslocar, e ir ao estado 164
    DECIMAL  deslocar, e ir ao estado 165
    PARENL   deslocar, e ir ao estado 166

    constOp  ir ao estado 167
    factor   ir ao estado 275
    fCall    ir ao estado 174


Estado 235

   83 fCall: ID PARENL • callParams PARENR
   84      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 179
    INTEGER  deslocar, e ir ao estado 180
    DECIMAL  deslocar, e ir ao estado 181
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 182
    PARENR   deslocar, e ir ao estado 276

    simpleExp      ir ao estado 115
    constOp        ir ao estado 183
    binLogicalExp  ir ao estado 184
    relationalExp  ir ao estado 185
    sumExp         ir ao estado 186
    sumOp          ir ao estado 187
    mulExp         ir ao estado 188
    factor         ir ao estado 189
    fCall          ir ao estado 190
    callParams     ir ao estado 277


Estado 236

   81 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 278


Estado 237

   58 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    deslocar, e ir ao estado 279
    GREATER    deslocar, e ir ao estado 280
    SMALLEQ    deslocar, e ir ao estado 281
    GREATEQ    deslocar, e ir ao estado 282
    EQUALS     deslocar, e ir ao estado 283
    DIFFERENT  deslocar, e ir ao estado 284

    relationalOp  ir ao estado 285


Estado 238

   62 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 179
    INTEGER  deslocar, e ir ao estado 180
    DECIMAL  deslocar, e ir ao estado 181
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 182

    constOp  ir ao estado 183
    sumExp   ir ao estado 286
    sumOp    ir ao estado 187
    mulExp   ir ao estado 188
    factor   ir ao estado 189
    fCall    ir ao estado 190


Estado 239

   70 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 179
    INTEGER  deslocar, e ir ao estado 180
    DECIMAL  deslocar, e ir ao estado 181
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 182

    constOp  ir ao estado 183
    sumOp    ir ao estado 187
    mulExp   ir ao estado 287
    factor   ir ao estado 189
    fCall    ir ao estado 190


Estado 240

   76 mulExp: sumOp factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    COMMA      reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 241

   74 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 179
    INTEGER  deslocar, e ir ao estado 180
    DECIMAL  deslocar, e ir ao estado 181
    PARENL   deslocar, e ir ao estado 182

    constOp  ir ao estado 183
    factor   ir ao estado 288
    fCall    ir ao estado 190


Estado 242

   41 destroyHeadOps: DESTROYHEAD ID •

    PARENR  reduzir usando a regra 41 (destroyHeadOps)


Estado 243

   38 returnListOps: returnListOp ID •

    PARENR  reduzir usando a regra 38 (returnListOps)


Estado 244

   84 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 245

   83 fCall: ID PARENL callParams • PARENR
   85 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 134
    PARENR  deslocar, e ir ao estado 289


Estado 246

   37 appendOps: ID APPEND ID •

    PARENR  reduzir usando a regra 37 (appendOps)


Estado 247

   43 mapFilterOps: ID FILTER ID •

    PARENR  reduzir usando a regra 43 (mapFilterOps)


Estado 248

   42 mapFilterOps: ID MAP ID •

    PARENR  reduzir usando a regra 42 (mapFilterOps)


Estado 249

   28 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   29         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 88
    NIL      deslocar, e ir ao estado 163
    INTEGER  deslocar, e ir ao estado 164
    DECIMAL  deslocar, e ir ao estado 165
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 166

    simpleExp      ir ao estado 290
    constOp        ir ao estado 167
    binLogicalExp  ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 250

   30 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   31         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 118
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 45

    assignExp      ir ao estado 291
    simpleExp      ir ao estado 292
    constOp        ir ao estado 63
    binLogicalExp  ir ao estado 66
    relationalExp  ir ao estado 67
    sumExp         ir ao estado 68
    sumOp          ir ao estado 69
    mulExp         ir ao estado 70
    factor         ir ao estado 71
    fCall          ir ao estado 72


Estado 251

   52 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 293


Estado 252

   53 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID           deslocar, e ir ao estado 122
    STRING       deslocar, e ir ao estado 123
    NIL          deslocar, e ir ao estado 163
    INTEGER      deslocar, e ir ao estado 164
    DECIMAL      deslocar, e ir ao estado 165
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 191
    PARENL       deslocar, e ir ao estado 166

    listExp         ir ao estado 124
    appendOps       ir ao estado 192
    returnListOps   ir ao estado 193
    returnListOp    ir ao estado 194
    destroyHeadOps  ir ao estado 195
    mapFilterOps    ir ao estado 196
    simpleExp       ir ao estado 125
    constOp         ir ao estado 167
    outConst        ir ao estado 294
    binLogicalExp   ir ao estado 168
    relationalExp   ir ao estado 169
    sumExp          ir ao estado 170
    sumOp           ir ao estado 171
    mulExp          ir ao estado 172
    factor          ir ao estado 173
    fCall           ir ao estado 174


Estado 253

   54 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID           deslocar, e ir ao estado 122
    STRING       deslocar, e ir ao estado 123
    NIL          deslocar, e ir ao estado 163
    INTEGER      deslocar, e ir ao estado 164
    DECIMAL      deslocar, e ir ao estado 165
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 191
    PARENL       deslocar, e ir ao estado 166

    listExp         ir ao estado 124
    appendOps       ir ao estado 192
    returnListOps   ir ao estado 193
    returnListOp    ir ao estado 194
    destroyHeadOps  ir ao estado 195
    mapFilterOps    ir ao estado 196
    simpleExp       ir ao estado 125
    constOp         ir ao estado 167
    outConst        ir ao estado 295
    binLogicalExp   ir ao estado 168
    relationalExp   ir ao estado 169
    sumExp          ir ao estado 170
    sumOp           ir ao estado 171
    mulExp          ir ao estado 172
    factor          ir ao estado 173
    fCall           ir ao estado 174


Estado 254

   32 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 296


Estado 255

   16 compoundStmt: STFUNC stmtList • ENDFUNC
   17 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 39
    FOR          deslocar, e ir ao estado 40
    READ         deslocar, e ir ao estado 41
    WRITE        deslocar, e ir ao estado 42
    WRITELN      deslocar, e ir ao estado 43
    RETURN       deslocar, e ir ao estado 44
    STFUNC       deslocar, e ir ao estado 161
    ENDFUNC      deslocar, e ir ao estado 297
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 46
    simpleVarDeclaration  ir ao estado 162
    compoundStmt          ir ao estado 47
    primitiveStmt         ir ao estado 91
    exprStmt              ir ao estado 50
    condStmt              ir ao estado 51
    iterStmt              ir ao estado 52
    returnStmt            ir ao estado 53
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 60
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 64
    outOp                 ir ao estado 65
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 256

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    ELSE         reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 257

   27 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 27 (exprStmt)
    TYPE         reduzir usando a regra 27 (exprStmt)
    NIL          reduzir usando a regra 27 (exprStmt)
    INTEGER      reduzir usando a regra 27 (exprStmt)
    DECIMAL      reduzir usando a regra 27 (exprStmt)
    ADD          reduzir usando a regra 27 (exprStmt)
    SUB          reduzir usando a regra 27 (exprStmt)
    HEADLIST     reduzir usando a regra 27 (exprStmt)
    TAILLIST     reduzir usando a regra 27 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 27 (exprStmt)
    ELSE         reduzir usando a regra 27 (exprStmt)
    IF           reduzir usando a regra 27 (exprStmt)
    FOR          reduzir usando a regra 27 (exprStmt)
    READ         reduzir usando a regra 27 (exprStmt)
    WRITE        reduzir usando a regra 27 (exprStmt)
    WRITELN      reduzir usando a regra 27 (exprStmt)
    RETURN       reduzir usando a regra 27 (exprStmt)
    STFUNC       reduzir usando a regra 27 (exprStmt)
    ENDFUNC      reduzir usando a regra 27 (exprStmt)
    PARENL       reduzir usando a regra 27 (exprStmt)


Estado 258

   37 appendOps: ID • APPEND ID
   42 mapFilterOps: ID • MAP ID
   43             | ID • FILTER ID
   47 assignExp: ID • ASSIGN expression
   79 factor: ID •
   83 fCall: ID • PARENL callParams PARENR
   84      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 204
    FILTER  deslocar, e ir ao estado 205
    ASSIGN  deslocar, e ir ao estado 224
    MAP     deslocar, e ir ao estado 206
    PARENL  deslocar, e ir ao estado 197

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 259

   46 expression: listExp •

    PARENR  reduzir usando a regra 46 (expression)


Estado 260

   47 assignExp: ID ASSIGN expression •

    PARENR  reduzir usando a regra 47 (assignExp)


Estado 261

   44 expression: assignExp •

    PARENR  reduzir usando a regra 44 (expression)


Estado 262

   45 expression: simpleExp •

    PARENR  reduzir usando a regra 45 (expression)


Estado 263

   12 simpleVarDeclaration: TYPE LISTTYPE ID •

    SEMIC  reduzir usando a regra 12 (simpleVarDeclaration)


Estado 264

   16 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 16 (compoundStmt)
    TYPE         reduzir usando a regra 16 (compoundStmt)
    NIL          reduzir usando a regra 16 (compoundStmt)
    INTEGER      reduzir usando a regra 16 (compoundStmt)
    DECIMAL      reduzir usando a regra 16 (compoundStmt)
    ADD          reduzir usando a regra 16 (compoundStmt)
    SUB          reduzir usando a regra 16 (compoundStmt)
    HEADLIST     reduzir usando a regra 16 (compoundStmt)
    TAILLIST     reduzir usando a regra 16 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 16 (compoundStmt)
    IF           reduzir usando a regra 16 (compoundStmt)
    FOR          reduzir usando a regra 16 (compoundStmt)
    READ         reduzir usando a regra 16 (compoundStmt)
    WRITE        reduzir usando a regra 16 (compoundStmt)
    WRITELN      reduzir usando a regra 16 (compoundStmt)
    RETURN       reduzir usando a regra 16 (compoundStmt)
    STFUNC       reduzir usando a regra 16 (compoundStmt)
    ENDFUNC      reduzir usando a regra 16 (compoundStmt)
    PARENL       reduzir usando a regra 16 (compoundStmt)


Estado 265

   81 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 266

   64 relationalOp: SMALLER •

    OR      reduzir usando a regra 64 (relationalOp)
    AND     reduzir usando a regra 64 (relationalOp)
    PARENR  reduzir usando a regra 64 (relationalOp)


Estado 267

   65 relationalOp: GREATER •

    OR      reduzir usando a regra 65 (relationalOp)
    AND     reduzir usando a regra 65 (relationalOp)
    PARENR  reduzir usando a regra 65 (relationalOp)


Estado 268

   66 relationalOp: SMALLEQ •

    OR      reduzir usando a regra 66 (relationalOp)
    AND     reduzir usando a regra 66 (relationalOp)
    PARENR  reduzir usando a regra 66 (relationalOp)


Estado 269

   67 relationalOp: GREATEQ •

    OR      reduzir usando a regra 67 (relationalOp)
    AND     reduzir usando a regra 67 (relationalOp)
    PARENR  reduzir usando a regra 67 (relationalOp)


Estado 270

   68 relationalOp: EQUALS •

    OR      reduzir usando a regra 68 (relationalOp)
    AND     reduzir usando a regra 68 (relationalOp)
    PARENR  reduzir usando a regra 68 (relationalOp)


Estado 271

   69 relationalOp: DIFFERENT •

    OR      reduzir usando a regra 69 (relationalOp)
    AND     reduzir usando a regra 69 (relationalOp)
    PARENR  reduzir usando a regra 69 (relationalOp)


Estado 272

   58 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduzir usando a regra 58 (binLogicalExp)
    AND     reduzir usando a regra 58 (binLogicalExp)
    PARENR  reduzir usando a regra 58 (binLogicalExp)


Estado 273

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 175
    SUB  deslocar, e ir ao estado 176

    OR         reduzir usando a regra 62 (relationalExp)
    AND        reduzir usando a regra 62 (relationalExp)
    SMALLER    reduzir usando a regra 62 (relationalExp)
    GREATER    reduzir usando a regra 62 (relationalExp)
    SMALLEQ    reduzir usando a regra 62 (relationalExp)
    GREATEQ    reduzir usando a regra 62 (relationalExp)
    EQUALS     reduzir usando a regra 62 (relationalExp)
    DIFFERENT  reduzir usando a regra 62 (relationalExp)
    PARENR     reduzir usando a regra 62 (relationalExp)

    sumOp  ir ao estado 232


Estado 274

   70 sumExp: sumExp sumOp mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 106
    DIV   deslocar, e ir ao estado 107

    ADD        reduzir usando a regra 70 (sumExp)
    SUB        reduzir usando a regra 70 (sumExp)
    OR         reduzir usando a regra 70 (sumExp)
    AND        reduzir usando a regra 70 (sumExp)
    SMALLER    reduzir usando a regra 70 (sumExp)
    GREATER    reduzir usando a regra 70 (sumExp)
    SMALLEQ    reduzir usando a regra 70 (sumExp)
    GREATEQ    reduzir usando a regra 70 (sumExp)
    EQUALS     reduzir usando a regra 70 (sumExp)
    DIFFERENT  reduzir usando a regra 70 (sumExp)
    PARENR     reduzir usando a regra 70 (sumExp)

    mulOp  ir ao estado 234


Estado 275

   74 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    PARENR     reduzir usando a regra 74 (mulExp)


Estado 276

   84 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    COMMA      reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 277

   83 fCall: ID PARENL callParams • PARENR
   85 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 134
    PARENR  deslocar, e ir ao estado 298


Estado 278

   81 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    COMMA      reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 279

   64 relationalOp: SMALLER •

    OR      reduzir usando a regra 64 (relationalOp)
    AND     reduzir usando a regra 64 (relationalOp)
    COMMA   reduzir usando a regra 64 (relationalOp)
    PARENR  reduzir usando a regra 64 (relationalOp)


Estado 280

   65 relationalOp: GREATER •

    OR      reduzir usando a regra 65 (relationalOp)
    AND     reduzir usando a regra 65 (relationalOp)
    COMMA   reduzir usando a regra 65 (relationalOp)
    PARENR  reduzir usando a regra 65 (relationalOp)


Estado 281

   66 relationalOp: SMALLEQ •

    OR      reduzir usando a regra 66 (relationalOp)
    AND     reduzir usando a regra 66 (relationalOp)
    COMMA   reduzir usando a regra 66 (relationalOp)
    PARENR  reduzir usando a regra 66 (relationalOp)


Estado 282

   67 relationalOp: GREATEQ •

    OR      reduzir usando a regra 67 (relationalOp)
    AND     reduzir usando a regra 67 (relationalOp)
    COMMA   reduzir usando a regra 67 (relationalOp)
    PARENR  reduzir usando a regra 67 (relationalOp)


Estado 283

   68 relationalOp: EQUALS •

    OR      reduzir usando a regra 68 (relationalOp)
    AND     reduzir usando a regra 68 (relationalOp)
    COMMA   reduzir usando a regra 68 (relationalOp)
    PARENR  reduzir usando a regra 68 (relationalOp)


Estado 284

   69 relationalOp: DIFFERENT •

    OR      reduzir usando a regra 69 (relationalOp)
    AND     reduzir usando a regra 69 (relationalOp)
    COMMA   reduzir usando a regra 69 (relationalOp)
    PARENR  reduzir usando a regra 69 (relationalOp)


Estado 285

   58 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduzir usando a regra 58 (binLogicalExp)
    AND     reduzir usando a regra 58 (binLogicalExp)
    COMMA   reduzir usando a regra 58 (binLogicalExp)
    PARENR  reduzir usando a regra 58 (binLogicalExp)


Estado 286

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 175
    SUB  deslocar, e ir ao estado 176

    OR         reduzir usando a regra 62 (relationalExp)
    AND        reduzir usando a regra 62 (relationalExp)
    SMALLER    reduzir usando a regra 62 (relationalExp)
    GREATER    reduzir usando a regra 62 (relationalExp)
    SMALLEQ    reduzir usando a regra 62 (relationalExp)
    GREATEQ    reduzir usando a regra 62 (relationalExp)
    EQUALS     reduzir usando a regra 62 (relationalExp)
    DIFFERENT  reduzir usando a regra 62 (relationalExp)
    COMMA      reduzir usando a regra 62 (relationalExp)
    PARENR     reduzir usando a regra 62 (relationalExp)

    sumOp  ir ao estado 239


Estado 287

   70 sumExp: sumExp sumOp mulExp •
   74 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 106
    DIV   deslocar, e ir ao estado 107

    ADD        reduzir usando a regra 70 (sumExp)
    SUB        reduzir usando a regra 70 (sumExp)
    OR         reduzir usando a regra 70 (sumExp)
    AND        reduzir usando a regra 70 (sumExp)
    SMALLER    reduzir usando a regra 70 (sumExp)
    GREATER    reduzir usando a regra 70 (sumExp)
    SMALLEQ    reduzir usando a regra 70 (sumExp)
    GREATEQ    reduzir usando a regra 70 (sumExp)
    EQUALS     reduzir usando a regra 70 (sumExp)
    DIFFERENT  reduzir usando a regra 70 (sumExp)
    COMMA      reduzir usando a regra 70 (sumExp)
    PARENR     reduzir usando a regra 70 (sumExp)

    mulOp  ir ao estado 241


Estado 288

   74 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    COMMA      reduzir usando a regra 74 (mulExp)
    PARENR     reduzir usando a regra 74 (mulExp)


Estado 289

   83 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 83 (fCall)
    SUB        reduzir usando a regra 83 (fCall)
    MULT       reduzir usando a regra 83 (fCall)
    DIV        reduzir usando a regra 83 (fCall)
    OR         reduzir usando a regra 83 (fCall)
    AND        reduzir usando a regra 83 (fCall)
    SMALLER    reduzir usando a regra 83 (fCall)
    GREATER    reduzir usando a regra 83 (fCall)
    SMALLEQ    reduzir usando a regra 83 (fCall)
    GREATEQ    reduzir usando a regra 83 (fCall)
    EQUALS     reduzir usando a regra 83 (fCall)
    DIFFERENT  reduzir usando a regra 83 (fCall)
    PARENR     reduzir usando a regra 83 (fCall)


Estado 290

   28 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   29         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 299


Estado 291

   30 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 300


Estado 292

   31 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 301


Estado 293

   52 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 302


Estado 294

   53 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 303


Estado 295

   54 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 304


Estado 296

   32 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 32 (returnStmt)
    TYPE         reduzir usando a regra 32 (returnStmt)
    NIL          reduzir usando a regra 32 (returnStmt)
    INTEGER      reduzir usando a regra 32 (returnStmt)
    DECIMAL      reduzir usando a regra 32 (returnStmt)
    ADD          reduzir usando a regra 32 (returnStmt)
    SUB          reduzir usando a regra 32 (returnStmt)
    HEADLIST     reduzir usando a regra 32 (returnStmt)
    TAILLIST     reduzir usando a regra 32 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 32 (returnStmt)
    ELSE         reduzir usando a regra 32 (returnStmt)
    IF           reduzir usando a regra 32 (returnStmt)
    FOR          reduzir usando a regra 32 (returnStmt)
    READ         reduzir usando a regra 32 (returnStmt)
    WRITE        reduzir usando a regra 32 (returnStmt)
    WRITELN      reduzir usando a regra 32 (returnStmt)
    RETURN       reduzir usando a regra 32 (returnStmt)
    STFUNC       reduzir usando a regra 32 (returnStmt)
    ENDFUNC      reduzir usando a regra 32 (returnStmt)
    PARENL       reduzir usando a regra 32 (returnStmt)


Estado 297

   16 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 16 (compoundStmt)
    TYPE         reduzir usando a regra 16 (compoundStmt)
    NIL          reduzir usando a regra 16 (compoundStmt)
    INTEGER      reduzir usando a regra 16 (compoundStmt)
    DECIMAL      reduzir usando a regra 16 (compoundStmt)
    ADD          reduzir usando a regra 16 (compoundStmt)
    SUB          reduzir usando a regra 16 (compoundStmt)
    HEADLIST     reduzir usando a regra 16 (compoundStmt)
    TAILLIST     reduzir usando a regra 16 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 16 (compoundStmt)
    ELSE         reduzir usando a regra 16 (compoundStmt)
    IF           reduzir usando a regra 16 (compoundStmt)
    FOR          reduzir usando a regra 16 (compoundStmt)
    READ         reduzir usando a regra 16 (compoundStmt)
    WRITE        reduzir usando a regra 16 (compoundStmt)
    WRITELN      reduzir usando a regra 16 (compoundStmt)
    RETURN       reduzir usando a regra 16 (compoundStmt)
    STFUNC       reduzir usando a regra 16 (compoundStmt)
    ENDFUNC      reduzir usando a regra 16 (compoundStmt)
    PARENL       reduzir usando a regra 16 (compoundStmt)


Estado 298

   83 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 83 (fCall)
    SUB        reduzir usando a regra 83 (fCall)
    MULT       reduzir usando a regra 83 (fCall)
    DIV        reduzir usando a regra 83 (fCall)
    OR         reduzir usando a regra 83 (fCall)
    AND        reduzir usando a regra 83 (fCall)
    SMALLER    reduzir usando a regra 83 (fCall)
    GREATER    reduzir usando a regra 83 (fCall)
    SMALLEQ    reduzir usando a regra 83 (fCall)
    GREATEQ    reduzir usando a regra 83 (fCall)
    EQUALS     reduzir usando a regra 83 (fCall)
    DIFFERENT  reduzir usando a regra 83 (fCall)
    COMMA      reduzir usando a regra 83 (fCall)
    PARENR     reduzir usando a regra 83 (fCall)


Estado 299

   28 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   29         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 207
    FOR          deslocar, e ir ao estado 208
    READ         deslocar, e ir ao estado 209
    WRITE        deslocar, e ir ao estado 210
    WRITELN      deslocar, e ir ao estado 211
    RETURN       deslocar, e ir ao estado 212
    STFUNC       deslocar, e ir ao estado 213
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 214
    simpleVarDeclaration  ir ao estado 215
    compoundStmt          ir ao estado 216
    primitiveStmt         ir ao estado 305
    exprStmt              ir ao estado 217
    condStmt              ir ao estado 218
    iterStmt              ir ao estado 219
    returnStmt            ir ao estado 220
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 221
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 222
    outOp                 ir ao estado 223
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 300

   30 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 177
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 45

    simpleExp      ir ao estado 306
    constOp        ir ao estado 63
    binLogicalExp  ir ao estado 66
    relationalExp  ir ao estado 67
    sumExp         ir ao estado 68
    sumOp          ir ao estado 69
    mulExp         ir ao estado 70
    factor         ir ao estado 71
    fCall          ir ao estado 72


Estado 301

   31 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 177
    NIL      deslocar, e ir ao estado 31
    INTEGER  deslocar, e ir ao estado 32
    DECIMAL  deslocar, e ir ao estado 33
    ADD      deslocar, e ir ao estado 34
    SUB      deslocar, e ir ao estado 35
    PARENL   deslocar, e ir ao estado 45

    simpleExp      ir ao estado 307
    constOp        ir ao estado 63
    binLogicalExp  ir ao estado 66
    relationalExp  ir ao estado 67
    sumExp         ir ao estado 68
    sumOp          ir ao estado 69
    mulExp         ir ao estado 70
    factor         ir ao estado 71
    fCall          ir ao estado 72


Estado 302

   52 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 308


Estado 303

   53 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 309


Estado 304

   54 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 310


Estado 305

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   29         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 311

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 306

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 312


Estado 307

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 313


Estado 308

   52 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 52 (inOp)
    TYPE         reduzir usando a regra 52 (inOp)
    NIL          reduzir usando a regra 52 (inOp)
    INTEGER      reduzir usando a regra 52 (inOp)
    DECIMAL      reduzir usando a regra 52 (inOp)
    ADD          reduzir usando a regra 52 (inOp)
    SUB          reduzir usando a regra 52 (inOp)
    HEADLIST     reduzir usando a regra 52 (inOp)
    TAILLIST     reduzir usando a regra 52 (inOp)
    DESTROYHEAD  reduzir usando a regra 52 (inOp)
    ELSE         reduzir usando a regra 52 (inOp)
    IF           reduzir usando a regra 52 (inOp)
    FOR          reduzir usando a regra 52 (inOp)
    READ         reduzir usando a regra 52 (inOp)
    WRITE        reduzir usando a regra 52 (inOp)
    WRITELN      reduzir usando a regra 52 (inOp)
    RETURN       reduzir usando a regra 52 (inOp)
    STFUNC       reduzir usando a regra 52 (inOp)
    ENDFUNC      reduzir usando a regra 52 (inOp)
    PARENL       reduzir usando a regra 52 (inOp)


Estado 309

   53 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 53 (outOp)
    TYPE         reduzir usando a regra 53 (outOp)
    NIL          reduzir usando a regra 53 (outOp)
    INTEGER      reduzir usando a regra 53 (outOp)
    DECIMAL      reduzir usando a regra 53 (outOp)
    ADD          reduzir usando a regra 53 (outOp)
    SUB          reduzir usando a regra 53 (outOp)
    HEADLIST     reduzir usando a regra 53 (outOp)
    TAILLIST     reduzir usando a regra 53 (outOp)
    DESTROYHEAD  reduzir usando a regra 53 (outOp)
    ELSE         reduzir usando a regra 53 (outOp)
    IF           reduzir usando a regra 53 (outOp)
    FOR          reduzir usando a regra 53 (outOp)
    READ         reduzir usando a regra 53 (outOp)
    WRITE        reduzir usando a regra 53 (outOp)
    WRITELN      reduzir usando a regra 53 (outOp)
    RETURN       reduzir usando a regra 53 (outOp)
    STFUNC       reduzir usando a regra 53 (outOp)
    ENDFUNC      reduzir usando a regra 53 (outOp)
    PARENL       reduzir usando a regra 53 (outOp)


Estado 310

   54 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 54 (outOp)
    TYPE         reduzir usando a regra 54 (outOp)
    NIL          reduzir usando a regra 54 (outOp)
    INTEGER      reduzir usando a regra 54 (outOp)
    DECIMAL      reduzir usando a regra 54 (outOp)
    ADD          reduzir usando a regra 54 (outOp)
    SUB          reduzir usando a regra 54 (outOp)
    HEADLIST     reduzir usando a regra 54 (outOp)
    TAILLIST     reduzir usando a regra 54 (outOp)
    DESTROYHEAD  reduzir usando a regra 54 (outOp)
    ELSE         reduzir usando a regra 54 (outOp)
    IF           reduzir usando a regra 54 (outOp)
    FOR          reduzir usando a regra 54 (outOp)
    READ         reduzir usando a regra 54 (outOp)
    WRITE        reduzir usando a regra 54 (outOp)
    WRITELN      reduzir usando a regra 54 (outOp)
    RETURN       reduzir usando a regra 54 (outOp)
    STFUNC       reduzir usando a regra 54 (outOp)
    ENDFUNC      reduzir usando a regra 54 (outOp)
    PARENL       reduzir usando a regra 54 (outOp)


Estado 311

   29 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 207
    FOR          deslocar, e ir ao estado 208
    READ         deslocar, e ir ao estado 209
    WRITE        deslocar, e ir ao estado 210
    WRITELN      deslocar, e ir ao estado 211
    RETURN       deslocar, e ir ao estado 212
    STFUNC       deslocar, e ir ao estado 213
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 214
    simpleVarDeclaration  ir ao estado 215
    compoundStmt          ir ao estado 216
    primitiveStmt         ir ao estado 314
    exprStmt              ir ao estado 217
    condStmt              ir ao estado 218
    iterStmt              ir ao estado 219
    returnStmt            ir ao estado 220
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 221
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 222
    outOp                 ir ao estado 223
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 312

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 153

    assignExp  ir ao estado 315


Estado 313

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 153

    assignExp  ir ao estado 316


Estado 314

   29 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 29 (condStmt)
    TYPE         reduzir usando a regra 29 (condStmt)
    NIL          reduzir usando a regra 29 (condStmt)
    INTEGER      reduzir usando a regra 29 (condStmt)
    DECIMAL      reduzir usando a regra 29 (condStmt)
    ADD          reduzir usando a regra 29 (condStmt)
    SUB          reduzir usando a regra 29 (condStmt)
    HEADLIST     reduzir usando a regra 29 (condStmt)
    TAILLIST     reduzir usando a regra 29 (condStmt)
    DESTROYHEAD  reduzir usando a regra 29 (condStmt)
    ELSE         reduzir usando a regra 29 (condStmt)
    IF           reduzir usando a regra 29 (condStmt)
    FOR          reduzir usando a regra 29 (condStmt)
    READ         reduzir usando a regra 29 (condStmt)
    WRITE        reduzir usando a regra 29 (condStmt)
    WRITELN      reduzir usando a regra 29 (condStmt)
    RETURN       reduzir usando a regra 29 (condStmt)
    STFUNC       reduzir usando a regra 29 (condStmt)
    ENDFUNC      reduzir usando a regra 29 (condStmt)
    PARENL       reduzir usando a regra 29 (condStmt)


Estado 315

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 317


Estado 316

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 318


Estado 317

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 207
    FOR          deslocar, e ir ao estado 208
    READ         deslocar, e ir ao estado 209
    WRITE        deslocar, e ir ao estado 210
    WRITELN      deslocar, e ir ao estado 211
    RETURN       deslocar, e ir ao estado 212
    STFUNC       deslocar, e ir ao estado 213
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 214
    simpleVarDeclaration  ir ao estado 215
    compoundStmt          ir ao estado 216
    primitiveStmt         ir ao estado 319
    exprStmt              ir ao estado 217
    condStmt              ir ao estado 218
    iterStmt              ir ao estado 219
    returnStmt            ir ao estado 220
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 221
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 222
    outOp                 ir ao estado 223
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 318

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 30
    TYPE         deslocar, e ir ao estado 160
    NIL          deslocar, e ir ao estado 31
    INTEGER      deslocar, e ir ao estado 32
    DECIMAL      deslocar, e ir ao estado 33
    ADD          deslocar, e ir ao estado 34
    SUB          deslocar, e ir ao estado 35
    HEADLIST     deslocar, e ir ao estado 36
    TAILLIST     deslocar, e ir ao estado 37
    DESTROYHEAD  deslocar, e ir ao estado 38
    IF           deslocar, e ir ao estado 207
    FOR          deslocar, e ir ao estado 208
    READ         deslocar, e ir ao estado 209
    WRITE        deslocar, e ir ao estado 210
    WRITELN      deslocar, e ir ao estado 211
    RETURN       deslocar, e ir ao estado 212
    STFUNC       deslocar, e ir ao estado 213
    PARENL       deslocar, e ir ao estado 45

    varDeclaration        ir ao estado 214
    simpleVarDeclaration  ir ao estado 215
    compoundStmt          ir ao estado 216
    primitiveStmt         ir ao estado 320
    exprStmt              ir ao estado 217
    condStmt              ir ao estado 218
    iterStmt              ir ao estado 219
    returnStmt            ir ao estado 220
    listExp               ir ao estado 54
    appendOps             ir ao estado 55
    returnListOps         ir ao estado 56
    returnListOp          ir ao estado 57
    destroyHeadOps        ir ao estado 58
    mapFilterOps          ir ao estado 59
    expression            ir ao estado 221
    assignExp             ir ao estado 61
    simpleExp             ir ao estado 62
    constOp               ir ao estado 63
    inOp                  ir ao estado 222
    outOp                 ir ao estado 223
    binLogicalExp         ir ao estado 66
    relationalExp         ir ao estado 67
    sumExp                ir ao estado 68
    sumOp                 ir ao estado 69
    mulExp                ir ao estado 70
    factor                ir ao estado 71
    fCall                 ir ao estado 72


Estado 319

   30 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    ELSE         reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)


Estado 320

   31 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 31 (iterStmt)
    TYPE         reduzir usando a regra 31 (iterStmt)
    NIL          reduzir usando a regra 31 (iterStmt)
    INTEGER      reduzir usando a regra 31 (iterStmt)
    DECIMAL      reduzir usando a regra 31 (iterStmt)
    ADD          reduzir usando a regra 31 (iterStmt)
    SUB          reduzir usando a regra 31 (iterStmt)
    HEADLIST     reduzir usando a regra 31 (iterStmt)
    TAILLIST     reduzir usando a regra 31 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 31 (iterStmt)
    ELSE         reduzir usando a regra 31 (iterStmt)
    IF           reduzir usando a regra 31 (iterStmt)
    FOR          reduzir usando a regra 31 (iterStmt)
    READ         reduzir usando a regra 31 (iterStmt)
    WRITE        reduzir usando a regra 31 (iterStmt)
    WRITELN      reduzir usando a regra 31 (iterStmt)
    RETURN       reduzir usando a regra 31 (iterStmt)
    STFUNC       reduzir usando a regra 31 (iterStmt)
    ENDFUNC      reduzir usando a regra 31 (iterStmt)
    PARENL       reduzir usando a regra 31 (iterStmt)
