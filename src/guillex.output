Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration
    4                | error

    5 declaration: varDeclaration
    6            | funcDeclaration

    7 varDeclaration: simpleVarDeclaration SEMIC

    8 $@1: %empty

    9 $@2: %empty

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC

   11 $@3: %empty

   12 $@4: %empty

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC

   14 $@5: %empty

   15 $@6: %empty

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC

   17 $@7: %empty

   18 $@8: %empty

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC

   20 simpleVarDeclaration: TYPE ID
   21                     | TYPE LISTTYPE ID

   22 params: params param
   23       | param
   24       | error

   25 param: TYPE ID
   26      | TYPE LISTTYPE ID

   27 compoundStmt: STFUNC stmtList ENDFUNC

   28 stmtList: stmtList primitiveStmt
   29         | primitiveStmt

   30 primitiveStmt: exprStmt
   31              | compoundStmt
   32              | condStmt
   33              | iterStmt
   34              | returnStmt
   35              | inOp
   36              | outOp
   37              | varDeclaration

   38 exprStmt: expression SEMIC

   39 condStmt: ifStmt primitiveStmt
   40         | ifStmt primitiveStmt elseStmt

   41 ifStmt: IF PARENL simpleExp PARENR

   42 $@9: %empty

   43 elseStmt: ELSE $@9 primitiveStmt

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   45         | FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   46 returnStmt: RETURN expression SEMIC

   47 listExp: appendOps
   48        | returnListOps
   49        | destroyHeadOps
   50        | mapFilterOps

   51 appendOps: ID APPEND ID

   52 returnListOps: returnListOp ID

   53 returnListOp: HEADLIST
   54             | TAILLIST

   55 destroyHeadOps: DESTROYHEAD ID

   56 mapFilterOps: ID MAP ID
   57             | ID FILTER ID

   58 expression: assignExp
   59           | simpleExp
   60           | listExp

   61 assignExp: ID ASSIGN expression

   62 simpleExp: binLogicalExp

   63 constOp: INTEGER
   64        | DECIMAL
   65        | NIL

   66 inOp: READ PARENL ID PARENR SEMIC

   67 outOp: WRITE PARENL outConst PARENR SEMIC
   68      | WRITELN PARENL outConst PARENR SEMIC

   69 outConst: STRING
   70         | simpleExp
   71         | listExp

   72 binLogicalExp: binLogicalExp binLogicalOp relationalOp
   73              | relationalExp

   74 binLogicalOp: OR
   75             | AND

   76 relationalExp: relationalExp relationalOp sumExp
   77              | sumExp

   78 relationalOp: SMALLER
   79             | GREATER
   80             | SMALLEQ
   81             | GREATEQ
   82             | EQUALS
   83             | DIFFERENT

   84 sumExp: sumExp sumOp mulExp
   85       | mulExp

   86 sumOp: ADD
   87      | SUB

   88 mulExp: mulExp mulOp factor
   89       | factor
   90       | sumOp factor

   91 mulOp: MULT
   92      | DIV

   93 factor: ID
   94       | fCall
   95       | PARENL simpleExp PARENR
   96       | constOp
   97       | ERRORTOKEN

   98 fCall: ID PARENL callParams PARENR
   99      | ID PARENL PARENR

  100 callParams: callParams COMMA simpleExp
  101           | simpleExp


Terminals, with rules where they appear

    $end (0) 0
    error <treeNode> (256) 4 24
    ID <str> (258) 10 13 16 19 20 21 25 26 51 52 55 56 57 61 66 93 98 99
    TYPE <str> (259) 10 13 16 19 20 21 25 26
    LISTTYPE <str> (260) 16 19 21 26
    STRING <str> (261) 69
    NIL <str> (262) 65
    INTEGER <integer> (263) 63
    DECIMAL <dec> (264) 64
    ERRORTOKEN <str> (265) 97
    ADD <str> (266) 86
    SUB <str> (267) 87
    MULT <str> (268) 91
    DIV <str> (269) 92
    OR <str> (270) 74
    AND <str> (271) 75
    SMALLER <str> (272) 78
    GREATER <str> (273) 79
    SMALLEQ <str> (274) 80
    GREATEQ <str> (275) 81
    EQUALS <str> (276) 82
    DIFFERENT <str> (277) 83
    APPEND <str> (278) 51
    HEADLIST <str> (279) 53
    TAILLIST <str> (280) 54
    DESTROYHEAD <str> (281) 55
    FILTER <str> (282) 57
    ASSIGN <str> (283) 61
    MAP <str> (284) 56
    ELSE <str> (285) 43
    THEN <str> (286)
    IF <str> (287) 41
    FOR <str> (288) 44 45
    READ <str> (289) 66
    WRITE <str> (290) 67
    WRITELN <str> (291) 68
    RETURN <str> (292) 46
    SEMIC <str> (293) 7 38 44 45 46 66 67 68
    COMMA <str> (294) 100
    STFUNC <str> (295) 10 13 16 19 27
    ENDFUNC <str> (296) 10 13 16 19 27
    PARENL <str> (297) 10 13 16 19 41 44 45 66 67 68 95 98 99
    PARENR <str> (298) 10 13 16 19 41 44 45 66 67 68 95 98 99


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <treeNode> (45)
        on left: 1
        on right: 0
    declarationList <treeNode> (46)
        on left: 2 3 4
        on right: 1 2
    declaration <treeNode> (47)
        on left: 5 6
        on right: 2 3
    varDeclaration <treeNode> (48)
        on left: 7
        on right: 5 37
    funcDeclaration <treeNode> (49)
        on left: 10 13 16 19
        on right: 6
    $@1 (50)
        on left: 8
        on right: 10
    $@2 (51)
        on left: 9
        on right: 10
    $@3 (52)
        on left: 11
        on right: 13
    $@4 (53)
        on left: 12
        on right: 13
    $@5 (54)
        on left: 14
        on right: 16
    $@6 (55)
        on left: 15
        on right: 16
    $@7 (56)
        on left: 17
        on right: 19
    $@8 (57)
        on left: 18
        on right: 19
    simpleVarDeclaration <treeNode> (58)
        on left: 20 21
        on right: 7
    params <treeNode> (59)
        on left: 22 23 24
        on right: 10 16 22
    param <treeNode> (60)
        on left: 25 26
        on right: 22 23
    compoundStmt <treeNode> (61)
        on left: 27
        on right: 31
    stmtList <treeNode> (62)
        on left: 28 29
        on right: 10 13 16 19 27 28
    primitiveStmt <treeNode> (63)
        on left: 30 31 32 33 34 35 36 37
        on right: 28 29 39 40 43 44 45
    exprStmt <treeNode> (64)
        on left: 38
        on right: 30
    condStmt <treeNode> (65)
        on left: 39 40
        on right: 32
    ifStmt <treeNode> (66)
        on left: 41
        on right: 39 40
    elseStmt <treeNode> (67)
        on left: 43
        on right: 40
    $@9 (68)
        on left: 42
        on right: 43
    iterStmt <treeNode> (69)
        on left: 44 45
        on right: 33
    returnStmt <treeNode> (70)
        on left: 46
        on right: 34
    listExp <treeNode> (71)
        on left: 47 48 49 50
        on right: 60 71
    appendOps <treeNode> (72)
        on left: 51
        on right: 47
    returnListOps <treeNode> (73)
        on left: 52
        on right: 48
    returnListOp <treeNode> (74)
        on left: 53 54
        on right: 52
    destroyHeadOps <treeNode> (75)
        on left: 55
        on right: 49
    mapFilterOps <treeNode> (76)
        on left: 56 57
        on right: 50
    expression <treeNode> (77)
        on left: 58 59 60
        on right: 38 46 61
    assignExp <treeNode> (78)
        on left: 61
        on right: 44 45 58
    simpleExp <treeNode> (79)
        on left: 62
        on right: 41 44 45 59 70 95 100 101
    constOp <treeNode> (80)
        on left: 63 64 65
        on right: 96
    inOp <treeNode> (81)
        on left: 66
        on right: 35
    outOp <treeNode> (82)
        on left: 67 68
        on right: 36
    outConst <treeNode> (83)
        on left: 69 70 71
        on right: 67 68
    binLogicalExp <treeNode> (84)
        on left: 72 73
        on right: 62 72
    binLogicalOp <treeNode> (85)
        on left: 74 75
        on right: 72
    relationalExp <treeNode> (86)
        on left: 76 77
        on right: 73 76
    relationalOp <treeNode> (87)
        on left: 78 79 80 81 82 83
        on right: 72 76
    sumExp <treeNode> (88)
        on left: 84 85
        on right: 76 77 84
    sumOp <treeNode> (89)
        on left: 86 87
        on right: 84 90
    mulExp <treeNode> (90)
        on left: 88 89 90
        on right: 84 85 88
    mulOp <treeNode> (91)
        on left: 91 92
        on right: 88
    factor <treeNode> (92)
        on left: 93 94 95 96 97
        on right: 88 89 90
    fCall <treeNode> (93)
        on left: 98 99
        on right: 94
    callParams <treeNode> (94)
        on left: 100 101
        on right: 98 100


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program               go to state 3
    declarationList       go to state 4
    declaration           go to state 5
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 1

    4 declarationList: error •

    $end  reduce using rule 4 (declarationList)
    TYPE  reduce using rule 4 (declarationList)


State 2

   10 funcDeclaration: TYPE • ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE • ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   16                | TYPE • LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC
   19                | TYPE • LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC
   20 simpleVarDeclaration: TYPE • ID
   21                     | TYPE • LISTTYPE ID

    ID        shift, and go to state 9
    LISTTYPE  shift, and go to state 10


State 3

    0 $accept: program • $end

    $end  shift, and go to state 11


State 4

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration           go to state 12
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 5

    3 declarationList: declaration •

    $end  reduce using rule 3 (declarationList)
    TYPE  reduce using rule 3 (declarationList)


State 6

    5 declaration: varDeclaration •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 7

    6 declaration: funcDeclaration •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 8

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 13


State 9

   10 funcDeclaration: TYPE ID • PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID • PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   20 simpleVarDeclaration: TYPE ID •

    PARENL  shift, and go to state 14

    SEMIC  reduce using rule 20 (simpleVarDeclaration)


State 10

   16 funcDeclaration: TYPE LISTTYPE • ID PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC
   19                | TYPE LISTTYPE • ID PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC
   21 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  shift, and go to state 15


State 11

    0 $accept: program $end •

    $default  accept


State 12

    2 declarationList: declarationList declaration •

    $end  reduce using rule 2 (declarationList)
    TYPE  reduce using rule 2 (declarationList)


State 13

    7 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduce using rule 7 (varDeclaration)
    TYPE  reduce using rule 7 (varDeclaration)


State 14

   10 funcDeclaration: TYPE ID PARENL • $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID PARENL • $@3 PARENR STFUNC $@4 stmtList ENDFUNC

    error   reduce using rule 8 ($@1)
    TYPE    reduce using rule 8 ($@1)
    PARENR  reduce using rule 11 ($@3)

    $@1  go to state 16
    $@3  go to state 17


State 15

   16 funcDeclaration: TYPE LISTTYPE ID • PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC
   19                | TYPE LISTTYPE ID • PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC
   21 simpleVarDeclaration: TYPE LISTTYPE ID •

    PARENL  shift, and go to state 18

    SEMIC  reduce using rule 21 (simpleVarDeclaration)


State 16

   10 funcDeclaration: TYPE ID PARENL $@1 • params PARENR STFUNC $@2 stmtList ENDFUNC

    error  shift, and go to state 19
    TYPE   shift, and go to state 20

    params  go to state 21
    param   go to state 22


State 17

   13 funcDeclaration: TYPE ID PARENL $@3 • PARENR STFUNC $@4 stmtList ENDFUNC

    PARENR  shift, and go to state 23


State 18

   16 funcDeclaration: TYPE LISTTYPE ID PARENL • $@5 params PARENR STFUNC $@6 stmtList ENDFUNC
   19                | TYPE LISTTYPE ID PARENL • $@7 PARENR STFUNC $@8 stmtList ENDFUNC

    error   reduce using rule 14 ($@5)
    TYPE    reduce using rule 14 ($@5)
    PARENR  reduce using rule 17 ($@7)

    $@5  go to state 24
    $@7  go to state 25


State 19

   24 params: error •

    TYPE    reduce using rule 24 (params)
    PARENR  reduce using rule 24 (params)


State 20

   25 param: TYPE • ID
   26      | TYPE • LISTTYPE ID

    ID        shift, and go to state 26
    LISTTYPE  shift, and go to state 27


State 21

   10 funcDeclaration: TYPE ID PARENL $@1 params • PARENR STFUNC $@2 stmtList ENDFUNC
   22 params: params • param

    TYPE    shift, and go to state 20
    PARENR  shift, and go to state 28

    param  go to state 29


State 22

   23 params: param •

    TYPE    reduce using rule 23 (params)
    PARENR  reduce using rule 23 (params)


State 23

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR • STFUNC $@4 stmtList ENDFUNC

    STFUNC  shift, and go to state 30


State 24

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 • params PARENR STFUNC $@6 stmtList ENDFUNC

    error  shift, and go to state 19
    TYPE   shift, and go to state 20

    params  go to state 31
    param   go to state 22


State 25

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 • PARENR STFUNC $@8 stmtList ENDFUNC

    PARENR  shift, and go to state 32


State 26

   25 param: TYPE ID •

    TYPE    reduce using rule 25 (param)
    PARENR  reduce using rule 25 (param)


State 27

   26 param: TYPE LISTTYPE • ID

    ID  shift, and go to state 33


State 28

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR • STFUNC $@2 stmtList ENDFUNC

    STFUNC  shift, and go to state 34


State 29

   22 params: params param •

    TYPE    reduce using rule 22 (params)
    PARENR  reduce using rule 22 (params)


State 30

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC • $@4 stmtList ENDFUNC

    ID           reduce using rule 12 ($@4)
    TYPE         reduce using rule 12 ($@4)
    NIL          reduce using rule 12 ($@4)
    INTEGER      reduce using rule 12 ($@4)
    DECIMAL      reduce using rule 12 ($@4)
    ERRORTOKEN   reduce using rule 12 ($@4)
    ADD          reduce using rule 12 ($@4)
    SUB          reduce using rule 12 ($@4)
    HEADLIST     reduce using rule 12 ($@4)
    TAILLIST     reduce using rule 12 ($@4)
    DESTROYHEAD  reduce using rule 12 ($@4)
    IF           reduce using rule 12 ($@4)
    FOR          reduce using rule 12 ($@4)
    READ         reduce using rule 12 ($@4)
    WRITE        reduce using rule 12 ($@4)
    WRITELN      reduce using rule 12 ($@4)
    RETURN       reduce using rule 12 ($@4)
    STFUNC       reduce using rule 12 ($@4)
    PARENL       reduce using rule 12 ($@4)

    $@4  go to state 35


State 31

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params • PARENR STFUNC $@6 stmtList ENDFUNC
   22 params: params • param

    TYPE    shift, and go to state 20
    PARENR  shift, and go to state 36

    param  go to state 29


State 32

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR • STFUNC $@8 stmtList ENDFUNC

    STFUNC  shift, and go to state 37


State 33

   26 param: TYPE LISTTYPE ID •

    TYPE    reduce using rule 26 (param)
    PARENR  reduce using rule 26 (param)


State 34

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC • $@2 stmtList ENDFUNC

    ID           reduce using rule 9 ($@2)
    TYPE         reduce using rule 9 ($@2)
    NIL          reduce using rule 9 ($@2)
    INTEGER      reduce using rule 9 ($@2)
    DECIMAL      reduce using rule 9 ($@2)
    ERRORTOKEN   reduce using rule 9 ($@2)
    ADD          reduce using rule 9 ($@2)
    SUB          reduce using rule 9 ($@2)
    HEADLIST     reduce using rule 9 ($@2)
    TAILLIST     reduce using rule 9 ($@2)
    DESTROYHEAD  reduce using rule 9 ($@2)
    IF           reduce using rule 9 ($@2)
    FOR          reduce using rule 9 ($@2)
    READ         reduce using rule 9 ($@2)
    WRITE        reduce using rule 9 ($@2)
    WRITELN      reduce using rule 9 ($@2)
    RETURN       reduce using rule 9 ($@2)
    STFUNC       reduce using rule 9 ($@2)
    PARENL       reduce using rule 9 ($@2)

    $@2  go to state 38


State 35

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 • stmtList ENDFUNC

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    stmtList              go to state 60
    primitiveStmt         go to state 61
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 36

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR • STFUNC $@6 stmtList ENDFUNC

    STFUNC  shift, and go to state 86


State 37

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC • $@8 stmtList ENDFUNC

    ID           reduce using rule 18 ($@8)
    TYPE         reduce using rule 18 ($@8)
    NIL          reduce using rule 18 ($@8)
    INTEGER      reduce using rule 18 ($@8)
    DECIMAL      reduce using rule 18 ($@8)
    ERRORTOKEN   reduce using rule 18 ($@8)
    ADD          reduce using rule 18 ($@8)
    SUB          reduce using rule 18 ($@8)
    HEADLIST     reduce using rule 18 ($@8)
    TAILLIST     reduce using rule 18 ($@8)
    DESTROYHEAD  reduce using rule 18 ($@8)
    IF           reduce using rule 18 ($@8)
    FOR          reduce using rule 18 ($@8)
    READ         reduce using rule 18 ($@8)
    WRITE        reduce using rule 18 ($@8)
    WRITELN      reduce using rule 18 ($@8)
    RETURN       reduce using rule 18 ($@8)
    STFUNC       reduce using rule 18 ($@8)
    PARENL       reduce using rule 18 ($@8)

    $@8  go to state 87


State 38

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 • stmtList ENDFUNC

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    stmtList              go to state 88
    primitiveStmt         go to state 61
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 39

   51 appendOps: ID • APPEND ID
   56 mapFilterOps: ID • MAP ID
   57             | ID • FILTER ID
   61 assignExp: ID • ASSIGN expression
   93 factor: ID •
   98 fCall: ID • PARENL callParams PARENR
   99      | ID • PARENL PARENR

    APPEND  shift, and go to state 89
    FILTER  shift, and go to state 90
    ASSIGN  shift, and go to state 91
    MAP     shift, and go to state 92
    PARENL  shift, and go to state 93

    ADD        reduce using rule 93 (factor)
    SUB        reduce using rule 93 (factor)
    MULT       reduce using rule 93 (factor)
    DIV        reduce using rule 93 (factor)
    OR         reduce using rule 93 (factor)
    AND        reduce using rule 93 (factor)
    SMALLER    reduce using rule 93 (factor)
    GREATER    reduce using rule 93 (factor)
    SMALLEQ    reduce using rule 93 (factor)
    GREATEQ    reduce using rule 93 (factor)
    EQUALS     reduce using rule 93 (factor)
    DIFFERENT  reduce using rule 93 (factor)
    SEMIC      reduce using rule 93 (factor)


State 40

   20 simpleVarDeclaration: TYPE • ID
   21                     | TYPE • LISTTYPE ID

    ID        shift, and go to state 94
    LISTTYPE  shift, and go to state 95


State 41

   65 constOp: NIL •

    ADD        reduce using rule 65 (constOp)
    SUB        reduce using rule 65 (constOp)
    MULT       reduce using rule 65 (constOp)
    DIV        reduce using rule 65 (constOp)
    OR         reduce using rule 65 (constOp)
    AND        reduce using rule 65 (constOp)
    SMALLER    reduce using rule 65 (constOp)
    GREATER    reduce using rule 65 (constOp)
    SMALLEQ    reduce using rule 65 (constOp)
    GREATEQ    reduce using rule 65 (constOp)
    EQUALS     reduce using rule 65 (constOp)
    DIFFERENT  reduce using rule 65 (constOp)
    SEMIC      reduce using rule 65 (constOp)


State 42

   63 constOp: INTEGER •

    ADD        reduce using rule 63 (constOp)
    SUB        reduce using rule 63 (constOp)
    MULT       reduce using rule 63 (constOp)
    DIV        reduce using rule 63 (constOp)
    OR         reduce using rule 63 (constOp)
    AND        reduce using rule 63 (constOp)
    SMALLER    reduce using rule 63 (constOp)
    GREATER    reduce using rule 63 (constOp)
    SMALLEQ    reduce using rule 63 (constOp)
    GREATEQ    reduce using rule 63 (constOp)
    EQUALS     reduce using rule 63 (constOp)
    DIFFERENT  reduce using rule 63 (constOp)
    SEMIC      reduce using rule 63 (constOp)


State 43

   64 constOp: DECIMAL •

    ADD        reduce using rule 64 (constOp)
    SUB        reduce using rule 64 (constOp)
    MULT       reduce using rule 64 (constOp)
    DIV        reduce using rule 64 (constOp)
    OR         reduce using rule 64 (constOp)
    AND        reduce using rule 64 (constOp)
    SMALLER    reduce using rule 64 (constOp)
    GREATER    reduce using rule 64 (constOp)
    SMALLEQ    reduce using rule 64 (constOp)
    GREATEQ    reduce using rule 64 (constOp)
    EQUALS     reduce using rule 64 (constOp)
    DIFFERENT  reduce using rule 64 (constOp)
    SEMIC      reduce using rule 64 (constOp)


State 44

   97 factor: ERRORTOKEN •

    ADD        reduce using rule 97 (factor)
    SUB        reduce using rule 97 (factor)
    MULT       reduce using rule 97 (factor)
    DIV        reduce using rule 97 (factor)
    OR         reduce using rule 97 (factor)
    AND        reduce using rule 97 (factor)
    SMALLER    reduce using rule 97 (factor)
    GREATER    reduce using rule 97 (factor)
    SMALLEQ    reduce using rule 97 (factor)
    GREATEQ    reduce using rule 97 (factor)
    EQUALS     reduce using rule 97 (factor)
    DIFFERENT  reduce using rule 97 (factor)
    SEMIC      reduce using rule 97 (factor)


State 45

   86 sumOp: ADD •

    ID          reduce using rule 86 (sumOp)
    NIL         reduce using rule 86 (sumOp)
    INTEGER     reduce using rule 86 (sumOp)
    DECIMAL     reduce using rule 86 (sumOp)
    ERRORTOKEN  reduce using rule 86 (sumOp)
    PARENL      reduce using rule 86 (sumOp)


State 46

   87 sumOp: SUB •

    ID          reduce using rule 87 (sumOp)
    NIL         reduce using rule 87 (sumOp)
    INTEGER     reduce using rule 87 (sumOp)
    DECIMAL     reduce using rule 87 (sumOp)
    ERRORTOKEN  reduce using rule 87 (sumOp)
    PARENL      reduce using rule 87 (sumOp)


State 47

   53 returnListOp: HEADLIST •

    ID  reduce using rule 53 (returnListOp)


State 48

   54 returnListOp: TAILLIST •

    ID  reduce using rule 54 (returnListOp)


State 49

   55 destroyHeadOps: DESTROYHEAD • ID

    ID  shift, and go to state 96


State 50

   41 ifStmt: IF • PARENL simpleExp PARENR

    PARENL  shift, and go to state 97


State 51

   44 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   45         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  shift, and go to state 98


State 52

   66 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 99


State 53

   67 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 100


State 54

   68 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 101


State 55

   46 returnStmt: RETURN • expression SEMIC

    ID           shift, and go to state 39
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    PARENL       shift, and go to state 57

    listExp         go to state 67
    appendOps       go to state 68
    returnListOps   go to state 69
    returnListOp    go to state 70
    destroyHeadOps  go to state 71
    mapFilterOps    go to state 72
    expression      go to state 102
    assignExp       go to state 74
    simpleExp       go to state 75
    constOp         go to state 76
    binLogicalExp   go to state 79
    relationalExp   go to state 80
    sumExp          go to state 81
    sumOp           go to state 82
    mulExp          go to state 83
    factor          go to state 84
    fCall           go to state 85


State 56

   27 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    stmtList              go to state 103
    primitiveStmt         go to state 61
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 57

   95 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 104
    NIL         shift, and go to state 186
    INTEGER     shift, and go to state 187
    DECIMAL     shift, and go to state 188
    ERRORTOKEN  shift, and go to state 189
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 190

    simpleExp      go to state 105
    constOp        go to state 191
    binLogicalExp  go to state 192
    relationalExp  go to state 193
    sumExp         go to state 194
    sumOp          go to state 195
    mulExp         go to state 196
    factor         go to state 197
    fCall          go to state 198


State 58

   37 primitiveStmt: varDeclaration •

    ID           reduce using rule 37 (primitiveStmt)
    TYPE         reduce using rule 37 (primitiveStmt)
    NIL          reduce using rule 37 (primitiveStmt)
    INTEGER      reduce using rule 37 (primitiveStmt)
    DECIMAL      reduce using rule 37 (primitiveStmt)
    ERRORTOKEN   reduce using rule 37 (primitiveStmt)
    ADD          reduce using rule 37 (primitiveStmt)
    SUB          reduce using rule 37 (primitiveStmt)
    HEADLIST     reduce using rule 37 (primitiveStmt)
    TAILLIST     reduce using rule 37 (primitiveStmt)
    DESTROYHEAD  reduce using rule 37 (primitiveStmt)
    IF           reduce using rule 37 (primitiveStmt)
    FOR          reduce using rule 37 (primitiveStmt)
    READ         reduce using rule 37 (primitiveStmt)
    WRITE        reduce using rule 37 (primitiveStmt)
    WRITELN      reduce using rule 37 (primitiveStmt)
    RETURN       reduce using rule 37 (primitiveStmt)
    STFUNC       reduce using rule 37 (primitiveStmt)
    ENDFUNC      reduce using rule 37 (primitiveStmt)
    PARENL       reduce using rule 37 (primitiveStmt)


State 59

   31 primitiveStmt: compoundStmt •

    ID           reduce using rule 31 (primitiveStmt)
    TYPE         reduce using rule 31 (primitiveStmt)
    NIL          reduce using rule 31 (primitiveStmt)
    INTEGER      reduce using rule 31 (primitiveStmt)
    DECIMAL      reduce using rule 31 (primitiveStmt)
    ERRORTOKEN   reduce using rule 31 (primitiveStmt)
    ADD          reduce using rule 31 (primitiveStmt)
    SUB          reduce using rule 31 (primitiveStmt)
    HEADLIST     reduce using rule 31 (primitiveStmt)
    TAILLIST     reduce using rule 31 (primitiveStmt)
    DESTROYHEAD  reduce using rule 31 (primitiveStmt)
    IF           reduce using rule 31 (primitiveStmt)
    FOR          reduce using rule 31 (primitiveStmt)
    READ         reduce using rule 31 (primitiveStmt)
    WRITE        reduce using rule 31 (primitiveStmt)
    WRITELN      reduce using rule 31 (primitiveStmt)
    RETURN       reduce using rule 31 (primitiveStmt)
    STFUNC       reduce using rule 31 (primitiveStmt)
    ENDFUNC      reduce using rule 31 (primitiveStmt)
    PARENL       reduce using rule 31 (primitiveStmt)


State 60

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    ENDFUNC      shift, and go to state 106
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    primitiveStmt         go to state 107
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 61

   29 stmtList: primitiveStmt •

    ID           reduce using rule 29 (stmtList)
    TYPE         reduce using rule 29 (stmtList)
    NIL          reduce using rule 29 (stmtList)
    INTEGER      reduce using rule 29 (stmtList)
    DECIMAL      reduce using rule 29 (stmtList)
    ERRORTOKEN   reduce using rule 29 (stmtList)
    ADD          reduce using rule 29 (stmtList)
    SUB          reduce using rule 29 (stmtList)
    HEADLIST     reduce using rule 29 (stmtList)
    TAILLIST     reduce using rule 29 (stmtList)
    DESTROYHEAD  reduce using rule 29 (stmtList)
    IF           reduce using rule 29 (stmtList)
    FOR          reduce using rule 29 (stmtList)
    READ         reduce using rule 29 (stmtList)
    WRITE        reduce using rule 29 (stmtList)
    WRITELN      reduce using rule 29 (stmtList)
    RETURN       reduce using rule 29 (stmtList)
    STFUNC       reduce using rule 29 (stmtList)
    ENDFUNC      reduce using rule 29 (stmtList)
    PARENL       reduce using rule 29 (stmtList)


State 62

   30 primitiveStmt: exprStmt •

    ID           reduce using rule 30 (primitiveStmt)
    TYPE         reduce using rule 30 (primitiveStmt)
    NIL          reduce using rule 30 (primitiveStmt)
    INTEGER      reduce using rule 30 (primitiveStmt)
    DECIMAL      reduce using rule 30 (primitiveStmt)
    ERRORTOKEN   reduce using rule 30 (primitiveStmt)
    ADD          reduce using rule 30 (primitiveStmt)
    SUB          reduce using rule 30 (primitiveStmt)
    HEADLIST     reduce using rule 30 (primitiveStmt)
    TAILLIST     reduce using rule 30 (primitiveStmt)
    DESTROYHEAD  reduce using rule 30 (primitiveStmt)
    IF           reduce using rule 30 (primitiveStmt)
    FOR          reduce using rule 30 (primitiveStmt)
    READ         reduce using rule 30 (primitiveStmt)
    WRITE        reduce using rule 30 (primitiveStmt)
    WRITELN      reduce using rule 30 (primitiveStmt)
    RETURN       reduce using rule 30 (primitiveStmt)
    STFUNC       reduce using rule 30 (primitiveStmt)
    ENDFUNC      reduce using rule 30 (primitiveStmt)
    PARENL       reduce using rule 30 (primitiveStmt)


State 63

   32 primitiveStmt: condStmt •

    ID           reduce using rule 32 (primitiveStmt)
    TYPE         reduce using rule 32 (primitiveStmt)
    NIL          reduce using rule 32 (primitiveStmt)
    INTEGER      reduce using rule 32 (primitiveStmt)
    DECIMAL      reduce using rule 32 (primitiveStmt)
    ERRORTOKEN   reduce using rule 32 (primitiveStmt)
    ADD          reduce using rule 32 (primitiveStmt)
    SUB          reduce using rule 32 (primitiveStmt)
    HEADLIST     reduce using rule 32 (primitiveStmt)
    TAILLIST     reduce using rule 32 (primitiveStmt)
    DESTROYHEAD  reduce using rule 32 (primitiveStmt)
    IF           reduce using rule 32 (primitiveStmt)
    FOR          reduce using rule 32 (primitiveStmt)
    READ         reduce using rule 32 (primitiveStmt)
    WRITE        reduce using rule 32 (primitiveStmt)
    WRITELN      reduce using rule 32 (primitiveStmt)
    RETURN       reduce using rule 32 (primitiveStmt)
    STFUNC       reduce using rule 32 (primitiveStmt)
    ENDFUNC      reduce using rule 32 (primitiveStmt)
    PARENL       reduce using rule 32 (primitiveStmt)


State 64

   39 condStmt: ifStmt • primitiveStmt
   40         | ifStmt • primitiveStmt elseStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 199
    READ         shift, and go to state 200
    WRITE        shift, and go to state 201
    WRITELN      shift, and go to state 202
    RETURN       shift, and go to state 203
    STFUNC       shift, and go to state 204
    PARENL       shift, and go to state 57

    varDeclaration        go to state 205
    simpleVarDeclaration  go to state 206
    compoundStmt          go to state 207
    primitiveStmt         go to state 108
    exprStmt              go to state 208
    condStmt              go to state 209
    ifStmt                go to state 210
    iterStmt              go to state 211
    returnStmt            go to state 212
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 213
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 214
    outOp                 go to state 215
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 65

   33 primitiveStmt: iterStmt •

    ID           reduce using rule 33 (primitiveStmt)
    TYPE         reduce using rule 33 (primitiveStmt)
    NIL          reduce using rule 33 (primitiveStmt)
    INTEGER      reduce using rule 33 (primitiveStmt)
    DECIMAL      reduce using rule 33 (primitiveStmt)
    ERRORTOKEN   reduce using rule 33 (primitiveStmt)
    ADD          reduce using rule 33 (primitiveStmt)
    SUB          reduce using rule 33 (primitiveStmt)
    HEADLIST     reduce using rule 33 (primitiveStmt)
    TAILLIST     reduce using rule 33 (primitiveStmt)
    DESTROYHEAD  reduce using rule 33 (primitiveStmt)
    IF           reduce using rule 33 (primitiveStmt)
    FOR          reduce using rule 33 (primitiveStmt)
    READ         reduce using rule 33 (primitiveStmt)
    WRITE        reduce using rule 33 (primitiveStmt)
    WRITELN      reduce using rule 33 (primitiveStmt)
    RETURN       reduce using rule 33 (primitiveStmt)
    STFUNC       reduce using rule 33 (primitiveStmt)
    ENDFUNC      reduce using rule 33 (primitiveStmt)
    PARENL       reduce using rule 33 (primitiveStmt)


State 66

   34 primitiveStmt: returnStmt •

    ID           reduce using rule 34 (primitiveStmt)
    TYPE         reduce using rule 34 (primitiveStmt)
    NIL          reduce using rule 34 (primitiveStmt)
    INTEGER      reduce using rule 34 (primitiveStmt)
    DECIMAL      reduce using rule 34 (primitiveStmt)
    ERRORTOKEN   reduce using rule 34 (primitiveStmt)
    ADD          reduce using rule 34 (primitiveStmt)
    SUB          reduce using rule 34 (primitiveStmt)
    HEADLIST     reduce using rule 34 (primitiveStmt)
    TAILLIST     reduce using rule 34 (primitiveStmt)
    DESTROYHEAD  reduce using rule 34 (primitiveStmt)
    IF           reduce using rule 34 (primitiveStmt)
    FOR          reduce using rule 34 (primitiveStmt)
    READ         reduce using rule 34 (primitiveStmt)
    WRITE        reduce using rule 34 (primitiveStmt)
    WRITELN      reduce using rule 34 (primitiveStmt)
    RETURN       reduce using rule 34 (primitiveStmt)
    STFUNC       reduce using rule 34 (primitiveStmt)
    ENDFUNC      reduce using rule 34 (primitiveStmt)
    PARENL       reduce using rule 34 (primitiveStmt)


State 67

   60 expression: listExp •

    SEMIC  reduce using rule 60 (expression)


State 68

   47 listExp: appendOps •

    SEMIC  reduce using rule 47 (listExp)


State 69

   48 listExp: returnListOps •

    SEMIC  reduce using rule 48 (listExp)


State 70

   52 returnListOps: returnListOp • ID

    ID  shift, and go to state 109


State 71

   49 listExp: destroyHeadOps •

    SEMIC  reduce using rule 49 (listExp)


State 72

   50 listExp: mapFilterOps •

    SEMIC  reduce using rule 50 (listExp)


State 73

   38 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 110


State 74

   58 expression: assignExp •

    SEMIC  reduce using rule 58 (expression)


State 75

   59 expression: simpleExp •

    SEMIC  reduce using rule 59 (expression)


State 76

   96 factor: constOp •

    ADD        reduce using rule 96 (factor)
    SUB        reduce using rule 96 (factor)
    MULT       reduce using rule 96 (factor)
    DIV        reduce using rule 96 (factor)
    OR         reduce using rule 96 (factor)
    AND        reduce using rule 96 (factor)
    SMALLER    reduce using rule 96 (factor)
    GREATER    reduce using rule 96 (factor)
    SMALLEQ    reduce using rule 96 (factor)
    GREATEQ    reduce using rule 96 (factor)
    EQUALS     reduce using rule 96 (factor)
    DIFFERENT  reduce using rule 96 (factor)
    SEMIC      reduce using rule 96 (factor)


State 77

   35 primitiveStmt: inOp •

    ID           reduce using rule 35 (primitiveStmt)
    TYPE         reduce using rule 35 (primitiveStmt)
    NIL          reduce using rule 35 (primitiveStmt)
    INTEGER      reduce using rule 35 (primitiveStmt)
    DECIMAL      reduce using rule 35 (primitiveStmt)
    ERRORTOKEN   reduce using rule 35 (primitiveStmt)
    ADD          reduce using rule 35 (primitiveStmt)
    SUB          reduce using rule 35 (primitiveStmt)
    HEADLIST     reduce using rule 35 (primitiveStmt)
    TAILLIST     reduce using rule 35 (primitiveStmt)
    DESTROYHEAD  reduce using rule 35 (primitiveStmt)
    IF           reduce using rule 35 (primitiveStmt)
    FOR          reduce using rule 35 (primitiveStmt)
    READ         reduce using rule 35 (primitiveStmt)
    WRITE        reduce using rule 35 (primitiveStmt)
    WRITELN      reduce using rule 35 (primitiveStmt)
    RETURN       reduce using rule 35 (primitiveStmt)
    STFUNC       reduce using rule 35 (primitiveStmt)
    ENDFUNC      reduce using rule 35 (primitiveStmt)
    PARENL       reduce using rule 35 (primitiveStmt)


State 78

   36 primitiveStmt: outOp •

    ID           reduce using rule 36 (primitiveStmt)
    TYPE         reduce using rule 36 (primitiveStmt)
    NIL          reduce using rule 36 (primitiveStmt)
    INTEGER      reduce using rule 36 (primitiveStmt)
    DECIMAL      reduce using rule 36 (primitiveStmt)
    ERRORTOKEN   reduce using rule 36 (primitiveStmt)
    ADD          reduce using rule 36 (primitiveStmt)
    SUB          reduce using rule 36 (primitiveStmt)
    HEADLIST     reduce using rule 36 (primitiveStmt)
    TAILLIST     reduce using rule 36 (primitiveStmt)
    DESTROYHEAD  reduce using rule 36 (primitiveStmt)
    IF           reduce using rule 36 (primitiveStmt)
    FOR          reduce using rule 36 (primitiveStmt)
    READ         reduce using rule 36 (primitiveStmt)
    WRITE        reduce using rule 36 (primitiveStmt)
    WRITELN      reduce using rule 36 (primitiveStmt)
    RETURN       reduce using rule 36 (primitiveStmt)
    STFUNC       reduce using rule 36 (primitiveStmt)
    ENDFUNC      reduce using rule 36 (primitiveStmt)
    PARENL       reduce using rule 36 (primitiveStmt)


State 79

   62 simpleExp: binLogicalExp •
   72 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   shift, and go to state 111
    AND  shift, and go to state 112

    SEMIC  reduce using rule 62 (simpleExp)

    binLogicalOp  go to state 113


State 80

   73 binLogicalExp: relationalExp •
   76 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 114
    GREATER    shift, and go to state 115
    SMALLEQ    shift, and go to state 116
    GREATEQ    shift, and go to state 117
    EQUALS     shift, and go to state 118
    DIFFERENT  shift, and go to state 119

    OR     reduce using rule 73 (binLogicalExp)
    AND    reduce using rule 73 (binLogicalExp)
    SEMIC  reduce using rule 73 (binLogicalExp)

    relationalOp  go to state 120


State 81

   77 relationalExp: sumExp •
   84 sumExp: sumExp • sumOp mulExp

    ADD  shift, and go to state 216
    SUB  shift, and go to state 217

    OR         reduce using rule 77 (relationalExp)
    AND        reduce using rule 77 (relationalExp)
    SMALLER    reduce using rule 77 (relationalExp)
    GREATER    reduce using rule 77 (relationalExp)
    SMALLEQ    reduce using rule 77 (relationalExp)
    GREATEQ    reduce using rule 77 (relationalExp)
    EQUALS     reduce using rule 77 (relationalExp)
    DIFFERENT  reduce using rule 77 (relationalExp)
    SEMIC      reduce using rule 77 (relationalExp)

    sumOp  go to state 121


State 82

   90 mulExp: sumOp • factor

    ID          shift, and go to state 218
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    PARENL      shift, and go to state 57

    constOp  go to state 76
    factor   go to state 122
    fCall    go to state 85


State 83

   85 sumExp: mulExp •
   88 mulExp: mulExp • mulOp factor

    MULT  shift, and go to state 123
    DIV   shift, and go to state 124

    ADD        reduce using rule 85 (sumExp)
    SUB        reduce using rule 85 (sumExp)
    OR         reduce using rule 85 (sumExp)
    AND        reduce using rule 85 (sumExp)
    SMALLER    reduce using rule 85 (sumExp)
    GREATER    reduce using rule 85 (sumExp)
    SMALLEQ    reduce using rule 85 (sumExp)
    GREATEQ    reduce using rule 85 (sumExp)
    EQUALS     reduce using rule 85 (sumExp)
    DIFFERENT  reduce using rule 85 (sumExp)
    SEMIC      reduce using rule 85 (sumExp)

    mulOp  go to state 125


State 84

   89 mulExp: factor •

    ADD        reduce using rule 89 (mulExp)
    SUB        reduce using rule 89 (mulExp)
    MULT       reduce using rule 89 (mulExp)
    DIV        reduce using rule 89 (mulExp)
    OR         reduce using rule 89 (mulExp)
    AND        reduce using rule 89 (mulExp)
    SMALLER    reduce using rule 89 (mulExp)
    GREATER    reduce using rule 89 (mulExp)
    SMALLEQ    reduce using rule 89 (mulExp)
    GREATEQ    reduce using rule 89 (mulExp)
    EQUALS     reduce using rule 89 (mulExp)
    DIFFERENT  reduce using rule 89 (mulExp)
    SEMIC      reduce using rule 89 (mulExp)


State 85

   94 factor: fCall •

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    SEMIC      reduce using rule 94 (factor)


State 86

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC • $@6 stmtList ENDFUNC

    ID           reduce using rule 15 ($@6)
    TYPE         reduce using rule 15 ($@6)
    NIL          reduce using rule 15 ($@6)
    INTEGER      reduce using rule 15 ($@6)
    DECIMAL      reduce using rule 15 ($@6)
    ERRORTOKEN   reduce using rule 15 ($@6)
    ADD          reduce using rule 15 ($@6)
    SUB          reduce using rule 15 ($@6)
    HEADLIST     reduce using rule 15 ($@6)
    TAILLIST     reduce using rule 15 ($@6)
    DESTROYHEAD  reduce using rule 15 ($@6)
    IF           reduce using rule 15 ($@6)
    FOR          reduce using rule 15 ($@6)
    READ         reduce using rule 15 ($@6)
    WRITE        reduce using rule 15 ($@6)
    WRITELN      reduce using rule 15 ($@6)
    RETURN       reduce using rule 15 ($@6)
    STFUNC       reduce using rule 15 ($@6)
    PARENL       reduce using rule 15 ($@6)

    $@6  go to state 126


State 87

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 • stmtList ENDFUNC

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    stmtList              go to state 127
    primitiveStmt         go to state 61
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 88

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    ENDFUNC      shift, and go to state 128
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    primitiveStmt         go to state 107
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 89

   51 appendOps: ID APPEND • ID

    ID  shift, and go to state 129


State 90

   57 mapFilterOps: ID FILTER • ID

    ID  shift, and go to state 130


State 91

   61 assignExp: ID ASSIGN • expression

    ID           shift, and go to state 39
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    PARENL       shift, and go to state 57

    listExp         go to state 67
    appendOps       go to state 68
    returnListOps   go to state 69
    returnListOp    go to state 70
    destroyHeadOps  go to state 71
    mapFilterOps    go to state 72
    expression      go to state 131
    assignExp       go to state 74
    simpleExp       go to state 75
    constOp         go to state 76
    binLogicalExp   go to state 79
    relationalExp   go to state 80
    sumExp          go to state 81
    sumOp           go to state 82
    mulExp          go to state 83
    factor          go to state 84
    fCall           go to state 85


State 92

   56 mapFilterOps: ID MAP • ID

    ID  shift, and go to state 132


State 93

   98 fCall: ID PARENL • callParams PARENR
   99      | ID PARENL • PARENR

    ID          shift, and go to state 219
    NIL         shift, and go to state 220
    INTEGER     shift, and go to state 221
    DECIMAL     shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 224
    PARENR      shift, and go to state 133

    simpleExp      go to state 134
    constOp        go to state 225
    binLogicalExp  go to state 226
    relationalExp  go to state 227
    sumExp         go to state 228
    sumOp          go to state 229
    mulExp         go to state 230
    factor         go to state 231
    fCall          go to state 232
    callParams     go to state 135


State 94

   20 simpleVarDeclaration: TYPE ID •

    SEMIC  reduce using rule 20 (simpleVarDeclaration)


State 95

   21 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  shift, and go to state 136


State 96

   55 destroyHeadOps: DESTROYHEAD ID •

    SEMIC  reduce using rule 55 (destroyHeadOps)


State 97

   41 ifStmt: IF PARENL • simpleExp PARENR

    ID          shift, and go to state 104
    NIL         shift, and go to state 186
    INTEGER     shift, and go to state 187
    DECIMAL     shift, and go to state 188
    ERRORTOKEN  shift, and go to state 189
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 190

    simpleExp      go to state 137
    constOp        go to state 191
    binLogicalExp  go to state 192
    relationalExp  go to state 193
    sumExp         go to state 194
    sumOp          go to state 195
    mulExp         go to state 196
    factor         go to state 197
    fCall          go to state 198


State 98

   44 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   45         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 138
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 57

    assignExp      go to state 139
    simpleExp      go to state 140
    constOp        go to state 76
    binLogicalExp  go to state 79
    relationalExp  go to state 80
    sumExp         go to state 81
    sumOp          go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 99

   66 inOp: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 141


State 100

   67 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID           shift, and go to state 142
    STRING       shift, and go to state 143
    NIL          shift, and go to state 186
    INTEGER      shift, and go to state 187
    DECIMAL      shift, and go to state 188
    ERRORTOKEN   shift, and go to state 189
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 233
    PARENL       shift, and go to state 190

    listExp         go to state 144
    appendOps       go to state 234
    returnListOps   go to state 235
    returnListOp    go to state 236
    destroyHeadOps  go to state 237
    mapFilterOps    go to state 238
    simpleExp       go to state 145
    constOp         go to state 191
    outConst        go to state 146
    binLogicalExp   go to state 192
    relationalExp   go to state 193
    sumExp          go to state 194
    sumOp           go to state 195
    mulExp          go to state 196
    factor          go to state 197
    fCall           go to state 198


State 101

   68 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID           shift, and go to state 142
    STRING       shift, and go to state 143
    NIL          shift, and go to state 186
    INTEGER      shift, and go to state 187
    DECIMAL      shift, and go to state 188
    ERRORTOKEN   shift, and go to state 189
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 233
    PARENL       shift, and go to state 190

    listExp         go to state 144
    appendOps       go to state 234
    returnListOps   go to state 235
    returnListOp    go to state 236
    destroyHeadOps  go to state 237
    mapFilterOps    go to state 238
    simpleExp       go to state 145
    constOp         go to state 191
    outConst        go to state 147
    binLogicalExp   go to state 192
    relationalExp   go to state 193
    sumExp          go to state 194
    sumOp           go to state 195
    mulExp          go to state 196
    factor          go to state 197
    fCall           go to state 198


State 102

   46 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 148


State 103

   27 compoundStmt: STFUNC stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    ENDFUNC      shift, and go to state 149
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    primitiveStmt         go to state 107
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 104

   93 factor: ID •
   98 fCall: ID • PARENL callParams PARENR
   99      | ID • PARENL PARENR

    PARENL  shift, and go to state 239

    ADD        reduce using rule 93 (factor)
    SUB        reduce using rule 93 (factor)
    MULT       reduce using rule 93 (factor)
    DIV        reduce using rule 93 (factor)
    OR         reduce using rule 93 (factor)
    AND        reduce using rule 93 (factor)
    SMALLER    reduce using rule 93 (factor)
    GREATER    reduce using rule 93 (factor)
    SMALLEQ    reduce using rule 93 (factor)
    GREATEQ    reduce using rule 93 (factor)
    EQUALS     reduce using rule 93 (factor)
    DIFFERENT  reduce using rule 93 (factor)
    PARENR     reduce using rule 93 (factor)


State 105

   95 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 150


State 106

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC •

    $end  reduce using rule 13 (funcDeclaration)
    TYPE  reduce using rule 13 (funcDeclaration)


State 107

   28 stmtList: stmtList primitiveStmt •

    ID           reduce using rule 28 (stmtList)
    TYPE         reduce using rule 28 (stmtList)
    NIL          reduce using rule 28 (stmtList)
    INTEGER      reduce using rule 28 (stmtList)
    DECIMAL      reduce using rule 28 (stmtList)
    ERRORTOKEN   reduce using rule 28 (stmtList)
    ADD          reduce using rule 28 (stmtList)
    SUB          reduce using rule 28 (stmtList)
    HEADLIST     reduce using rule 28 (stmtList)
    TAILLIST     reduce using rule 28 (stmtList)
    DESTROYHEAD  reduce using rule 28 (stmtList)
    IF           reduce using rule 28 (stmtList)
    FOR          reduce using rule 28 (stmtList)
    READ         reduce using rule 28 (stmtList)
    WRITE        reduce using rule 28 (stmtList)
    WRITELN      reduce using rule 28 (stmtList)
    RETURN       reduce using rule 28 (stmtList)
    STFUNC       reduce using rule 28 (stmtList)
    ENDFUNC      reduce using rule 28 (stmtList)
    PARENL       reduce using rule 28 (stmtList)


State 108

   39 condStmt: ifStmt primitiveStmt •
   40         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 151

    ID           reduce using rule 39 (condStmt)
    TYPE         reduce using rule 39 (condStmt)
    NIL          reduce using rule 39 (condStmt)
    INTEGER      reduce using rule 39 (condStmt)
    DECIMAL      reduce using rule 39 (condStmt)
    ERRORTOKEN   reduce using rule 39 (condStmt)
    ADD          reduce using rule 39 (condStmt)
    SUB          reduce using rule 39 (condStmt)
    HEADLIST     reduce using rule 39 (condStmt)
    TAILLIST     reduce using rule 39 (condStmt)
    DESTROYHEAD  reduce using rule 39 (condStmt)
    IF           reduce using rule 39 (condStmt)
    FOR          reduce using rule 39 (condStmt)
    READ         reduce using rule 39 (condStmt)
    WRITE        reduce using rule 39 (condStmt)
    WRITELN      reduce using rule 39 (condStmt)
    RETURN       reduce using rule 39 (condStmt)
    STFUNC       reduce using rule 39 (condStmt)
    ENDFUNC      reduce using rule 39 (condStmt)
    PARENL       reduce using rule 39 (condStmt)

    elseStmt  go to state 152


State 109

   52 returnListOps: returnListOp ID •

    SEMIC  reduce using rule 52 (returnListOps)


State 110

   38 exprStmt: expression SEMIC •

    ID           reduce using rule 38 (exprStmt)
    TYPE         reduce using rule 38 (exprStmt)
    NIL          reduce using rule 38 (exprStmt)
    INTEGER      reduce using rule 38 (exprStmt)
    DECIMAL      reduce using rule 38 (exprStmt)
    ERRORTOKEN   reduce using rule 38 (exprStmt)
    ADD          reduce using rule 38 (exprStmt)
    SUB          reduce using rule 38 (exprStmt)
    HEADLIST     reduce using rule 38 (exprStmt)
    TAILLIST     reduce using rule 38 (exprStmt)
    DESTROYHEAD  reduce using rule 38 (exprStmt)
    IF           reduce using rule 38 (exprStmt)
    FOR          reduce using rule 38 (exprStmt)
    READ         reduce using rule 38 (exprStmt)
    WRITE        reduce using rule 38 (exprStmt)
    WRITELN      reduce using rule 38 (exprStmt)
    RETURN       reduce using rule 38 (exprStmt)
    STFUNC       reduce using rule 38 (exprStmt)
    ENDFUNC      reduce using rule 38 (exprStmt)
    PARENL       reduce using rule 38 (exprStmt)


State 111

   74 binLogicalOp: OR •

    SMALLER    reduce using rule 74 (binLogicalOp)
    GREATER    reduce using rule 74 (binLogicalOp)
    SMALLEQ    reduce using rule 74 (binLogicalOp)
    GREATEQ    reduce using rule 74 (binLogicalOp)
    EQUALS     reduce using rule 74 (binLogicalOp)
    DIFFERENT  reduce using rule 74 (binLogicalOp)


State 112

   75 binLogicalOp: AND •

    SMALLER    reduce using rule 75 (binLogicalOp)
    GREATER    reduce using rule 75 (binLogicalOp)
    SMALLEQ    reduce using rule 75 (binLogicalOp)
    GREATEQ    reduce using rule 75 (binLogicalOp)
    EQUALS     reduce using rule 75 (binLogicalOp)
    DIFFERENT  reduce using rule 75 (binLogicalOp)


State 113

   72 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    shift, and go to state 240
    GREATER    shift, and go to state 241
    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245

    relationalOp  go to state 153


State 114

   78 relationalOp: SMALLER •

    ID          reduce using rule 78 (relationalOp)
    NIL         reduce using rule 78 (relationalOp)
    INTEGER     reduce using rule 78 (relationalOp)
    DECIMAL     reduce using rule 78 (relationalOp)
    ERRORTOKEN  reduce using rule 78 (relationalOp)
    ADD         reduce using rule 78 (relationalOp)
    SUB         reduce using rule 78 (relationalOp)
    PARENL      reduce using rule 78 (relationalOp)


State 115

   79 relationalOp: GREATER •

    ID          reduce using rule 79 (relationalOp)
    NIL         reduce using rule 79 (relationalOp)
    INTEGER     reduce using rule 79 (relationalOp)
    DECIMAL     reduce using rule 79 (relationalOp)
    ERRORTOKEN  reduce using rule 79 (relationalOp)
    ADD         reduce using rule 79 (relationalOp)
    SUB         reduce using rule 79 (relationalOp)
    PARENL      reduce using rule 79 (relationalOp)


State 116

   80 relationalOp: SMALLEQ •

    ID          reduce using rule 80 (relationalOp)
    NIL         reduce using rule 80 (relationalOp)
    INTEGER     reduce using rule 80 (relationalOp)
    DECIMAL     reduce using rule 80 (relationalOp)
    ERRORTOKEN  reduce using rule 80 (relationalOp)
    ADD         reduce using rule 80 (relationalOp)
    SUB         reduce using rule 80 (relationalOp)
    PARENL      reduce using rule 80 (relationalOp)


State 117

   81 relationalOp: GREATEQ •

    ID          reduce using rule 81 (relationalOp)
    NIL         reduce using rule 81 (relationalOp)
    INTEGER     reduce using rule 81 (relationalOp)
    DECIMAL     reduce using rule 81 (relationalOp)
    ERRORTOKEN  reduce using rule 81 (relationalOp)
    ADD         reduce using rule 81 (relationalOp)
    SUB         reduce using rule 81 (relationalOp)
    PARENL      reduce using rule 81 (relationalOp)


State 118

   82 relationalOp: EQUALS •

    ID          reduce using rule 82 (relationalOp)
    NIL         reduce using rule 82 (relationalOp)
    INTEGER     reduce using rule 82 (relationalOp)
    DECIMAL     reduce using rule 82 (relationalOp)
    ERRORTOKEN  reduce using rule 82 (relationalOp)
    ADD         reduce using rule 82 (relationalOp)
    SUB         reduce using rule 82 (relationalOp)
    PARENL      reduce using rule 82 (relationalOp)


State 119

   83 relationalOp: DIFFERENT •

    ID          reduce using rule 83 (relationalOp)
    NIL         reduce using rule 83 (relationalOp)
    INTEGER     reduce using rule 83 (relationalOp)
    DECIMAL     reduce using rule 83 (relationalOp)
    ERRORTOKEN  reduce using rule 83 (relationalOp)
    ADD         reduce using rule 83 (relationalOp)
    SUB         reduce using rule 83 (relationalOp)
    PARENL      reduce using rule 83 (relationalOp)


State 120

   76 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 218
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 57

    constOp  go to state 76
    sumExp   go to state 154
    sumOp    go to state 82
    mulExp   go to state 83
    factor   go to state 84
    fCall    go to state 85


State 121

   84 sumExp: sumExp sumOp • mulExp

    ID          shift, and go to state 218
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 57

    constOp  go to state 76
    sumOp    go to state 82
    mulExp   go to state 155
    factor   go to state 84
    fCall    go to state 85


State 122

   90 mulExp: sumOp factor •

    ADD        reduce using rule 90 (mulExp)
    SUB        reduce using rule 90 (mulExp)
    MULT       reduce using rule 90 (mulExp)
    DIV        reduce using rule 90 (mulExp)
    OR         reduce using rule 90 (mulExp)
    AND        reduce using rule 90 (mulExp)
    SMALLER    reduce using rule 90 (mulExp)
    GREATER    reduce using rule 90 (mulExp)
    SMALLEQ    reduce using rule 90 (mulExp)
    GREATEQ    reduce using rule 90 (mulExp)
    EQUALS     reduce using rule 90 (mulExp)
    DIFFERENT  reduce using rule 90 (mulExp)
    SEMIC      reduce using rule 90 (mulExp)


State 123

   91 mulOp: MULT •

    ID          reduce using rule 91 (mulOp)
    NIL         reduce using rule 91 (mulOp)
    INTEGER     reduce using rule 91 (mulOp)
    DECIMAL     reduce using rule 91 (mulOp)
    ERRORTOKEN  reduce using rule 91 (mulOp)
    PARENL      reduce using rule 91 (mulOp)


State 124

   92 mulOp: DIV •

    ID          reduce using rule 92 (mulOp)
    NIL         reduce using rule 92 (mulOp)
    INTEGER     reduce using rule 92 (mulOp)
    DECIMAL     reduce using rule 92 (mulOp)
    ERRORTOKEN  reduce using rule 92 (mulOp)
    PARENL      reduce using rule 92 (mulOp)


State 125

   88 mulExp: mulExp mulOp • factor

    ID          shift, and go to state 218
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    PARENL      shift, and go to state 57

    constOp  go to state 76
    factor   go to state 156
    fCall    go to state 85


State 126

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 • stmtList ENDFUNC

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    stmtList              go to state 157
    primitiveStmt         go to state 61
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 127

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    ENDFUNC      shift, and go to state 158
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    primitiveStmt         go to state 107
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 128

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC •

    $end  reduce using rule 10 (funcDeclaration)
    TYPE  reduce using rule 10 (funcDeclaration)


State 129

   51 appendOps: ID APPEND ID •

    SEMIC  reduce using rule 51 (appendOps)


State 130

   57 mapFilterOps: ID FILTER ID •

    SEMIC  reduce using rule 57 (mapFilterOps)


State 131

   61 assignExp: ID ASSIGN expression •

    SEMIC  reduce using rule 61 (assignExp)


State 132

   56 mapFilterOps: ID MAP ID •

    SEMIC  reduce using rule 56 (mapFilterOps)


State 133

   99 fCall: ID PARENL PARENR •

    ADD        reduce using rule 99 (fCall)
    SUB        reduce using rule 99 (fCall)
    MULT       reduce using rule 99 (fCall)
    DIV        reduce using rule 99 (fCall)
    OR         reduce using rule 99 (fCall)
    AND        reduce using rule 99 (fCall)
    SMALLER    reduce using rule 99 (fCall)
    GREATER    reduce using rule 99 (fCall)
    SMALLEQ    reduce using rule 99 (fCall)
    GREATEQ    reduce using rule 99 (fCall)
    EQUALS     reduce using rule 99 (fCall)
    DIFFERENT  reduce using rule 99 (fCall)
    SEMIC      reduce using rule 99 (fCall)


State 134

  101 callParams: simpleExp •

    COMMA   reduce using rule 101 (callParams)
    PARENR  reduce using rule 101 (callParams)


State 135

   98 fCall: ID PARENL callParams • PARENR
  100 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 159
    PARENR  shift, and go to state 160


State 136

   21 simpleVarDeclaration: TYPE LISTTYPE ID •

    SEMIC  reduce using rule 21 (simpleVarDeclaration)


State 137

   41 ifStmt: IF PARENL simpleExp • PARENR

    PARENR  shift, and go to state 161


State 138

   61 assignExp: ID • ASSIGN expression
   93 factor: ID •
   98 fCall: ID • PARENL callParams PARENR
   99      | ID • PARENL PARENR

    ASSIGN  shift, and go to state 91
    PARENL  shift, and go to state 93

    ADD        reduce using rule 93 (factor)
    SUB        reduce using rule 93 (factor)
    MULT       reduce using rule 93 (factor)
    DIV        reduce using rule 93 (factor)
    OR         reduce using rule 93 (factor)
    AND        reduce using rule 93 (factor)
    SMALLER    reduce using rule 93 (factor)
    GREATER    reduce using rule 93 (factor)
    SMALLEQ    reduce using rule 93 (factor)
    GREATEQ    reduce using rule 93 (factor)
    EQUALS     reduce using rule 93 (factor)
    DIFFERENT  reduce using rule 93 (factor)
    SEMIC      reduce using rule 93 (factor)


State 139

   44 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 162


State 140

   45 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 163


State 141

   66 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 164


State 142

   51 appendOps: ID • APPEND ID
   56 mapFilterOps: ID • MAP ID
   57             | ID • FILTER ID
   93 factor: ID •
   98 fCall: ID • PARENL callParams PARENR
   99      | ID • PARENL PARENR

    APPEND  shift, and go to state 246
    FILTER  shift, and go to state 247
    MAP     shift, and go to state 248
    PARENL  shift, and go to state 239

    ADD        reduce using rule 93 (factor)
    SUB        reduce using rule 93 (factor)
    MULT       reduce using rule 93 (factor)
    DIV        reduce using rule 93 (factor)
    OR         reduce using rule 93 (factor)
    AND        reduce using rule 93 (factor)
    SMALLER    reduce using rule 93 (factor)
    GREATER    reduce using rule 93 (factor)
    SMALLEQ    reduce using rule 93 (factor)
    GREATEQ    reduce using rule 93 (factor)
    EQUALS     reduce using rule 93 (factor)
    DIFFERENT  reduce using rule 93 (factor)
    PARENR     reduce using rule 93 (factor)


State 143

   69 outConst: STRING •

    PARENR  reduce using rule 69 (outConst)


State 144

   71 outConst: listExp •

    PARENR  reduce using rule 71 (outConst)


State 145

   70 outConst: simpleExp •

    PARENR  reduce using rule 70 (outConst)


State 146

   67 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 165


State 147

   68 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 166


State 148

   46 returnStmt: RETURN expression SEMIC •

    ID           reduce using rule 46 (returnStmt)
    TYPE         reduce using rule 46 (returnStmt)
    NIL          reduce using rule 46 (returnStmt)
    INTEGER      reduce using rule 46 (returnStmt)
    DECIMAL      reduce using rule 46 (returnStmt)
    ERRORTOKEN   reduce using rule 46 (returnStmt)
    ADD          reduce using rule 46 (returnStmt)
    SUB          reduce using rule 46 (returnStmt)
    HEADLIST     reduce using rule 46 (returnStmt)
    TAILLIST     reduce using rule 46 (returnStmt)
    DESTROYHEAD  reduce using rule 46 (returnStmt)
    IF           reduce using rule 46 (returnStmt)
    FOR          reduce using rule 46 (returnStmt)
    READ         reduce using rule 46 (returnStmt)
    WRITE        reduce using rule 46 (returnStmt)
    WRITELN      reduce using rule 46 (returnStmt)
    RETURN       reduce using rule 46 (returnStmt)
    STFUNC       reduce using rule 46 (returnStmt)
    ENDFUNC      reduce using rule 46 (returnStmt)
    PARENL       reduce using rule 46 (returnStmt)


State 149

   27 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduce using rule 27 (compoundStmt)
    TYPE         reduce using rule 27 (compoundStmt)
    NIL          reduce using rule 27 (compoundStmt)
    INTEGER      reduce using rule 27 (compoundStmt)
    DECIMAL      reduce using rule 27 (compoundStmt)
    ERRORTOKEN   reduce using rule 27 (compoundStmt)
    ADD          reduce using rule 27 (compoundStmt)
    SUB          reduce using rule 27 (compoundStmt)
    HEADLIST     reduce using rule 27 (compoundStmt)
    TAILLIST     reduce using rule 27 (compoundStmt)
    DESTROYHEAD  reduce using rule 27 (compoundStmt)
    IF           reduce using rule 27 (compoundStmt)
    FOR          reduce using rule 27 (compoundStmt)
    READ         reduce using rule 27 (compoundStmt)
    WRITE        reduce using rule 27 (compoundStmt)
    WRITELN      reduce using rule 27 (compoundStmt)
    RETURN       reduce using rule 27 (compoundStmt)
    STFUNC       reduce using rule 27 (compoundStmt)
    ENDFUNC      reduce using rule 27 (compoundStmt)
    PARENL       reduce using rule 27 (compoundStmt)


State 150

   95 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 95 (factor)
    SUB        reduce using rule 95 (factor)
    MULT       reduce using rule 95 (factor)
    DIV        reduce using rule 95 (factor)
    OR         reduce using rule 95 (factor)
    AND        reduce using rule 95 (factor)
    SMALLER    reduce using rule 95 (factor)
    GREATER    reduce using rule 95 (factor)
    SMALLEQ    reduce using rule 95 (factor)
    GREATEQ    reduce using rule 95 (factor)
    EQUALS     reduce using rule 95 (factor)
    DIFFERENT  reduce using rule 95 (factor)
    SEMIC      reduce using rule 95 (factor)


State 151

   43 elseStmt: ELSE • $@9 primitiveStmt

    ID           reduce using rule 42 ($@9)
    TYPE         reduce using rule 42 ($@9)
    NIL          reduce using rule 42 ($@9)
    INTEGER      reduce using rule 42 ($@9)
    DECIMAL      reduce using rule 42 ($@9)
    ERRORTOKEN   reduce using rule 42 ($@9)
    ADD          reduce using rule 42 ($@9)
    SUB          reduce using rule 42 ($@9)
    HEADLIST     reduce using rule 42 ($@9)
    TAILLIST     reduce using rule 42 ($@9)
    DESTROYHEAD  reduce using rule 42 ($@9)
    IF           reduce using rule 42 ($@9)
    FOR          reduce using rule 42 ($@9)
    READ         reduce using rule 42 ($@9)
    WRITE        reduce using rule 42 ($@9)
    WRITELN      reduce using rule 42 ($@9)
    RETURN       reduce using rule 42 ($@9)
    STFUNC       reduce using rule 42 ($@9)
    PARENL       reduce using rule 42 ($@9)

    $@9  go to state 167


State 152

   40 condStmt: ifStmt primitiveStmt elseStmt •

    ID           reduce using rule 40 (condStmt)
    TYPE         reduce using rule 40 (condStmt)
    NIL          reduce using rule 40 (condStmt)
    INTEGER      reduce using rule 40 (condStmt)
    DECIMAL      reduce using rule 40 (condStmt)
    ERRORTOKEN   reduce using rule 40 (condStmt)
    ADD          reduce using rule 40 (condStmt)
    SUB          reduce using rule 40 (condStmt)
    HEADLIST     reduce using rule 40 (condStmt)
    TAILLIST     reduce using rule 40 (condStmt)
    DESTROYHEAD  reduce using rule 40 (condStmt)
    IF           reduce using rule 40 (condStmt)
    FOR          reduce using rule 40 (condStmt)
    READ         reduce using rule 40 (condStmt)
    WRITE        reduce using rule 40 (condStmt)
    WRITELN      reduce using rule 40 (condStmt)
    RETURN       reduce using rule 40 (condStmt)
    STFUNC       reduce using rule 40 (condStmt)
    ENDFUNC      reduce using rule 40 (condStmt)
    PARENL       reduce using rule 40 (condStmt)


State 153

   72 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR     reduce using rule 72 (binLogicalExp)
    AND    reduce using rule 72 (binLogicalExp)
    SEMIC  reduce using rule 72 (binLogicalExp)


State 154

   76 relationalExp: relationalExp relationalOp sumExp •
   84 sumExp: sumExp • sumOp mulExp

    ADD  shift, and go to state 216
    SUB  shift, and go to state 217

    OR         reduce using rule 76 (relationalExp)
    AND        reduce using rule 76 (relationalExp)
    SMALLER    reduce using rule 76 (relationalExp)
    GREATER    reduce using rule 76 (relationalExp)
    SMALLEQ    reduce using rule 76 (relationalExp)
    GREATEQ    reduce using rule 76 (relationalExp)
    EQUALS     reduce using rule 76 (relationalExp)
    DIFFERENT  reduce using rule 76 (relationalExp)
    SEMIC      reduce using rule 76 (relationalExp)

    sumOp  go to state 121


State 155

   84 sumExp: sumExp sumOp mulExp •
   88 mulExp: mulExp • mulOp factor

    MULT  shift, and go to state 123
    DIV   shift, and go to state 124

    ADD        reduce using rule 84 (sumExp)
    SUB        reduce using rule 84 (sumExp)
    OR         reduce using rule 84 (sumExp)
    AND        reduce using rule 84 (sumExp)
    SMALLER    reduce using rule 84 (sumExp)
    GREATER    reduce using rule 84 (sumExp)
    SMALLEQ    reduce using rule 84 (sumExp)
    GREATEQ    reduce using rule 84 (sumExp)
    EQUALS     reduce using rule 84 (sumExp)
    DIFFERENT  reduce using rule 84 (sumExp)
    SEMIC      reduce using rule 84 (sumExp)

    mulOp  go to state 125


State 156

   88 mulExp: mulExp mulOp factor •

    ADD        reduce using rule 88 (mulExp)
    SUB        reduce using rule 88 (mulExp)
    MULT       reduce using rule 88 (mulExp)
    DIV        reduce using rule 88 (mulExp)
    OR         reduce using rule 88 (mulExp)
    AND        reduce using rule 88 (mulExp)
    SMALLER    reduce using rule 88 (mulExp)
    GREATER    reduce using rule 88 (mulExp)
    SMALLEQ    reduce using rule 88 (mulExp)
    GREATEQ    reduce using rule 88 (mulExp)
    EQUALS     reduce using rule 88 (mulExp)
    DIFFERENT  reduce using rule 88 (mulExp)
    SEMIC      reduce using rule 88 (mulExp)


State 157

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    ENDFUNC      shift, and go to state 168
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    primitiveStmt         go to state 107
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 158

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC •

    $end  reduce using rule 19 (funcDeclaration)
    TYPE  reduce using rule 19 (funcDeclaration)


State 159

  100 callParams: callParams COMMA • simpleExp

    ID          shift, and go to state 219
    NIL         shift, and go to state 220
    INTEGER     shift, and go to state 221
    DECIMAL     shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 224

    simpleExp      go to state 169
    constOp        go to state 225
    binLogicalExp  go to state 226
    relationalExp  go to state 227
    sumExp         go to state 228
    sumOp          go to state 229
    mulExp         go to state 230
    factor         go to state 231
    fCall          go to state 232


State 160

   98 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 98 (fCall)
    SUB        reduce using rule 98 (fCall)
    MULT       reduce using rule 98 (fCall)
    DIV        reduce using rule 98 (fCall)
    OR         reduce using rule 98 (fCall)
    AND        reduce using rule 98 (fCall)
    SMALLER    reduce using rule 98 (fCall)
    GREATER    reduce using rule 98 (fCall)
    SMALLEQ    reduce using rule 98 (fCall)
    GREATEQ    reduce using rule 98 (fCall)
    EQUALS     reduce using rule 98 (fCall)
    DIFFERENT  reduce using rule 98 (fCall)
    SEMIC      reduce using rule 98 (fCall)


State 161

   41 ifStmt: IF PARENL simpleExp PARENR •

    ID           reduce using rule 41 (ifStmt)
    TYPE         reduce using rule 41 (ifStmt)
    NIL          reduce using rule 41 (ifStmt)
    INTEGER      reduce using rule 41 (ifStmt)
    DECIMAL      reduce using rule 41 (ifStmt)
    ERRORTOKEN   reduce using rule 41 (ifStmt)
    ADD          reduce using rule 41 (ifStmt)
    SUB          reduce using rule 41 (ifStmt)
    HEADLIST     reduce using rule 41 (ifStmt)
    TAILLIST     reduce using rule 41 (ifStmt)
    DESTROYHEAD  reduce using rule 41 (ifStmt)
    IF           reduce using rule 41 (ifStmt)
    FOR          reduce using rule 41 (ifStmt)
    READ         reduce using rule 41 (ifStmt)
    WRITE        reduce using rule 41 (ifStmt)
    WRITELN      reduce using rule 41 (ifStmt)
    RETURN       reduce using rule 41 (ifStmt)
    STFUNC       reduce using rule 41 (ifStmt)
    PARENL       reduce using rule 41 (ifStmt)


State 162

   44 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 218
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 57

    simpleExp      go to state 170
    constOp        go to state 76
    binLogicalExp  go to state 79
    relationalExp  go to state 80
    sumExp         go to state 81
    sumOp          go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 163

   45 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 218
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 57

    simpleExp      go to state 171
    constOp        go to state 76
    binLogicalExp  go to state 79
    relationalExp  go to state 80
    sumExp         go to state 81
    sumOp          go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 164

   66 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 172


State 165

   67 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 173


State 166

   68 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 174


State 167

   43 elseStmt: ELSE $@9 • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    primitiveStmt         go to state 175
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 168

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC •

    $end  reduce using rule 16 (funcDeclaration)
    TYPE  reduce using rule 16 (funcDeclaration)


State 169

  100 callParams: callParams COMMA simpleExp •

    COMMA   reduce using rule 100 (callParams)
    PARENR  reduce using rule 100 (callParams)


State 170

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 176


State 171

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 177


State 172

   66 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduce using rule 66 (inOp)
    TYPE         reduce using rule 66 (inOp)
    NIL          reduce using rule 66 (inOp)
    INTEGER      reduce using rule 66 (inOp)
    DECIMAL      reduce using rule 66 (inOp)
    ERRORTOKEN   reduce using rule 66 (inOp)
    ADD          reduce using rule 66 (inOp)
    SUB          reduce using rule 66 (inOp)
    HEADLIST     reduce using rule 66 (inOp)
    TAILLIST     reduce using rule 66 (inOp)
    DESTROYHEAD  reduce using rule 66 (inOp)
    IF           reduce using rule 66 (inOp)
    FOR          reduce using rule 66 (inOp)
    READ         reduce using rule 66 (inOp)
    WRITE        reduce using rule 66 (inOp)
    WRITELN      reduce using rule 66 (inOp)
    RETURN       reduce using rule 66 (inOp)
    STFUNC       reduce using rule 66 (inOp)
    ENDFUNC      reduce using rule 66 (inOp)
    PARENL       reduce using rule 66 (inOp)


State 173

   67 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduce using rule 67 (outOp)
    TYPE         reduce using rule 67 (outOp)
    NIL          reduce using rule 67 (outOp)
    INTEGER      reduce using rule 67 (outOp)
    DECIMAL      reduce using rule 67 (outOp)
    ERRORTOKEN   reduce using rule 67 (outOp)
    ADD          reduce using rule 67 (outOp)
    SUB          reduce using rule 67 (outOp)
    HEADLIST     reduce using rule 67 (outOp)
    TAILLIST     reduce using rule 67 (outOp)
    DESTROYHEAD  reduce using rule 67 (outOp)
    IF           reduce using rule 67 (outOp)
    FOR          reduce using rule 67 (outOp)
    READ         reduce using rule 67 (outOp)
    WRITE        reduce using rule 67 (outOp)
    WRITELN      reduce using rule 67 (outOp)
    RETURN       reduce using rule 67 (outOp)
    STFUNC       reduce using rule 67 (outOp)
    ENDFUNC      reduce using rule 67 (outOp)
    PARENL       reduce using rule 67 (outOp)


State 174

   68 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduce using rule 68 (outOp)
    TYPE         reduce using rule 68 (outOp)
    NIL          reduce using rule 68 (outOp)
    INTEGER      reduce using rule 68 (outOp)
    DECIMAL      reduce using rule 68 (outOp)
    ERRORTOKEN   reduce using rule 68 (outOp)
    ADD          reduce using rule 68 (outOp)
    SUB          reduce using rule 68 (outOp)
    HEADLIST     reduce using rule 68 (outOp)
    TAILLIST     reduce using rule 68 (outOp)
    DESTROYHEAD  reduce using rule 68 (outOp)
    IF           reduce using rule 68 (outOp)
    FOR          reduce using rule 68 (outOp)
    READ         reduce using rule 68 (outOp)
    WRITE        reduce using rule 68 (outOp)
    WRITELN      reduce using rule 68 (outOp)
    RETURN       reduce using rule 68 (outOp)
    STFUNC       reduce using rule 68 (outOp)
    ENDFUNC      reduce using rule 68 (outOp)
    PARENL       reduce using rule 68 (outOp)


State 175

   43 elseStmt: ELSE $@9 primitiveStmt •

    ID           reduce using rule 43 (elseStmt)
    TYPE         reduce using rule 43 (elseStmt)
    NIL          reduce using rule 43 (elseStmt)
    INTEGER      reduce using rule 43 (elseStmt)
    DECIMAL      reduce using rule 43 (elseStmt)
    ERRORTOKEN   reduce using rule 43 (elseStmt)
    ADD          reduce using rule 43 (elseStmt)
    SUB          reduce using rule 43 (elseStmt)
    HEADLIST     reduce using rule 43 (elseStmt)
    TAILLIST     reduce using rule 43 (elseStmt)
    DESTROYHEAD  reduce using rule 43 (elseStmt)
    IF           reduce using rule 43 (elseStmt)
    FOR          reduce using rule 43 (elseStmt)
    READ         reduce using rule 43 (elseStmt)
    WRITE        reduce using rule 43 (elseStmt)
    WRITELN      reduce using rule 43 (elseStmt)
    RETURN       reduce using rule 43 (elseStmt)
    STFUNC       reduce using rule 43 (elseStmt)
    ENDFUNC      reduce using rule 43 (elseStmt)
    PARENL       reduce using rule 43 (elseStmt)


State 176

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 178

    assignExp  go to state 179


State 177

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 178

    assignExp  go to state 180


State 178

   61 assignExp: ID • ASSIGN expression

    ASSIGN  shift, and go to state 249


State 179

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 181


State 180

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 182


State 181

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    primitiveStmt         go to state 183
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 182

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    primitiveStmt         go to state 184
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 183

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduce using rule 44 (iterStmt)
    TYPE         reduce using rule 44 (iterStmt)
    NIL          reduce using rule 44 (iterStmt)
    INTEGER      reduce using rule 44 (iterStmt)
    DECIMAL      reduce using rule 44 (iterStmt)
    ERRORTOKEN   reduce using rule 44 (iterStmt)
    ADD          reduce using rule 44 (iterStmt)
    SUB          reduce using rule 44 (iterStmt)
    HEADLIST     reduce using rule 44 (iterStmt)
    TAILLIST     reduce using rule 44 (iterStmt)
    DESTROYHEAD  reduce using rule 44 (iterStmt)
    IF           reduce using rule 44 (iterStmt)
    FOR          reduce using rule 44 (iterStmt)
    READ         reduce using rule 44 (iterStmt)
    WRITE        reduce using rule 44 (iterStmt)
    WRITELN      reduce using rule 44 (iterStmt)
    RETURN       reduce using rule 44 (iterStmt)
    STFUNC       reduce using rule 44 (iterStmt)
    ENDFUNC      reduce using rule 44 (iterStmt)
    PARENL       reduce using rule 44 (iterStmt)


State 184

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduce using rule 45 (iterStmt)
    TYPE         reduce using rule 45 (iterStmt)
    NIL          reduce using rule 45 (iterStmt)
    INTEGER      reduce using rule 45 (iterStmt)
    DECIMAL      reduce using rule 45 (iterStmt)
    ERRORTOKEN   reduce using rule 45 (iterStmt)
    ADD          reduce using rule 45 (iterStmt)
    SUB          reduce using rule 45 (iterStmt)
    HEADLIST     reduce using rule 45 (iterStmt)
    TAILLIST     reduce using rule 45 (iterStmt)
    DESTROYHEAD  reduce using rule 45 (iterStmt)
    IF           reduce using rule 45 (iterStmt)
    FOR          reduce using rule 45 (iterStmt)
    READ         reduce using rule 45 (iterStmt)
    WRITE        reduce using rule 45 (iterStmt)
    WRITELN      reduce using rule 45 (iterStmt)
    RETURN       reduce using rule 45 (iterStmt)
    STFUNC       reduce using rule 45 (iterStmt)
    ENDFUNC      reduce using rule 45 (iterStmt)
    PARENL       reduce using rule 45 (iterStmt)


State 185

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 250


State 186

   65 constOp: NIL •

    ADD        reduce using rule 65 (constOp)
    SUB        reduce using rule 65 (constOp)
    MULT       reduce using rule 65 (constOp)
    DIV        reduce using rule 65 (constOp)
    OR         reduce using rule 65 (constOp)
    AND        reduce using rule 65 (constOp)
    SMALLER    reduce using rule 65 (constOp)
    GREATER    reduce using rule 65 (constOp)
    SMALLEQ    reduce using rule 65 (constOp)
    GREATEQ    reduce using rule 65 (constOp)
    EQUALS     reduce using rule 65 (constOp)
    DIFFERENT  reduce using rule 65 (constOp)
    PARENR     reduce using rule 65 (constOp)


State 187

   63 constOp: INTEGER •

    ADD        reduce using rule 63 (constOp)
    SUB        reduce using rule 63 (constOp)
    MULT       reduce using rule 63 (constOp)
    DIV        reduce using rule 63 (constOp)
    OR         reduce using rule 63 (constOp)
    AND        reduce using rule 63 (constOp)
    SMALLER    reduce using rule 63 (constOp)
    GREATER    reduce using rule 63 (constOp)
    SMALLEQ    reduce using rule 63 (constOp)
    GREATEQ    reduce using rule 63 (constOp)
    EQUALS     reduce using rule 63 (constOp)
    DIFFERENT  reduce using rule 63 (constOp)
    PARENR     reduce using rule 63 (constOp)


State 188

   64 constOp: DECIMAL •

    ADD        reduce using rule 64 (constOp)
    SUB        reduce using rule 64 (constOp)
    MULT       reduce using rule 64 (constOp)
    DIV        reduce using rule 64 (constOp)
    OR         reduce using rule 64 (constOp)
    AND        reduce using rule 64 (constOp)
    SMALLER    reduce using rule 64 (constOp)
    GREATER    reduce using rule 64 (constOp)
    SMALLEQ    reduce using rule 64 (constOp)
    GREATEQ    reduce using rule 64 (constOp)
    EQUALS     reduce using rule 64 (constOp)
    DIFFERENT  reduce using rule 64 (constOp)
    PARENR     reduce using rule 64 (constOp)


State 189

   97 factor: ERRORTOKEN •

    ADD        reduce using rule 97 (factor)
    SUB        reduce using rule 97 (factor)
    MULT       reduce using rule 97 (factor)
    DIV        reduce using rule 97 (factor)
    OR         reduce using rule 97 (factor)
    AND        reduce using rule 97 (factor)
    SMALLER    reduce using rule 97 (factor)
    GREATER    reduce using rule 97 (factor)
    SMALLEQ    reduce using rule 97 (factor)
    GREATEQ    reduce using rule 97 (factor)
    EQUALS     reduce using rule 97 (factor)
    DIFFERENT  reduce using rule 97 (factor)
    PARENR     reduce using rule 97 (factor)


State 190

   95 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 104
    NIL         shift, and go to state 186
    INTEGER     shift, and go to state 187
    DECIMAL     shift, and go to state 188
    ERRORTOKEN  shift, and go to state 189
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 190

    simpleExp      go to state 251
    constOp        go to state 191
    binLogicalExp  go to state 192
    relationalExp  go to state 193
    sumExp         go to state 194
    sumOp          go to state 195
    mulExp         go to state 196
    factor         go to state 197
    fCall          go to state 198


State 191

   96 factor: constOp •

    ADD        reduce using rule 96 (factor)
    SUB        reduce using rule 96 (factor)
    MULT       reduce using rule 96 (factor)
    DIV        reduce using rule 96 (factor)
    OR         reduce using rule 96 (factor)
    AND        reduce using rule 96 (factor)
    SMALLER    reduce using rule 96 (factor)
    GREATER    reduce using rule 96 (factor)
    SMALLEQ    reduce using rule 96 (factor)
    GREATEQ    reduce using rule 96 (factor)
    EQUALS     reduce using rule 96 (factor)
    DIFFERENT  reduce using rule 96 (factor)
    PARENR     reduce using rule 96 (factor)


State 192

   62 simpleExp: binLogicalExp •
   72 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   shift, and go to state 111
    AND  shift, and go to state 112

    PARENR  reduce using rule 62 (simpleExp)

    binLogicalOp  go to state 252


State 193

   73 binLogicalExp: relationalExp •
   76 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 114
    GREATER    shift, and go to state 115
    SMALLEQ    shift, and go to state 116
    GREATEQ    shift, and go to state 117
    EQUALS     shift, and go to state 118
    DIFFERENT  shift, and go to state 119

    OR      reduce using rule 73 (binLogicalExp)
    AND     reduce using rule 73 (binLogicalExp)
    PARENR  reduce using rule 73 (binLogicalExp)

    relationalOp  go to state 253


State 194

   77 relationalExp: sumExp •
   84 sumExp: sumExp • sumOp mulExp

    ADD  shift, and go to state 216
    SUB  shift, and go to state 217

    OR         reduce using rule 77 (relationalExp)
    AND        reduce using rule 77 (relationalExp)
    SMALLER    reduce using rule 77 (relationalExp)
    GREATER    reduce using rule 77 (relationalExp)
    SMALLEQ    reduce using rule 77 (relationalExp)
    GREATEQ    reduce using rule 77 (relationalExp)
    EQUALS     reduce using rule 77 (relationalExp)
    DIFFERENT  reduce using rule 77 (relationalExp)
    PARENR     reduce using rule 77 (relationalExp)

    sumOp  go to state 254


State 195

   90 mulExp: sumOp • factor

    ID          shift, and go to state 104
    NIL         shift, and go to state 186
    INTEGER     shift, and go to state 187
    DECIMAL     shift, and go to state 188
    ERRORTOKEN  shift, and go to state 189
    PARENL      shift, and go to state 190

    constOp  go to state 191
    factor   go to state 255
    fCall    go to state 198


State 196

   85 sumExp: mulExp •
   88 mulExp: mulExp • mulOp factor

    MULT  shift, and go to state 123
    DIV   shift, and go to state 124

    ADD        reduce using rule 85 (sumExp)
    SUB        reduce using rule 85 (sumExp)
    OR         reduce using rule 85 (sumExp)
    AND        reduce using rule 85 (sumExp)
    SMALLER    reduce using rule 85 (sumExp)
    GREATER    reduce using rule 85 (sumExp)
    SMALLEQ    reduce using rule 85 (sumExp)
    GREATEQ    reduce using rule 85 (sumExp)
    EQUALS     reduce using rule 85 (sumExp)
    DIFFERENT  reduce using rule 85 (sumExp)
    PARENR     reduce using rule 85 (sumExp)

    mulOp  go to state 256


State 197

   89 mulExp: factor •

    ADD        reduce using rule 89 (mulExp)
    SUB        reduce using rule 89 (mulExp)
    MULT       reduce using rule 89 (mulExp)
    DIV        reduce using rule 89 (mulExp)
    OR         reduce using rule 89 (mulExp)
    AND        reduce using rule 89 (mulExp)
    SMALLER    reduce using rule 89 (mulExp)
    GREATER    reduce using rule 89 (mulExp)
    SMALLEQ    reduce using rule 89 (mulExp)
    GREATEQ    reduce using rule 89 (mulExp)
    EQUALS     reduce using rule 89 (mulExp)
    DIFFERENT  reduce using rule 89 (mulExp)
    PARENR     reduce using rule 89 (mulExp)


State 198

   94 factor: fCall •

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    PARENR     reduce using rule 94 (factor)


State 199

   44 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   45         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  shift, and go to state 257


State 200

   66 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 258


State 201

   67 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 259


State 202

   68 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 260


State 203

   46 returnStmt: RETURN • expression SEMIC

    ID           shift, and go to state 39
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    PARENL       shift, and go to state 57

    listExp         go to state 67
    appendOps       go to state 68
    returnListOps   go to state 69
    returnListOp    go to state 70
    destroyHeadOps  go to state 71
    mapFilterOps    go to state 72
    expression      go to state 261
    assignExp       go to state 74
    simpleExp       go to state 75
    constOp         go to state 76
    binLogicalExp   go to state 79
    relationalExp   go to state 80
    sumExp          go to state 81
    sumOp           go to state 82
    mulExp          go to state 83
    factor          go to state 84
    fCall           go to state 85


State 204

   27 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    stmtList              go to state 262
    primitiveStmt         go to state 61
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 205

   37 primitiveStmt: varDeclaration •

    ID           reduce using rule 37 (primitiveStmt)
    TYPE         reduce using rule 37 (primitiveStmt)
    NIL          reduce using rule 37 (primitiveStmt)
    INTEGER      reduce using rule 37 (primitiveStmt)
    DECIMAL      reduce using rule 37 (primitiveStmt)
    ERRORTOKEN   reduce using rule 37 (primitiveStmt)
    ADD          reduce using rule 37 (primitiveStmt)
    SUB          reduce using rule 37 (primitiveStmt)
    HEADLIST     reduce using rule 37 (primitiveStmt)
    TAILLIST     reduce using rule 37 (primitiveStmt)
    DESTROYHEAD  reduce using rule 37 (primitiveStmt)
    ELSE         reduce using rule 37 (primitiveStmt)
    IF           reduce using rule 37 (primitiveStmt)
    FOR          reduce using rule 37 (primitiveStmt)
    READ         reduce using rule 37 (primitiveStmt)
    WRITE        reduce using rule 37 (primitiveStmt)
    WRITELN      reduce using rule 37 (primitiveStmt)
    RETURN       reduce using rule 37 (primitiveStmt)
    STFUNC       reduce using rule 37 (primitiveStmt)
    ENDFUNC      reduce using rule 37 (primitiveStmt)
    PARENL       reduce using rule 37 (primitiveStmt)


State 206

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 263


State 207

   31 primitiveStmt: compoundStmt •

    ID           reduce using rule 31 (primitiveStmt)
    TYPE         reduce using rule 31 (primitiveStmt)
    NIL          reduce using rule 31 (primitiveStmt)
    INTEGER      reduce using rule 31 (primitiveStmt)
    DECIMAL      reduce using rule 31 (primitiveStmt)
    ERRORTOKEN   reduce using rule 31 (primitiveStmt)
    ADD          reduce using rule 31 (primitiveStmt)
    SUB          reduce using rule 31 (primitiveStmt)
    HEADLIST     reduce using rule 31 (primitiveStmt)
    TAILLIST     reduce using rule 31 (primitiveStmt)
    DESTROYHEAD  reduce using rule 31 (primitiveStmt)
    ELSE         reduce using rule 31 (primitiveStmt)
    IF           reduce using rule 31 (primitiveStmt)
    FOR          reduce using rule 31 (primitiveStmt)
    READ         reduce using rule 31 (primitiveStmt)
    WRITE        reduce using rule 31 (primitiveStmt)
    WRITELN      reduce using rule 31 (primitiveStmt)
    RETURN       reduce using rule 31 (primitiveStmt)
    STFUNC       reduce using rule 31 (primitiveStmt)
    ENDFUNC      reduce using rule 31 (primitiveStmt)
    PARENL       reduce using rule 31 (primitiveStmt)


State 208

   30 primitiveStmt: exprStmt •

    ID           reduce using rule 30 (primitiveStmt)
    TYPE         reduce using rule 30 (primitiveStmt)
    NIL          reduce using rule 30 (primitiveStmt)
    INTEGER      reduce using rule 30 (primitiveStmt)
    DECIMAL      reduce using rule 30 (primitiveStmt)
    ERRORTOKEN   reduce using rule 30 (primitiveStmt)
    ADD          reduce using rule 30 (primitiveStmt)
    SUB          reduce using rule 30 (primitiveStmt)
    HEADLIST     reduce using rule 30 (primitiveStmt)
    TAILLIST     reduce using rule 30 (primitiveStmt)
    DESTROYHEAD  reduce using rule 30 (primitiveStmt)
    ELSE         reduce using rule 30 (primitiveStmt)
    IF           reduce using rule 30 (primitiveStmt)
    FOR          reduce using rule 30 (primitiveStmt)
    READ         reduce using rule 30 (primitiveStmt)
    WRITE        reduce using rule 30 (primitiveStmt)
    WRITELN      reduce using rule 30 (primitiveStmt)
    RETURN       reduce using rule 30 (primitiveStmt)
    STFUNC       reduce using rule 30 (primitiveStmt)
    ENDFUNC      reduce using rule 30 (primitiveStmt)
    PARENL       reduce using rule 30 (primitiveStmt)


State 209

   32 primitiveStmt: condStmt •

    ID           reduce using rule 32 (primitiveStmt)
    TYPE         reduce using rule 32 (primitiveStmt)
    NIL          reduce using rule 32 (primitiveStmt)
    INTEGER      reduce using rule 32 (primitiveStmt)
    DECIMAL      reduce using rule 32 (primitiveStmt)
    ERRORTOKEN   reduce using rule 32 (primitiveStmt)
    ADD          reduce using rule 32 (primitiveStmt)
    SUB          reduce using rule 32 (primitiveStmt)
    HEADLIST     reduce using rule 32 (primitiveStmt)
    TAILLIST     reduce using rule 32 (primitiveStmt)
    DESTROYHEAD  reduce using rule 32 (primitiveStmt)
    ELSE         reduce using rule 32 (primitiveStmt)
    IF           reduce using rule 32 (primitiveStmt)
    FOR          reduce using rule 32 (primitiveStmt)
    READ         reduce using rule 32 (primitiveStmt)
    WRITE        reduce using rule 32 (primitiveStmt)
    WRITELN      reduce using rule 32 (primitiveStmt)
    RETURN       reduce using rule 32 (primitiveStmt)
    STFUNC       reduce using rule 32 (primitiveStmt)
    ENDFUNC      reduce using rule 32 (primitiveStmt)
    PARENL       reduce using rule 32 (primitiveStmt)


State 210

   39 condStmt: ifStmt • primitiveStmt
   40         | ifStmt • primitiveStmt elseStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 199
    READ         shift, and go to state 200
    WRITE        shift, and go to state 201
    WRITELN      shift, and go to state 202
    RETURN       shift, and go to state 203
    STFUNC       shift, and go to state 204
    PARENL       shift, and go to state 57

    varDeclaration        go to state 205
    simpleVarDeclaration  go to state 206
    compoundStmt          go to state 207
    primitiveStmt         go to state 264
    exprStmt              go to state 208
    condStmt              go to state 209
    ifStmt                go to state 210
    iterStmt              go to state 211
    returnStmt            go to state 212
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 213
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 214
    outOp                 go to state 215
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 211

   33 primitiveStmt: iterStmt •

    ID           reduce using rule 33 (primitiveStmt)
    TYPE         reduce using rule 33 (primitiveStmt)
    NIL          reduce using rule 33 (primitiveStmt)
    INTEGER      reduce using rule 33 (primitiveStmt)
    DECIMAL      reduce using rule 33 (primitiveStmt)
    ERRORTOKEN   reduce using rule 33 (primitiveStmt)
    ADD          reduce using rule 33 (primitiveStmt)
    SUB          reduce using rule 33 (primitiveStmt)
    HEADLIST     reduce using rule 33 (primitiveStmt)
    TAILLIST     reduce using rule 33 (primitiveStmt)
    DESTROYHEAD  reduce using rule 33 (primitiveStmt)
    ELSE         reduce using rule 33 (primitiveStmt)
    IF           reduce using rule 33 (primitiveStmt)
    FOR          reduce using rule 33 (primitiveStmt)
    READ         reduce using rule 33 (primitiveStmt)
    WRITE        reduce using rule 33 (primitiveStmt)
    WRITELN      reduce using rule 33 (primitiveStmt)
    RETURN       reduce using rule 33 (primitiveStmt)
    STFUNC       reduce using rule 33 (primitiveStmt)
    ENDFUNC      reduce using rule 33 (primitiveStmt)
    PARENL       reduce using rule 33 (primitiveStmt)


State 212

   34 primitiveStmt: returnStmt •

    ID           reduce using rule 34 (primitiveStmt)
    TYPE         reduce using rule 34 (primitiveStmt)
    NIL          reduce using rule 34 (primitiveStmt)
    INTEGER      reduce using rule 34 (primitiveStmt)
    DECIMAL      reduce using rule 34 (primitiveStmt)
    ERRORTOKEN   reduce using rule 34 (primitiveStmt)
    ADD          reduce using rule 34 (primitiveStmt)
    SUB          reduce using rule 34 (primitiveStmt)
    HEADLIST     reduce using rule 34 (primitiveStmt)
    TAILLIST     reduce using rule 34 (primitiveStmt)
    DESTROYHEAD  reduce using rule 34 (primitiveStmt)
    ELSE         reduce using rule 34 (primitiveStmt)
    IF           reduce using rule 34 (primitiveStmt)
    FOR          reduce using rule 34 (primitiveStmt)
    READ         reduce using rule 34 (primitiveStmt)
    WRITE        reduce using rule 34 (primitiveStmt)
    WRITELN      reduce using rule 34 (primitiveStmt)
    RETURN       reduce using rule 34 (primitiveStmt)
    STFUNC       reduce using rule 34 (primitiveStmt)
    ENDFUNC      reduce using rule 34 (primitiveStmt)
    PARENL       reduce using rule 34 (primitiveStmt)


State 213

   38 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 265


State 214

   35 primitiveStmt: inOp •

    ID           reduce using rule 35 (primitiveStmt)
    TYPE         reduce using rule 35 (primitiveStmt)
    NIL          reduce using rule 35 (primitiveStmt)
    INTEGER      reduce using rule 35 (primitiveStmt)
    DECIMAL      reduce using rule 35 (primitiveStmt)
    ERRORTOKEN   reduce using rule 35 (primitiveStmt)
    ADD          reduce using rule 35 (primitiveStmt)
    SUB          reduce using rule 35 (primitiveStmt)
    HEADLIST     reduce using rule 35 (primitiveStmt)
    TAILLIST     reduce using rule 35 (primitiveStmt)
    DESTROYHEAD  reduce using rule 35 (primitiveStmt)
    ELSE         reduce using rule 35 (primitiveStmt)
    IF           reduce using rule 35 (primitiveStmt)
    FOR          reduce using rule 35 (primitiveStmt)
    READ         reduce using rule 35 (primitiveStmt)
    WRITE        reduce using rule 35 (primitiveStmt)
    WRITELN      reduce using rule 35 (primitiveStmt)
    RETURN       reduce using rule 35 (primitiveStmt)
    STFUNC       reduce using rule 35 (primitiveStmt)
    ENDFUNC      reduce using rule 35 (primitiveStmt)
    PARENL       reduce using rule 35 (primitiveStmt)


State 215

   36 primitiveStmt: outOp •

    ID           reduce using rule 36 (primitiveStmt)
    TYPE         reduce using rule 36 (primitiveStmt)
    NIL          reduce using rule 36 (primitiveStmt)
    INTEGER      reduce using rule 36 (primitiveStmt)
    DECIMAL      reduce using rule 36 (primitiveStmt)
    ERRORTOKEN   reduce using rule 36 (primitiveStmt)
    ADD          reduce using rule 36 (primitiveStmt)
    SUB          reduce using rule 36 (primitiveStmt)
    HEADLIST     reduce using rule 36 (primitiveStmt)
    TAILLIST     reduce using rule 36 (primitiveStmt)
    DESTROYHEAD  reduce using rule 36 (primitiveStmt)
    ELSE         reduce using rule 36 (primitiveStmt)
    IF           reduce using rule 36 (primitiveStmt)
    FOR          reduce using rule 36 (primitiveStmt)
    READ         reduce using rule 36 (primitiveStmt)
    WRITE        reduce using rule 36 (primitiveStmt)
    WRITELN      reduce using rule 36 (primitiveStmt)
    RETURN       reduce using rule 36 (primitiveStmt)
    STFUNC       reduce using rule 36 (primitiveStmt)
    ENDFUNC      reduce using rule 36 (primitiveStmt)
    PARENL       reduce using rule 36 (primitiveStmt)


State 216

   86 sumOp: ADD •

    ID          reduce using rule 86 (sumOp)
    NIL         reduce using rule 86 (sumOp)
    INTEGER     reduce using rule 86 (sumOp)
    DECIMAL     reduce using rule 86 (sumOp)
    ERRORTOKEN  reduce using rule 86 (sumOp)
    ADD         reduce using rule 86 (sumOp)
    SUB         reduce using rule 86 (sumOp)
    PARENL      reduce using rule 86 (sumOp)


State 217

   87 sumOp: SUB •

    ID          reduce using rule 87 (sumOp)
    NIL         reduce using rule 87 (sumOp)
    INTEGER     reduce using rule 87 (sumOp)
    DECIMAL     reduce using rule 87 (sumOp)
    ERRORTOKEN  reduce using rule 87 (sumOp)
    ADD         reduce using rule 87 (sumOp)
    SUB         reduce using rule 87 (sumOp)
    PARENL      reduce using rule 87 (sumOp)


State 218

   93 factor: ID •
   98 fCall: ID • PARENL callParams PARENR
   99      | ID • PARENL PARENR

    PARENL  shift, and go to state 93

    ADD        reduce using rule 93 (factor)
    SUB        reduce using rule 93 (factor)
    MULT       reduce using rule 93 (factor)
    DIV        reduce using rule 93 (factor)
    OR         reduce using rule 93 (factor)
    AND        reduce using rule 93 (factor)
    SMALLER    reduce using rule 93 (factor)
    GREATER    reduce using rule 93 (factor)
    SMALLEQ    reduce using rule 93 (factor)
    GREATEQ    reduce using rule 93 (factor)
    EQUALS     reduce using rule 93 (factor)
    DIFFERENT  reduce using rule 93 (factor)
    SEMIC      reduce using rule 93 (factor)


State 219

   93 factor: ID •
   98 fCall: ID • PARENL callParams PARENR
   99      | ID • PARENL PARENR

    PARENL  shift, and go to state 266

    ADD        reduce using rule 93 (factor)
    SUB        reduce using rule 93 (factor)
    MULT       reduce using rule 93 (factor)
    DIV        reduce using rule 93 (factor)
    OR         reduce using rule 93 (factor)
    AND        reduce using rule 93 (factor)
    SMALLER    reduce using rule 93 (factor)
    GREATER    reduce using rule 93 (factor)
    SMALLEQ    reduce using rule 93 (factor)
    GREATEQ    reduce using rule 93 (factor)
    EQUALS     reduce using rule 93 (factor)
    DIFFERENT  reduce using rule 93 (factor)
    COMMA      reduce using rule 93 (factor)
    PARENR     reduce using rule 93 (factor)


State 220

   65 constOp: NIL •

    ADD        reduce using rule 65 (constOp)
    SUB        reduce using rule 65 (constOp)
    MULT       reduce using rule 65 (constOp)
    DIV        reduce using rule 65 (constOp)
    OR         reduce using rule 65 (constOp)
    AND        reduce using rule 65 (constOp)
    SMALLER    reduce using rule 65 (constOp)
    GREATER    reduce using rule 65 (constOp)
    SMALLEQ    reduce using rule 65 (constOp)
    GREATEQ    reduce using rule 65 (constOp)
    EQUALS     reduce using rule 65 (constOp)
    DIFFERENT  reduce using rule 65 (constOp)
    COMMA      reduce using rule 65 (constOp)
    PARENR     reduce using rule 65 (constOp)


State 221

   63 constOp: INTEGER •

    ADD        reduce using rule 63 (constOp)
    SUB        reduce using rule 63 (constOp)
    MULT       reduce using rule 63 (constOp)
    DIV        reduce using rule 63 (constOp)
    OR         reduce using rule 63 (constOp)
    AND        reduce using rule 63 (constOp)
    SMALLER    reduce using rule 63 (constOp)
    GREATER    reduce using rule 63 (constOp)
    SMALLEQ    reduce using rule 63 (constOp)
    GREATEQ    reduce using rule 63 (constOp)
    EQUALS     reduce using rule 63 (constOp)
    DIFFERENT  reduce using rule 63 (constOp)
    COMMA      reduce using rule 63 (constOp)
    PARENR     reduce using rule 63 (constOp)


State 222

   64 constOp: DECIMAL •

    ADD        reduce using rule 64 (constOp)
    SUB        reduce using rule 64 (constOp)
    MULT       reduce using rule 64 (constOp)
    DIV        reduce using rule 64 (constOp)
    OR         reduce using rule 64 (constOp)
    AND        reduce using rule 64 (constOp)
    SMALLER    reduce using rule 64 (constOp)
    GREATER    reduce using rule 64 (constOp)
    SMALLEQ    reduce using rule 64 (constOp)
    GREATEQ    reduce using rule 64 (constOp)
    EQUALS     reduce using rule 64 (constOp)
    DIFFERENT  reduce using rule 64 (constOp)
    COMMA      reduce using rule 64 (constOp)
    PARENR     reduce using rule 64 (constOp)


State 223

   97 factor: ERRORTOKEN •

    ADD        reduce using rule 97 (factor)
    SUB        reduce using rule 97 (factor)
    MULT       reduce using rule 97 (factor)
    DIV        reduce using rule 97 (factor)
    OR         reduce using rule 97 (factor)
    AND        reduce using rule 97 (factor)
    SMALLER    reduce using rule 97 (factor)
    GREATER    reduce using rule 97 (factor)
    SMALLEQ    reduce using rule 97 (factor)
    GREATEQ    reduce using rule 97 (factor)
    EQUALS     reduce using rule 97 (factor)
    DIFFERENT  reduce using rule 97 (factor)
    COMMA      reduce using rule 97 (factor)
    PARENR     reduce using rule 97 (factor)


State 224

   95 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 104
    NIL         shift, and go to state 186
    INTEGER     shift, and go to state 187
    DECIMAL     shift, and go to state 188
    ERRORTOKEN  shift, and go to state 189
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 190

    simpleExp      go to state 267
    constOp        go to state 191
    binLogicalExp  go to state 192
    relationalExp  go to state 193
    sumExp         go to state 194
    sumOp          go to state 195
    mulExp         go to state 196
    factor         go to state 197
    fCall          go to state 198


State 225

   96 factor: constOp •

    ADD        reduce using rule 96 (factor)
    SUB        reduce using rule 96 (factor)
    MULT       reduce using rule 96 (factor)
    DIV        reduce using rule 96 (factor)
    OR         reduce using rule 96 (factor)
    AND        reduce using rule 96 (factor)
    SMALLER    reduce using rule 96 (factor)
    GREATER    reduce using rule 96 (factor)
    SMALLEQ    reduce using rule 96 (factor)
    GREATEQ    reduce using rule 96 (factor)
    EQUALS     reduce using rule 96 (factor)
    DIFFERENT  reduce using rule 96 (factor)
    COMMA      reduce using rule 96 (factor)
    PARENR     reduce using rule 96 (factor)


State 226

   62 simpleExp: binLogicalExp •
   72 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   shift, and go to state 111
    AND  shift, and go to state 112

    COMMA   reduce using rule 62 (simpleExp)
    PARENR  reduce using rule 62 (simpleExp)

    binLogicalOp  go to state 268


State 227

   73 binLogicalExp: relationalExp •
   76 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 114
    GREATER    shift, and go to state 115
    SMALLEQ    shift, and go to state 116
    GREATEQ    shift, and go to state 117
    EQUALS     shift, and go to state 118
    DIFFERENT  shift, and go to state 119

    OR      reduce using rule 73 (binLogicalExp)
    AND     reduce using rule 73 (binLogicalExp)
    COMMA   reduce using rule 73 (binLogicalExp)
    PARENR  reduce using rule 73 (binLogicalExp)

    relationalOp  go to state 269


State 228

   77 relationalExp: sumExp •
   84 sumExp: sumExp • sumOp mulExp

    ADD  shift, and go to state 216
    SUB  shift, and go to state 217

    OR         reduce using rule 77 (relationalExp)
    AND        reduce using rule 77 (relationalExp)
    SMALLER    reduce using rule 77 (relationalExp)
    GREATER    reduce using rule 77 (relationalExp)
    SMALLEQ    reduce using rule 77 (relationalExp)
    GREATEQ    reduce using rule 77 (relationalExp)
    EQUALS     reduce using rule 77 (relationalExp)
    DIFFERENT  reduce using rule 77 (relationalExp)
    COMMA      reduce using rule 77 (relationalExp)
    PARENR     reduce using rule 77 (relationalExp)

    sumOp  go to state 270


State 229

   90 mulExp: sumOp • factor

    ID          shift, and go to state 219
    NIL         shift, and go to state 220
    INTEGER     shift, and go to state 221
    DECIMAL     shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    PARENL      shift, and go to state 224

    constOp  go to state 225
    factor   go to state 271
    fCall    go to state 232


State 230

   85 sumExp: mulExp •
   88 mulExp: mulExp • mulOp factor

    MULT  shift, and go to state 123
    DIV   shift, and go to state 124

    ADD        reduce using rule 85 (sumExp)
    SUB        reduce using rule 85 (sumExp)
    OR         reduce using rule 85 (sumExp)
    AND        reduce using rule 85 (sumExp)
    SMALLER    reduce using rule 85 (sumExp)
    GREATER    reduce using rule 85 (sumExp)
    SMALLEQ    reduce using rule 85 (sumExp)
    GREATEQ    reduce using rule 85 (sumExp)
    EQUALS     reduce using rule 85 (sumExp)
    DIFFERENT  reduce using rule 85 (sumExp)
    COMMA      reduce using rule 85 (sumExp)
    PARENR     reduce using rule 85 (sumExp)

    mulOp  go to state 272


State 231

   89 mulExp: factor •

    ADD        reduce using rule 89 (mulExp)
    SUB        reduce using rule 89 (mulExp)
    MULT       reduce using rule 89 (mulExp)
    DIV        reduce using rule 89 (mulExp)
    OR         reduce using rule 89 (mulExp)
    AND        reduce using rule 89 (mulExp)
    SMALLER    reduce using rule 89 (mulExp)
    GREATER    reduce using rule 89 (mulExp)
    SMALLEQ    reduce using rule 89 (mulExp)
    GREATEQ    reduce using rule 89 (mulExp)
    EQUALS     reduce using rule 89 (mulExp)
    DIFFERENT  reduce using rule 89 (mulExp)
    COMMA      reduce using rule 89 (mulExp)
    PARENR     reduce using rule 89 (mulExp)


State 232

   94 factor: fCall •

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    COMMA      reduce using rule 94 (factor)
    PARENR     reduce using rule 94 (factor)


State 233

   55 destroyHeadOps: DESTROYHEAD • ID

    ID  shift, and go to state 273


State 234

   47 listExp: appendOps •

    PARENR  reduce using rule 47 (listExp)


State 235

   48 listExp: returnListOps •

    PARENR  reduce using rule 48 (listExp)


State 236

   52 returnListOps: returnListOp • ID

    ID  shift, and go to state 274


State 237

   49 listExp: destroyHeadOps •

    PARENR  reduce using rule 49 (listExp)


State 238

   50 listExp: mapFilterOps •

    PARENR  reduce using rule 50 (listExp)


State 239

   98 fCall: ID PARENL • callParams PARENR
   99      | ID PARENL • PARENR

    ID          shift, and go to state 219
    NIL         shift, and go to state 220
    INTEGER     shift, and go to state 221
    DECIMAL     shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 224
    PARENR      shift, and go to state 275

    simpleExp      go to state 134
    constOp        go to state 225
    binLogicalExp  go to state 226
    relationalExp  go to state 227
    sumExp         go to state 228
    sumOp          go to state 229
    mulExp         go to state 230
    factor         go to state 231
    fCall          go to state 232
    callParams     go to state 276


State 240

   78 relationalOp: SMALLER •

    OR     reduce using rule 78 (relationalOp)
    AND    reduce using rule 78 (relationalOp)
    SEMIC  reduce using rule 78 (relationalOp)


State 241

   79 relationalOp: GREATER •

    OR     reduce using rule 79 (relationalOp)
    AND    reduce using rule 79 (relationalOp)
    SEMIC  reduce using rule 79 (relationalOp)


State 242

   80 relationalOp: SMALLEQ •

    OR     reduce using rule 80 (relationalOp)
    AND    reduce using rule 80 (relationalOp)
    SEMIC  reduce using rule 80 (relationalOp)


State 243

   81 relationalOp: GREATEQ •

    OR     reduce using rule 81 (relationalOp)
    AND    reduce using rule 81 (relationalOp)
    SEMIC  reduce using rule 81 (relationalOp)


State 244

   82 relationalOp: EQUALS •

    OR     reduce using rule 82 (relationalOp)
    AND    reduce using rule 82 (relationalOp)
    SEMIC  reduce using rule 82 (relationalOp)


State 245

   83 relationalOp: DIFFERENT •

    OR     reduce using rule 83 (relationalOp)
    AND    reduce using rule 83 (relationalOp)
    SEMIC  reduce using rule 83 (relationalOp)


State 246

   51 appendOps: ID APPEND • ID

    ID  shift, and go to state 277


State 247

   57 mapFilterOps: ID FILTER • ID

    ID  shift, and go to state 278


State 248

   56 mapFilterOps: ID MAP • ID

    ID  shift, and go to state 279


State 249

   61 assignExp: ID ASSIGN • expression

    ID           shift, and go to state 280
    NIL          shift, and go to state 186
    INTEGER      shift, and go to state 187
    DECIMAL      shift, and go to state 188
    ERRORTOKEN   shift, and go to state 189
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 233
    PARENL       shift, and go to state 190

    listExp         go to state 281
    appendOps       go to state 234
    returnListOps   go to state 235
    returnListOp    go to state 236
    destroyHeadOps  go to state 237
    mapFilterOps    go to state 238
    expression      go to state 282
    assignExp       go to state 283
    simpleExp       go to state 284
    constOp         go to state 191
    binLogicalExp   go to state 192
    relationalExp   go to state 193
    sumExp          go to state 194
    sumOp           go to state 195
    mulExp          go to state 196
    factor          go to state 197
    fCall           go to state 198


State 250

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduce using rule 7 (varDeclaration)
    TYPE         reduce using rule 7 (varDeclaration)
    NIL          reduce using rule 7 (varDeclaration)
    INTEGER      reduce using rule 7 (varDeclaration)
    DECIMAL      reduce using rule 7 (varDeclaration)
    ERRORTOKEN   reduce using rule 7 (varDeclaration)
    ADD          reduce using rule 7 (varDeclaration)
    SUB          reduce using rule 7 (varDeclaration)
    HEADLIST     reduce using rule 7 (varDeclaration)
    TAILLIST     reduce using rule 7 (varDeclaration)
    DESTROYHEAD  reduce using rule 7 (varDeclaration)
    IF           reduce using rule 7 (varDeclaration)
    FOR          reduce using rule 7 (varDeclaration)
    READ         reduce using rule 7 (varDeclaration)
    WRITE        reduce using rule 7 (varDeclaration)
    WRITELN      reduce using rule 7 (varDeclaration)
    RETURN       reduce using rule 7 (varDeclaration)
    STFUNC       reduce using rule 7 (varDeclaration)
    ENDFUNC      reduce using rule 7 (varDeclaration)
    PARENL       reduce using rule 7 (varDeclaration)


State 251

   95 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 285


State 252

   72 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    shift, and go to state 286
    GREATER    shift, and go to state 287
    SMALLEQ    shift, and go to state 288
    GREATEQ    shift, and go to state 289
    EQUALS     shift, and go to state 290
    DIFFERENT  shift, and go to state 291

    relationalOp  go to state 292


State 253

   76 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 104
    NIL         shift, and go to state 186
    INTEGER     shift, and go to state 187
    DECIMAL     shift, and go to state 188
    ERRORTOKEN  shift, and go to state 189
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 190

    constOp  go to state 191
    sumExp   go to state 293
    sumOp    go to state 195
    mulExp   go to state 196
    factor   go to state 197
    fCall    go to state 198


State 254

   84 sumExp: sumExp sumOp • mulExp

    ID          shift, and go to state 104
    NIL         shift, and go to state 186
    INTEGER     shift, and go to state 187
    DECIMAL     shift, and go to state 188
    ERRORTOKEN  shift, and go to state 189
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 190

    constOp  go to state 191
    sumOp    go to state 195
    mulExp   go to state 294
    factor   go to state 197
    fCall    go to state 198


State 255

   90 mulExp: sumOp factor •

    ADD        reduce using rule 90 (mulExp)
    SUB        reduce using rule 90 (mulExp)
    MULT       reduce using rule 90 (mulExp)
    DIV        reduce using rule 90 (mulExp)
    OR         reduce using rule 90 (mulExp)
    AND        reduce using rule 90 (mulExp)
    SMALLER    reduce using rule 90 (mulExp)
    GREATER    reduce using rule 90 (mulExp)
    SMALLEQ    reduce using rule 90 (mulExp)
    GREATEQ    reduce using rule 90 (mulExp)
    EQUALS     reduce using rule 90 (mulExp)
    DIFFERENT  reduce using rule 90 (mulExp)
    PARENR     reduce using rule 90 (mulExp)


State 256

   88 mulExp: mulExp mulOp • factor

    ID          shift, and go to state 104
    NIL         shift, and go to state 186
    INTEGER     shift, and go to state 187
    DECIMAL     shift, and go to state 188
    ERRORTOKEN  shift, and go to state 189
    PARENL      shift, and go to state 190

    constOp  go to state 191
    factor   go to state 295
    fCall    go to state 198


State 257

   44 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   45         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 138
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 57

    assignExp      go to state 296
    simpleExp      go to state 297
    constOp        go to state 76
    binLogicalExp  go to state 79
    relationalExp  go to state 80
    sumExp         go to state 81
    sumOp          go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 258

   66 inOp: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 298


State 259

   67 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID           shift, and go to state 142
    STRING       shift, and go to state 143
    NIL          shift, and go to state 186
    INTEGER      shift, and go to state 187
    DECIMAL      shift, and go to state 188
    ERRORTOKEN   shift, and go to state 189
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 233
    PARENL       shift, and go to state 190

    listExp         go to state 144
    appendOps       go to state 234
    returnListOps   go to state 235
    returnListOp    go to state 236
    destroyHeadOps  go to state 237
    mapFilterOps    go to state 238
    simpleExp       go to state 145
    constOp         go to state 191
    outConst        go to state 299
    binLogicalExp   go to state 192
    relationalExp   go to state 193
    sumExp          go to state 194
    sumOp           go to state 195
    mulExp          go to state 196
    factor          go to state 197
    fCall           go to state 198


State 260

   68 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID           shift, and go to state 142
    STRING       shift, and go to state 143
    NIL          shift, and go to state 186
    INTEGER      shift, and go to state 187
    DECIMAL      shift, and go to state 188
    ERRORTOKEN   shift, and go to state 189
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 233
    PARENL       shift, and go to state 190

    listExp         go to state 144
    appendOps       go to state 234
    returnListOps   go to state 235
    returnListOp    go to state 236
    destroyHeadOps  go to state 237
    mapFilterOps    go to state 238
    simpleExp       go to state 145
    constOp         go to state 191
    outConst        go to state 300
    binLogicalExp   go to state 192
    relationalExp   go to state 193
    sumExp          go to state 194
    sumOp           go to state 195
    mulExp          go to state 196
    factor          go to state 197
    fCall           go to state 198


State 261

   46 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 301


State 262

   27 compoundStmt: STFUNC stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 51
    READ         shift, and go to state 52
    WRITE        shift, and go to state 53
    WRITELN      shift, and go to state 54
    RETURN       shift, and go to state 55
    STFUNC       shift, and go to state 56
    ENDFUNC      shift, and go to state 302
    PARENL       shift, and go to state 57

    varDeclaration        go to state 58
    simpleVarDeclaration  go to state 185
    compoundStmt          go to state 59
    primitiveStmt         go to state 107
    exprStmt              go to state 62
    condStmt              go to state 63
    ifStmt                go to state 64
    iterStmt              go to state 65
    returnStmt            go to state 66
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 73
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 77
    outOp                 go to state 78
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 263

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduce using rule 7 (varDeclaration)
    TYPE         reduce using rule 7 (varDeclaration)
    NIL          reduce using rule 7 (varDeclaration)
    INTEGER      reduce using rule 7 (varDeclaration)
    DECIMAL      reduce using rule 7 (varDeclaration)
    ERRORTOKEN   reduce using rule 7 (varDeclaration)
    ADD          reduce using rule 7 (varDeclaration)
    SUB          reduce using rule 7 (varDeclaration)
    HEADLIST     reduce using rule 7 (varDeclaration)
    TAILLIST     reduce using rule 7 (varDeclaration)
    DESTROYHEAD  reduce using rule 7 (varDeclaration)
    ELSE         reduce using rule 7 (varDeclaration)
    IF           reduce using rule 7 (varDeclaration)
    FOR          reduce using rule 7 (varDeclaration)
    READ         reduce using rule 7 (varDeclaration)
    WRITE        reduce using rule 7 (varDeclaration)
    WRITELN      reduce using rule 7 (varDeclaration)
    RETURN       reduce using rule 7 (varDeclaration)
    STFUNC       reduce using rule 7 (varDeclaration)
    ENDFUNC      reduce using rule 7 (varDeclaration)
    PARENL       reduce using rule 7 (varDeclaration)


State 264

   39 condStmt: ifStmt primitiveStmt •
   40         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 303

    ID           reduce using rule 39 (condStmt)
    TYPE         reduce using rule 39 (condStmt)
    NIL          reduce using rule 39 (condStmt)
    INTEGER      reduce using rule 39 (condStmt)
    DECIMAL      reduce using rule 39 (condStmt)
    ERRORTOKEN   reduce using rule 39 (condStmt)
    ADD          reduce using rule 39 (condStmt)
    SUB          reduce using rule 39 (condStmt)
    HEADLIST     reduce using rule 39 (condStmt)
    TAILLIST     reduce using rule 39 (condStmt)
    DESTROYHEAD  reduce using rule 39 (condStmt)
    IF           reduce using rule 39 (condStmt)
    FOR          reduce using rule 39 (condStmt)
    READ         reduce using rule 39 (condStmt)
    WRITE        reduce using rule 39 (condStmt)
    WRITELN      reduce using rule 39 (condStmt)
    RETURN       reduce using rule 39 (condStmt)
    STFUNC       reduce using rule 39 (condStmt)
    ENDFUNC      reduce using rule 39 (condStmt)
    PARENL       reduce using rule 39 (condStmt)

    elseStmt  go to state 304


State 265

   38 exprStmt: expression SEMIC •

    ID           reduce using rule 38 (exprStmt)
    TYPE         reduce using rule 38 (exprStmt)
    NIL          reduce using rule 38 (exprStmt)
    INTEGER      reduce using rule 38 (exprStmt)
    DECIMAL      reduce using rule 38 (exprStmt)
    ERRORTOKEN   reduce using rule 38 (exprStmt)
    ADD          reduce using rule 38 (exprStmt)
    SUB          reduce using rule 38 (exprStmt)
    HEADLIST     reduce using rule 38 (exprStmt)
    TAILLIST     reduce using rule 38 (exprStmt)
    DESTROYHEAD  reduce using rule 38 (exprStmt)
    ELSE         reduce using rule 38 (exprStmt)
    IF           reduce using rule 38 (exprStmt)
    FOR          reduce using rule 38 (exprStmt)
    READ         reduce using rule 38 (exprStmt)
    WRITE        reduce using rule 38 (exprStmt)
    WRITELN      reduce using rule 38 (exprStmt)
    RETURN       reduce using rule 38 (exprStmt)
    STFUNC       reduce using rule 38 (exprStmt)
    ENDFUNC      reduce using rule 38 (exprStmt)
    PARENL       reduce using rule 38 (exprStmt)


State 266

   98 fCall: ID PARENL • callParams PARENR
   99      | ID PARENL • PARENR

    ID          shift, and go to state 219
    NIL         shift, and go to state 220
    INTEGER     shift, and go to state 221
    DECIMAL     shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 224
    PARENR      shift, and go to state 305

    simpleExp      go to state 134
    constOp        go to state 225
    binLogicalExp  go to state 226
    relationalExp  go to state 227
    sumExp         go to state 228
    sumOp          go to state 229
    mulExp         go to state 230
    factor         go to state 231
    fCall          go to state 232
    callParams     go to state 306


State 267

   95 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 307


State 268

   72 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    shift, and go to state 308
    GREATER    shift, and go to state 309
    SMALLEQ    shift, and go to state 310
    GREATEQ    shift, and go to state 311
    EQUALS     shift, and go to state 312
    DIFFERENT  shift, and go to state 313

    relationalOp  go to state 314


State 269

   76 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 219
    NIL         shift, and go to state 220
    INTEGER     shift, and go to state 221
    DECIMAL     shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 224

    constOp  go to state 225
    sumExp   go to state 315
    sumOp    go to state 229
    mulExp   go to state 230
    factor   go to state 231
    fCall    go to state 232


State 270

   84 sumExp: sumExp sumOp • mulExp

    ID          shift, and go to state 219
    NIL         shift, and go to state 220
    INTEGER     shift, and go to state 221
    DECIMAL     shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 224

    constOp  go to state 225
    sumOp    go to state 229
    mulExp   go to state 316
    factor   go to state 231
    fCall    go to state 232


State 271

   90 mulExp: sumOp factor •

    ADD        reduce using rule 90 (mulExp)
    SUB        reduce using rule 90 (mulExp)
    MULT       reduce using rule 90 (mulExp)
    DIV        reduce using rule 90 (mulExp)
    OR         reduce using rule 90 (mulExp)
    AND        reduce using rule 90 (mulExp)
    SMALLER    reduce using rule 90 (mulExp)
    GREATER    reduce using rule 90 (mulExp)
    SMALLEQ    reduce using rule 90 (mulExp)
    GREATEQ    reduce using rule 90 (mulExp)
    EQUALS     reduce using rule 90 (mulExp)
    DIFFERENT  reduce using rule 90 (mulExp)
    COMMA      reduce using rule 90 (mulExp)
    PARENR     reduce using rule 90 (mulExp)


State 272

   88 mulExp: mulExp mulOp • factor

    ID          shift, and go to state 219
    NIL         shift, and go to state 220
    INTEGER     shift, and go to state 221
    DECIMAL     shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    PARENL      shift, and go to state 224

    constOp  go to state 225
    factor   go to state 317
    fCall    go to state 232


State 273

   55 destroyHeadOps: DESTROYHEAD ID •

    PARENR  reduce using rule 55 (destroyHeadOps)


State 274

   52 returnListOps: returnListOp ID •

    PARENR  reduce using rule 52 (returnListOps)


State 275

   99 fCall: ID PARENL PARENR •

    ADD        reduce using rule 99 (fCall)
    SUB        reduce using rule 99 (fCall)
    MULT       reduce using rule 99 (fCall)
    DIV        reduce using rule 99 (fCall)
    OR         reduce using rule 99 (fCall)
    AND        reduce using rule 99 (fCall)
    SMALLER    reduce using rule 99 (fCall)
    GREATER    reduce using rule 99 (fCall)
    SMALLEQ    reduce using rule 99 (fCall)
    GREATEQ    reduce using rule 99 (fCall)
    EQUALS     reduce using rule 99 (fCall)
    DIFFERENT  reduce using rule 99 (fCall)
    PARENR     reduce using rule 99 (fCall)


State 276

   98 fCall: ID PARENL callParams • PARENR
  100 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 159
    PARENR  shift, and go to state 318


State 277

   51 appendOps: ID APPEND ID •

    PARENR  reduce using rule 51 (appendOps)


State 278

   57 mapFilterOps: ID FILTER ID •

    PARENR  reduce using rule 57 (mapFilterOps)


State 279

   56 mapFilterOps: ID MAP ID •

    PARENR  reduce using rule 56 (mapFilterOps)


State 280

   51 appendOps: ID • APPEND ID
   56 mapFilterOps: ID • MAP ID
   57             | ID • FILTER ID
   61 assignExp: ID • ASSIGN expression
   93 factor: ID •
   98 fCall: ID • PARENL callParams PARENR
   99      | ID • PARENL PARENR

    APPEND  shift, and go to state 246
    FILTER  shift, and go to state 247
    ASSIGN  shift, and go to state 249
    MAP     shift, and go to state 248
    PARENL  shift, and go to state 239

    ADD        reduce using rule 93 (factor)
    SUB        reduce using rule 93 (factor)
    MULT       reduce using rule 93 (factor)
    DIV        reduce using rule 93 (factor)
    OR         reduce using rule 93 (factor)
    AND        reduce using rule 93 (factor)
    SMALLER    reduce using rule 93 (factor)
    GREATER    reduce using rule 93 (factor)
    SMALLEQ    reduce using rule 93 (factor)
    GREATEQ    reduce using rule 93 (factor)
    EQUALS     reduce using rule 93 (factor)
    DIFFERENT  reduce using rule 93 (factor)
    PARENR     reduce using rule 93 (factor)


State 281

   60 expression: listExp •

    PARENR  reduce using rule 60 (expression)


State 282

   61 assignExp: ID ASSIGN expression •

    PARENR  reduce using rule 61 (assignExp)


State 283

   58 expression: assignExp •

    PARENR  reduce using rule 58 (expression)


State 284

   59 expression: simpleExp •

    PARENR  reduce using rule 59 (expression)


State 285

   95 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 95 (factor)
    SUB        reduce using rule 95 (factor)
    MULT       reduce using rule 95 (factor)
    DIV        reduce using rule 95 (factor)
    OR         reduce using rule 95 (factor)
    AND        reduce using rule 95 (factor)
    SMALLER    reduce using rule 95 (factor)
    GREATER    reduce using rule 95 (factor)
    SMALLEQ    reduce using rule 95 (factor)
    GREATEQ    reduce using rule 95 (factor)
    EQUALS     reduce using rule 95 (factor)
    DIFFERENT  reduce using rule 95 (factor)
    PARENR     reduce using rule 95 (factor)


State 286

   78 relationalOp: SMALLER •

    OR      reduce using rule 78 (relationalOp)
    AND     reduce using rule 78 (relationalOp)
    PARENR  reduce using rule 78 (relationalOp)


State 287

   79 relationalOp: GREATER •

    OR      reduce using rule 79 (relationalOp)
    AND     reduce using rule 79 (relationalOp)
    PARENR  reduce using rule 79 (relationalOp)


State 288

   80 relationalOp: SMALLEQ •

    OR      reduce using rule 80 (relationalOp)
    AND     reduce using rule 80 (relationalOp)
    PARENR  reduce using rule 80 (relationalOp)


State 289

   81 relationalOp: GREATEQ •

    OR      reduce using rule 81 (relationalOp)
    AND     reduce using rule 81 (relationalOp)
    PARENR  reduce using rule 81 (relationalOp)


State 290

   82 relationalOp: EQUALS •

    OR      reduce using rule 82 (relationalOp)
    AND     reduce using rule 82 (relationalOp)
    PARENR  reduce using rule 82 (relationalOp)


State 291

   83 relationalOp: DIFFERENT •

    OR      reduce using rule 83 (relationalOp)
    AND     reduce using rule 83 (relationalOp)
    PARENR  reduce using rule 83 (relationalOp)


State 292

   72 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduce using rule 72 (binLogicalExp)
    AND     reduce using rule 72 (binLogicalExp)
    PARENR  reduce using rule 72 (binLogicalExp)


State 293

   76 relationalExp: relationalExp relationalOp sumExp •
   84 sumExp: sumExp • sumOp mulExp

    ADD  shift, and go to state 216
    SUB  shift, and go to state 217

    OR         reduce using rule 76 (relationalExp)
    AND        reduce using rule 76 (relationalExp)
    SMALLER    reduce using rule 76 (relationalExp)
    GREATER    reduce using rule 76 (relationalExp)
    SMALLEQ    reduce using rule 76 (relationalExp)
    GREATEQ    reduce using rule 76 (relationalExp)
    EQUALS     reduce using rule 76 (relationalExp)
    DIFFERENT  reduce using rule 76 (relationalExp)
    PARENR     reduce using rule 76 (relationalExp)

    sumOp  go to state 254


State 294

   84 sumExp: sumExp sumOp mulExp •
   88 mulExp: mulExp • mulOp factor

    MULT  shift, and go to state 123
    DIV   shift, and go to state 124

    ADD        reduce using rule 84 (sumExp)
    SUB        reduce using rule 84 (sumExp)
    OR         reduce using rule 84 (sumExp)
    AND        reduce using rule 84 (sumExp)
    SMALLER    reduce using rule 84 (sumExp)
    GREATER    reduce using rule 84 (sumExp)
    SMALLEQ    reduce using rule 84 (sumExp)
    GREATEQ    reduce using rule 84 (sumExp)
    EQUALS     reduce using rule 84 (sumExp)
    DIFFERENT  reduce using rule 84 (sumExp)
    PARENR     reduce using rule 84 (sumExp)

    mulOp  go to state 256


State 295

   88 mulExp: mulExp mulOp factor •

    ADD        reduce using rule 88 (mulExp)
    SUB        reduce using rule 88 (mulExp)
    MULT       reduce using rule 88 (mulExp)
    DIV        reduce using rule 88 (mulExp)
    OR         reduce using rule 88 (mulExp)
    AND        reduce using rule 88 (mulExp)
    SMALLER    reduce using rule 88 (mulExp)
    GREATER    reduce using rule 88 (mulExp)
    SMALLEQ    reduce using rule 88 (mulExp)
    GREATEQ    reduce using rule 88 (mulExp)
    EQUALS     reduce using rule 88 (mulExp)
    DIFFERENT  reduce using rule 88 (mulExp)
    PARENR     reduce using rule 88 (mulExp)


State 296

   44 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 319


State 297

   45 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 320


State 298

   66 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 321


State 299

   67 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 322


State 300

   68 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 323


State 301

   46 returnStmt: RETURN expression SEMIC •

    ID           reduce using rule 46 (returnStmt)
    TYPE         reduce using rule 46 (returnStmt)
    NIL          reduce using rule 46 (returnStmt)
    INTEGER      reduce using rule 46 (returnStmt)
    DECIMAL      reduce using rule 46 (returnStmt)
    ERRORTOKEN   reduce using rule 46 (returnStmt)
    ADD          reduce using rule 46 (returnStmt)
    SUB          reduce using rule 46 (returnStmt)
    HEADLIST     reduce using rule 46 (returnStmt)
    TAILLIST     reduce using rule 46 (returnStmt)
    DESTROYHEAD  reduce using rule 46 (returnStmt)
    ELSE         reduce using rule 46 (returnStmt)
    IF           reduce using rule 46 (returnStmt)
    FOR          reduce using rule 46 (returnStmt)
    READ         reduce using rule 46 (returnStmt)
    WRITE        reduce using rule 46 (returnStmt)
    WRITELN      reduce using rule 46 (returnStmt)
    RETURN       reduce using rule 46 (returnStmt)
    STFUNC       reduce using rule 46 (returnStmt)
    ENDFUNC      reduce using rule 46 (returnStmt)
    PARENL       reduce using rule 46 (returnStmt)


State 302

   27 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduce using rule 27 (compoundStmt)
    TYPE         reduce using rule 27 (compoundStmt)
    NIL          reduce using rule 27 (compoundStmt)
    INTEGER      reduce using rule 27 (compoundStmt)
    DECIMAL      reduce using rule 27 (compoundStmt)
    ERRORTOKEN   reduce using rule 27 (compoundStmt)
    ADD          reduce using rule 27 (compoundStmt)
    SUB          reduce using rule 27 (compoundStmt)
    HEADLIST     reduce using rule 27 (compoundStmt)
    TAILLIST     reduce using rule 27 (compoundStmt)
    DESTROYHEAD  reduce using rule 27 (compoundStmt)
    ELSE         reduce using rule 27 (compoundStmt)
    IF           reduce using rule 27 (compoundStmt)
    FOR          reduce using rule 27 (compoundStmt)
    READ         reduce using rule 27 (compoundStmt)
    WRITE        reduce using rule 27 (compoundStmt)
    WRITELN      reduce using rule 27 (compoundStmt)
    RETURN       reduce using rule 27 (compoundStmt)
    STFUNC       reduce using rule 27 (compoundStmt)
    ENDFUNC      reduce using rule 27 (compoundStmt)
    PARENL       reduce using rule 27 (compoundStmt)


State 303

   43 elseStmt: ELSE • $@9 primitiveStmt

    ID           reduce using rule 42 ($@9)
    TYPE         reduce using rule 42 ($@9)
    NIL          reduce using rule 42 ($@9)
    INTEGER      reduce using rule 42 ($@9)
    DECIMAL      reduce using rule 42 ($@9)
    ERRORTOKEN   reduce using rule 42 ($@9)
    ADD          reduce using rule 42 ($@9)
    SUB          reduce using rule 42 ($@9)
    HEADLIST     reduce using rule 42 ($@9)
    TAILLIST     reduce using rule 42 ($@9)
    DESTROYHEAD  reduce using rule 42 ($@9)
    IF           reduce using rule 42 ($@9)
    FOR          reduce using rule 42 ($@9)
    READ         reduce using rule 42 ($@9)
    WRITE        reduce using rule 42 ($@9)
    WRITELN      reduce using rule 42 ($@9)
    RETURN       reduce using rule 42 ($@9)
    STFUNC       reduce using rule 42 ($@9)
    PARENL       reduce using rule 42 ($@9)

    $@9  go to state 324


State 304

   40 condStmt: ifStmt primitiveStmt elseStmt •

    ID           reduce using rule 40 (condStmt)
    TYPE         reduce using rule 40 (condStmt)
    NIL          reduce using rule 40 (condStmt)
    INTEGER      reduce using rule 40 (condStmt)
    DECIMAL      reduce using rule 40 (condStmt)
    ERRORTOKEN   reduce using rule 40 (condStmt)
    ADD          reduce using rule 40 (condStmt)
    SUB          reduce using rule 40 (condStmt)
    HEADLIST     reduce using rule 40 (condStmt)
    TAILLIST     reduce using rule 40 (condStmt)
    DESTROYHEAD  reduce using rule 40 (condStmt)
    ELSE         reduce using rule 40 (condStmt)
    IF           reduce using rule 40 (condStmt)
    FOR          reduce using rule 40 (condStmt)
    READ         reduce using rule 40 (condStmt)
    WRITE        reduce using rule 40 (condStmt)
    WRITELN      reduce using rule 40 (condStmt)
    RETURN       reduce using rule 40 (condStmt)
    STFUNC       reduce using rule 40 (condStmt)
    ENDFUNC      reduce using rule 40 (condStmt)
    PARENL       reduce using rule 40 (condStmt)


State 305

   99 fCall: ID PARENL PARENR •

    ADD        reduce using rule 99 (fCall)
    SUB        reduce using rule 99 (fCall)
    MULT       reduce using rule 99 (fCall)
    DIV        reduce using rule 99 (fCall)
    OR         reduce using rule 99 (fCall)
    AND        reduce using rule 99 (fCall)
    SMALLER    reduce using rule 99 (fCall)
    GREATER    reduce using rule 99 (fCall)
    SMALLEQ    reduce using rule 99 (fCall)
    GREATEQ    reduce using rule 99 (fCall)
    EQUALS     reduce using rule 99 (fCall)
    DIFFERENT  reduce using rule 99 (fCall)
    COMMA      reduce using rule 99 (fCall)
    PARENR     reduce using rule 99 (fCall)


State 306

   98 fCall: ID PARENL callParams • PARENR
  100 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 159
    PARENR  shift, and go to state 325


State 307

   95 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 95 (factor)
    SUB        reduce using rule 95 (factor)
    MULT       reduce using rule 95 (factor)
    DIV        reduce using rule 95 (factor)
    OR         reduce using rule 95 (factor)
    AND        reduce using rule 95 (factor)
    SMALLER    reduce using rule 95 (factor)
    GREATER    reduce using rule 95 (factor)
    SMALLEQ    reduce using rule 95 (factor)
    GREATEQ    reduce using rule 95 (factor)
    EQUALS     reduce using rule 95 (factor)
    DIFFERENT  reduce using rule 95 (factor)
    COMMA      reduce using rule 95 (factor)
    PARENR     reduce using rule 95 (factor)


State 308

   78 relationalOp: SMALLER •

    OR      reduce using rule 78 (relationalOp)
    AND     reduce using rule 78 (relationalOp)
    COMMA   reduce using rule 78 (relationalOp)
    PARENR  reduce using rule 78 (relationalOp)


State 309

   79 relationalOp: GREATER •

    OR      reduce using rule 79 (relationalOp)
    AND     reduce using rule 79 (relationalOp)
    COMMA   reduce using rule 79 (relationalOp)
    PARENR  reduce using rule 79 (relationalOp)


State 310

   80 relationalOp: SMALLEQ •

    OR      reduce using rule 80 (relationalOp)
    AND     reduce using rule 80 (relationalOp)
    COMMA   reduce using rule 80 (relationalOp)
    PARENR  reduce using rule 80 (relationalOp)


State 311

   81 relationalOp: GREATEQ •

    OR      reduce using rule 81 (relationalOp)
    AND     reduce using rule 81 (relationalOp)
    COMMA   reduce using rule 81 (relationalOp)
    PARENR  reduce using rule 81 (relationalOp)


State 312

   82 relationalOp: EQUALS •

    OR      reduce using rule 82 (relationalOp)
    AND     reduce using rule 82 (relationalOp)
    COMMA   reduce using rule 82 (relationalOp)
    PARENR  reduce using rule 82 (relationalOp)


State 313

   83 relationalOp: DIFFERENT •

    OR      reduce using rule 83 (relationalOp)
    AND     reduce using rule 83 (relationalOp)
    COMMA   reduce using rule 83 (relationalOp)
    PARENR  reduce using rule 83 (relationalOp)


State 314

   72 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduce using rule 72 (binLogicalExp)
    AND     reduce using rule 72 (binLogicalExp)
    COMMA   reduce using rule 72 (binLogicalExp)
    PARENR  reduce using rule 72 (binLogicalExp)


State 315

   76 relationalExp: relationalExp relationalOp sumExp •
   84 sumExp: sumExp • sumOp mulExp

    ADD  shift, and go to state 216
    SUB  shift, and go to state 217

    OR         reduce using rule 76 (relationalExp)
    AND        reduce using rule 76 (relationalExp)
    SMALLER    reduce using rule 76 (relationalExp)
    GREATER    reduce using rule 76 (relationalExp)
    SMALLEQ    reduce using rule 76 (relationalExp)
    GREATEQ    reduce using rule 76 (relationalExp)
    EQUALS     reduce using rule 76 (relationalExp)
    DIFFERENT  reduce using rule 76 (relationalExp)
    COMMA      reduce using rule 76 (relationalExp)
    PARENR     reduce using rule 76 (relationalExp)

    sumOp  go to state 270


State 316

   84 sumExp: sumExp sumOp mulExp •
   88 mulExp: mulExp • mulOp factor

    MULT  shift, and go to state 123
    DIV   shift, and go to state 124

    ADD        reduce using rule 84 (sumExp)
    SUB        reduce using rule 84 (sumExp)
    OR         reduce using rule 84 (sumExp)
    AND        reduce using rule 84 (sumExp)
    SMALLER    reduce using rule 84 (sumExp)
    GREATER    reduce using rule 84 (sumExp)
    SMALLEQ    reduce using rule 84 (sumExp)
    GREATEQ    reduce using rule 84 (sumExp)
    EQUALS     reduce using rule 84 (sumExp)
    DIFFERENT  reduce using rule 84 (sumExp)
    COMMA      reduce using rule 84 (sumExp)
    PARENR     reduce using rule 84 (sumExp)

    mulOp  go to state 272


State 317

   88 mulExp: mulExp mulOp factor •

    ADD        reduce using rule 88 (mulExp)
    SUB        reduce using rule 88 (mulExp)
    MULT       reduce using rule 88 (mulExp)
    DIV        reduce using rule 88 (mulExp)
    OR         reduce using rule 88 (mulExp)
    AND        reduce using rule 88 (mulExp)
    SMALLER    reduce using rule 88 (mulExp)
    GREATER    reduce using rule 88 (mulExp)
    SMALLEQ    reduce using rule 88 (mulExp)
    GREATEQ    reduce using rule 88 (mulExp)
    EQUALS     reduce using rule 88 (mulExp)
    DIFFERENT  reduce using rule 88 (mulExp)
    COMMA      reduce using rule 88 (mulExp)
    PARENR     reduce using rule 88 (mulExp)


State 318

   98 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 98 (fCall)
    SUB        reduce using rule 98 (fCall)
    MULT       reduce using rule 98 (fCall)
    DIV        reduce using rule 98 (fCall)
    OR         reduce using rule 98 (fCall)
    AND        reduce using rule 98 (fCall)
    SMALLER    reduce using rule 98 (fCall)
    GREATER    reduce using rule 98 (fCall)
    SMALLEQ    reduce using rule 98 (fCall)
    GREATEQ    reduce using rule 98 (fCall)
    EQUALS     reduce using rule 98 (fCall)
    DIFFERENT  reduce using rule 98 (fCall)
    PARENR     reduce using rule 98 (fCall)


State 319

   44 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 218
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 57

    simpleExp      go to state 326
    constOp        go to state 76
    binLogicalExp  go to state 79
    relationalExp  go to state 80
    sumExp         go to state 81
    sumOp          go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 320

   45 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 218
    NIL         shift, and go to state 41
    INTEGER     shift, and go to state 42
    DECIMAL     shift, and go to state 43
    ERRORTOKEN  shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    PARENL      shift, and go to state 57

    simpleExp      go to state 327
    constOp        go to state 76
    binLogicalExp  go to state 79
    relationalExp  go to state 80
    sumExp         go to state 81
    sumOp          go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 321

   66 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 328


State 322

   67 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 329


State 323

   68 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 330


State 324

   43 elseStmt: ELSE $@9 • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 199
    READ         shift, and go to state 200
    WRITE        shift, and go to state 201
    WRITELN      shift, and go to state 202
    RETURN       shift, and go to state 203
    STFUNC       shift, and go to state 204
    PARENL       shift, and go to state 57

    varDeclaration        go to state 205
    simpleVarDeclaration  go to state 206
    compoundStmt          go to state 207
    primitiveStmt         go to state 331
    exprStmt              go to state 208
    condStmt              go to state 209
    ifStmt                go to state 210
    iterStmt              go to state 211
    returnStmt            go to state 212
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 213
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 214
    outOp                 go to state 215
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 325

   98 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 98 (fCall)
    SUB        reduce using rule 98 (fCall)
    MULT       reduce using rule 98 (fCall)
    DIV        reduce using rule 98 (fCall)
    OR         reduce using rule 98 (fCall)
    AND        reduce using rule 98 (fCall)
    SMALLER    reduce using rule 98 (fCall)
    GREATER    reduce using rule 98 (fCall)
    SMALLEQ    reduce using rule 98 (fCall)
    GREATEQ    reduce using rule 98 (fCall)
    EQUALS     reduce using rule 98 (fCall)
    DIFFERENT  reduce using rule 98 (fCall)
    COMMA      reduce using rule 98 (fCall)
    PARENR     reduce using rule 98 (fCall)


State 326

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 332


State 327

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 333


State 328

   66 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduce using rule 66 (inOp)
    TYPE         reduce using rule 66 (inOp)
    NIL          reduce using rule 66 (inOp)
    INTEGER      reduce using rule 66 (inOp)
    DECIMAL      reduce using rule 66 (inOp)
    ERRORTOKEN   reduce using rule 66 (inOp)
    ADD          reduce using rule 66 (inOp)
    SUB          reduce using rule 66 (inOp)
    HEADLIST     reduce using rule 66 (inOp)
    TAILLIST     reduce using rule 66 (inOp)
    DESTROYHEAD  reduce using rule 66 (inOp)
    ELSE         reduce using rule 66 (inOp)
    IF           reduce using rule 66 (inOp)
    FOR          reduce using rule 66 (inOp)
    READ         reduce using rule 66 (inOp)
    WRITE        reduce using rule 66 (inOp)
    WRITELN      reduce using rule 66 (inOp)
    RETURN       reduce using rule 66 (inOp)
    STFUNC       reduce using rule 66 (inOp)
    ENDFUNC      reduce using rule 66 (inOp)
    PARENL       reduce using rule 66 (inOp)


State 329

   67 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduce using rule 67 (outOp)
    TYPE         reduce using rule 67 (outOp)
    NIL          reduce using rule 67 (outOp)
    INTEGER      reduce using rule 67 (outOp)
    DECIMAL      reduce using rule 67 (outOp)
    ERRORTOKEN   reduce using rule 67 (outOp)
    ADD          reduce using rule 67 (outOp)
    SUB          reduce using rule 67 (outOp)
    HEADLIST     reduce using rule 67 (outOp)
    TAILLIST     reduce using rule 67 (outOp)
    DESTROYHEAD  reduce using rule 67 (outOp)
    ELSE         reduce using rule 67 (outOp)
    IF           reduce using rule 67 (outOp)
    FOR          reduce using rule 67 (outOp)
    READ         reduce using rule 67 (outOp)
    WRITE        reduce using rule 67 (outOp)
    WRITELN      reduce using rule 67 (outOp)
    RETURN       reduce using rule 67 (outOp)
    STFUNC       reduce using rule 67 (outOp)
    ENDFUNC      reduce using rule 67 (outOp)
    PARENL       reduce using rule 67 (outOp)


State 330

   68 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduce using rule 68 (outOp)
    TYPE         reduce using rule 68 (outOp)
    NIL          reduce using rule 68 (outOp)
    INTEGER      reduce using rule 68 (outOp)
    DECIMAL      reduce using rule 68 (outOp)
    ERRORTOKEN   reduce using rule 68 (outOp)
    ADD          reduce using rule 68 (outOp)
    SUB          reduce using rule 68 (outOp)
    HEADLIST     reduce using rule 68 (outOp)
    TAILLIST     reduce using rule 68 (outOp)
    DESTROYHEAD  reduce using rule 68 (outOp)
    ELSE         reduce using rule 68 (outOp)
    IF           reduce using rule 68 (outOp)
    FOR          reduce using rule 68 (outOp)
    READ         reduce using rule 68 (outOp)
    WRITE        reduce using rule 68 (outOp)
    WRITELN      reduce using rule 68 (outOp)
    RETURN       reduce using rule 68 (outOp)
    STFUNC       reduce using rule 68 (outOp)
    ENDFUNC      reduce using rule 68 (outOp)
    PARENL       reduce using rule 68 (outOp)


State 331

   43 elseStmt: ELSE $@9 primitiveStmt •

    ID           reduce using rule 43 (elseStmt)
    TYPE         reduce using rule 43 (elseStmt)
    NIL          reduce using rule 43 (elseStmt)
    INTEGER      reduce using rule 43 (elseStmt)
    DECIMAL      reduce using rule 43 (elseStmt)
    ERRORTOKEN   reduce using rule 43 (elseStmt)
    ADD          reduce using rule 43 (elseStmt)
    SUB          reduce using rule 43 (elseStmt)
    HEADLIST     reduce using rule 43 (elseStmt)
    TAILLIST     reduce using rule 43 (elseStmt)
    DESTROYHEAD  reduce using rule 43 (elseStmt)
    ELSE         reduce using rule 43 (elseStmt)
    IF           reduce using rule 43 (elseStmt)
    FOR          reduce using rule 43 (elseStmt)
    READ         reduce using rule 43 (elseStmt)
    WRITE        reduce using rule 43 (elseStmt)
    WRITELN      reduce using rule 43 (elseStmt)
    RETURN       reduce using rule 43 (elseStmt)
    STFUNC       reduce using rule 43 (elseStmt)
    ENDFUNC      reduce using rule 43 (elseStmt)
    PARENL       reduce using rule 43 (elseStmt)


State 332

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 178

    assignExp  go to state 334


State 333

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 178

    assignExp  go to state 335


State 334

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 336


State 335

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 337


State 336

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 199
    READ         shift, and go to state 200
    WRITE        shift, and go to state 201
    WRITELN      shift, and go to state 202
    RETURN       shift, and go to state 203
    STFUNC       shift, and go to state 204
    PARENL       shift, and go to state 57

    varDeclaration        go to state 205
    simpleVarDeclaration  go to state 206
    compoundStmt          go to state 207
    primitiveStmt         go to state 338
    exprStmt              go to state 208
    condStmt              go to state 209
    ifStmt                go to state 210
    iterStmt              go to state 211
    returnStmt            go to state 212
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 213
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 214
    outOp                 go to state 215
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 337

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           shift, and go to state 39
    TYPE         shift, and go to state 40
    NIL          shift, and go to state 41
    INTEGER      shift, and go to state 42
    DECIMAL      shift, and go to state 43
    ERRORTOKEN   shift, and go to state 44
    ADD          shift, and go to state 45
    SUB          shift, and go to state 46
    HEADLIST     shift, and go to state 47
    TAILLIST     shift, and go to state 48
    DESTROYHEAD  shift, and go to state 49
    IF           shift, and go to state 50
    FOR          shift, and go to state 199
    READ         shift, and go to state 200
    WRITE        shift, and go to state 201
    WRITELN      shift, and go to state 202
    RETURN       shift, and go to state 203
    STFUNC       shift, and go to state 204
    PARENL       shift, and go to state 57

    varDeclaration        go to state 205
    simpleVarDeclaration  go to state 206
    compoundStmt          go to state 207
    primitiveStmt         go to state 339
    exprStmt              go to state 208
    condStmt              go to state 209
    ifStmt                go to state 210
    iterStmt              go to state 211
    returnStmt            go to state 212
    listExp               go to state 67
    appendOps             go to state 68
    returnListOps         go to state 69
    returnListOp          go to state 70
    destroyHeadOps        go to state 71
    mapFilterOps          go to state 72
    expression            go to state 213
    assignExp             go to state 74
    simpleExp             go to state 75
    constOp               go to state 76
    inOp                  go to state 214
    outOp                 go to state 215
    binLogicalExp         go to state 79
    relationalExp         go to state 80
    sumExp                go to state 81
    sumOp                 go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 338

   44 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduce using rule 44 (iterStmt)
    TYPE         reduce using rule 44 (iterStmt)
    NIL          reduce using rule 44 (iterStmt)
    INTEGER      reduce using rule 44 (iterStmt)
    DECIMAL      reduce using rule 44 (iterStmt)
    ERRORTOKEN   reduce using rule 44 (iterStmt)
    ADD          reduce using rule 44 (iterStmt)
    SUB          reduce using rule 44 (iterStmt)
    HEADLIST     reduce using rule 44 (iterStmt)
    TAILLIST     reduce using rule 44 (iterStmt)
    DESTROYHEAD  reduce using rule 44 (iterStmt)
    ELSE         reduce using rule 44 (iterStmt)
    IF           reduce using rule 44 (iterStmt)
    FOR          reduce using rule 44 (iterStmt)
    READ         reduce using rule 44 (iterStmt)
    WRITE        reduce using rule 44 (iterStmt)
    WRITELN      reduce using rule 44 (iterStmt)
    RETURN       reduce using rule 44 (iterStmt)
    STFUNC       reduce using rule 44 (iterStmt)
    ENDFUNC      reduce using rule 44 (iterStmt)
    PARENL       reduce using rule 44 (iterStmt)


State 339

   45 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduce using rule 45 (iterStmt)
    TYPE         reduce using rule 45 (iterStmt)
    NIL          reduce using rule 45 (iterStmt)
    INTEGER      reduce using rule 45 (iterStmt)
    DECIMAL      reduce using rule 45 (iterStmt)
    ERRORTOKEN   reduce using rule 45 (iterStmt)
    ADD          reduce using rule 45 (iterStmt)
    SUB          reduce using rule 45 (iterStmt)
    HEADLIST     reduce using rule 45 (iterStmt)
    TAILLIST     reduce using rule 45 (iterStmt)
    DESTROYHEAD  reduce using rule 45 (iterStmt)
    ELSE         reduce using rule 45 (iterStmt)
    IF           reduce using rule 45 (iterStmt)
    FOR          reduce using rule 45 (iterStmt)
    READ         reduce using rule 45 (iterStmt)
    WRITE        reduce using rule 45 (iterStmt)
    WRITELN      reduce using rule 45 (iterStmt)
    RETURN       reduce using rule 45 (iterStmt)
    STFUNC       reduce using rule 45 (iterStmt)
    ENDFUNC      reduce using rule 45 (iterStmt)
    PARENL       reduce using rule 45 (iterStmt)
