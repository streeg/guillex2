Gramática

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration
    4                | error

    5 declaration: varDeclaration
    6            | funcDeclaration

    7 varDeclaration: simpleVarDeclaration SEMIC

    8 funcDeclaration: TYPE ID PARENL params PARENR compoundStmt
    9                | TYPE ID PARENL PARENR compoundStmt
   10                | TYPE LISTTYPE ID PARENL params PARENR compoundStmt
   11                | TYPE LISTTYPE ID PARENL PARENR compoundStmt

   12 simpleVarDeclaration: TYPE ID
   13                     | TYPE LISTTYPE ID

   14 params: params param
   15       | param

   16 param: simpleVarDeclaration

   17 compoundStmt: STFUNC stmtList ENDFUNC

   18 stmtList: stmtList primitiveStmt
   19         | primitiveStmt

   20 primitiveStmt: exprStmt
   21              | compoundStmt
   22              | condStmt
   23              | iterStmt
   24              | returnStmt
   25              | inOp
   26              | outOp
   27              | varDeclaration

   28 exprStmt: expression SEMIC

   29 condStmt: IF PARENL simpleExp PARENR primitiveStmt
   30         | IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   32         | FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   33 returnStmt: RETURN expression SEMIC

   34 listExp: appendOps
   35        | returnListOps
   36        | destroyHeadOps
   37        | mapFilterOps

   38 appendOps: ID APPEND ID

   39 returnListOps: returnListOp ID

   40 returnListOp: HEADLIST
   41             | TAILLIST

   42 destroyHeadOps: DESTROYHEAD ID

   43 mapFilterOps: ID MAP ID
   44             | ID FILTER ID

   45 expression: assignExp
   46           | simpleExp
   47           | listExp

   48 assignExp: ID ASSIGN expression

   49 simpleExp: binLogicalExp

   50 constOp: INTEGER
   51        | DECIMAL
   52        | NIL

   53 inOp: READ PARENL ID PARENR SEMIC

   54 outOp: WRITE PARENL outConst PARENR SEMIC
   55      | WRITELN PARENL outConst PARENR SEMIC

   56 outConst: STRING
   57         | simpleExp
   58         | listExp

   59 binLogicalExp: binLogicalExp binLogicalOp relationalOp
   60              | relationalExp

   61 binLogicalOp: OR
   62             | AND

   63 relationalExp: relationalExp relationalOp sumExp
   64              | sumExp

   65 relationalOp: SMALLER
   66             | GREATER
   67             | SMALLEQ
   68             | GREATEQ
   69             | EQUALS
   70             | DIFFERENT

   71 sumExp: sumExp sumOp mulExp
   72       | mulExp

   73 sumOp: ADD
   74      | SUB

   75 mulExp: mulExp mulOp factor
   76       | factor
   77       | sumOp factor

   78 mulOp: MULT
   79      | DIV

   80 factor: ID
   81       | fCall
   82       | PARENL simpleExp PARENR
   83       | constOp

   84 fCall: ID PARENL callParams PARENR
   85      | ID PARENL PARENR

   86 callParams: callParams COMMA simpleExp
   87           | simpleExp


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error <treeNode> (256) 4
    ID <str> (258) 8 9 10 11 12 13 38 39 42 43 44 48 53 80 84 85
    TYPE <str> (259) 8 9 10 11 12 13
    LISTTYPE <str> (260) 10 11 13
    STRING <str> (261) 56
    NIL <str> (262) 52
    INTEGER <integer> (263) 50
    DECIMAL <dec> (264) 51
    ADD <str> (265) 73
    SUB <str> (266) 74
    MULT <str> (267) 78
    DIV <str> (268) 79
    OR <str> (269) 61
    AND <str> (270) 62
    SMALLER <str> (271) 65
    GREATER <str> (272) 66
    SMALLEQ <str> (273) 67
    GREATEQ <str> (274) 68
    EQUALS <str> (275) 69
    DIFFERENT <str> (276) 70
    APPEND <str> (277) 38
    HEADLIST <str> (278) 40
    TAILLIST <str> (279) 41
    DESTROYHEAD <str> (280) 42
    FILTER <str> (281) 44
    ASSIGN <str> (282) 48
    MAP <str> (283) 43
    ELSE <str> (284) 30
    THEN <str> (285)
    IF <str> (286) 29 30
    FOR <str> (287) 31 32
    READ <str> (288) 53
    WRITE <str> (289) 54
    WRITELN <str> (290) 55
    RETURN <str> (291) 33
    SEMIC <str> (292) 7 28 31 32 33 53 54 55
    COMMA <str> (293) 86
    STFUNC <str> (294) 17
    ENDFUNC <str> (295) 17
    PARENL <str> (296) 8 9 10 11 29 30 31 32 53 54 55 82 84 85
    PARENR <str> (297) 8 9 10 11 29 30 31 32 53 54 55 82 84 85


Não terminais com as regras onde eles aparecem

    $accept (43)
        à esquerda: 0
    program <treeNode> (44)
        à esquerda: 1
        à direita: 0
    declarationList <treeNode> (45)
        à esquerda: 2 3 4
        à direita: 1 2
    declaration <treeNode> (46)
        à esquerda: 5 6
        à direita: 2 3
    varDeclaration <treeNode> (47)
        à esquerda: 7
        à direita: 5 27
    funcDeclaration <treeNode> (48)
        à esquerda: 8 9 10 11
        à direita: 6
    simpleVarDeclaration <treeNode> (49)
        à esquerda: 12 13
        à direita: 7 16
    params <treeNode> (50)
        à esquerda: 14 15
        à direita: 8 10 14
    param <treeNode> (51)
        à esquerda: 16
        à direita: 14 15
    compoundStmt <treeNode> (52)
        à esquerda: 17
        à direita: 8 9 10 11 21
    stmtList <treeNode> (53)
        à esquerda: 18 19
        à direita: 17 18
    primitiveStmt <treeNode> (54)
        à esquerda: 20 21 22 23 24 25 26 27
        à direita: 18 19 29 30 31 32
    exprStmt <treeNode> (55)
        à esquerda: 28
        à direita: 20
    condStmt <treeNode> (56)
        à esquerda: 29 30
        à direita: 22
    iterStmt <treeNode> (57)
        à esquerda: 31 32
        à direita: 23
    returnStmt <treeNode> (58)
        à esquerda: 33
        à direita: 24
    listExp <treeNode> (59)
        à esquerda: 34 35 36 37
        à direita: 47 58
    appendOps <treeNode> (60)
        à esquerda: 38
        à direita: 34
    returnListOps <treeNode> (61)
        à esquerda: 39
        à direita: 35
    returnListOp <treeNode> (62)
        à esquerda: 40 41
        à direita: 39
    destroyHeadOps <treeNode> (63)
        à esquerda: 42
        à direita: 36
    mapFilterOps <treeNode> (64)
        à esquerda: 43 44
        à direita: 37
    expression <treeNode> (65)
        à esquerda: 45 46 47
        à direita: 28 33 48
    assignExp <treeNode> (66)
        à esquerda: 48
        à direita: 31 32 45
    simpleExp <treeNode> (67)
        à esquerda: 49
        à direita: 29 30 31 32 46 57 82 86 87
    constOp <treeNode> (68)
        à esquerda: 50 51 52
        à direita: 83
    inOp <treeNode> (69)
        à esquerda: 53
        à direita: 25
    outOp <treeNode> (70)
        à esquerda: 54 55
        à direita: 26
    outConst <treeNode> (71)
        à esquerda: 56 57 58
        à direita: 54 55
    binLogicalExp <treeNode> (72)
        à esquerda: 59 60
        à direita: 49 59
    binLogicalOp <treeNode> (73)
        à esquerda: 61 62
        à direita: 59
    relationalExp <treeNode> (74)
        à esquerda: 63 64
        à direita: 60 63
    relationalOp <treeNode> (75)
        à esquerda: 65 66 67 68 69 70
        à direita: 59 63
    sumExp <treeNode> (76)
        à esquerda: 71 72
        à direita: 63 64 71
    sumOp <treeNode> (77)
        à esquerda: 73 74
        à direita: 71 77
    mulExp <treeNode> (78)
        à esquerda: 75 76 77
        à direita: 71 72 75
    mulOp <treeNode> (79)
        à esquerda: 78 79
        à direita: 75
    factor <treeNode> (80)
        à esquerda: 80 81 82 83
        à direita: 75 76 77
    fCall <treeNode> (81)
        à esquerda: 84 85
        à direita: 81
    callParams <treeNode> (82)
        à esquerda: 86 87
        à direita: 84 86


Estado 0

    0 $accept: • program $end

    error  deslocar, e ir ao estado 1
    TYPE   deslocar, e ir ao estado 2

    program               ir ao estado 3
    declarationList       ir ao estado 4
    declaration           ir ao estado 5
    varDeclaration        ir ao estado 6
    funcDeclaration       ir ao estado 7
    simpleVarDeclaration  ir ao estado 8


Estado 1

    4 declarationList: error •

    $end  reduzir usando a regra 4 (declarationList)
    TYPE  reduzir usando a regra 4 (declarationList)


Estado 2

    8 funcDeclaration: TYPE • ID PARENL params PARENR compoundStmt
    9                | TYPE • ID PARENL PARENR compoundStmt
   10                | TYPE • LISTTYPE ID PARENL params PARENR compoundStmt
   11                | TYPE • LISTTYPE ID PARENL PARENR compoundStmt
   12 simpleVarDeclaration: TYPE • ID
   13                     | TYPE • LISTTYPE ID

    ID        deslocar, e ir ao estado 9
    LISTTYPE  deslocar, e ir ao estado 10


Estado 3

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 11


Estado 4

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  deslocar, e ir ao estado 2

    $end  reduzir usando a regra 1 (program)

    declaration           ir ao estado 12
    varDeclaration        ir ao estado 6
    funcDeclaration       ir ao estado 7
    simpleVarDeclaration  ir ao estado 8


Estado 5

    3 declarationList: declaration •

    $end  reduzir usando a regra 3 (declarationList)
    TYPE  reduzir usando a regra 3 (declarationList)


Estado 6

    5 declaration: varDeclaration •

    $end  reduzir usando a regra 5 (declaration)
    TYPE  reduzir usando a regra 5 (declaration)


Estado 7

    6 declaration: funcDeclaration •

    $end  reduzir usando a regra 6 (declaration)
    TYPE  reduzir usando a regra 6 (declaration)


Estado 8

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 13


Estado 9

    8 funcDeclaration: TYPE ID • PARENL params PARENR compoundStmt
    9                | TYPE ID • PARENL PARENR compoundStmt
   12 simpleVarDeclaration: TYPE ID •

    PARENL  deslocar, e ir ao estado 14

    SEMIC  reduzir usando a regra 12 (simpleVarDeclaration)


Estado 10

   10 funcDeclaration: TYPE LISTTYPE • ID PARENL params PARENR compoundStmt
   11                | TYPE LISTTYPE • ID PARENL PARENR compoundStmt
   13 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  deslocar, e ir ao estado 15


Estado 11

    0 $accept: program $end •

    $padrão  aceitar


Estado 12

    2 declarationList: declarationList declaration •

    $end  reduzir usando a regra 2 (declarationList)
    TYPE  reduzir usando a regra 2 (declarationList)


Estado 13

    7 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduzir usando a regra 7 (varDeclaration)
    TYPE  reduzir usando a regra 7 (varDeclaration)


Estado 14

    8 funcDeclaration: TYPE ID PARENL • params PARENR compoundStmt
    9                | TYPE ID PARENL • PARENR compoundStmt

    TYPE    deslocar, e ir ao estado 16
    PARENR  deslocar, e ir ao estado 17

    simpleVarDeclaration  ir ao estado 18
    params                ir ao estado 19
    param                 ir ao estado 20


Estado 15

   10 funcDeclaration: TYPE LISTTYPE ID • PARENL params PARENR compoundStmt
   11                | TYPE LISTTYPE ID • PARENL PARENR compoundStmt
   13 simpleVarDeclaration: TYPE LISTTYPE ID •

    PARENL  deslocar, e ir ao estado 21

    SEMIC  reduzir usando a regra 13 (simpleVarDeclaration)


Estado 16

   12 simpleVarDeclaration: TYPE • ID
   13                     | TYPE • LISTTYPE ID

    ID        deslocar, e ir ao estado 22
    LISTTYPE  deslocar, e ir ao estado 23


Estado 17

    9 funcDeclaration: TYPE ID PARENL PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 24

    compoundStmt  ir ao estado 25


Estado 18

   16 param: simpleVarDeclaration •

    TYPE    reduzir usando a regra 16 (param)
    PARENR  reduzir usando a regra 16 (param)


Estado 19

    8 funcDeclaration: TYPE ID PARENL params • PARENR compoundStmt
   14 params: params • param

    TYPE    deslocar, e ir ao estado 16
    PARENR  deslocar, e ir ao estado 26

    simpleVarDeclaration  ir ao estado 18
    param                 ir ao estado 27


Estado 20

   15 params: param •

    TYPE    reduzir usando a regra 15 (params)
    PARENR  reduzir usando a regra 15 (params)


Estado 21

   10 funcDeclaration: TYPE LISTTYPE ID PARENL • params PARENR compoundStmt
   11                | TYPE LISTTYPE ID PARENL • PARENR compoundStmt

    TYPE    deslocar, e ir ao estado 16
    PARENR  deslocar, e ir ao estado 28

    simpleVarDeclaration  ir ao estado 18
    params                ir ao estado 29
    param                 ir ao estado 20


Estado 22

   12 simpleVarDeclaration: TYPE ID •

    TYPE    reduzir usando a regra 12 (simpleVarDeclaration)
    PARENR  reduzir usando a regra 12 (simpleVarDeclaration)


Estado 23

   13 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  deslocar, e ir ao estado 30


Estado 24

   17 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 40
    FOR          deslocar, e ir ao estado 41
    READ         deslocar, e ir ao estado 42
    WRITE        deslocar, e ir ao estado 43
    WRITELN      deslocar, e ir ao estado 44
    RETURN       deslocar, e ir ao estado 45
    STFUNC       deslocar, e ir ao estado 162
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 47
    simpleVarDeclaration  ir ao estado 163
    compoundStmt          ir ao estado 48
    stmtList              ir ao estado 49
    primitiveStmt         ir ao estado 50
    exprStmt              ir ao estado 51
    condStmt              ir ao estado 52
    iterStmt              ir ao estado 53
    returnStmt            ir ao estado 54
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 61
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 65
    outOp                 ir ao estado 66
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 25

    9 funcDeclaration: TYPE ID PARENL PARENR compoundStmt •

    $end  reduzir usando a regra 9 (funcDeclaration)
    TYPE  reduzir usando a regra 9 (funcDeclaration)


Estado 26

    8 funcDeclaration: TYPE ID PARENL params PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 24

    compoundStmt  ir ao estado 74


Estado 27

   14 params: params param •

    TYPE    reduzir usando a regra 14 (params)
    PARENR  reduzir usando a regra 14 (params)


Estado 28

   11 funcDeclaration: TYPE LISTTYPE ID PARENL PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 24

    compoundStmt  ir ao estado 75


Estado 29

   10 funcDeclaration: TYPE LISTTYPE ID PARENL params • PARENR compoundStmt
   14 params: params • param

    TYPE    deslocar, e ir ao estado 16
    PARENR  deslocar, e ir ao estado 76

    simpleVarDeclaration  ir ao estado 18
    param                 ir ao estado 27


Estado 30

   13 simpleVarDeclaration: TYPE LISTTYPE ID •

    TYPE    reduzir usando a regra 13 (simpleVarDeclaration)
    PARENR  reduzir usando a regra 13 (simpleVarDeclaration)


Estado 31

   38 appendOps: ID • APPEND ID
   43 mapFilterOps: ID • MAP ID
   44             | ID • FILTER ID
   48 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 77
    FILTER  deslocar, e ir ao estado 78
    ASSIGN  deslocar, e ir ao estado 79
    MAP     deslocar, e ir ao estado 80
    PARENL  deslocar, e ir ao estado 81

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 32

   52 constOp: NIL •

    ADD        reduzir usando a regra 52 (constOp)
    SUB        reduzir usando a regra 52 (constOp)
    MULT       reduzir usando a regra 52 (constOp)
    DIV        reduzir usando a regra 52 (constOp)
    OR         reduzir usando a regra 52 (constOp)
    AND        reduzir usando a regra 52 (constOp)
    SMALLER    reduzir usando a regra 52 (constOp)
    GREATER    reduzir usando a regra 52 (constOp)
    SMALLEQ    reduzir usando a regra 52 (constOp)
    GREATEQ    reduzir usando a regra 52 (constOp)
    EQUALS     reduzir usando a regra 52 (constOp)
    DIFFERENT  reduzir usando a regra 52 (constOp)
    SEMIC      reduzir usando a regra 52 (constOp)


Estado 33

   50 constOp: INTEGER •

    ADD        reduzir usando a regra 50 (constOp)
    SUB        reduzir usando a regra 50 (constOp)
    MULT       reduzir usando a regra 50 (constOp)
    DIV        reduzir usando a regra 50 (constOp)
    OR         reduzir usando a regra 50 (constOp)
    AND        reduzir usando a regra 50 (constOp)
    SMALLER    reduzir usando a regra 50 (constOp)
    GREATER    reduzir usando a regra 50 (constOp)
    SMALLEQ    reduzir usando a regra 50 (constOp)
    GREATEQ    reduzir usando a regra 50 (constOp)
    EQUALS     reduzir usando a regra 50 (constOp)
    DIFFERENT  reduzir usando a regra 50 (constOp)
    SEMIC      reduzir usando a regra 50 (constOp)


Estado 34

   51 constOp: DECIMAL •

    ADD        reduzir usando a regra 51 (constOp)
    SUB        reduzir usando a regra 51 (constOp)
    MULT       reduzir usando a regra 51 (constOp)
    DIV        reduzir usando a regra 51 (constOp)
    OR         reduzir usando a regra 51 (constOp)
    AND        reduzir usando a regra 51 (constOp)
    SMALLER    reduzir usando a regra 51 (constOp)
    GREATER    reduzir usando a regra 51 (constOp)
    SMALLEQ    reduzir usando a regra 51 (constOp)
    GREATEQ    reduzir usando a regra 51 (constOp)
    EQUALS     reduzir usando a regra 51 (constOp)
    DIFFERENT  reduzir usando a regra 51 (constOp)
    SEMIC      reduzir usando a regra 51 (constOp)


Estado 35

   73 sumOp: ADD •

    ID       reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 36

   74 sumOp: SUB •

    ID       reduzir usando a regra 74 (sumOp)
    NIL      reduzir usando a regra 74 (sumOp)
    INTEGER  reduzir usando a regra 74 (sumOp)
    DECIMAL  reduzir usando a regra 74 (sumOp)
    PARENL   reduzir usando a regra 74 (sumOp)


Estado 37

   40 returnListOp: HEADLIST •

    ID  reduzir usando a regra 40 (returnListOp)


Estado 38

   41 returnListOp: TAILLIST •

    ID  reduzir usando a regra 41 (returnListOp)


Estado 39

   42 destroyHeadOps: DESTROYHEAD • ID

    ID  deslocar, e ir ao estado 82


Estado 40

   29 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   30         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 83


Estado 41

   31 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   32         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 84


Estado 42

   53 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 85


Estado 43

   54 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 86


Estado 44

   55 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 87


Estado 45

   33 returnStmt: RETURN • expression SEMIC

    ID           deslocar, e ir ao estado 31
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    PARENL       deslocar, e ir ao estado 46

    listExp         ir ao estado 55
    appendOps       ir ao estado 56
    returnListOps   ir ao estado 57
    returnListOp    ir ao estado 58
    destroyHeadOps  ir ao estado 59
    mapFilterOps    ir ao estado 60
    expression      ir ao estado 88
    assignExp       ir ao estado 62
    simpleExp       ir ao estado 63
    constOp         ir ao estado 64
    binLogicalExp   ir ao estado 67
    relationalExp   ir ao estado 68
    sumExp          ir ao estado 69
    sumOp           ir ao estado 70
    mulExp          ir ao estado 71
    factor          ir ao estado 72
    fCall           ir ao estado 73


Estado 46

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 89
    NIL      deslocar, e ir ao estado 164
    INTEGER  deslocar, e ir ao estado 165
    DECIMAL  deslocar, e ir ao estado 166
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 167

    simpleExp      ir ao estado 90
    constOp        ir ao estado 168
    binLogicalExp  ir ao estado 169
    relationalExp  ir ao estado 170
    sumExp         ir ao estado 171
    sumOp          ir ao estado 172
    mulExp         ir ao estado 173
    factor         ir ao estado 174
    fCall          ir ao estado 175


Estado 47

   27 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 27 (primitiveStmt)
    TYPE         reduzir usando a regra 27 (primitiveStmt)
    NIL          reduzir usando a regra 27 (primitiveStmt)
    INTEGER      reduzir usando a regra 27 (primitiveStmt)
    DECIMAL      reduzir usando a regra 27 (primitiveStmt)
    ADD          reduzir usando a regra 27 (primitiveStmt)
    SUB          reduzir usando a regra 27 (primitiveStmt)
    HEADLIST     reduzir usando a regra 27 (primitiveStmt)
    TAILLIST     reduzir usando a regra 27 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 27 (primitiveStmt)
    IF           reduzir usando a regra 27 (primitiveStmt)
    FOR          reduzir usando a regra 27 (primitiveStmt)
    READ         reduzir usando a regra 27 (primitiveStmt)
    WRITE        reduzir usando a regra 27 (primitiveStmt)
    WRITELN      reduzir usando a regra 27 (primitiveStmt)
    RETURN       reduzir usando a regra 27 (primitiveStmt)
    STFUNC       reduzir usando a regra 27 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 27 (primitiveStmt)
    PARENL       reduzir usando a regra 27 (primitiveStmt)


Estado 48

   21 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 49

   17 compoundStmt: STFUNC stmtList • ENDFUNC
   18 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 40
    FOR          deslocar, e ir ao estado 41
    READ         deslocar, e ir ao estado 42
    WRITE        deslocar, e ir ao estado 43
    WRITELN      deslocar, e ir ao estado 44
    RETURN       deslocar, e ir ao estado 45
    STFUNC       deslocar, e ir ao estado 162
    ENDFUNC      deslocar, e ir ao estado 91
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 47
    simpleVarDeclaration  ir ao estado 163
    compoundStmt          ir ao estado 48
    primitiveStmt         ir ao estado 92
    exprStmt              ir ao estado 51
    condStmt              ir ao estado 52
    iterStmt              ir ao estado 53
    returnStmt            ir ao estado 54
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 61
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 65
    outOp                 ir ao estado 66
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 50

   19 stmtList: primitiveStmt •

    ID           reduzir usando a regra 19 (stmtList)
    TYPE         reduzir usando a regra 19 (stmtList)
    NIL          reduzir usando a regra 19 (stmtList)
    INTEGER      reduzir usando a regra 19 (stmtList)
    DECIMAL      reduzir usando a regra 19 (stmtList)
    ADD          reduzir usando a regra 19 (stmtList)
    SUB          reduzir usando a regra 19 (stmtList)
    HEADLIST     reduzir usando a regra 19 (stmtList)
    TAILLIST     reduzir usando a regra 19 (stmtList)
    DESTROYHEAD  reduzir usando a regra 19 (stmtList)
    IF           reduzir usando a regra 19 (stmtList)
    FOR          reduzir usando a regra 19 (stmtList)
    READ         reduzir usando a regra 19 (stmtList)
    WRITE        reduzir usando a regra 19 (stmtList)
    WRITELN      reduzir usando a regra 19 (stmtList)
    RETURN       reduzir usando a regra 19 (stmtList)
    STFUNC       reduzir usando a regra 19 (stmtList)
    ENDFUNC      reduzir usando a regra 19 (stmtList)
    PARENL       reduzir usando a regra 19 (stmtList)


Estado 51

   20 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 52

   22 primitiveStmt: condStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 53

   23 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 54

   24 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 55

   47 expression: listExp •

    SEMIC  reduzir usando a regra 47 (expression)


Estado 56

   34 listExp: appendOps •

    SEMIC  reduzir usando a regra 34 (listExp)


Estado 57

   35 listExp: returnListOps •

    SEMIC  reduzir usando a regra 35 (listExp)


Estado 58

   39 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 93


Estado 59

   36 listExp: destroyHeadOps •

    SEMIC  reduzir usando a regra 36 (listExp)


Estado 60

   37 listExp: mapFilterOps •

    SEMIC  reduzir usando a regra 37 (listExp)


Estado 61

   28 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 94


Estado 62

   45 expression: assignExp •

    SEMIC  reduzir usando a regra 45 (expression)


Estado 63

   46 expression: simpleExp •

    SEMIC  reduzir usando a regra 46 (expression)


Estado 64

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    SEMIC      reduzir usando a regra 83 (factor)


Estado 65

   25 primitiveStmt: inOp •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 66

   26 primitiveStmt: outOp •

    ID           reduzir usando a regra 26 (primitiveStmt)
    TYPE         reduzir usando a regra 26 (primitiveStmt)
    NIL          reduzir usando a regra 26 (primitiveStmt)
    INTEGER      reduzir usando a regra 26 (primitiveStmt)
    DECIMAL      reduzir usando a regra 26 (primitiveStmt)
    ADD          reduzir usando a regra 26 (primitiveStmt)
    SUB          reduzir usando a regra 26 (primitiveStmt)
    HEADLIST     reduzir usando a regra 26 (primitiveStmt)
    TAILLIST     reduzir usando a regra 26 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 26 (primitiveStmt)
    IF           reduzir usando a regra 26 (primitiveStmt)
    FOR          reduzir usando a regra 26 (primitiveStmt)
    READ         reduzir usando a regra 26 (primitiveStmt)
    WRITE        reduzir usando a regra 26 (primitiveStmt)
    WRITELN      reduzir usando a regra 26 (primitiveStmt)
    RETURN       reduzir usando a regra 26 (primitiveStmt)
    STFUNC       reduzir usando a regra 26 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 26 (primitiveStmt)
    PARENL       reduzir usando a regra 26 (primitiveStmt)


Estado 67

   49 simpleExp: binLogicalExp •
   59 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   deslocar, e ir ao estado 95
    AND  deslocar, e ir ao estado 96

    SEMIC  reduzir usando a regra 49 (simpleExp)

    binLogicalOp  ir ao estado 97


Estado 68

   60 binLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 98
    GREATER    deslocar, e ir ao estado 99
    SMALLEQ    deslocar, e ir ao estado 100
    GREATEQ    deslocar, e ir ao estado 101
    EQUALS     deslocar, e ir ao estado 102
    DIFFERENT  deslocar, e ir ao estado 103

    OR     reduzir usando a regra 60 (binLogicalExp)
    AND    reduzir usando a regra 60 (binLogicalExp)
    SEMIC  reduzir usando a regra 60 (binLogicalExp)

    relationalOp  ir ao estado 104


Estado 69

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    SEMIC      reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 105


Estado 70

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 46

    constOp  ir ao estado 64
    factor   ir ao estado 106
    fCall    ir ao estado 73


Estado 71

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 107
    DIV   deslocar, e ir ao estado 108

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    SEMIC      reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 109


Estado 72

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    SEMIC      reduzir usando a regra 76 (mulExp)


Estado 73

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 74

    8 funcDeclaration: TYPE ID PARENL params PARENR compoundStmt •

    $end  reduzir usando a regra 8 (funcDeclaration)
    TYPE  reduzir usando a regra 8 (funcDeclaration)


Estado 75

   11 funcDeclaration: TYPE LISTTYPE ID PARENL PARENR compoundStmt •

    $end  reduzir usando a regra 11 (funcDeclaration)
    TYPE  reduzir usando a regra 11 (funcDeclaration)


Estado 76

   10 funcDeclaration: TYPE LISTTYPE ID PARENL params PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 24

    compoundStmt  ir ao estado 110


Estado 77

   38 appendOps: ID APPEND • ID

    ID  deslocar, e ir ao estado 111


Estado 78

   44 mapFilterOps: ID FILTER • ID

    ID  deslocar, e ir ao estado 112


Estado 79

   48 assignExp: ID ASSIGN • expression

    ID           deslocar, e ir ao estado 31
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    PARENL       deslocar, e ir ao estado 46

    listExp         ir ao estado 55
    appendOps       ir ao estado 56
    returnListOps   ir ao estado 57
    returnListOp    ir ao estado 58
    destroyHeadOps  ir ao estado 59
    mapFilterOps    ir ao estado 60
    expression      ir ao estado 113
    assignExp       ir ao estado 62
    simpleExp       ir ao estado 63
    constOp         ir ao estado 64
    binLogicalExp   ir ao estado 67
    relationalExp   ir ao estado 68
    sumExp          ir ao estado 69
    sumOp           ir ao estado 70
    mulExp          ir ao estado 71
    factor          ir ao estado 72
    fCall           ir ao estado 73


Estado 80

   43 mapFilterOps: ID MAP • ID

    ID  deslocar, e ir ao estado 114


Estado 81

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 183
    PARENR   deslocar, e ir ao estado 115

    simpleExp      ir ao estado 116
    constOp        ir ao estado 184
    binLogicalExp  ir ao estado 185
    relationalExp  ir ao estado 186
    sumExp         ir ao estado 187
    sumOp          ir ao estado 188
    mulExp         ir ao estado 189
    factor         ir ao estado 190
    fCall          ir ao estado 191
    callParams     ir ao estado 117


Estado 82

   42 destroyHeadOps: DESTROYHEAD ID •

    SEMIC  reduzir usando a regra 42 (destroyHeadOps)


Estado 83

   29 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   30         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 89
    NIL      deslocar, e ir ao estado 164
    INTEGER  deslocar, e ir ao estado 165
    DECIMAL  deslocar, e ir ao estado 166
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 167

    simpleExp      ir ao estado 118
    constOp        ir ao estado 168
    binLogicalExp  ir ao estado 169
    relationalExp  ir ao estado 170
    sumExp         ir ao estado 171
    sumOp          ir ao estado 172
    mulExp         ir ao estado 173
    factor         ir ao estado 174
    fCall          ir ao estado 175


Estado 84

   31 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   32         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 119
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 46

    assignExp      ir ao estado 120
    simpleExp      ir ao estado 121
    constOp        ir ao estado 64
    binLogicalExp  ir ao estado 67
    relationalExp  ir ao estado 68
    sumExp         ir ao estado 69
    sumOp          ir ao estado 70
    mulExp         ir ao estado 71
    factor         ir ao estado 72
    fCall          ir ao estado 73


Estado 85

   53 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 122


Estado 86

   54 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID           deslocar, e ir ao estado 123
    STRING       deslocar, e ir ao estado 124
    NIL          deslocar, e ir ao estado 164
    INTEGER      deslocar, e ir ao estado 165
    DECIMAL      deslocar, e ir ao estado 166
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 192
    PARENL       deslocar, e ir ao estado 167

    listExp         ir ao estado 125
    appendOps       ir ao estado 193
    returnListOps   ir ao estado 194
    returnListOp    ir ao estado 195
    destroyHeadOps  ir ao estado 196
    mapFilterOps    ir ao estado 197
    simpleExp       ir ao estado 126
    constOp         ir ao estado 168
    outConst        ir ao estado 127
    binLogicalExp   ir ao estado 169
    relationalExp   ir ao estado 170
    sumExp          ir ao estado 171
    sumOp           ir ao estado 172
    mulExp          ir ao estado 173
    factor          ir ao estado 174
    fCall           ir ao estado 175


Estado 87

   55 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID           deslocar, e ir ao estado 123
    STRING       deslocar, e ir ao estado 124
    NIL          deslocar, e ir ao estado 164
    INTEGER      deslocar, e ir ao estado 165
    DECIMAL      deslocar, e ir ao estado 166
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 192
    PARENL       deslocar, e ir ao estado 167

    listExp         ir ao estado 125
    appendOps       ir ao estado 193
    returnListOps   ir ao estado 194
    returnListOp    ir ao estado 195
    destroyHeadOps  ir ao estado 196
    mapFilterOps    ir ao estado 197
    simpleExp       ir ao estado 126
    constOp         ir ao estado 168
    outConst        ir ao estado 128
    binLogicalExp   ir ao estado 169
    relationalExp   ir ao estado 170
    sumExp          ir ao estado 171
    sumOp           ir ao estado 172
    mulExp          ir ao estado 173
    factor          ir ao estado 174
    fCall           ir ao estado 175


Estado 88

   33 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 129


Estado 89

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 198

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 90

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 130


Estado 91

   17 compoundStmt: STFUNC stmtList ENDFUNC •

    $end  reduzir usando a regra 17 (compoundStmt)
    TYPE  reduzir usando a regra 17 (compoundStmt)


Estado 92

   18 stmtList: stmtList primitiveStmt •

    ID           reduzir usando a regra 18 (stmtList)
    TYPE         reduzir usando a regra 18 (stmtList)
    NIL          reduzir usando a regra 18 (stmtList)
    INTEGER      reduzir usando a regra 18 (stmtList)
    DECIMAL      reduzir usando a regra 18 (stmtList)
    ADD          reduzir usando a regra 18 (stmtList)
    SUB          reduzir usando a regra 18 (stmtList)
    HEADLIST     reduzir usando a regra 18 (stmtList)
    TAILLIST     reduzir usando a regra 18 (stmtList)
    DESTROYHEAD  reduzir usando a regra 18 (stmtList)
    IF           reduzir usando a regra 18 (stmtList)
    FOR          reduzir usando a regra 18 (stmtList)
    READ         reduzir usando a regra 18 (stmtList)
    WRITE        reduzir usando a regra 18 (stmtList)
    WRITELN      reduzir usando a regra 18 (stmtList)
    RETURN       reduzir usando a regra 18 (stmtList)
    STFUNC       reduzir usando a regra 18 (stmtList)
    ENDFUNC      reduzir usando a regra 18 (stmtList)
    PARENL       reduzir usando a regra 18 (stmtList)


Estado 93

   39 returnListOps: returnListOp ID •

    SEMIC  reduzir usando a regra 39 (returnListOps)


Estado 94

   28 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 28 (exprStmt)
    TYPE         reduzir usando a regra 28 (exprStmt)
    NIL          reduzir usando a regra 28 (exprStmt)
    INTEGER      reduzir usando a regra 28 (exprStmt)
    DECIMAL      reduzir usando a regra 28 (exprStmt)
    ADD          reduzir usando a regra 28 (exprStmt)
    SUB          reduzir usando a regra 28 (exprStmt)
    HEADLIST     reduzir usando a regra 28 (exprStmt)
    TAILLIST     reduzir usando a regra 28 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 28 (exprStmt)
    IF           reduzir usando a regra 28 (exprStmt)
    FOR          reduzir usando a regra 28 (exprStmt)
    READ         reduzir usando a regra 28 (exprStmt)
    WRITE        reduzir usando a regra 28 (exprStmt)
    WRITELN      reduzir usando a regra 28 (exprStmt)
    RETURN       reduzir usando a regra 28 (exprStmt)
    STFUNC       reduzir usando a regra 28 (exprStmt)
    ENDFUNC      reduzir usando a regra 28 (exprStmt)
    PARENL       reduzir usando a regra 28 (exprStmt)


Estado 95

   61 binLogicalOp: OR •

    SMALLER    reduzir usando a regra 61 (binLogicalOp)
    GREATER    reduzir usando a regra 61 (binLogicalOp)
    SMALLEQ    reduzir usando a regra 61 (binLogicalOp)
    GREATEQ    reduzir usando a regra 61 (binLogicalOp)
    EQUALS     reduzir usando a regra 61 (binLogicalOp)
    DIFFERENT  reduzir usando a regra 61 (binLogicalOp)


Estado 96

   62 binLogicalOp: AND •

    SMALLER    reduzir usando a regra 62 (binLogicalOp)
    GREATER    reduzir usando a regra 62 (binLogicalOp)
    SMALLEQ    reduzir usando a regra 62 (binLogicalOp)
    GREATEQ    reduzir usando a regra 62 (binLogicalOp)
    EQUALS     reduzir usando a regra 62 (binLogicalOp)
    DIFFERENT  reduzir usando a regra 62 (binLogicalOp)


Estado 97

   59 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    deslocar, e ir ao estado 199
    GREATER    deslocar, e ir ao estado 200
    SMALLEQ    deslocar, e ir ao estado 201
    GREATEQ    deslocar, e ir ao estado 202
    EQUALS     deslocar, e ir ao estado 203
    DIFFERENT  deslocar, e ir ao estado 204

    relationalOp  ir ao estado 131


Estado 98

   65 relationalOp: SMALLER •

    ID       reduzir usando a regra 65 (relationalOp)
    NIL      reduzir usando a regra 65 (relationalOp)
    INTEGER  reduzir usando a regra 65 (relationalOp)
    DECIMAL  reduzir usando a regra 65 (relationalOp)
    ADD      reduzir usando a regra 65 (relationalOp)
    SUB      reduzir usando a regra 65 (relationalOp)
    PARENL   reduzir usando a regra 65 (relationalOp)


Estado 99

   66 relationalOp: GREATER •

    ID       reduzir usando a regra 66 (relationalOp)
    NIL      reduzir usando a regra 66 (relationalOp)
    INTEGER  reduzir usando a regra 66 (relationalOp)
    DECIMAL  reduzir usando a regra 66 (relationalOp)
    ADD      reduzir usando a regra 66 (relationalOp)
    SUB      reduzir usando a regra 66 (relationalOp)
    PARENL   reduzir usando a regra 66 (relationalOp)


Estado 100

   67 relationalOp: SMALLEQ •

    ID       reduzir usando a regra 67 (relationalOp)
    NIL      reduzir usando a regra 67 (relationalOp)
    INTEGER  reduzir usando a regra 67 (relationalOp)
    DECIMAL  reduzir usando a regra 67 (relationalOp)
    ADD      reduzir usando a regra 67 (relationalOp)
    SUB      reduzir usando a regra 67 (relationalOp)
    PARENL   reduzir usando a regra 67 (relationalOp)


Estado 101

   68 relationalOp: GREATEQ •

    ID       reduzir usando a regra 68 (relationalOp)
    NIL      reduzir usando a regra 68 (relationalOp)
    INTEGER  reduzir usando a regra 68 (relationalOp)
    DECIMAL  reduzir usando a regra 68 (relationalOp)
    ADD      reduzir usando a regra 68 (relationalOp)
    SUB      reduzir usando a regra 68 (relationalOp)
    PARENL   reduzir usando a regra 68 (relationalOp)


Estado 102

   69 relationalOp: EQUALS •

    ID       reduzir usando a regra 69 (relationalOp)
    NIL      reduzir usando a regra 69 (relationalOp)
    INTEGER  reduzir usando a regra 69 (relationalOp)
    DECIMAL  reduzir usando a regra 69 (relationalOp)
    ADD      reduzir usando a regra 69 (relationalOp)
    SUB      reduzir usando a regra 69 (relationalOp)
    PARENL   reduzir usando a regra 69 (relationalOp)


Estado 103

   70 relationalOp: DIFFERENT •

    ID       reduzir usando a regra 70 (relationalOp)
    NIL      reduzir usando a regra 70 (relationalOp)
    INTEGER  reduzir usando a regra 70 (relationalOp)
    DECIMAL  reduzir usando a regra 70 (relationalOp)
    ADD      reduzir usando a regra 70 (relationalOp)
    SUB      reduzir usando a regra 70 (relationalOp)
    PARENL   reduzir usando a regra 70 (relationalOp)


Estado 104

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 46

    constOp  ir ao estado 64
    sumExp   ir ao estado 132
    sumOp    ir ao estado 70
    mulExp   ir ao estado 71
    factor   ir ao estado 72
    fCall    ir ao estado 73


Estado 105

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 46

    constOp  ir ao estado 64
    sumOp    ir ao estado 70
    mulExp   ir ao estado 133
    factor   ir ao estado 72
    fCall    ir ao estado 73


Estado 106

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    SEMIC      reduzir usando a regra 77 (mulExp)


Estado 107

   78 mulOp: MULT •

    ID       reduzir usando a regra 78 (mulOp)
    NIL      reduzir usando a regra 78 (mulOp)
    INTEGER  reduzir usando a regra 78 (mulOp)
    DECIMAL  reduzir usando a regra 78 (mulOp)
    PARENL   reduzir usando a regra 78 (mulOp)


Estado 108

   79 mulOp: DIV •

    ID       reduzir usando a regra 79 (mulOp)
    NIL      reduzir usando a regra 79 (mulOp)
    INTEGER  reduzir usando a regra 79 (mulOp)
    DECIMAL  reduzir usando a regra 79 (mulOp)
    PARENL   reduzir usando a regra 79 (mulOp)


Estado 109

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 46

    constOp  ir ao estado 64
    factor   ir ao estado 134
    fCall    ir ao estado 73


Estado 110

   10 funcDeclaration: TYPE LISTTYPE ID PARENL params PARENR compoundStmt •

    $end  reduzir usando a regra 10 (funcDeclaration)
    TYPE  reduzir usando a regra 10 (funcDeclaration)


Estado 111

   38 appendOps: ID APPEND ID •

    SEMIC  reduzir usando a regra 38 (appendOps)


Estado 112

   44 mapFilterOps: ID FILTER ID •

    SEMIC  reduzir usando a regra 44 (mapFilterOps)


Estado 113

   48 assignExp: ID ASSIGN expression •

    SEMIC  reduzir usando a regra 48 (assignExp)


Estado 114

   43 mapFilterOps: ID MAP ID •

    SEMIC  reduzir usando a regra 43 (mapFilterOps)


Estado 115

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    SEMIC      reduzir usando a regra 85 (fCall)


Estado 116

   87 callParams: simpleExp •

    COMMA   reduzir usando a regra 87 (callParams)
    PARENR  reduzir usando a regra 87 (callParams)


Estado 117

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 135
    PARENR  deslocar, e ir ao estado 136


Estado 118

   29 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   30         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 137


Estado 119

   48 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 79
    PARENL  deslocar, e ir ao estado 81

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 120

   31 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 138


Estado 121

   32 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 139


Estado 122

   53 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 140


Estado 123

   38 appendOps: ID • APPEND ID
   43 mapFilterOps: ID • MAP ID
   44             | ID • FILTER ID
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 205
    FILTER  deslocar, e ir ao estado 206
    MAP     deslocar, e ir ao estado 207
    PARENL  deslocar, e ir ao estado 198

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 124

   56 outConst: STRING •

    PARENR  reduzir usando a regra 56 (outConst)


Estado 125

   58 outConst: listExp •

    PARENR  reduzir usando a regra 58 (outConst)


Estado 126

   57 outConst: simpleExp •

    PARENR  reduzir usando a regra 57 (outConst)


Estado 127

   54 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 141


Estado 128

   55 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 142


Estado 129

   33 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 33 (returnStmt)
    TYPE         reduzir usando a regra 33 (returnStmt)
    NIL          reduzir usando a regra 33 (returnStmt)
    INTEGER      reduzir usando a regra 33 (returnStmt)
    DECIMAL      reduzir usando a regra 33 (returnStmt)
    ADD          reduzir usando a regra 33 (returnStmt)
    SUB          reduzir usando a regra 33 (returnStmt)
    HEADLIST     reduzir usando a regra 33 (returnStmt)
    TAILLIST     reduzir usando a regra 33 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 33 (returnStmt)
    IF           reduzir usando a regra 33 (returnStmt)
    FOR          reduzir usando a regra 33 (returnStmt)
    READ         reduzir usando a regra 33 (returnStmt)
    WRITE        reduzir usando a regra 33 (returnStmt)
    WRITELN      reduzir usando a regra 33 (returnStmt)
    RETURN       reduzir usando a regra 33 (returnStmt)
    STFUNC       reduzir usando a regra 33 (returnStmt)
    ENDFUNC      reduzir usando a regra 33 (returnStmt)
    PARENL       reduzir usando a regra 33 (returnStmt)


Estado 130

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    SEMIC      reduzir usando a regra 82 (factor)


Estado 131

   59 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR     reduzir usando a regra 59 (binLogicalExp)
    AND    reduzir usando a regra 59 (binLogicalExp)
    SEMIC  reduzir usando a regra 59 (binLogicalExp)


Estado 132

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    SEMIC      reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 105


Estado 133

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 107
    DIV   deslocar, e ir ao estado 108

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    SEMIC      reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 109


Estado 134

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    SEMIC      reduzir usando a regra 75 (mulExp)


Estado 135

   86 callParams: callParams COMMA • simpleExp

    ID       deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 183

    simpleExp      ir ao estado 143
    constOp        ir ao estado 184
    binLogicalExp  ir ao estado 185
    relationalExp  ir ao estado 186
    sumExp         ir ao estado 187
    sumOp          ir ao estado 188
    mulExp         ir ao estado 189
    factor         ir ao estado 190
    fCall          ir ao estado 191


Estado 136

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 137

   29 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   30         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 208
    FOR          deslocar, e ir ao estado 209
    READ         deslocar, e ir ao estado 210
    WRITE        deslocar, e ir ao estado 211
    WRITELN      deslocar, e ir ao estado 212
    RETURN       deslocar, e ir ao estado 213
    STFUNC       deslocar, e ir ao estado 214
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 215
    simpleVarDeclaration  ir ao estado 216
    compoundStmt          ir ao estado 217
    primitiveStmt         ir ao estado 144
    exprStmt              ir ao estado 218
    condStmt              ir ao estado 219
    iterStmt              ir ao estado 220
    returnStmt            ir ao estado 221
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 222
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 223
    outOp                 ir ao estado 224
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 138

   31 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 46

    simpleExp      ir ao estado 145
    constOp        ir ao estado 64
    binLogicalExp  ir ao estado 67
    relationalExp  ir ao estado 68
    sumExp         ir ao estado 69
    sumOp          ir ao estado 70
    mulExp         ir ao estado 71
    factor         ir ao estado 72
    fCall          ir ao estado 73


Estado 139

   32 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 46

    simpleExp      ir ao estado 146
    constOp        ir ao estado 64
    binLogicalExp  ir ao estado 67
    relationalExp  ir ao estado 68
    sumExp         ir ao estado 69
    sumOp          ir ao estado 70
    mulExp         ir ao estado 71
    factor         ir ao estado 72
    fCall          ir ao estado 73


Estado 140

   53 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 147


Estado 141

   54 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 148


Estado 142

   55 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 149


Estado 143

   86 callParams: callParams COMMA simpleExp •

    COMMA   reduzir usando a regra 86 (callParams)
    PARENR  reduzir usando a regra 86 (callParams)


Estado 144

   29 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   30         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 150

    ID           reduzir usando a regra 29 (condStmt)
    TYPE         reduzir usando a regra 29 (condStmt)
    NIL          reduzir usando a regra 29 (condStmt)
    INTEGER      reduzir usando a regra 29 (condStmt)
    DECIMAL      reduzir usando a regra 29 (condStmt)
    ADD          reduzir usando a regra 29 (condStmt)
    SUB          reduzir usando a regra 29 (condStmt)
    HEADLIST     reduzir usando a regra 29 (condStmt)
    TAILLIST     reduzir usando a regra 29 (condStmt)
    DESTROYHEAD  reduzir usando a regra 29 (condStmt)
    IF           reduzir usando a regra 29 (condStmt)
    FOR          reduzir usando a regra 29 (condStmt)
    READ         reduzir usando a regra 29 (condStmt)
    WRITE        reduzir usando a regra 29 (condStmt)
    WRITELN      reduzir usando a regra 29 (condStmt)
    RETURN       reduzir usando a regra 29 (condStmt)
    STFUNC       reduzir usando a regra 29 (condStmt)
    ENDFUNC      reduzir usando a regra 29 (condStmt)
    PARENL       reduzir usando a regra 29 (condStmt)


Estado 145

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 151


Estado 146

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 152


Estado 147

   53 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 53 (inOp)
    TYPE         reduzir usando a regra 53 (inOp)
    NIL          reduzir usando a regra 53 (inOp)
    INTEGER      reduzir usando a regra 53 (inOp)
    DECIMAL      reduzir usando a regra 53 (inOp)
    ADD          reduzir usando a regra 53 (inOp)
    SUB          reduzir usando a regra 53 (inOp)
    HEADLIST     reduzir usando a regra 53 (inOp)
    TAILLIST     reduzir usando a regra 53 (inOp)
    DESTROYHEAD  reduzir usando a regra 53 (inOp)
    IF           reduzir usando a regra 53 (inOp)
    FOR          reduzir usando a regra 53 (inOp)
    READ         reduzir usando a regra 53 (inOp)
    WRITE        reduzir usando a regra 53 (inOp)
    WRITELN      reduzir usando a regra 53 (inOp)
    RETURN       reduzir usando a regra 53 (inOp)
    STFUNC       reduzir usando a regra 53 (inOp)
    ENDFUNC      reduzir usando a regra 53 (inOp)
    PARENL       reduzir usando a regra 53 (inOp)


Estado 148

   54 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 54 (outOp)
    TYPE         reduzir usando a regra 54 (outOp)
    NIL          reduzir usando a regra 54 (outOp)
    INTEGER      reduzir usando a regra 54 (outOp)
    DECIMAL      reduzir usando a regra 54 (outOp)
    ADD          reduzir usando a regra 54 (outOp)
    SUB          reduzir usando a regra 54 (outOp)
    HEADLIST     reduzir usando a regra 54 (outOp)
    TAILLIST     reduzir usando a regra 54 (outOp)
    DESTROYHEAD  reduzir usando a regra 54 (outOp)
    IF           reduzir usando a regra 54 (outOp)
    FOR          reduzir usando a regra 54 (outOp)
    READ         reduzir usando a regra 54 (outOp)
    WRITE        reduzir usando a regra 54 (outOp)
    WRITELN      reduzir usando a regra 54 (outOp)
    RETURN       reduzir usando a regra 54 (outOp)
    STFUNC       reduzir usando a regra 54 (outOp)
    ENDFUNC      reduzir usando a regra 54 (outOp)
    PARENL       reduzir usando a regra 54 (outOp)


Estado 149

   55 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 55 (outOp)
    TYPE         reduzir usando a regra 55 (outOp)
    NIL          reduzir usando a regra 55 (outOp)
    INTEGER      reduzir usando a regra 55 (outOp)
    DECIMAL      reduzir usando a regra 55 (outOp)
    ADD          reduzir usando a regra 55 (outOp)
    SUB          reduzir usando a regra 55 (outOp)
    HEADLIST     reduzir usando a regra 55 (outOp)
    TAILLIST     reduzir usando a regra 55 (outOp)
    DESTROYHEAD  reduzir usando a regra 55 (outOp)
    IF           reduzir usando a regra 55 (outOp)
    FOR          reduzir usando a regra 55 (outOp)
    READ         reduzir usando a regra 55 (outOp)
    WRITE        reduzir usando a regra 55 (outOp)
    WRITELN      reduzir usando a regra 55 (outOp)
    RETURN       reduzir usando a regra 55 (outOp)
    STFUNC       reduzir usando a regra 55 (outOp)
    ENDFUNC      reduzir usando a regra 55 (outOp)
    PARENL       reduzir usando a regra 55 (outOp)


Estado 150

   30 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 40
    FOR          deslocar, e ir ao estado 41
    READ         deslocar, e ir ao estado 42
    WRITE        deslocar, e ir ao estado 43
    WRITELN      deslocar, e ir ao estado 44
    RETURN       deslocar, e ir ao estado 45
    STFUNC       deslocar, e ir ao estado 162
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 47
    simpleVarDeclaration  ir ao estado 163
    compoundStmt          ir ao estado 48
    primitiveStmt         ir ao estado 153
    exprStmt              ir ao estado 51
    condStmt              ir ao estado 52
    iterStmt              ir ao estado 53
    returnStmt            ir ao estado 54
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 61
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 65
    outOp                 ir ao estado 66
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 151

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 154

    assignExp  ir ao estado 155


Estado 152

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 154

    assignExp  ir ao estado 156


Estado 153

   30 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 30 (condStmt)
    TYPE         reduzir usando a regra 30 (condStmt)
    NIL          reduzir usando a regra 30 (condStmt)
    INTEGER      reduzir usando a regra 30 (condStmt)
    DECIMAL      reduzir usando a regra 30 (condStmt)
    ADD          reduzir usando a regra 30 (condStmt)
    SUB          reduzir usando a regra 30 (condStmt)
    HEADLIST     reduzir usando a regra 30 (condStmt)
    TAILLIST     reduzir usando a regra 30 (condStmt)
    DESTROYHEAD  reduzir usando a regra 30 (condStmt)
    IF           reduzir usando a regra 30 (condStmt)
    FOR          reduzir usando a regra 30 (condStmt)
    READ         reduzir usando a regra 30 (condStmt)
    WRITE        reduzir usando a regra 30 (condStmt)
    WRITELN      reduzir usando a regra 30 (condStmt)
    RETURN       reduzir usando a regra 30 (condStmt)
    STFUNC       reduzir usando a regra 30 (condStmt)
    ENDFUNC      reduzir usando a regra 30 (condStmt)
    PARENL       reduzir usando a regra 30 (condStmt)


Estado 154

   48 assignExp: ID • ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 225


Estado 155

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 157


Estado 156

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 158


Estado 157

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 40
    FOR          deslocar, e ir ao estado 41
    READ         deslocar, e ir ao estado 42
    WRITE        deslocar, e ir ao estado 43
    WRITELN      deslocar, e ir ao estado 44
    RETURN       deslocar, e ir ao estado 45
    STFUNC       deslocar, e ir ao estado 162
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 47
    simpleVarDeclaration  ir ao estado 163
    compoundStmt          ir ao estado 48
    primitiveStmt         ir ao estado 159
    exprStmt              ir ao estado 51
    condStmt              ir ao estado 52
    iterStmt              ir ao estado 53
    returnStmt            ir ao estado 54
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 61
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 65
    outOp                 ir ao estado 66
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 158

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 40
    FOR          deslocar, e ir ao estado 41
    READ         deslocar, e ir ao estado 42
    WRITE        deslocar, e ir ao estado 43
    WRITELN      deslocar, e ir ao estado 44
    RETURN       deslocar, e ir ao estado 45
    STFUNC       deslocar, e ir ao estado 162
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 47
    simpleVarDeclaration  ir ao estado 163
    compoundStmt          ir ao estado 48
    primitiveStmt         ir ao estado 160
    exprStmt              ir ao estado 51
    condStmt              ir ao estado 52
    iterStmt              ir ao estado 53
    returnStmt            ir ao estado 54
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 61
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 65
    outOp                 ir ao estado 66
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 159

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 31 (iterStmt)
    TYPE         reduzir usando a regra 31 (iterStmt)
    NIL          reduzir usando a regra 31 (iterStmt)
    INTEGER      reduzir usando a regra 31 (iterStmt)
    DECIMAL      reduzir usando a regra 31 (iterStmt)
    ADD          reduzir usando a regra 31 (iterStmt)
    SUB          reduzir usando a regra 31 (iterStmt)
    HEADLIST     reduzir usando a regra 31 (iterStmt)
    TAILLIST     reduzir usando a regra 31 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 31 (iterStmt)
    IF           reduzir usando a regra 31 (iterStmt)
    FOR          reduzir usando a regra 31 (iterStmt)
    READ         reduzir usando a regra 31 (iterStmt)
    WRITE        reduzir usando a regra 31 (iterStmt)
    WRITELN      reduzir usando a regra 31 (iterStmt)
    RETURN       reduzir usando a regra 31 (iterStmt)
    STFUNC       reduzir usando a regra 31 (iterStmt)
    ENDFUNC      reduzir usando a regra 31 (iterStmt)
    PARENL       reduzir usando a regra 31 (iterStmt)


Estado 160

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 32 (iterStmt)
    TYPE         reduzir usando a regra 32 (iterStmt)
    NIL          reduzir usando a regra 32 (iterStmt)
    INTEGER      reduzir usando a regra 32 (iterStmt)
    DECIMAL      reduzir usando a regra 32 (iterStmt)
    ADD          reduzir usando a regra 32 (iterStmt)
    SUB          reduzir usando a regra 32 (iterStmt)
    HEADLIST     reduzir usando a regra 32 (iterStmt)
    TAILLIST     reduzir usando a regra 32 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 32 (iterStmt)
    IF           reduzir usando a regra 32 (iterStmt)
    FOR          reduzir usando a regra 32 (iterStmt)
    READ         reduzir usando a regra 32 (iterStmt)
    WRITE        reduzir usando a regra 32 (iterStmt)
    WRITELN      reduzir usando a regra 32 (iterStmt)
    RETURN       reduzir usando a regra 32 (iterStmt)
    STFUNC       reduzir usando a regra 32 (iterStmt)
    ENDFUNC      reduzir usando a regra 32 (iterStmt)
    PARENL       reduzir usando a regra 32 (iterStmt)


Estado 161

   12 simpleVarDeclaration: TYPE • ID
   13                     | TYPE • LISTTYPE ID

    ID        deslocar, e ir ao estado 226
    LISTTYPE  deslocar, e ir ao estado 227


Estado 162

   17 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 40
    FOR          deslocar, e ir ao estado 41
    READ         deslocar, e ir ao estado 42
    WRITE        deslocar, e ir ao estado 43
    WRITELN      deslocar, e ir ao estado 44
    RETURN       deslocar, e ir ao estado 45
    STFUNC       deslocar, e ir ao estado 162
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 47
    simpleVarDeclaration  ir ao estado 163
    compoundStmt          ir ao estado 48
    stmtList              ir ao estado 228
    primitiveStmt         ir ao estado 50
    exprStmt              ir ao estado 51
    condStmt              ir ao estado 52
    iterStmt              ir ao estado 53
    returnStmt            ir ao estado 54
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 61
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 65
    outOp                 ir ao estado 66
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 163

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 229


Estado 164

   52 constOp: NIL •

    ADD        reduzir usando a regra 52 (constOp)
    SUB        reduzir usando a regra 52 (constOp)
    MULT       reduzir usando a regra 52 (constOp)
    DIV        reduzir usando a regra 52 (constOp)
    OR         reduzir usando a regra 52 (constOp)
    AND        reduzir usando a regra 52 (constOp)
    SMALLER    reduzir usando a regra 52 (constOp)
    GREATER    reduzir usando a regra 52 (constOp)
    SMALLEQ    reduzir usando a regra 52 (constOp)
    GREATEQ    reduzir usando a regra 52 (constOp)
    EQUALS     reduzir usando a regra 52 (constOp)
    DIFFERENT  reduzir usando a regra 52 (constOp)
    PARENR     reduzir usando a regra 52 (constOp)


Estado 165

   50 constOp: INTEGER •

    ADD        reduzir usando a regra 50 (constOp)
    SUB        reduzir usando a regra 50 (constOp)
    MULT       reduzir usando a regra 50 (constOp)
    DIV        reduzir usando a regra 50 (constOp)
    OR         reduzir usando a regra 50 (constOp)
    AND        reduzir usando a regra 50 (constOp)
    SMALLER    reduzir usando a regra 50 (constOp)
    GREATER    reduzir usando a regra 50 (constOp)
    SMALLEQ    reduzir usando a regra 50 (constOp)
    GREATEQ    reduzir usando a regra 50 (constOp)
    EQUALS     reduzir usando a regra 50 (constOp)
    DIFFERENT  reduzir usando a regra 50 (constOp)
    PARENR     reduzir usando a regra 50 (constOp)


Estado 166

   51 constOp: DECIMAL •

    ADD        reduzir usando a regra 51 (constOp)
    SUB        reduzir usando a regra 51 (constOp)
    MULT       reduzir usando a regra 51 (constOp)
    DIV        reduzir usando a regra 51 (constOp)
    OR         reduzir usando a regra 51 (constOp)
    AND        reduzir usando a regra 51 (constOp)
    SMALLER    reduzir usando a regra 51 (constOp)
    GREATER    reduzir usando a regra 51 (constOp)
    SMALLEQ    reduzir usando a regra 51 (constOp)
    GREATEQ    reduzir usando a regra 51 (constOp)
    EQUALS     reduzir usando a regra 51 (constOp)
    DIFFERENT  reduzir usando a regra 51 (constOp)
    PARENR     reduzir usando a regra 51 (constOp)


Estado 167

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 89
    NIL      deslocar, e ir ao estado 164
    INTEGER  deslocar, e ir ao estado 165
    DECIMAL  deslocar, e ir ao estado 166
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 167

    simpleExp      ir ao estado 230
    constOp        ir ao estado 168
    binLogicalExp  ir ao estado 169
    relationalExp  ir ao estado 170
    sumExp         ir ao estado 171
    sumOp          ir ao estado 172
    mulExp         ir ao estado 173
    factor         ir ao estado 174
    fCall          ir ao estado 175


Estado 168

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    PARENR     reduzir usando a regra 83 (factor)


Estado 169

   49 simpleExp: binLogicalExp •
   59 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   deslocar, e ir ao estado 95
    AND  deslocar, e ir ao estado 96

    PARENR  reduzir usando a regra 49 (simpleExp)

    binLogicalOp  ir ao estado 231


Estado 170

   60 binLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 98
    GREATER    deslocar, e ir ao estado 99
    SMALLEQ    deslocar, e ir ao estado 100
    GREATEQ    deslocar, e ir ao estado 101
    EQUALS     deslocar, e ir ao estado 102
    DIFFERENT  deslocar, e ir ao estado 103

    OR      reduzir usando a regra 60 (binLogicalExp)
    AND     reduzir usando a regra 60 (binLogicalExp)
    PARENR  reduzir usando a regra 60 (binLogicalExp)

    relationalOp  ir ao estado 232


Estado 171

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    PARENR     reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 233


Estado 172

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 89
    NIL      deslocar, e ir ao estado 164
    INTEGER  deslocar, e ir ao estado 165
    DECIMAL  deslocar, e ir ao estado 166
    PARENL   deslocar, e ir ao estado 167

    constOp  ir ao estado 168
    factor   ir ao estado 234
    fCall    ir ao estado 175


Estado 173

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 107
    DIV   deslocar, e ir ao estado 108

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    PARENR     reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 235


Estado 174

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 175

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 176

   73 sumOp: ADD •

    ID       reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    ADD      reduzir usando a regra 73 (sumOp)
    SUB      reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 177

   74 sumOp: SUB •

    ID       reduzir usando a regra 74 (sumOp)
    NIL      reduzir usando a regra 74 (sumOp)
    INTEGER  reduzir usando a regra 74 (sumOp)
    DECIMAL  reduzir usando a regra 74 (sumOp)
    ADD      reduzir usando a regra 74 (sumOp)
    SUB      reduzir usando a regra 74 (sumOp)
    PARENL   reduzir usando a regra 74 (sumOp)


Estado 178

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 81

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 179

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 236

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    COMMA      reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 180

   52 constOp: NIL •

    ADD        reduzir usando a regra 52 (constOp)
    SUB        reduzir usando a regra 52 (constOp)
    MULT       reduzir usando a regra 52 (constOp)
    DIV        reduzir usando a regra 52 (constOp)
    OR         reduzir usando a regra 52 (constOp)
    AND        reduzir usando a regra 52 (constOp)
    SMALLER    reduzir usando a regra 52 (constOp)
    GREATER    reduzir usando a regra 52 (constOp)
    SMALLEQ    reduzir usando a regra 52 (constOp)
    GREATEQ    reduzir usando a regra 52 (constOp)
    EQUALS     reduzir usando a regra 52 (constOp)
    DIFFERENT  reduzir usando a regra 52 (constOp)
    COMMA      reduzir usando a regra 52 (constOp)
    PARENR     reduzir usando a regra 52 (constOp)


Estado 181

   50 constOp: INTEGER •

    ADD        reduzir usando a regra 50 (constOp)
    SUB        reduzir usando a regra 50 (constOp)
    MULT       reduzir usando a regra 50 (constOp)
    DIV        reduzir usando a regra 50 (constOp)
    OR         reduzir usando a regra 50 (constOp)
    AND        reduzir usando a regra 50 (constOp)
    SMALLER    reduzir usando a regra 50 (constOp)
    GREATER    reduzir usando a regra 50 (constOp)
    SMALLEQ    reduzir usando a regra 50 (constOp)
    GREATEQ    reduzir usando a regra 50 (constOp)
    EQUALS     reduzir usando a regra 50 (constOp)
    DIFFERENT  reduzir usando a regra 50 (constOp)
    COMMA      reduzir usando a regra 50 (constOp)
    PARENR     reduzir usando a regra 50 (constOp)


Estado 182

   51 constOp: DECIMAL •

    ADD        reduzir usando a regra 51 (constOp)
    SUB        reduzir usando a regra 51 (constOp)
    MULT       reduzir usando a regra 51 (constOp)
    DIV        reduzir usando a regra 51 (constOp)
    OR         reduzir usando a regra 51 (constOp)
    AND        reduzir usando a regra 51 (constOp)
    SMALLER    reduzir usando a regra 51 (constOp)
    GREATER    reduzir usando a regra 51 (constOp)
    SMALLEQ    reduzir usando a regra 51 (constOp)
    GREATEQ    reduzir usando a regra 51 (constOp)
    EQUALS     reduzir usando a regra 51 (constOp)
    DIFFERENT  reduzir usando a regra 51 (constOp)
    COMMA      reduzir usando a regra 51 (constOp)
    PARENR     reduzir usando a regra 51 (constOp)


Estado 183

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 89
    NIL      deslocar, e ir ao estado 164
    INTEGER  deslocar, e ir ao estado 165
    DECIMAL  deslocar, e ir ao estado 166
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 167

    simpleExp      ir ao estado 237
    constOp        ir ao estado 168
    binLogicalExp  ir ao estado 169
    relationalExp  ir ao estado 170
    sumExp         ir ao estado 171
    sumOp          ir ao estado 172
    mulExp         ir ao estado 173
    factor         ir ao estado 174
    fCall          ir ao estado 175


Estado 184

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    COMMA      reduzir usando a regra 83 (factor)
    PARENR     reduzir usando a regra 83 (factor)


Estado 185

   49 simpleExp: binLogicalExp •
   59 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   deslocar, e ir ao estado 95
    AND  deslocar, e ir ao estado 96

    COMMA   reduzir usando a regra 49 (simpleExp)
    PARENR  reduzir usando a regra 49 (simpleExp)

    binLogicalOp  ir ao estado 238


Estado 186

   60 binLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 98
    GREATER    deslocar, e ir ao estado 99
    SMALLEQ    deslocar, e ir ao estado 100
    GREATEQ    deslocar, e ir ao estado 101
    EQUALS     deslocar, e ir ao estado 102
    DIFFERENT  deslocar, e ir ao estado 103

    OR      reduzir usando a regra 60 (binLogicalExp)
    AND     reduzir usando a regra 60 (binLogicalExp)
    COMMA   reduzir usando a regra 60 (binLogicalExp)
    PARENR  reduzir usando a regra 60 (binLogicalExp)

    relationalOp  ir ao estado 239


Estado 187

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    COMMA      reduzir usando a regra 64 (relationalExp)
    PARENR     reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 240


Estado 188

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    PARENL   deslocar, e ir ao estado 183

    constOp  ir ao estado 184
    factor   ir ao estado 241
    fCall    ir ao estado 191


Estado 189

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 107
    DIV   deslocar, e ir ao estado 108

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    COMMA      reduzir usando a regra 72 (sumExp)
    PARENR     reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 242


Estado 190

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    COMMA      reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 191

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    COMMA      reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 192

   42 destroyHeadOps: DESTROYHEAD • ID

    ID  deslocar, e ir ao estado 243


Estado 193

   34 listExp: appendOps •

    PARENR  reduzir usando a regra 34 (listExp)


Estado 194

   35 listExp: returnListOps •

    PARENR  reduzir usando a regra 35 (listExp)


Estado 195

   39 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 244


Estado 196

   36 listExp: destroyHeadOps •

    PARENR  reduzir usando a regra 36 (listExp)


Estado 197

   37 listExp: mapFilterOps •

    PARENR  reduzir usando a regra 37 (listExp)


Estado 198

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 183
    PARENR   deslocar, e ir ao estado 245

    simpleExp      ir ao estado 116
    constOp        ir ao estado 184
    binLogicalExp  ir ao estado 185
    relationalExp  ir ao estado 186
    sumExp         ir ao estado 187
    sumOp          ir ao estado 188
    mulExp         ir ao estado 189
    factor         ir ao estado 190
    fCall          ir ao estado 191
    callParams     ir ao estado 246


Estado 199

   65 relationalOp: SMALLER •

    OR     reduzir usando a regra 65 (relationalOp)
    AND    reduzir usando a regra 65 (relationalOp)
    SEMIC  reduzir usando a regra 65 (relationalOp)


Estado 200

   66 relationalOp: GREATER •

    OR     reduzir usando a regra 66 (relationalOp)
    AND    reduzir usando a regra 66 (relationalOp)
    SEMIC  reduzir usando a regra 66 (relationalOp)


Estado 201

   67 relationalOp: SMALLEQ •

    OR     reduzir usando a regra 67 (relationalOp)
    AND    reduzir usando a regra 67 (relationalOp)
    SEMIC  reduzir usando a regra 67 (relationalOp)


Estado 202

   68 relationalOp: GREATEQ •

    OR     reduzir usando a regra 68 (relationalOp)
    AND    reduzir usando a regra 68 (relationalOp)
    SEMIC  reduzir usando a regra 68 (relationalOp)


Estado 203

   69 relationalOp: EQUALS •

    OR     reduzir usando a regra 69 (relationalOp)
    AND    reduzir usando a regra 69 (relationalOp)
    SEMIC  reduzir usando a regra 69 (relationalOp)


Estado 204

   70 relationalOp: DIFFERENT •

    OR     reduzir usando a regra 70 (relationalOp)
    AND    reduzir usando a regra 70 (relationalOp)
    SEMIC  reduzir usando a regra 70 (relationalOp)


Estado 205

   38 appendOps: ID APPEND • ID

    ID  deslocar, e ir ao estado 247


Estado 206

   44 mapFilterOps: ID FILTER • ID

    ID  deslocar, e ir ao estado 248


Estado 207

   43 mapFilterOps: ID MAP • ID

    ID  deslocar, e ir ao estado 249


Estado 208

   29 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   30         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 250


Estado 209

   31 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   32         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 251


Estado 210

   53 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 252


Estado 211

   54 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 253


Estado 212

   55 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 254


Estado 213

   33 returnStmt: RETURN • expression SEMIC

    ID           deslocar, e ir ao estado 31
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    PARENL       deslocar, e ir ao estado 46

    listExp         ir ao estado 55
    appendOps       ir ao estado 56
    returnListOps   ir ao estado 57
    returnListOp    ir ao estado 58
    destroyHeadOps  ir ao estado 59
    mapFilterOps    ir ao estado 60
    expression      ir ao estado 255
    assignExp       ir ao estado 62
    simpleExp       ir ao estado 63
    constOp         ir ao estado 64
    binLogicalExp   ir ao estado 67
    relationalExp   ir ao estado 68
    sumExp          ir ao estado 69
    sumOp           ir ao estado 70
    mulExp          ir ao estado 71
    factor          ir ao estado 72
    fCall           ir ao estado 73


Estado 214

   17 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 40
    FOR          deslocar, e ir ao estado 41
    READ         deslocar, e ir ao estado 42
    WRITE        deslocar, e ir ao estado 43
    WRITELN      deslocar, e ir ao estado 44
    RETURN       deslocar, e ir ao estado 45
    STFUNC       deslocar, e ir ao estado 162
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 47
    simpleVarDeclaration  ir ao estado 163
    compoundStmt          ir ao estado 48
    stmtList              ir ao estado 256
    primitiveStmt         ir ao estado 50
    exprStmt              ir ao estado 51
    condStmt              ir ao estado 52
    iterStmt              ir ao estado 53
    returnStmt            ir ao estado 54
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 61
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 65
    outOp                 ir ao estado 66
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 215

   27 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 27 (primitiveStmt)
    TYPE         reduzir usando a regra 27 (primitiveStmt)
    NIL          reduzir usando a regra 27 (primitiveStmt)
    INTEGER      reduzir usando a regra 27 (primitiveStmt)
    DECIMAL      reduzir usando a regra 27 (primitiveStmt)
    ADD          reduzir usando a regra 27 (primitiveStmt)
    SUB          reduzir usando a regra 27 (primitiveStmt)
    HEADLIST     reduzir usando a regra 27 (primitiveStmt)
    TAILLIST     reduzir usando a regra 27 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 27 (primitiveStmt)
    ELSE         reduzir usando a regra 27 (primitiveStmt)
    IF           reduzir usando a regra 27 (primitiveStmt)
    FOR          reduzir usando a regra 27 (primitiveStmt)
    READ         reduzir usando a regra 27 (primitiveStmt)
    WRITE        reduzir usando a regra 27 (primitiveStmt)
    WRITELN      reduzir usando a regra 27 (primitiveStmt)
    RETURN       reduzir usando a regra 27 (primitiveStmt)
    STFUNC       reduzir usando a regra 27 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 27 (primitiveStmt)
    PARENL       reduzir usando a regra 27 (primitiveStmt)


Estado 216

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 257


Estado 217

   21 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    ELSE         reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 218

   20 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    ELSE         reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 219

   22 primitiveStmt: condStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    ELSE         reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 220

   23 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    ELSE         reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 221

   24 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    ELSE         reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 222

   28 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 258


Estado 223

   25 primitiveStmt: inOp •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    ELSE         reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 224

   26 primitiveStmt: outOp •

    ID           reduzir usando a regra 26 (primitiveStmt)
    TYPE         reduzir usando a regra 26 (primitiveStmt)
    NIL          reduzir usando a regra 26 (primitiveStmt)
    INTEGER      reduzir usando a regra 26 (primitiveStmt)
    DECIMAL      reduzir usando a regra 26 (primitiveStmt)
    ADD          reduzir usando a regra 26 (primitiveStmt)
    SUB          reduzir usando a regra 26 (primitiveStmt)
    HEADLIST     reduzir usando a regra 26 (primitiveStmt)
    TAILLIST     reduzir usando a regra 26 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 26 (primitiveStmt)
    ELSE         reduzir usando a regra 26 (primitiveStmt)
    IF           reduzir usando a regra 26 (primitiveStmt)
    FOR          reduzir usando a regra 26 (primitiveStmt)
    READ         reduzir usando a regra 26 (primitiveStmt)
    WRITE        reduzir usando a regra 26 (primitiveStmt)
    WRITELN      reduzir usando a regra 26 (primitiveStmt)
    RETURN       reduzir usando a regra 26 (primitiveStmt)
    STFUNC       reduzir usando a regra 26 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 26 (primitiveStmt)
    PARENL       reduzir usando a regra 26 (primitiveStmt)


Estado 225

   48 assignExp: ID ASSIGN • expression

    ID           deslocar, e ir ao estado 259
    NIL          deslocar, e ir ao estado 164
    INTEGER      deslocar, e ir ao estado 165
    DECIMAL      deslocar, e ir ao estado 166
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 192
    PARENL       deslocar, e ir ao estado 167

    listExp         ir ao estado 260
    appendOps       ir ao estado 193
    returnListOps   ir ao estado 194
    returnListOp    ir ao estado 195
    destroyHeadOps  ir ao estado 196
    mapFilterOps    ir ao estado 197
    expression      ir ao estado 261
    assignExp       ir ao estado 262
    simpleExp       ir ao estado 263
    constOp         ir ao estado 168
    binLogicalExp   ir ao estado 169
    relationalExp   ir ao estado 170
    sumExp          ir ao estado 171
    sumOp           ir ao estado 172
    mulExp          ir ao estado 173
    factor          ir ao estado 174
    fCall           ir ao estado 175


Estado 226

   12 simpleVarDeclaration: TYPE ID •

    SEMIC  reduzir usando a regra 12 (simpleVarDeclaration)


Estado 227

   13 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  deslocar, e ir ao estado 264


Estado 228

   17 compoundStmt: STFUNC stmtList • ENDFUNC
   18 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 40
    FOR          deslocar, e ir ao estado 41
    READ         deslocar, e ir ao estado 42
    WRITE        deslocar, e ir ao estado 43
    WRITELN      deslocar, e ir ao estado 44
    RETURN       deslocar, e ir ao estado 45
    STFUNC       deslocar, e ir ao estado 162
    ENDFUNC      deslocar, e ir ao estado 265
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 47
    simpleVarDeclaration  ir ao estado 163
    compoundStmt          ir ao estado 48
    primitiveStmt         ir ao estado 92
    exprStmt              ir ao estado 51
    condStmt              ir ao estado 52
    iterStmt              ir ao estado 53
    returnStmt            ir ao estado 54
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 61
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 65
    outOp                 ir ao estado 66
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 229

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 7 (varDeclaration)
    TYPE         reduzir usando a regra 7 (varDeclaration)
    NIL          reduzir usando a regra 7 (varDeclaration)
    INTEGER      reduzir usando a regra 7 (varDeclaration)
    DECIMAL      reduzir usando a regra 7 (varDeclaration)
    ADD          reduzir usando a regra 7 (varDeclaration)
    SUB          reduzir usando a regra 7 (varDeclaration)
    HEADLIST     reduzir usando a regra 7 (varDeclaration)
    TAILLIST     reduzir usando a regra 7 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 7 (varDeclaration)
    IF           reduzir usando a regra 7 (varDeclaration)
    FOR          reduzir usando a regra 7 (varDeclaration)
    READ         reduzir usando a regra 7 (varDeclaration)
    WRITE        reduzir usando a regra 7 (varDeclaration)
    WRITELN      reduzir usando a regra 7 (varDeclaration)
    RETURN       reduzir usando a regra 7 (varDeclaration)
    STFUNC       reduzir usando a regra 7 (varDeclaration)
    ENDFUNC      reduzir usando a regra 7 (varDeclaration)
    PARENL       reduzir usando a regra 7 (varDeclaration)


Estado 230

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 266


Estado 231

   59 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    deslocar, e ir ao estado 267
    GREATER    deslocar, e ir ao estado 268
    SMALLEQ    deslocar, e ir ao estado 269
    GREATEQ    deslocar, e ir ao estado 270
    EQUALS     deslocar, e ir ao estado 271
    DIFFERENT  deslocar, e ir ao estado 272

    relationalOp  ir ao estado 273


Estado 232

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 89
    NIL      deslocar, e ir ao estado 164
    INTEGER  deslocar, e ir ao estado 165
    DECIMAL  deslocar, e ir ao estado 166
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 167

    constOp  ir ao estado 168
    sumExp   ir ao estado 274
    sumOp    ir ao estado 172
    mulExp   ir ao estado 173
    factor   ir ao estado 174
    fCall    ir ao estado 175


Estado 233

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 89
    NIL      deslocar, e ir ao estado 164
    INTEGER  deslocar, e ir ao estado 165
    DECIMAL  deslocar, e ir ao estado 166
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 167

    constOp  ir ao estado 168
    sumOp    ir ao estado 172
    mulExp   ir ao estado 275
    factor   ir ao estado 174
    fCall    ir ao estado 175


Estado 234

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    PARENR     reduzir usando a regra 77 (mulExp)


Estado 235

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 89
    NIL      deslocar, e ir ao estado 164
    INTEGER  deslocar, e ir ao estado 165
    DECIMAL  deslocar, e ir ao estado 166
    PARENL   deslocar, e ir ao estado 167

    constOp  ir ao estado 168
    factor   ir ao estado 276
    fCall    ir ao estado 175


Estado 236

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 183
    PARENR   deslocar, e ir ao estado 277

    simpleExp      ir ao estado 116
    constOp        ir ao estado 184
    binLogicalExp  ir ao estado 185
    relationalExp  ir ao estado 186
    sumExp         ir ao estado 187
    sumOp          ir ao estado 188
    mulExp         ir ao estado 189
    factor         ir ao estado 190
    fCall          ir ao estado 191
    callParams     ir ao estado 278


Estado 237

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 279


Estado 238

   59 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    deslocar, e ir ao estado 280
    GREATER    deslocar, e ir ao estado 281
    SMALLEQ    deslocar, e ir ao estado 282
    GREATEQ    deslocar, e ir ao estado 283
    EQUALS     deslocar, e ir ao estado 284
    DIFFERENT  deslocar, e ir ao estado 285

    relationalOp  ir ao estado 286


Estado 239

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 183

    constOp  ir ao estado 184
    sumExp   ir ao estado 287
    sumOp    ir ao estado 188
    mulExp   ir ao estado 189
    factor   ir ao estado 190
    fCall    ir ao estado 191


Estado 240

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 183

    constOp  ir ao estado 184
    sumOp    ir ao estado 188
    mulExp   ir ao estado 288
    factor   ir ao estado 190
    fCall    ir ao estado 191


Estado 241

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    COMMA      reduzir usando a regra 77 (mulExp)
    PARENR     reduzir usando a regra 77 (mulExp)


Estado 242

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    PARENL   deslocar, e ir ao estado 183

    constOp  ir ao estado 184
    factor   ir ao estado 289
    fCall    ir ao estado 191


Estado 243

   42 destroyHeadOps: DESTROYHEAD ID •

    PARENR  reduzir usando a regra 42 (destroyHeadOps)


Estado 244

   39 returnListOps: returnListOp ID •

    PARENR  reduzir usando a regra 39 (returnListOps)


Estado 245

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    PARENR     reduzir usando a regra 85 (fCall)


Estado 246

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 135
    PARENR  deslocar, e ir ao estado 290


Estado 247

   38 appendOps: ID APPEND ID •

    PARENR  reduzir usando a regra 38 (appendOps)


Estado 248

   44 mapFilterOps: ID FILTER ID •

    PARENR  reduzir usando a regra 44 (mapFilterOps)


Estado 249

   43 mapFilterOps: ID MAP ID •

    PARENR  reduzir usando a regra 43 (mapFilterOps)


Estado 250

   29 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   30         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 89
    NIL      deslocar, e ir ao estado 164
    INTEGER  deslocar, e ir ao estado 165
    DECIMAL  deslocar, e ir ao estado 166
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 167

    simpleExp      ir ao estado 291
    constOp        ir ao estado 168
    binLogicalExp  ir ao estado 169
    relationalExp  ir ao estado 170
    sumExp         ir ao estado 171
    sumOp          ir ao estado 172
    mulExp         ir ao estado 173
    factor         ir ao estado 174
    fCall          ir ao estado 175


Estado 251

   31 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   32         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 119
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 46

    assignExp      ir ao estado 292
    simpleExp      ir ao estado 293
    constOp        ir ao estado 64
    binLogicalExp  ir ao estado 67
    relationalExp  ir ao estado 68
    sumExp         ir ao estado 69
    sumOp          ir ao estado 70
    mulExp         ir ao estado 71
    factor         ir ao estado 72
    fCall          ir ao estado 73


Estado 252

   53 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 294


Estado 253

   54 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID           deslocar, e ir ao estado 123
    STRING       deslocar, e ir ao estado 124
    NIL          deslocar, e ir ao estado 164
    INTEGER      deslocar, e ir ao estado 165
    DECIMAL      deslocar, e ir ao estado 166
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 192
    PARENL       deslocar, e ir ao estado 167

    listExp         ir ao estado 125
    appendOps       ir ao estado 193
    returnListOps   ir ao estado 194
    returnListOp    ir ao estado 195
    destroyHeadOps  ir ao estado 196
    mapFilterOps    ir ao estado 197
    simpleExp       ir ao estado 126
    constOp         ir ao estado 168
    outConst        ir ao estado 295
    binLogicalExp   ir ao estado 169
    relationalExp   ir ao estado 170
    sumExp          ir ao estado 171
    sumOp           ir ao estado 172
    mulExp          ir ao estado 173
    factor          ir ao estado 174
    fCall           ir ao estado 175


Estado 254

   55 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID           deslocar, e ir ao estado 123
    STRING       deslocar, e ir ao estado 124
    NIL          deslocar, e ir ao estado 164
    INTEGER      deslocar, e ir ao estado 165
    DECIMAL      deslocar, e ir ao estado 166
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 192
    PARENL       deslocar, e ir ao estado 167

    listExp         ir ao estado 125
    appendOps       ir ao estado 193
    returnListOps   ir ao estado 194
    returnListOp    ir ao estado 195
    destroyHeadOps  ir ao estado 196
    mapFilterOps    ir ao estado 197
    simpleExp       ir ao estado 126
    constOp         ir ao estado 168
    outConst        ir ao estado 296
    binLogicalExp   ir ao estado 169
    relationalExp   ir ao estado 170
    sumExp          ir ao estado 171
    sumOp           ir ao estado 172
    mulExp          ir ao estado 173
    factor          ir ao estado 174
    fCall           ir ao estado 175


Estado 255

   33 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 297


Estado 256

   17 compoundStmt: STFUNC stmtList • ENDFUNC
   18 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 40
    FOR          deslocar, e ir ao estado 41
    READ         deslocar, e ir ao estado 42
    WRITE        deslocar, e ir ao estado 43
    WRITELN      deslocar, e ir ao estado 44
    RETURN       deslocar, e ir ao estado 45
    STFUNC       deslocar, e ir ao estado 162
    ENDFUNC      deslocar, e ir ao estado 298
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 47
    simpleVarDeclaration  ir ao estado 163
    compoundStmt          ir ao estado 48
    primitiveStmt         ir ao estado 92
    exprStmt              ir ao estado 51
    condStmt              ir ao estado 52
    iterStmt              ir ao estado 53
    returnStmt            ir ao estado 54
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 61
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 65
    outOp                 ir ao estado 66
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 257

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 7 (varDeclaration)
    TYPE         reduzir usando a regra 7 (varDeclaration)
    NIL          reduzir usando a regra 7 (varDeclaration)
    INTEGER      reduzir usando a regra 7 (varDeclaration)
    DECIMAL      reduzir usando a regra 7 (varDeclaration)
    ADD          reduzir usando a regra 7 (varDeclaration)
    SUB          reduzir usando a regra 7 (varDeclaration)
    HEADLIST     reduzir usando a regra 7 (varDeclaration)
    TAILLIST     reduzir usando a regra 7 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 7 (varDeclaration)
    ELSE         reduzir usando a regra 7 (varDeclaration)
    IF           reduzir usando a regra 7 (varDeclaration)
    FOR          reduzir usando a regra 7 (varDeclaration)
    READ         reduzir usando a regra 7 (varDeclaration)
    WRITE        reduzir usando a regra 7 (varDeclaration)
    WRITELN      reduzir usando a regra 7 (varDeclaration)
    RETURN       reduzir usando a regra 7 (varDeclaration)
    STFUNC       reduzir usando a regra 7 (varDeclaration)
    ENDFUNC      reduzir usando a regra 7 (varDeclaration)
    PARENL       reduzir usando a regra 7 (varDeclaration)


Estado 258

   28 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 28 (exprStmt)
    TYPE         reduzir usando a regra 28 (exprStmt)
    NIL          reduzir usando a regra 28 (exprStmt)
    INTEGER      reduzir usando a regra 28 (exprStmt)
    DECIMAL      reduzir usando a regra 28 (exprStmt)
    ADD          reduzir usando a regra 28 (exprStmt)
    SUB          reduzir usando a regra 28 (exprStmt)
    HEADLIST     reduzir usando a regra 28 (exprStmt)
    TAILLIST     reduzir usando a regra 28 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 28 (exprStmt)
    ELSE         reduzir usando a regra 28 (exprStmt)
    IF           reduzir usando a regra 28 (exprStmt)
    FOR          reduzir usando a regra 28 (exprStmt)
    READ         reduzir usando a regra 28 (exprStmt)
    WRITE        reduzir usando a regra 28 (exprStmt)
    WRITELN      reduzir usando a regra 28 (exprStmt)
    RETURN       reduzir usando a regra 28 (exprStmt)
    STFUNC       reduzir usando a regra 28 (exprStmt)
    ENDFUNC      reduzir usando a regra 28 (exprStmt)
    PARENL       reduzir usando a regra 28 (exprStmt)


Estado 259

   38 appendOps: ID • APPEND ID
   43 mapFilterOps: ID • MAP ID
   44             | ID • FILTER ID
   48 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 205
    FILTER  deslocar, e ir ao estado 206
    ASSIGN  deslocar, e ir ao estado 225
    MAP     deslocar, e ir ao estado 207
    PARENL  deslocar, e ir ao estado 198

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 260

   47 expression: listExp •

    PARENR  reduzir usando a regra 47 (expression)


Estado 261

   48 assignExp: ID ASSIGN expression •

    PARENR  reduzir usando a regra 48 (assignExp)


Estado 262

   45 expression: assignExp •

    PARENR  reduzir usando a regra 45 (expression)


Estado 263

   46 expression: simpleExp •

    PARENR  reduzir usando a regra 46 (expression)


Estado 264

   13 simpleVarDeclaration: TYPE LISTTYPE ID •

    SEMIC  reduzir usando a regra 13 (simpleVarDeclaration)


Estado 265

   17 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 17 (compoundStmt)
    TYPE         reduzir usando a regra 17 (compoundStmt)
    NIL          reduzir usando a regra 17 (compoundStmt)
    INTEGER      reduzir usando a regra 17 (compoundStmt)
    DECIMAL      reduzir usando a regra 17 (compoundStmt)
    ADD          reduzir usando a regra 17 (compoundStmt)
    SUB          reduzir usando a regra 17 (compoundStmt)
    HEADLIST     reduzir usando a regra 17 (compoundStmt)
    TAILLIST     reduzir usando a regra 17 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 17 (compoundStmt)
    IF           reduzir usando a regra 17 (compoundStmt)
    FOR          reduzir usando a regra 17 (compoundStmt)
    READ         reduzir usando a regra 17 (compoundStmt)
    WRITE        reduzir usando a regra 17 (compoundStmt)
    WRITELN      reduzir usando a regra 17 (compoundStmt)
    RETURN       reduzir usando a regra 17 (compoundStmt)
    STFUNC       reduzir usando a regra 17 (compoundStmt)
    ENDFUNC      reduzir usando a regra 17 (compoundStmt)
    PARENL       reduzir usando a regra 17 (compoundStmt)


Estado 266

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 267

   65 relationalOp: SMALLER •

    OR      reduzir usando a regra 65 (relationalOp)
    AND     reduzir usando a regra 65 (relationalOp)
    PARENR  reduzir usando a regra 65 (relationalOp)


Estado 268

   66 relationalOp: GREATER •

    OR      reduzir usando a regra 66 (relationalOp)
    AND     reduzir usando a regra 66 (relationalOp)
    PARENR  reduzir usando a regra 66 (relationalOp)


Estado 269

   67 relationalOp: SMALLEQ •

    OR      reduzir usando a regra 67 (relationalOp)
    AND     reduzir usando a regra 67 (relationalOp)
    PARENR  reduzir usando a regra 67 (relationalOp)


Estado 270

   68 relationalOp: GREATEQ •

    OR      reduzir usando a regra 68 (relationalOp)
    AND     reduzir usando a regra 68 (relationalOp)
    PARENR  reduzir usando a regra 68 (relationalOp)


Estado 271

   69 relationalOp: EQUALS •

    OR      reduzir usando a regra 69 (relationalOp)
    AND     reduzir usando a regra 69 (relationalOp)
    PARENR  reduzir usando a regra 69 (relationalOp)


Estado 272

   70 relationalOp: DIFFERENT •

    OR      reduzir usando a regra 70 (relationalOp)
    AND     reduzir usando a regra 70 (relationalOp)
    PARENR  reduzir usando a regra 70 (relationalOp)


Estado 273

   59 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduzir usando a regra 59 (binLogicalExp)
    AND     reduzir usando a regra 59 (binLogicalExp)
    PARENR  reduzir usando a regra 59 (binLogicalExp)


Estado 274

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 233


Estado 275

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 107
    DIV   deslocar, e ir ao estado 108

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 235


Estado 276

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 277

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    COMMA      reduzir usando a regra 85 (fCall)
    PARENR     reduzir usando a regra 85 (fCall)


Estado 278

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 135
    PARENR  deslocar, e ir ao estado 299


Estado 279

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    COMMA      reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 280

   65 relationalOp: SMALLER •

    OR      reduzir usando a regra 65 (relationalOp)
    AND     reduzir usando a regra 65 (relationalOp)
    COMMA   reduzir usando a regra 65 (relationalOp)
    PARENR  reduzir usando a regra 65 (relationalOp)


Estado 281

   66 relationalOp: GREATER •

    OR      reduzir usando a regra 66 (relationalOp)
    AND     reduzir usando a regra 66 (relationalOp)
    COMMA   reduzir usando a regra 66 (relationalOp)
    PARENR  reduzir usando a regra 66 (relationalOp)


Estado 282

   67 relationalOp: SMALLEQ •

    OR      reduzir usando a regra 67 (relationalOp)
    AND     reduzir usando a regra 67 (relationalOp)
    COMMA   reduzir usando a regra 67 (relationalOp)
    PARENR  reduzir usando a regra 67 (relationalOp)


Estado 283

   68 relationalOp: GREATEQ •

    OR      reduzir usando a regra 68 (relationalOp)
    AND     reduzir usando a regra 68 (relationalOp)
    COMMA   reduzir usando a regra 68 (relationalOp)
    PARENR  reduzir usando a regra 68 (relationalOp)


Estado 284

   69 relationalOp: EQUALS •

    OR      reduzir usando a regra 69 (relationalOp)
    AND     reduzir usando a regra 69 (relationalOp)
    COMMA   reduzir usando a regra 69 (relationalOp)
    PARENR  reduzir usando a regra 69 (relationalOp)


Estado 285

   70 relationalOp: DIFFERENT •

    OR      reduzir usando a regra 70 (relationalOp)
    AND     reduzir usando a regra 70 (relationalOp)
    COMMA   reduzir usando a regra 70 (relationalOp)
    PARENR  reduzir usando a regra 70 (relationalOp)


Estado 286

   59 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduzir usando a regra 59 (binLogicalExp)
    AND     reduzir usando a regra 59 (binLogicalExp)
    COMMA   reduzir usando a regra 59 (binLogicalExp)
    PARENR  reduzir usando a regra 59 (binLogicalExp)


Estado 287

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    COMMA      reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 240


Estado 288

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 107
    DIV   deslocar, e ir ao estado 108

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    COMMA      reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 242


Estado 289

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    COMMA      reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 290

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 291

   29 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   30         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 300


Estado 292

   31 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 301


Estado 293

   32 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 302


Estado 294

   53 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 303


Estado 295

   54 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 304


Estado 296

   55 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 305


Estado 297

   33 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 33 (returnStmt)
    TYPE         reduzir usando a regra 33 (returnStmt)
    NIL          reduzir usando a regra 33 (returnStmt)
    INTEGER      reduzir usando a regra 33 (returnStmt)
    DECIMAL      reduzir usando a regra 33 (returnStmt)
    ADD          reduzir usando a regra 33 (returnStmt)
    SUB          reduzir usando a regra 33 (returnStmt)
    HEADLIST     reduzir usando a regra 33 (returnStmt)
    TAILLIST     reduzir usando a regra 33 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 33 (returnStmt)
    ELSE         reduzir usando a regra 33 (returnStmt)
    IF           reduzir usando a regra 33 (returnStmt)
    FOR          reduzir usando a regra 33 (returnStmt)
    READ         reduzir usando a regra 33 (returnStmt)
    WRITE        reduzir usando a regra 33 (returnStmt)
    WRITELN      reduzir usando a regra 33 (returnStmt)
    RETURN       reduzir usando a regra 33 (returnStmt)
    STFUNC       reduzir usando a regra 33 (returnStmt)
    ENDFUNC      reduzir usando a regra 33 (returnStmt)
    PARENL       reduzir usando a regra 33 (returnStmt)


Estado 298

   17 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 17 (compoundStmt)
    TYPE         reduzir usando a regra 17 (compoundStmt)
    NIL          reduzir usando a regra 17 (compoundStmt)
    INTEGER      reduzir usando a regra 17 (compoundStmt)
    DECIMAL      reduzir usando a regra 17 (compoundStmt)
    ADD          reduzir usando a regra 17 (compoundStmt)
    SUB          reduzir usando a regra 17 (compoundStmt)
    HEADLIST     reduzir usando a regra 17 (compoundStmt)
    TAILLIST     reduzir usando a regra 17 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 17 (compoundStmt)
    ELSE         reduzir usando a regra 17 (compoundStmt)
    IF           reduzir usando a regra 17 (compoundStmt)
    FOR          reduzir usando a regra 17 (compoundStmt)
    READ         reduzir usando a regra 17 (compoundStmt)
    WRITE        reduzir usando a regra 17 (compoundStmt)
    WRITELN      reduzir usando a regra 17 (compoundStmt)
    RETURN       reduzir usando a regra 17 (compoundStmt)
    STFUNC       reduzir usando a regra 17 (compoundStmt)
    ENDFUNC      reduzir usando a regra 17 (compoundStmt)
    PARENL       reduzir usando a regra 17 (compoundStmt)


Estado 299

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    COMMA      reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 300

   29 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   30         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 208
    FOR          deslocar, e ir ao estado 209
    READ         deslocar, e ir ao estado 210
    WRITE        deslocar, e ir ao estado 211
    WRITELN      deslocar, e ir ao estado 212
    RETURN       deslocar, e ir ao estado 213
    STFUNC       deslocar, e ir ao estado 214
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 215
    simpleVarDeclaration  ir ao estado 216
    compoundStmt          ir ao estado 217
    primitiveStmt         ir ao estado 306
    exprStmt              ir ao estado 218
    condStmt              ir ao estado 219
    iterStmt              ir ao estado 220
    returnStmt            ir ao estado 221
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 222
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 223
    outOp                 ir ao estado 224
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 301

   31 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 46

    simpleExp      ir ao estado 307
    constOp        ir ao estado 64
    binLogicalExp  ir ao estado 67
    relationalExp  ir ao estado 68
    sumExp         ir ao estado 69
    sumOp          ir ao estado 70
    mulExp         ir ao estado 71
    factor         ir ao estado 72
    fCall          ir ao estado 73


Estado 302

   32 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 178
    NIL      deslocar, e ir ao estado 32
    INTEGER  deslocar, e ir ao estado 33
    DECIMAL  deslocar, e ir ao estado 34
    ADD      deslocar, e ir ao estado 35
    SUB      deslocar, e ir ao estado 36
    PARENL   deslocar, e ir ao estado 46

    simpleExp      ir ao estado 308
    constOp        ir ao estado 64
    binLogicalExp  ir ao estado 67
    relationalExp  ir ao estado 68
    sumExp         ir ao estado 69
    sumOp          ir ao estado 70
    mulExp         ir ao estado 71
    factor         ir ao estado 72
    fCall          ir ao estado 73


Estado 303

   53 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 309


Estado 304

   54 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 310


Estado 305

   55 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 311


Estado 306

   29 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   30         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 312

    ID           reduzir usando a regra 29 (condStmt)
    TYPE         reduzir usando a regra 29 (condStmt)
    NIL          reduzir usando a regra 29 (condStmt)
    INTEGER      reduzir usando a regra 29 (condStmt)
    DECIMAL      reduzir usando a regra 29 (condStmt)
    ADD          reduzir usando a regra 29 (condStmt)
    SUB          reduzir usando a regra 29 (condStmt)
    HEADLIST     reduzir usando a regra 29 (condStmt)
    TAILLIST     reduzir usando a regra 29 (condStmt)
    DESTROYHEAD  reduzir usando a regra 29 (condStmt)
    IF           reduzir usando a regra 29 (condStmt)
    FOR          reduzir usando a regra 29 (condStmt)
    READ         reduzir usando a regra 29 (condStmt)
    WRITE        reduzir usando a regra 29 (condStmt)
    WRITELN      reduzir usando a regra 29 (condStmt)
    RETURN       reduzir usando a regra 29 (condStmt)
    STFUNC       reduzir usando a regra 29 (condStmt)
    ENDFUNC      reduzir usando a regra 29 (condStmt)
    PARENL       reduzir usando a regra 29 (condStmt)


Estado 307

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 313


Estado 308

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 314


Estado 309

   53 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 53 (inOp)
    TYPE         reduzir usando a regra 53 (inOp)
    NIL          reduzir usando a regra 53 (inOp)
    INTEGER      reduzir usando a regra 53 (inOp)
    DECIMAL      reduzir usando a regra 53 (inOp)
    ADD          reduzir usando a regra 53 (inOp)
    SUB          reduzir usando a regra 53 (inOp)
    HEADLIST     reduzir usando a regra 53 (inOp)
    TAILLIST     reduzir usando a regra 53 (inOp)
    DESTROYHEAD  reduzir usando a regra 53 (inOp)
    ELSE         reduzir usando a regra 53 (inOp)
    IF           reduzir usando a regra 53 (inOp)
    FOR          reduzir usando a regra 53 (inOp)
    READ         reduzir usando a regra 53 (inOp)
    WRITE        reduzir usando a regra 53 (inOp)
    WRITELN      reduzir usando a regra 53 (inOp)
    RETURN       reduzir usando a regra 53 (inOp)
    STFUNC       reduzir usando a regra 53 (inOp)
    ENDFUNC      reduzir usando a regra 53 (inOp)
    PARENL       reduzir usando a regra 53 (inOp)


Estado 310

   54 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 54 (outOp)
    TYPE         reduzir usando a regra 54 (outOp)
    NIL          reduzir usando a regra 54 (outOp)
    INTEGER      reduzir usando a regra 54 (outOp)
    DECIMAL      reduzir usando a regra 54 (outOp)
    ADD          reduzir usando a regra 54 (outOp)
    SUB          reduzir usando a regra 54 (outOp)
    HEADLIST     reduzir usando a regra 54 (outOp)
    TAILLIST     reduzir usando a regra 54 (outOp)
    DESTROYHEAD  reduzir usando a regra 54 (outOp)
    ELSE         reduzir usando a regra 54 (outOp)
    IF           reduzir usando a regra 54 (outOp)
    FOR          reduzir usando a regra 54 (outOp)
    READ         reduzir usando a regra 54 (outOp)
    WRITE        reduzir usando a regra 54 (outOp)
    WRITELN      reduzir usando a regra 54 (outOp)
    RETURN       reduzir usando a regra 54 (outOp)
    STFUNC       reduzir usando a regra 54 (outOp)
    ENDFUNC      reduzir usando a regra 54 (outOp)
    PARENL       reduzir usando a regra 54 (outOp)


Estado 311

   55 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 55 (outOp)
    TYPE         reduzir usando a regra 55 (outOp)
    NIL          reduzir usando a regra 55 (outOp)
    INTEGER      reduzir usando a regra 55 (outOp)
    DECIMAL      reduzir usando a regra 55 (outOp)
    ADD          reduzir usando a regra 55 (outOp)
    SUB          reduzir usando a regra 55 (outOp)
    HEADLIST     reduzir usando a regra 55 (outOp)
    TAILLIST     reduzir usando a regra 55 (outOp)
    DESTROYHEAD  reduzir usando a regra 55 (outOp)
    ELSE         reduzir usando a regra 55 (outOp)
    IF           reduzir usando a regra 55 (outOp)
    FOR          reduzir usando a regra 55 (outOp)
    READ         reduzir usando a regra 55 (outOp)
    WRITE        reduzir usando a regra 55 (outOp)
    WRITELN      reduzir usando a regra 55 (outOp)
    RETURN       reduzir usando a regra 55 (outOp)
    STFUNC       reduzir usando a regra 55 (outOp)
    ENDFUNC      reduzir usando a regra 55 (outOp)
    PARENL       reduzir usando a regra 55 (outOp)


Estado 312

   30 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 208
    FOR          deslocar, e ir ao estado 209
    READ         deslocar, e ir ao estado 210
    WRITE        deslocar, e ir ao estado 211
    WRITELN      deslocar, e ir ao estado 212
    RETURN       deslocar, e ir ao estado 213
    STFUNC       deslocar, e ir ao estado 214
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 215
    simpleVarDeclaration  ir ao estado 216
    compoundStmt          ir ao estado 217
    primitiveStmt         ir ao estado 315
    exprStmt              ir ao estado 218
    condStmt              ir ao estado 219
    iterStmt              ir ao estado 220
    returnStmt            ir ao estado 221
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 222
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 223
    outOp                 ir ao estado 224
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 313

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 154

    assignExp  ir ao estado 316


Estado 314

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 154

    assignExp  ir ao estado 317


Estado 315

   30 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 30 (condStmt)
    TYPE         reduzir usando a regra 30 (condStmt)
    NIL          reduzir usando a regra 30 (condStmt)
    INTEGER      reduzir usando a regra 30 (condStmt)
    DECIMAL      reduzir usando a regra 30 (condStmt)
    ADD          reduzir usando a regra 30 (condStmt)
    SUB          reduzir usando a regra 30 (condStmt)
    HEADLIST     reduzir usando a regra 30 (condStmt)
    TAILLIST     reduzir usando a regra 30 (condStmt)
    DESTROYHEAD  reduzir usando a regra 30 (condStmt)
    ELSE         reduzir usando a regra 30 (condStmt)
    IF           reduzir usando a regra 30 (condStmt)
    FOR          reduzir usando a regra 30 (condStmt)
    READ         reduzir usando a regra 30 (condStmt)
    WRITE        reduzir usando a regra 30 (condStmt)
    WRITELN      reduzir usando a regra 30 (condStmt)
    RETURN       reduzir usando a regra 30 (condStmt)
    STFUNC       reduzir usando a regra 30 (condStmt)
    ENDFUNC      reduzir usando a regra 30 (condStmt)
    PARENL       reduzir usando a regra 30 (condStmt)


Estado 316

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 318


Estado 317

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 319


Estado 318

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 208
    FOR          deslocar, e ir ao estado 209
    READ         deslocar, e ir ao estado 210
    WRITE        deslocar, e ir ao estado 211
    WRITELN      deslocar, e ir ao estado 212
    RETURN       deslocar, e ir ao estado 213
    STFUNC       deslocar, e ir ao estado 214
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 215
    simpleVarDeclaration  ir ao estado 216
    compoundStmt          ir ao estado 217
    primitiveStmt         ir ao estado 320
    exprStmt              ir ao estado 218
    condStmt              ir ao estado 219
    iterStmt              ir ao estado 220
    returnStmt            ir ao estado 221
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 222
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 223
    outOp                 ir ao estado 224
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 319

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 31
    TYPE         deslocar, e ir ao estado 161
    NIL          deslocar, e ir ao estado 32
    INTEGER      deslocar, e ir ao estado 33
    DECIMAL      deslocar, e ir ao estado 34
    ADD          deslocar, e ir ao estado 35
    SUB          deslocar, e ir ao estado 36
    HEADLIST     deslocar, e ir ao estado 37
    TAILLIST     deslocar, e ir ao estado 38
    DESTROYHEAD  deslocar, e ir ao estado 39
    IF           deslocar, e ir ao estado 208
    FOR          deslocar, e ir ao estado 209
    READ         deslocar, e ir ao estado 210
    WRITE        deslocar, e ir ao estado 211
    WRITELN      deslocar, e ir ao estado 212
    RETURN       deslocar, e ir ao estado 213
    STFUNC       deslocar, e ir ao estado 214
    PARENL       deslocar, e ir ao estado 46

    varDeclaration        ir ao estado 215
    simpleVarDeclaration  ir ao estado 216
    compoundStmt          ir ao estado 217
    primitiveStmt         ir ao estado 321
    exprStmt              ir ao estado 218
    condStmt              ir ao estado 219
    iterStmt              ir ao estado 220
    returnStmt            ir ao estado 221
    listExp               ir ao estado 55
    appendOps             ir ao estado 56
    returnListOps         ir ao estado 57
    returnListOp          ir ao estado 58
    destroyHeadOps        ir ao estado 59
    mapFilterOps          ir ao estado 60
    expression            ir ao estado 222
    assignExp             ir ao estado 62
    simpleExp             ir ao estado 63
    constOp               ir ao estado 64
    inOp                  ir ao estado 223
    outOp                 ir ao estado 224
    binLogicalExp         ir ao estado 67
    relationalExp         ir ao estado 68
    sumExp                ir ao estado 69
    sumOp                 ir ao estado 70
    mulExp                ir ao estado 71
    factor                ir ao estado 72
    fCall                 ir ao estado 73


Estado 320

   31 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 31 (iterStmt)
    TYPE         reduzir usando a regra 31 (iterStmt)
    NIL          reduzir usando a regra 31 (iterStmt)
    INTEGER      reduzir usando a regra 31 (iterStmt)
    DECIMAL      reduzir usando a regra 31 (iterStmt)
    ADD          reduzir usando a regra 31 (iterStmt)
    SUB          reduzir usando a regra 31 (iterStmt)
    HEADLIST     reduzir usando a regra 31 (iterStmt)
    TAILLIST     reduzir usando a regra 31 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 31 (iterStmt)
    ELSE         reduzir usando a regra 31 (iterStmt)
    IF           reduzir usando a regra 31 (iterStmt)
    FOR          reduzir usando a regra 31 (iterStmt)
    READ         reduzir usando a regra 31 (iterStmt)
    WRITE        reduzir usando a regra 31 (iterStmt)
    WRITELN      reduzir usando a regra 31 (iterStmt)
    RETURN       reduzir usando a regra 31 (iterStmt)
    STFUNC       reduzir usando a regra 31 (iterStmt)
    ENDFUNC      reduzir usando a regra 31 (iterStmt)
    PARENL       reduzir usando a regra 31 (iterStmt)


Estado 321

   32 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 32 (iterStmt)
    TYPE         reduzir usando a regra 32 (iterStmt)
    NIL          reduzir usando a regra 32 (iterStmt)
    INTEGER      reduzir usando a regra 32 (iterStmt)
    DECIMAL      reduzir usando a regra 32 (iterStmt)
    ADD          reduzir usando a regra 32 (iterStmt)
    SUB          reduzir usando a regra 32 (iterStmt)
    HEADLIST     reduzir usando a regra 32 (iterStmt)
    TAILLIST     reduzir usando a regra 32 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 32 (iterStmt)
    ELSE         reduzir usando a regra 32 (iterStmt)
    IF           reduzir usando a regra 32 (iterStmt)
    FOR          reduzir usando a regra 32 (iterStmt)
    READ         reduzir usando a regra 32 (iterStmt)
    WRITE        reduzir usando a regra 32 (iterStmt)
    WRITELN      reduzir usando a regra 32 (iterStmt)
    RETURN       reduzir usando a regra 32 (iterStmt)
    STFUNC       reduzir usando a regra 32 (iterStmt)
    ENDFUNC      reduzir usando a regra 32 (iterStmt)
    PARENL       reduzir usando a regra 32 (iterStmt)
