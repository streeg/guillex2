Terminais sem uso na gramática

    FILTER


Gramática

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funcDeclaration

    6 varDeclaration: simpleVarDeclaration SEMIC

    7 funcDeclaration: simpleFuncDeclaration PARENL params PARENR compoundStmt
    8                | simpleFuncDeclaration PARENL PARENR compoundStmt

    9 simpleVarDeclaration: TYPE ID

   10 simpleFuncDeclaration: TYPE ID

   11 params: params param
   12       | param

   13 param: simpleVarDeclaration

   14 compoundStmt: STFUNC stmtList ENDFUNC

   15 stmtList: stmtList primitiveStmt
   16         | primitiveStmt

   17 primitiveStmt: exprStmt
   18              | compoundStmt
   19              | condStmt
   20              | iterStmt
   21              | returnStmt
   22              | listStmt
   23              | inOp
   24              | outOp
   25              | varDeclaration

   26 exprStmt: expression SEMIC

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt
   28         | IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   31 returnStmt: RETURN expression SEMIC

   32 listStmt: appendOps
   33         | returnListOps
   34         | destroyHeadOps
   35         | mapFilterOps

   36 appendOps: ID APPEND ID SEMIC

   37 returnListOps: returnListOp ID

   38 returnListOp: HEADLIST
   39             | TAILLIST

   40 destroyHeadOps: DESTROYHEAD ID SEMIC

   41 mapFilterOps: fCall MAP ID SEMIC

   42 expression: assignExp
   43           | simpleExp

   44 assignExp: ID ASSIGN expression

   45 simpleExp: binLogicalExp

   46 constOp: INTEGER
   47        | DECIMAL
   48        | LIST
   49        | NIL

   50 inOp: READ PARENL ID PARENR SEMIC

   51 outOp: WRITE PARENL outConst PARENR SEMIC
   52      | WRITELN PARENL outConst PARENR SEMIC

   53 outConst: STRING
   54         | simpleExp

   55 binLogicalExp: binLogicalExp binLogicalOp
   56              | relationalExp

   57 binLogicalOp: OR
   58             | AND
   59             | NEG

   60 relationalExp: relationalExp relationalOp sumExp
   61              | sumExp

   62 relationalOp: SMALLER
   63             | GREATER
   64             | SMALLEQ
   65             | GREATEQ
   66             | EQUALS
   67             | DIFFERENT

   68 sumExp: sumExp sumOp mulExp
   69       | mulExp

   70 sumOp: ADD
   71      | SUB

   72 mulExp: mulExp mulOp factor
   73       | factor
   74       | sumOp factor

   75 mulOp: MULT
   76      | DIV

   77 factor: ID
   78       | fCall
   79       | PARENL simpleExp PARENR
   80       | constOp

   81 fCall: ID PARENL callParams PARENR
   82      | ID PARENL PARENR

   83 callParams: callParams COMMA simpleExp
   84           | simpleExp


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    ID <str> (258) 9 10 36 37 40 41 44 50 77 81 82
    TYPE <str> (259) 9 10
    LIST <str> (260) 48
    STRING <str> (261) 53
    NIL <str> (262) 49
    INTEGER <integer> (263) 46
    DECIMAL <dec> (264) 47
    ADD <str> (265) 70
    SUB <str> (266) 71
    MULT <str> (267) 75
    DIV <str> (268) 76
    OR <str> (269) 57
    AND <str> (270) 58
    SMALLER <str> (271) 62
    GREATER <str> (272) 63
    SMALLEQ <str> (273) 64
    GREATEQ <str> (274) 65
    EQUALS <str> (275) 66
    DIFFERENT <str> (276) 67
    APPEND <str> (277) 36
    HEADLIST <str> (278) 38
    TAILLIST <str> (279) 39
    DESTROYHEAD <str> (280) 40
    FILTER <str> (281)
    ASSIGN <str> (282) 44
    NEG <str> (283) 59
    MAP <str> (284) 41
    ELSE <str> (285) 28
    THEN <str> (286)
    IF <str> (287) 27 28
    FOR <str> (288) 29 30
    READ <str> (289) 50
    WRITE <str> (290) 51
    WRITELN <str> (291) 52
    RETURN <str> (292) 31
    SEMIC <str> (293) 6 26 29 30 31 36 40 41 50 51 52
    COMMA <str> (294) 83
    STFUNC <str> (295) 14
    ENDFUNC <str> (296) 14
    PARENL <str> (297) 7 8 27 28 29 30 50 51 52 79 81 82
    PARENR <str> (298) 7 8 27 28 29 30 50 51 52 79 81 82


Não terminais com as regras onde eles aparecem

    $accept (44)
        à esquerda: 0
    program <treeNode> (45)
        à esquerda: 1
        à direita: 0
    declarationList <treeNode> (46)
        à esquerda: 2 3
        à direita: 1 2
    declaration <treeNode> (47)
        à esquerda: 4 5
        à direita: 2 3
    varDeclaration <treeNode> (48)
        à esquerda: 6
        à direita: 4 25
    funcDeclaration <treeNode> (49)
        à esquerda: 7 8
        à direita: 5
    simpleVarDeclaration <treeNode> (50)
        à esquerda: 9
        à direita: 6 13
    simpleFuncDeclaration <treeNode> (51)
        à esquerda: 10
        à direita: 7 8
    params <treeNode> (52)
        à esquerda: 11 12
        à direita: 7 11
    param <treeNode> (53)
        à esquerda: 13
        à direita: 11 12
    compoundStmt <treeNode> (54)
        à esquerda: 14
        à direita: 7 8 18
    stmtList <treeNode> (55)
        à esquerda: 15 16
        à direita: 14 15
    primitiveStmt <treeNode> (56)
        à esquerda: 17 18 19 20 21 22 23 24 25
        à direita: 15 16 27 28 29 30
    exprStmt <treeNode> (57)
        à esquerda: 26
        à direita: 17
    condStmt <treeNode> (58)
        à esquerda: 27 28
        à direita: 19
    iterStmt <treeNode> (59)
        à esquerda: 29 30
        à direita: 20
    returnStmt <treeNode> (60)
        à esquerda: 31
        à direita: 21
    listStmt <treeNode> (61)
        à esquerda: 32 33 34 35
        à direita: 22
    appendOps <treeNode> (62)
        à esquerda: 36
        à direita: 32
    returnListOps <treeNode> (63)
        à esquerda: 37
        à direita: 33
    returnListOp <treeNode> (64)
        à esquerda: 38 39
        à direita: 37
    destroyHeadOps <treeNode> (65)
        à esquerda: 40
        à direita: 34
    mapFilterOps <treeNode> (66)
        à esquerda: 41
        à direita: 35
    expression <treeNode> (67)
        à esquerda: 42 43
        à direita: 26 31 44
    assignExp <treeNode> (68)
        à esquerda: 44
        à direita: 29 30 42
    simpleExp <treeNode> (69)
        à esquerda: 45
        à direita: 27 28 29 30 43 54 79 83 84
    constOp <treeNode> (70)
        à esquerda: 46 47 48 49
        à direita: 80
    inOp <treeNode> (71)
        à esquerda: 50
        à direita: 23
    outOp <treeNode> (72)
        à esquerda: 51 52
        à direita: 24
    outConst <treeNode> (73)
        à esquerda: 53 54
        à direita: 51 52
    binLogicalExp <treeNode> (74)
        à esquerda: 55 56
        à direita: 45 55
    binLogicalOp <treeNode> (75)
        à esquerda: 57 58 59
        à direita: 55
    relationalExp <treeNode> (76)
        à esquerda: 60 61
        à direita: 56 60
    relationalOp <treeNode> (77)
        à esquerda: 62 63 64 65 66 67
        à direita: 60
    sumExp <treeNode> (78)
        à esquerda: 68 69
        à direita: 60 61 68
    sumOp <treeNode> (79)
        à esquerda: 70 71
        à direita: 68 74
    mulExp <treeNode> (80)
        à esquerda: 72 73 74
        à direita: 68 69 72
    mulOp <treeNode> (81)
        à esquerda: 75 76
        à direita: 72
    factor <treeNode> (82)
        à esquerda: 77 78 79 80
        à direita: 72 73 74
    fCall <treeNode> (83)
        à esquerda: 81 82
        à direita: 41 78
    callParams <treeNode> (84)
        à esquerda: 83 84
        à direita: 81 83


Estado 0

    0 $accept: • program $end

    TYPE  deslocar, e ir ao estado 1

    program                ir ao estado 2
    declarationList        ir ao estado 3
    declaration            ir ao estado 4
    varDeclaration         ir ao estado 5
    funcDeclaration        ir ao estado 6
    simpleVarDeclaration   ir ao estado 7
    simpleFuncDeclaration  ir ao estado 8


Estado 1

    9 simpleVarDeclaration: TYPE • ID
   10 simpleFuncDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 9


Estado 2

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 10


Estado 3

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  deslocar, e ir ao estado 1

    $end  reduzir usando a regra 1 (program)

    declaration            ir ao estado 11
    varDeclaration         ir ao estado 5
    funcDeclaration        ir ao estado 6
    simpleVarDeclaration   ir ao estado 7
    simpleFuncDeclaration  ir ao estado 8


Estado 4

    3 declarationList: declaration •

    $end  reduzir usando a regra 3 (declarationList)
    TYPE  reduzir usando a regra 3 (declarationList)


Estado 5

    4 declaration: varDeclaration •

    $end  reduzir usando a regra 4 (declaration)
    TYPE  reduzir usando a regra 4 (declaration)


Estado 6

    5 declaration: funcDeclaration •

    $end  reduzir usando a regra 5 (declaration)
    TYPE  reduzir usando a regra 5 (declaration)


Estado 7

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 12


Estado 8

    7 funcDeclaration: simpleFuncDeclaration • PARENL params PARENR compoundStmt
    8                | simpleFuncDeclaration • PARENL PARENR compoundStmt

    PARENL  deslocar, e ir ao estado 13


Estado 9

    9 simpleVarDeclaration: TYPE ID •
   10 simpleFuncDeclaration: TYPE ID •

    SEMIC   reduzir usando a regra 9 (simpleVarDeclaration)
    PARENL  reduzir usando a regra 10 (simpleFuncDeclaration)


Estado 10

    0 $accept: program $end •

    $padrão  aceitar


Estado 11

    2 declarationList: declarationList declaration •

    $end  reduzir usando a regra 2 (declarationList)
    TYPE  reduzir usando a regra 2 (declarationList)


Estado 12

    6 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduzir usando a regra 6 (varDeclaration)
    TYPE  reduzir usando a regra 6 (varDeclaration)


Estado 13

    7 funcDeclaration: simpleFuncDeclaration PARENL • params PARENR compoundStmt
    8                | simpleFuncDeclaration PARENL • PARENR compoundStmt

    TYPE    deslocar, e ir ao estado 14
    PARENR  deslocar, e ir ao estado 15

    simpleVarDeclaration  ir ao estado 16
    params                ir ao estado 17
    param                 ir ao estado 18


Estado 14

    9 simpleVarDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 19


Estado 15

    8 funcDeclaration: simpleFuncDeclaration PARENL PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 20

    compoundStmt  ir ao estado 21


Estado 16

   13 param: simpleVarDeclaration •

    TYPE    reduzir usando a regra 13 (param)
    PARENR  reduzir usando a regra 13 (param)


Estado 17

    7 funcDeclaration: simpleFuncDeclaration PARENL params • PARENR compoundStmt
   11 params: params • param

    TYPE    deslocar, e ir ao estado 14
    PARENR  deslocar, e ir ao estado 22

    simpleVarDeclaration  ir ao estado 16
    param                 ir ao estado 23


Estado 18

   12 params: param •

    TYPE    reduzir usando a regra 12 (params)
    PARENR  reduzir usando a regra 12 (params)


Estado 19

    9 simpleVarDeclaration: TYPE ID •

    TYPE    reduzir usando a regra 9 (simpleVarDeclaration)
    PARENR  reduzir usando a regra 9 (simpleVarDeclaration)


Estado 20

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 153
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 154
    compoundStmt          ir ao estado 42
    stmtList              ir ao estado 43
    primitiveStmt         ir ao estado 44
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 21

    8 funcDeclaration: simpleFuncDeclaration PARENL PARENR compoundStmt •

    $end  reduzir usando a regra 8 (funcDeclaration)
    TYPE  reduzir usando a regra 8 (funcDeclaration)


Estado 22

    7 funcDeclaration: simpleFuncDeclaration PARENL params PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 20

    compoundStmt  ir ao estado 68


Estado 23

   11 params: params param •

    TYPE    reduzir usando a regra 11 (params)
    PARENR  reduzir usando a regra 11 (params)


Estado 24

   36 appendOps: ID • APPEND ID SEMIC
   44 assignExp: ID • ASSIGN expression
   77 factor: ID •
   81 fCall: ID • PARENL callParams PARENR
   82      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 69
    ASSIGN  deslocar, e ir ao estado 70
    PARENL  deslocar, e ir ao estado 71

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    NEG        reduzir usando a regra 77 (factor)
    SEMIC      reduzir usando a regra 77 (factor)


Estado 25

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    SEMIC      reduzir usando a regra 48 (constOp)


Estado 26

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    SEMIC      reduzir usando a regra 49 (constOp)


Estado 27

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    SEMIC      reduzir usando a regra 46 (constOp)


Estado 28

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    SEMIC      reduzir usando a regra 47 (constOp)


Estado 29

   70 sumOp: ADD •

    ID       reduzir usando a regra 70 (sumOp)
    LIST     reduzir usando a regra 70 (sumOp)
    NIL      reduzir usando a regra 70 (sumOp)
    INTEGER  reduzir usando a regra 70 (sumOp)
    DECIMAL  reduzir usando a regra 70 (sumOp)
    PARENL   reduzir usando a regra 70 (sumOp)


Estado 30

   71 sumOp: SUB •

    ID       reduzir usando a regra 71 (sumOp)
    LIST     reduzir usando a regra 71 (sumOp)
    NIL      reduzir usando a regra 71 (sumOp)
    INTEGER  reduzir usando a regra 71 (sumOp)
    DECIMAL  reduzir usando a regra 71 (sumOp)
    PARENL   reduzir usando a regra 71 (sumOp)


Estado 31

   38 returnListOp: HEADLIST •

    ID  reduzir usando a regra 38 (returnListOp)


Estado 32

   39 returnListOp: TAILLIST •

    ID  reduzir usando a regra 39 (returnListOp)


Estado 33

   40 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 72


Estado 34

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 73


Estado 35

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 74


Estado 36

   50 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 75


Estado 37

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 76


Estado 38

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 77


Estado 39

   31 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 78
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    expression     ir ao estado 79
    assignExp      ir ao estado 56
    simpleExp      ir ao estado 57
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 40

   79 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    simpleExp      ir ao estado 82
    constOp        ir ao estado 160
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 41

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    LIST         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 42

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    LIST         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 43

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 153
    ENDFUNC      deslocar, e ir ao estado 83
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 154
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 84
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 44

   16 stmtList: primitiveStmt •

    ID           reduzir usando a regra 16 (stmtList)
    TYPE         reduzir usando a regra 16 (stmtList)
    LIST         reduzir usando a regra 16 (stmtList)
    NIL          reduzir usando a regra 16 (stmtList)
    INTEGER      reduzir usando a regra 16 (stmtList)
    DECIMAL      reduzir usando a regra 16 (stmtList)
    ADD          reduzir usando a regra 16 (stmtList)
    SUB          reduzir usando a regra 16 (stmtList)
    HEADLIST     reduzir usando a regra 16 (stmtList)
    TAILLIST     reduzir usando a regra 16 (stmtList)
    DESTROYHEAD  reduzir usando a regra 16 (stmtList)
    IF           reduzir usando a regra 16 (stmtList)
    FOR          reduzir usando a regra 16 (stmtList)
    READ         reduzir usando a regra 16 (stmtList)
    WRITE        reduzir usando a regra 16 (stmtList)
    WRITELN      reduzir usando a regra 16 (stmtList)
    RETURN       reduzir usando a regra 16 (stmtList)
    STFUNC       reduzir usando a regra 16 (stmtList)
    ENDFUNC      reduzir usando a regra 16 (stmtList)
    PARENL       reduzir usando a regra 16 (stmtList)


Estado 45

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    LIST         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 46

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    LIST         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 47

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    LIST         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 48

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    LIST         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 49

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    LIST         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 50

   32 listStmt: appendOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    LIST         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 51

   33 listStmt: returnListOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    LIST         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 52

   37 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 85


Estado 53

   34 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    LIST         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 54

   35 listStmt: mapFilterOps •

    ID           reduzir usando a regra 35 (listStmt)
    TYPE         reduzir usando a regra 35 (listStmt)
    LIST         reduzir usando a regra 35 (listStmt)
    NIL          reduzir usando a regra 35 (listStmt)
    INTEGER      reduzir usando a regra 35 (listStmt)
    DECIMAL      reduzir usando a regra 35 (listStmt)
    ADD          reduzir usando a regra 35 (listStmt)
    SUB          reduzir usando a regra 35 (listStmt)
    HEADLIST     reduzir usando a regra 35 (listStmt)
    TAILLIST     reduzir usando a regra 35 (listStmt)
    DESTROYHEAD  reduzir usando a regra 35 (listStmt)
    IF           reduzir usando a regra 35 (listStmt)
    FOR          reduzir usando a regra 35 (listStmt)
    READ         reduzir usando a regra 35 (listStmt)
    WRITE        reduzir usando a regra 35 (listStmt)
    WRITELN      reduzir usando a regra 35 (listStmt)
    RETURN       reduzir usando a regra 35 (listStmt)
    STFUNC       reduzir usando a regra 35 (listStmt)
    ENDFUNC      reduzir usando a regra 35 (listStmt)
    PARENL       reduzir usando a regra 35 (listStmt)


Estado 55

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 86


Estado 56

   42 expression: assignExp •

    SEMIC  reduzir usando a regra 42 (expression)


Estado 57

   43 expression: simpleExp •

    SEMIC  reduzir usando a regra 43 (expression)


Estado 58

   80 factor: constOp •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 59

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    LIST         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 60

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    LIST         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 61

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp

    OR   deslocar, e ir ao estado 87
    AND  deslocar, e ir ao estado 88
    NEG  deslocar, e ir ao estado 89

    SEMIC  reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 90


Estado 62

   56 binLogicalExp: relationalExp •
   60 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 91
    GREATER    deslocar, e ir ao estado 92
    SMALLEQ    deslocar, e ir ao estado 93
    GREATEQ    deslocar, e ir ao estado 94
    EQUALS     deslocar, e ir ao estado 95
    DIFFERENT  deslocar, e ir ao estado 96

    OR     reduzir usando a regra 56 (binLogicalExp)
    AND    reduzir usando a regra 56 (binLogicalExp)
    NEG    reduzir usando a regra 56 (binLogicalExp)
    SEMIC  reduzir usando a regra 56 (binLogicalExp)

    relationalOp  ir ao estado 97


Estado 63

   61 relationalExp: sumExp •
   68 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 168
    SUB  deslocar, e ir ao estado 169

    OR         reduzir usando a regra 61 (relationalExp)
    AND        reduzir usando a regra 61 (relationalExp)
    SMALLER    reduzir usando a regra 61 (relationalExp)
    GREATER    reduzir usando a regra 61 (relationalExp)
    SMALLEQ    reduzir usando a regra 61 (relationalExp)
    GREATEQ    reduzir usando a regra 61 (relationalExp)
    EQUALS     reduzir usando a regra 61 (relationalExp)
    DIFFERENT  reduzir usando a regra 61 (relationalExp)
    NEG        reduzir usando a regra 61 (relationalExp)
    SEMIC      reduzir usando a regra 61 (relationalExp)

    sumOp  ir ao estado 98


Estado 64

   74 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 170
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    factor   ir ao estado 99
    fCall    ir ao estado 80


Estado 65

   69 sumExp: mulExp •
   72 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 100
    DIV   deslocar, e ir ao estado 101

    ADD        reduzir usando a regra 69 (sumExp)
    SUB        reduzir usando a regra 69 (sumExp)
    OR         reduzir usando a regra 69 (sumExp)
    AND        reduzir usando a regra 69 (sumExp)
    SMALLER    reduzir usando a regra 69 (sumExp)
    GREATER    reduzir usando a regra 69 (sumExp)
    SMALLEQ    reduzir usando a regra 69 (sumExp)
    GREATEQ    reduzir usando a regra 69 (sumExp)
    EQUALS     reduzir usando a regra 69 (sumExp)
    DIFFERENT  reduzir usando a regra 69 (sumExp)
    NEG        reduzir usando a regra 69 (sumExp)
    SEMIC      reduzir usando a regra 69 (sumExp)

    mulOp  ir ao estado 102


Estado 66

   73 mulExp: factor •

    ADD        reduzir usando a regra 73 (mulExp)
    SUB        reduzir usando a regra 73 (mulExp)
    MULT       reduzir usando a regra 73 (mulExp)
    DIV        reduzir usando a regra 73 (mulExp)
    OR         reduzir usando a regra 73 (mulExp)
    AND        reduzir usando a regra 73 (mulExp)
    SMALLER    reduzir usando a regra 73 (mulExp)
    GREATER    reduzir usando a regra 73 (mulExp)
    SMALLEQ    reduzir usando a regra 73 (mulExp)
    GREATEQ    reduzir usando a regra 73 (mulExp)
    EQUALS     reduzir usando a regra 73 (mulExp)
    DIFFERENT  reduzir usando a regra 73 (mulExp)
    NEG        reduzir usando a regra 73 (mulExp)
    SEMIC      reduzir usando a regra 73 (mulExp)


Estado 67

   41 mapFilterOps: fCall • MAP ID SEMIC
   78 factor: fCall •

    MAP  deslocar, e ir ao estado 103

    ADD        reduzir usando a regra 78 (factor)
    SUB        reduzir usando a regra 78 (factor)
    MULT       reduzir usando a regra 78 (factor)
    DIV        reduzir usando a regra 78 (factor)
    OR         reduzir usando a regra 78 (factor)
    AND        reduzir usando a regra 78 (factor)
    SMALLER    reduzir usando a regra 78 (factor)
    GREATER    reduzir usando a regra 78 (factor)
    SMALLEQ    reduzir usando a regra 78 (factor)
    GREATEQ    reduzir usando a regra 78 (factor)
    EQUALS     reduzir usando a regra 78 (factor)
    DIFFERENT  reduzir usando a regra 78 (factor)
    NEG        reduzir usando a regra 78 (factor)
    SEMIC      reduzir usando a regra 78 (factor)


Estado 68

    7 funcDeclaration: simpleFuncDeclaration PARENL params PARENR compoundStmt •

    $end  reduzir usando a regra 7 (funcDeclaration)
    TYPE  reduzir usando a regra 7 (funcDeclaration)


Estado 69

   36 appendOps: ID APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 104


Estado 70

   44 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 78
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    expression     ir ao estado 105
    assignExp      ir ao estado 56
    simpleExp      ir ao estado 57
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 71

   81 fCall: ID PARENL • callParams PARENR
   82      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 171
    LIST     deslocar, e ir ao estado 172
    NIL      deslocar, e ir ao estado 173
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 176
    PARENR   deslocar, e ir ao estado 106

    simpleExp      ir ao estado 107
    constOp        ir ao estado 177
    binLogicalExp  ir ao estado 178
    relationalExp  ir ao estado 179
    sumExp         ir ao estado 180
    sumOp          ir ao estado 181
    mulExp         ir ao estado 182
    factor         ir ao estado 183
    fCall          ir ao estado 184
    callParams     ir ao estado 108


Estado 72

   40 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 109


Estado 73

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    simpleExp      ir ao estado 110
    constOp        ir ao estado 160
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 74

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 78
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    assignExp      ir ao estado 111
    simpleExp      ir ao estado 112
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 75

   50 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 113


Estado 76

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    STRING   deslocar, e ir ao estado 114
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    simpleExp      ir ao estado 115
    constOp        ir ao estado 160
    outConst       ir ao estado 116
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 77

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    STRING   deslocar, e ir ao estado 114
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    simpleExp      ir ao estado 115
    constOp        ir ao estado 160
    outConst       ir ao estado 117
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 78

   44 assignExp: ID • ASSIGN expression
   77 factor: ID •
   81 fCall: ID • PARENL callParams PARENR
   82      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 70
    PARENL  deslocar, e ir ao estado 185

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    NEG        reduzir usando a regra 77 (factor)
    SEMIC      reduzir usando a regra 77 (factor)


Estado 79

   31 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 118


Estado 80

   78 factor: fCall •

    ADD        reduzir usando a regra 78 (factor)
    SUB        reduzir usando a regra 78 (factor)
    MULT       reduzir usando a regra 78 (factor)
    DIV        reduzir usando a regra 78 (factor)
    OR         reduzir usando a regra 78 (factor)
    AND        reduzir usando a regra 78 (factor)
    SMALLER    reduzir usando a regra 78 (factor)
    GREATER    reduzir usando a regra 78 (factor)
    SMALLEQ    reduzir usando a regra 78 (factor)
    GREATEQ    reduzir usando a regra 78 (factor)
    EQUALS     reduzir usando a regra 78 (factor)
    DIFFERENT  reduzir usando a regra 78 (factor)
    NEG        reduzir usando a regra 78 (factor)
    SEMIC      reduzir usando a regra 78 (factor)


Estado 81

   77 factor: ID •
   81 fCall: ID • PARENL callParams PARENR
   82      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 186

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    NEG        reduzir usando a regra 77 (factor)
    PARENR     reduzir usando a regra 77 (factor)


Estado 82

   79 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 119


Estado 83

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    $end  reduzir usando a regra 14 (compoundStmt)
    TYPE  reduzir usando a regra 14 (compoundStmt)


Estado 84

   15 stmtList: stmtList primitiveStmt •

    ID           reduzir usando a regra 15 (stmtList)
    TYPE         reduzir usando a regra 15 (stmtList)
    LIST         reduzir usando a regra 15 (stmtList)
    NIL          reduzir usando a regra 15 (stmtList)
    INTEGER      reduzir usando a regra 15 (stmtList)
    DECIMAL      reduzir usando a regra 15 (stmtList)
    ADD          reduzir usando a regra 15 (stmtList)
    SUB          reduzir usando a regra 15 (stmtList)
    HEADLIST     reduzir usando a regra 15 (stmtList)
    TAILLIST     reduzir usando a regra 15 (stmtList)
    DESTROYHEAD  reduzir usando a regra 15 (stmtList)
    IF           reduzir usando a regra 15 (stmtList)
    FOR          reduzir usando a regra 15 (stmtList)
    READ         reduzir usando a regra 15 (stmtList)
    WRITE        reduzir usando a regra 15 (stmtList)
    WRITELN      reduzir usando a regra 15 (stmtList)
    RETURN       reduzir usando a regra 15 (stmtList)
    STFUNC       reduzir usando a regra 15 (stmtList)
    ENDFUNC      reduzir usando a regra 15 (stmtList)
    PARENL       reduzir usando a regra 15 (stmtList)


Estado 85

   37 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 37 (returnListOps)
    TYPE         reduzir usando a regra 37 (returnListOps)
    LIST         reduzir usando a regra 37 (returnListOps)
    NIL          reduzir usando a regra 37 (returnListOps)
    INTEGER      reduzir usando a regra 37 (returnListOps)
    DECIMAL      reduzir usando a regra 37 (returnListOps)
    ADD          reduzir usando a regra 37 (returnListOps)
    SUB          reduzir usando a regra 37 (returnListOps)
    HEADLIST     reduzir usando a regra 37 (returnListOps)
    TAILLIST     reduzir usando a regra 37 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 37 (returnListOps)
    IF           reduzir usando a regra 37 (returnListOps)
    FOR          reduzir usando a regra 37 (returnListOps)
    READ         reduzir usando a regra 37 (returnListOps)
    WRITE        reduzir usando a regra 37 (returnListOps)
    WRITELN      reduzir usando a regra 37 (returnListOps)
    RETURN       reduzir usando a regra 37 (returnListOps)
    STFUNC       reduzir usando a regra 37 (returnListOps)
    ENDFUNC      reduzir usando a regra 37 (returnListOps)
    PARENL       reduzir usando a regra 37 (returnListOps)


Estado 86

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    LIST         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 87

   57 binLogicalOp: OR •

    OR     reduzir usando a regra 57 (binLogicalOp)
    AND    reduzir usando a regra 57 (binLogicalOp)
    NEG    reduzir usando a regra 57 (binLogicalOp)
    SEMIC  reduzir usando a regra 57 (binLogicalOp)


Estado 88

   58 binLogicalOp: AND •

    OR     reduzir usando a regra 58 (binLogicalOp)
    AND    reduzir usando a regra 58 (binLogicalOp)
    NEG    reduzir usando a regra 58 (binLogicalOp)
    SEMIC  reduzir usando a regra 58 (binLogicalOp)


Estado 89

   59 binLogicalOp: NEG •

    OR     reduzir usando a regra 59 (binLogicalOp)
    AND    reduzir usando a regra 59 (binLogicalOp)
    NEG    reduzir usando a regra 59 (binLogicalOp)
    SEMIC  reduzir usando a regra 59 (binLogicalOp)


Estado 90

   55 binLogicalExp: binLogicalExp binLogicalOp •

    OR     reduzir usando a regra 55 (binLogicalExp)
    AND    reduzir usando a regra 55 (binLogicalExp)
    NEG    reduzir usando a regra 55 (binLogicalExp)
    SEMIC  reduzir usando a regra 55 (binLogicalExp)


Estado 91

   62 relationalOp: SMALLER •

    ID       reduzir usando a regra 62 (relationalOp)
    LIST     reduzir usando a regra 62 (relationalOp)
    NIL      reduzir usando a regra 62 (relationalOp)
    INTEGER  reduzir usando a regra 62 (relationalOp)
    DECIMAL  reduzir usando a regra 62 (relationalOp)
    ADD      reduzir usando a regra 62 (relationalOp)
    SUB      reduzir usando a regra 62 (relationalOp)
    PARENL   reduzir usando a regra 62 (relationalOp)


Estado 92

   63 relationalOp: GREATER •

    ID       reduzir usando a regra 63 (relationalOp)
    LIST     reduzir usando a regra 63 (relationalOp)
    NIL      reduzir usando a regra 63 (relationalOp)
    INTEGER  reduzir usando a regra 63 (relationalOp)
    DECIMAL  reduzir usando a regra 63 (relationalOp)
    ADD      reduzir usando a regra 63 (relationalOp)
    SUB      reduzir usando a regra 63 (relationalOp)
    PARENL   reduzir usando a regra 63 (relationalOp)


Estado 93

   64 relationalOp: SMALLEQ •

    ID       reduzir usando a regra 64 (relationalOp)
    LIST     reduzir usando a regra 64 (relationalOp)
    NIL      reduzir usando a regra 64 (relationalOp)
    INTEGER  reduzir usando a regra 64 (relationalOp)
    DECIMAL  reduzir usando a regra 64 (relationalOp)
    ADD      reduzir usando a regra 64 (relationalOp)
    SUB      reduzir usando a regra 64 (relationalOp)
    PARENL   reduzir usando a regra 64 (relationalOp)


Estado 94

   65 relationalOp: GREATEQ •

    ID       reduzir usando a regra 65 (relationalOp)
    LIST     reduzir usando a regra 65 (relationalOp)
    NIL      reduzir usando a regra 65 (relationalOp)
    INTEGER  reduzir usando a regra 65 (relationalOp)
    DECIMAL  reduzir usando a regra 65 (relationalOp)
    ADD      reduzir usando a regra 65 (relationalOp)
    SUB      reduzir usando a regra 65 (relationalOp)
    PARENL   reduzir usando a regra 65 (relationalOp)


Estado 95

   66 relationalOp: EQUALS •

    ID       reduzir usando a regra 66 (relationalOp)
    LIST     reduzir usando a regra 66 (relationalOp)
    NIL      reduzir usando a regra 66 (relationalOp)
    INTEGER  reduzir usando a regra 66 (relationalOp)
    DECIMAL  reduzir usando a regra 66 (relationalOp)
    ADD      reduzir usando a regra 66 (relationalOp)
    SUB      reduzir usando a regra 66 (relationalOp)
    PARENL   reduzir usando a regra 66 (relationalOp)


Estado 96

   67 relationalOp: DIFFERENT •

    ID       reduzir usando a regra 67 (relationalOp)
    LIST     reduzir usando a regra 67 (relationalOp)
    NIL      reduzir usando a regra 67 (relationalOp)
    INTEGER  reduzir usando a regra 67 (relationalOp)
    DECIMAL  reduzir usando a regra 67 (relationalOp)
    ADD      reduzir usando a regra 67 (relationalOp)
    SUB      reduzir usando a regra 67 (relationalOp)
    PARENL   reduzir usando a regra 67 (relationalOp)


Estado 97

   60 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 170
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    sumExp   ir ao estado 120
    sumOp    ir ao estado 64
    mulExp   ir ao estado 65
    factor   ir ao estado 66
    fCall    ir ao estado 80


Estado 98

   68 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 170
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    sumOp    ir ao estado 64
    mulExp   ir ao estado 121
    factor   ir ao estado 66
    fCall    ir ao estado 80


Estado 99

   74 mulExp: sumOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    NEG        reduzir usando a regra 74 (mulExp)
    SEMIC      reduzir usando a regra 74 (mulExp)


Estado 100

   75 mulOp: MULT •

    ID       reduzir usando a regra 75 (mulOp)
    LIST     reduzir usando a regra 75 (mulOp)
    NIL      reduzir usando a regra 75 (mulOp)
    INTEGER  reduzir usando a regra 75 (mulOp)
    DECIMAL  reduzir usando a regra 75 (mulOp)
    PARENL   reduzir usando a regra 75 (mulOp)


Estado 101

   76 mulOp: DIV •

    ID       reduzir usando a regra 76 (mulOp)
    LIST     reduzir usando a regra 76 (mulOp)
    NIL      reduzir usando a regra 76 (mulOp)
    INTEGER  reduzir usando a regra 76 (mulOp)
    DECIMAL  reduzir usando a regra 76 (mulOp)
    PARENL   reduzir usando a regra 76 (mulOp)


Estado 102

   72 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 170
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    factor   ir ao estado 122
    fCall    ir ao estado 80


Estado 103

   41 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 123


Estado 104

   36 appendOps: ID APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 124


Estado 105

   44 assignExp: ID ASSIGN expression •

    SEMIC  reduzir usando a regra 44 (assignExp)


Estado 106

   82 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 82 (fCall)
    SUB        reduzir usando a regra 82 (fCall)
    MULT       reduzir usando a regra 82 (fCall)
    DIV        reduzir usando a regra 82 (fCall)
    OR         reduzir usando a regra 82 (fCall)
    AND        reduzir usando a regra 82 (fCall)
    SMALLER    reduzir usando a regra 82 (fCall)
    GREATER    reduzir usando a regra 82 (fCall)
    SMALLEQ    reduzir usando a regra 82 (fCall)
    GREATEQ    reduzir usando a regra 82 (fCall)
    EQUALS     reduzir usando a regra 82 (fCall)
    DIFFERENT  reduzir usando a regra 82 (fCall)
    NEG        reduzir usando a regra 82 (fCall)
    MAP        reduzir usando a regra 82 (fCall)
    SEMIC      reduzir usando a regra 82 (fCall)


Estado 107

   84 callParams: simpleExp •

    COMMA   reduzir usando a regra 84 (callParams)
    PARENR  reduzir usando a regra 84 (callParams)


Estado 108

   81 fCall: ID PARENL callParams • PARENR
   83 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 125
    PARENR  deslocar, e ir ao estado 126


Estado 109

   40 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 40 (destroyHeadOps)
    TYPE         reduzir usando a regra 40 (destroyHeadOps)
    LIST         reduzir usando a regra 40 (destroyHeadOps)
    NIL          reduzir usando a regra 40 (destroyHeadOps)
    INTEGER      reduzir usando a regra 40 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 40 (destroyHeadOps)
    ADD          reduzir usando a regra 40 (destroyHeadOps)
    SUB          reduzir usando a regra 40 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 40 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 40 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 40 (destroyHeadOps)
    IF           reduzir usando a regra 40 (destroyHeadOps)
    FOR          reduzir usando a regra 40 (destroyHeadOps)
    READ         reduzir usando a regra 40 (destroyHeadOps)
    WRITE        reduzir usando a regra 40 (destroyHeadOps)
    WRITELN      reduzir usando a regra 40 (destroyHeadOps)
    RETURN       reduzir usando a regra 40 (destroyHeadOps)
    STFUNC       reduzir usando a regra 40 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 40 (destroyHeadOps)
    PARENL       reduzir usando a regra 40 (destroyHeadOps)


Estado 110

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 127


Estado 111

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 128


Estado 112

   30 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 129


Estado 113

   50 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 130


Estado 114

   53 outConst: STRING •

    PARENR  reduzir usando a regra 53 (outConst)


Estado 115

   54 outConst: simpleExp •

    PARENR  reduzir usando a regra 54 (outConst)


Estado 116

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 131


Estado 117

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 132


Estado 118

   31 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 31 (returnStmt)
    TYPE         reduzir usando a regra 31 (returnStmt)
    LIST         reduzir usando a regra 31 (returnStmt)
    NIL          reduzir usando a regra 31 (returnStmt)
    INTEGER      reduzir usando a regra 31 (returnStmt)
    DECIMAL      reduzir usando a regra 31 (returnStmt)
    ADD          reduzir usando a regra 31 (returnStmt)
    SUB          reduzir usando a regra 31 (returnStmt)
    HEADLIST     reduzir usando a regra 31 (returnStmt)
    TAILLIST     reduzir usando a regra 31 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 31 (returnStmt)
    IF           reduzir usando a regra 31 (returnStmt)
    FOR          reduzir usando a regra 31 (returnStmt)
    READ         reduzir usando a regra 31 (returnStmt)
    WRITE        reduzir usando a regra 31 (returnStmt)
    WRITELN      reduzir usando a regra 31 (returnStmt)
    RETURN       reduzir usando a regra 31 (returnStmt)
    STFUNC       reduzir usando a regra 31 (returnStmt)
    ENDFUNC      reduzir usando a regra 31 (returnStmt)
    PARENL       reduzir usando a regra 31 (returnStmt)


Estado 119

   79 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    SEMIC      reduzir usando a regra 79 (factor)


Estado 120

   60 relationalExp: relationalExp relationalOp sumExp •
   68 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 168
    SUB  deslocar, e ir ao estado 169

    OR         reduzir usando a regra 60 (relationalExp)
    AND        reduzir usando a regra 60 (relationalExp)
    SMALLER    reduzir usando a regra 60 (relationalExp)
    GREATER    reduzir usando a regra 60 (relationalExp)
    SMALLEQ    reduzir usando a regra 60 (relationalExp)
    GREATEQ    reduzir usando a regra 60 (relationalExp)
    EQUALS     reduzir usando a regra 60 (relationalExp)
    DIFFERENT  reduzir usando a regra 60 (relationalExp)
    NEG        reduzir usando a regra 60 (relationalExp)
    SEMIC      reduzir usando a regra 60 (relationalExp)

    sumOp  ir ao estado 98


Estado 121

   68 sumExp: sumExp sumOp mulExp •
   72 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 100
    DIV   deslocar, e ir ao estado 101

    ADD        reduzir usando a regra 68 (sumExp)
    SUB        reduzir usando a regra 68 (sumExp)
    OR         reduzir usando a regra 68 (sumExp)
    AND        reduzir usando a regra 68 (sumExp)
    SMALLER    reduzir usando a regra 68 (sumExp)
    GREATER    reduzir usando a regra 68 (sumExp)
    SMALLEQ    reduzir usando a regra 68 (sumExp)
    GREATEQ    reduzir usando a regra 68 (sumExp)
    EQUALS     reduzir usando a regra 68 (sumExp)
    DIFFERENT  reduzir usando a regra 68 (sumExp)
    NEG        reduzir usando a regra 68 (sumExp)
    SEMIC      reduzir usando a regra 68 (sumExp)

    mulOp  ir ao estado 102


Estado 122

   72 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 72 (mulExp)
    SUB        reduzir usando a regra 72 (mulExp)
    MULT       reduzir usando a regra 72 (mulExp)
    DIV        reduzir usando a regra 72 (mulExp)
    OR         reduzir usando a regra 72 (mulExp)
    AND        reduzir usando a regra 72 (mulExp)
    SMALLER    reduzir usando a regra 72 (mulExp)
    GREATER    reduzir usando a regra 72 (mulExp)
    SMALLEQ    reduzir usando a regra 72 (mulExp)
    GREATEQ    reduzir usando a regra 72 (mulExp)
    EQUALS     reduzir usando a regra 72 (mulExp)
    DIFFERENT  reduzir usando a regra 72 (mulExp)
    NEG        reduzir usando a regra 72 (mulExp)
    SEMIC      reduzir usando a regra 72 (mulExp)


Estado 123

   41 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 133


Estado 124

   36 appendOps: ID APPEND ID SEMIC •

    ID           reduzir usando a regra 36 (appendOps)
    TYPE         reduzir usando a regra 36 (appendOps)
    LIST         reduzir usando a regra 36 (appendOps)
    NIL          reduzir usando a regra 36 (appendOps)
    INTEGER      reduzir usando a regra 36 (appendOps)
    DECIMAL      reduzir usando a regra 36 (appendOps)
    ADD          reduzir usando a regra 36 (appendOps)
    SUB          reduzir usando a regra 36 (appendOps)
    HEADLIST     reduzir usando a regra 36 (appendOps)
    TAILLIST     reduzir usando a regra 36 (appendOps)
    DESTROYHEAD  reduzir usando a regra 36 (appendOps)
    IF           reduzir usando a regra 36 (appendOps)
    FOR          reduzir usando a regra 36 (appendOps)
    READ         reduzir usando a regra 36 (appendOps)
    WRITE        reduzir usando a regra 36 (appendOps)
    WRITELN      reduzir usando a regra 36 (appendOps)
    RETURN       reduzir usando a regra 36 (appendOps)
    STFUNC       reduzir usando a regra 36 (appendOps)
    ENDFUNC      reduzir usando a regra 36 (appendOps)
    PARENL       reduzir usando a regra 36 (appendOps)


Estado 125

   83 callParams: callParams COMMA • simpleExp

    ID       deslocar, e ir ao estado 171
    LIST     deslocar, e ir ao estado 172
    NIL      deslocar, e ir ao estado 173
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 176

    simpleExp      ir ao estado 134
    constOp        ir ao estado 177
    binLogicalExp  ir ao estado 178
    relationalExp  ir ao estado 179
    sumExp         ir ao estado 180
    sumOp          ir ao estado 181
    mulExp         ir ao estado 182
    factor         ir ao estado 183
    fCall          ir ao estado 184


Estado 126

   81 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 81 (fCall)
    SUB        reduzir usando a regra 81 (fCall)
    MULT       reduzir usando a regra 81 (fCall)
    DIV        reduzir usando a regra 81 (fCall)
    OR         reduzir usando a regra 81 (fCall)
    AND        reduzir usando a regra 81 (fCall)
    SMALLER    reduzir usando a regra 81 (fCall)
    GREATER    reduzir usando a regra 81 (fCall)
    SMALLEQ    reduzir usando a regra 81 (fCall)
    GREATEQ    reduzir usando a regra 81 (fCall)
    EQUALS     reduzir usando a regra 81 (fCall)
    DIFFERENT  reduzir usando a regra 81 (fCall)
    NEG        reduzir usando a regra 81 (fCall)
    MAP        reduzir usando a regra 81 (fCall)
    SEMIC      reduzir usando a regra 81 (fCall)


Estado 127

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 187
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 188
    IF           deslocar, e ir ao estado 189
    FOR          deslocar, e ir ao estado 190
    READ         deslocar, e ir ao estado 191
    WRITE        deslocar, e ir ao estado 192
    WRITELN      deslocar, e ir ao estado 193
    RETURN       deslocar, e ir ao estado 194
    STFUNC       deslocar, e ir ao estado 195
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 196
    simpleVarDeclaration  ir ao estado 197
    compoundStmt          ir ao estado 198
    primitiveStmt         ir ao estado 135
    exprStmt              ir ao estado 199
    condStmt              ir ao estado 200
    iterStmt              ir ao estado 201
    returnStmt            ir ao estado 202
    listStmt              ir ao estado 203
    appendOps             ir ao estado 204
    returnListOps         ir ao estado 205
    returnListOp          ir ao estado 206
    destroyHeadOps        ir ao estado 207
    mapFilterOps          ir ao estado 208
    expression            ir ao estado 209
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 210
    outOp                 ir ao estado 211
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 212


Estado 128

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 170
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    simpleExp      ir ao estado 136
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 129

   30 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 170
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    simpleExp      ir ao estado 137
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 130

   50 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 138


Estado 131

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 139


Estado 132

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 140


Estado 133

   41 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 41 (mapFilterOps)
    TYPE         reduzir usando a regra 41 (mapFilterOps)
    LIST         reduzir usando a regra 41 (mapFilterOps)
    NIL          reduzir usando a regra 41 (mapFilterOps)
    INTEGER      reduzir usando a regra 41 (mapFilterOps)
    DECIMAL      reduzir usando a regra 41 (mapFilterOps)
    ADD          reduzir usando a regra 41 (mapFilterOps)
    SUB          reduzir usando a regra 41 (mapFilterOps)
    HEADLIST     reduzir usando a regra 41 (mapFilterOps)
    TAILLIST     reduzir usando a regra 41 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 41 (mapFilterOps)
    IF           reduzir usando a regra 41 (mapFilterOps)
    FOR          reduzir usando a regra 41 (mapFilterOps)
    READ         reduzir usando a regra 41 (mapFilterOps)
    WRITE        reduzir usando a regra 41 (mapFilterOps)
    WRITELN      reduzir usando a regra 41 (mapFilterOps)
    RETURN       reduzir usando a regra 41 (mapFilterOps)
    STFUNC       reduzir usando a regra 41 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 41 (mapFilterOps)
    PARENL       reduzir usando a regra 41 (mapFilterOps)


Estado 134

   83 callParams: callParams COMMA simpleExp •

    COMMA   reduzir usando a regra 83 (callParams)
    PARENR  reduzir usando a regra 83 (callParams)


Estado 135

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 141

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    LIST         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 136

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 142


Estado 137

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 143


Estado 138

   50 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 50 (inOp)
    TYPE         reduzir usando a regra 50 (inOp)
    LIST         reduzir usando a regra 50 (inOp)
    NIL          reduzir usando a regra 50 (inOp)
    INTEGER      reduzir usando a regra 50 (inOp)
    DECIMAL      reduzir usando a regra 50 (inOp)
    ADD          reduzir usando a regra 50 (inOp)
    SUB          reduzir usando a regra 50 (inOp)
    HEADLIST     reduzir usando a regra 50 (inOp)
    TAILLIST     reduzir usando a regra 50 (inOp)
    DESTROYHEAD  reduzir usando a regra 50 (inOp)
    IF           reduzir usando a regra 50 (inOp)
    FOR          reduzir usando a regra 50 (inOp)
    READ         reduzir usando a regra 50 (inOp)
    WRITE        reduzir usando a regra 50 (inOp)
    WRITELN      reduzir usando a regra 50 (inOp)
    RETURN       reduzir usando a regra 50 (inOp)
    STFUNC       reduzir usando a regra 50 (inOp)
    ENDFUNC      reduzir usando a regra 50 (inOp)
    PARENL       reduzir usando a regra 50 (inOp)


Estado 139

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    LIST         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 140

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 52 (outOp)
    TYPE         reduzir usando a regra 52 (outOp)
    LIST         reduzir usando a regra 52 (outOp)
    NIL          reduzir usando a regra 52 (outOp)
    INTEGER      reduzir usando a regra 52 (outOp)
    DECIMAL      reduzir usando a regra 52 (outOp)
    ADD          reduzir usando a regra 52 (outOp)
    SUB          reduzir usando a regra 52 (outOp)
    HEADLIST     reduzir usando a regra 52 (outOp)
    TAILLIST     reduzir usando a regra 52 (outOp)
    DESTROYHEAD  reduzir usando a regra 52 (outOp)
    IF           reduzir usando a regra 52 (outOp)
    FOR          reduzir usando a regra 52 (outOp)
    READ         reduzir usando a regra 52 (outOp)
    WRITE        reduzir usando a regra 52 (outOp)
    WRITELN      reduzir usando a regra 52 (outOp)
    RETURN       reduzir usando a regra 52 (outOp)
    STFUNC       reduzir usando a regra 52 (outOp)
    ENDFUNC      reduzir usando a regra 52 (outOp)
    PARENL       reduzir usando a regra 52 (outOp)


Estado 141

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 153
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 154
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 144
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 142

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 145

    assignExp  ir ao estado 146


Estado 143

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 145

    assignExp  ir ao estado 147


Estado 144

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    LIST         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 145

   44 assignExp: ID • ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 213


Estado 146

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 148


Estado 147

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 149


Estado 148

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 153
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 154
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 150
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 149

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 153
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 154
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 151
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 150

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    LIST         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)


Estado 151

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    LIST         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)


Estado 152

    9 simpleVarDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 214


Estado 153

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 153
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 154
    compoundStmt          ir ao estado 42
    stmtList              ir ao estado 215
    primitiveStmt         ir ao estado 44
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 154

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 216


Estado 155

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 156

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 157

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    PARENR     reduzir usando a regra 46 (constOp)


Estado 158

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 159

   79 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    simpleExp      ir ao estado 217
    constOp        ir ao estado 160
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 160

   80 factor: constOp •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 161

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp

    OR   deslocar, e ir ao estado 218
    AND  deslocar, e ir ao estado 219
    NEG  deslocar, e ir ao estado 220

    PARENR  reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 221


Estado 162

   56 binLogicalExp: relationalExp •
   60 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 91
    GREATER    deslocar, e ir ao estado 92
    SMALLEQ    deslocar, e ir ao estado 93
    GREATEQ    deslocar, e ir ao estado 94
    EQUALS     deslocar, e ir ao estado 95
    DIFFERENT  deslocar, e ir ao estado 96

    OR      reduzir usando a regra 56 (binLogicalExp)
    AND     reduzir usando a regra 56 (binLogicalExp)
    NEG     reduzir usando a regra 56 (binLogicalExp)
    PARENR  reduzir usando a regra 56 (binLogicalExp)

    relationalOp  ir ao estado 222


Estado 163

   61 relationalExp: sumExp •
   68 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 168
    SUB  deslocar, e ir ao estado 169

    OR         reduzir usando a regra 61 (relationalExp)
    AND        reduzir usando a regra 61 (relationalExp)
    SMALLER    reduzir usando a regra 61 (relationalExp)
    GREATER    reduzir usando a regra 61 (relationalExp)
    SMALLEQ    reduzir usando a regra 61 (relationalExp)
    GREATEQ    reduzir usando a regra 61 (relationalExp)
    EQUALS     reduzir usando a regra 61 (relationalExp)
    DIFFERENT  reduzir usando a regra 61 (relationalExp)
    NEG        reduzir usando a regra 61 (relationalExp)
    PARENR     reduzir usando a regra 61 (relationalExp)

    sumOp  ir ao estado 223


Estado 164

   74 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    PARENL   deslocar, e ir ao estado 159

    constOp  ir ao estado 160
    factor   ir ao estado 224
    fCall    ir ao estado 167


Estado 165

   69 sumExp: mulExp •
   72 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 100
    DIV   deslocar, e ir ao estado 101

    ADD        reduzir usando a regra 69 (sumExp)
    SUB        reduzir usando a regra 69 (sumExp)
    OR         reduzir usando a regra 69 (sumExp)
    AND        reduzir usando a regra 69 (sumExp)
    SMALLER    reduzir usando a regra 69 (sumExp)
    GREATER    reduzir usando a regra 69 (sumExp)
    SMALLEQ    reduzir usando a regra 69 (sumExp)
    GREATEQ    reduzir usando a regra 69 (sumExp)
    EQUALS     reduzir usando a regra 69 (sumExp)
    DIFFERENT  reduzir usando a regra 69 (sumExp)
    NEG        reduzir usando a regra 69 (sumExp)
    PARENR     reduzir usando a regra 69 (sumExp)

    mulOp  ir ao estado 225


Estado 166

   73 mulExp: factor •

    ADD        reduzir usando a regra 73 (mulExp)
    SUB        reduzir usando a regra 73 (mulExp)
    MULT       reduzir usando a regra 73 (mulExp)
    DIV        reduzir usando a regra 73 (mulExp)
    OR         reduzir usando a regra 73 (mulExp)
    AND        reduzir usando a regra 73 (mulExp)
    SMALLER    reduzir usando a regra 73 (mulExp)
    GREATER    reduzir usando a regra 73 (mulExp)
    SMALLEQ    reduzir usando a regra 73 (mulExp)
    GREATEQ    reduzir usando a regra 73 (mulExp)
    EQUALS     reduzir usando a regra 73 (mulExp)
    DIFFERENT  reduzir usando a regra 73 (mulExp)
    NEG        reduzir usando a regra 73 (mulExp)
    PARENR     reduzir usando a regra 73 (mulExp)


Estado 167

   78 factor: fCall •

    ADD        reduzir usando a regra 78 (factor)
    SUB        reduzir usando a regra 78 (factor)
    MULT       reduzir usando a regra 78 (factor)
    DIV        reduzir usando a regra 78 (factor)
    OR         reduzir usando a regra 78 (factor)
    AND        reduzir usando a regra 78 (factor)
    SMALLER    reduzir usando a regra 78 (factor)
    GREATER    reduzir usando a regra 78 (factor)
    SMALLEQ    reduzir usando a regra 78 (factor)
    GREATEQ    reduzir usando a regra 78 (factor)
    EQUALS     reduzir usando a regra 78 (factor)
    DIFFERENT  reduzir usando a regra 78 (factor)
    NEG        reduzir usando a regra 78 (factor)
    PARENR     reduzir usando a regra 78 (factor)


Estado 168

   70 sumOp: ADD •

    ID       reduzir usando a regra 70 (sumOp)
    LIST     reduzir usando a regra 70 (sumOp)
    NIL      reduzir usando a regra 70 (sumOp)
    INTEGER  reduzir usando a regra 70 (sumOp)
    DECIMAL  reduzir usando a regra 70 (sumOp)
    ADD      reduzir usando a regra 70 (sumOp)
    SUB      reduzir usando a regra 70 (sumOp)
    PARENL   reduzir usando a regra 70 (sumOp)


Estado 169

   71 sumOp: SUB •

    ID       reduzir usando a regra 71 (sumOp)
    LIST     reduzir usando a regra 71 (sumOp)
    NIL      reduzir usando a regra 71 (sumOp)
    INTEGER  reduzir usando a regra 71 (sumOp)
    DECIMAL  reduzir usando a regra 71 (sumOp)
    ADD      reduzir usando a regra 71 (sumOp)
    SUB      reduzir usando a regra 71 (sumOp)
    PARENL   reduzir usando a regra 71 (sumOp)


Estado 170

   77 factor: ID •
   81 fCall: ID • PARENL callParams PARENR
   82      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 185

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    NEG        reduzir usando a regra 77 (factor)
    SEMIC      reduzir usando a regra 77 (factor)


Estado 171

   77 factor: ID •
   81 fCall: ID • PARENL callParams PARENR
   82      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 226

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    NEG        reduzir usando a regra 77 (factor)
    COMMA      reduzir usando a regra 77 (factor)
    PARENR     reduzir usando a regra 77 (factor)


Estado 172

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    COMMA      reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 173

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    COMMA      reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 174

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    COMMA      reduzir usando a regra 46 (constOp)
    PARENR     reduzir usando a regra 46 (constOp)


Estado 175

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    COMMA      reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 176

   79 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    simpleExp      ir ao estado 227
    constOp        ir ao estado 160
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 177

   80 factor: constOp •

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    COMMA      reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 178

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp

    OR   deslocar, e ir ao estado 228
    AND  deslocar, e ir ao estado 229
    NEG  deslocar, e ir ao estado 230

    COMMA   reduzir usando a regra 45 (simpleExp)
    PARENR  reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 231


Estado 179

   56 binLogicalExp: relationalExp •
   60 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 91
    GREATER    deslocar, e ir ao estado 92
    SMALLEQ    deslocar, e ir ao estado 93
    GREATEQ    deslocar, e ir ao estado 94
    EQUALS     deslocar, e ir ao estado 95
    DIFFERENT  deslocar, e ir ao estado 96

    OR      reduzir usando a regra 56 (binLogicalExp)
    AND     reduzir usando a regra 56 (binLogicalExp)
    NEG     reduzir usando a regra 56 (binLogicalExp)
    COMMA   reduzir usando a regra 56 (binLogicalExp)
    PARENR  reduzir usando a regra 56 (binLogicalExp)

    relationalOp  ir ao estado 232


Estado 180

   61 relationalExp: sumExp •
   68 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 168
    SUB  deslocar, e ir ao estado 169

    OR         reduzir usando a regra 61 (relationalExp)
    AND        reduzir usando a regra 61 (relationalExp)
    SMALLER    reduzir usando a regra 61 (relationalExp)
    GREATER    reduzir usando a regra 61 (relationalExp)
    SMALLEQ    reduzir usando a regra 61 (relationalExp)
    GREATEQ    reduzir usando a regra 61 (relationalExp)
    EQUALS     reduzir usando a regra 61 (relationalExp)
    DIFFERENT  reduzir usando a regra 61 (relationalExp)
    NEG        reduzir usando a regra 61 (relationalExp)
    COMMA      reduzir usando a regra 61 (relationalExp)
    PARENR     reduzir usando a regra 61 (relationalExp)

    sumOp  ir ao estado 233


Estado 181

   74 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 171
    LIST     deslocar, e ir ao estado 172
    NIL      deslocar, e ir ao estado 173
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    PARENL   deslocar, e ir ao estado 176

    constOp  ir ao estado 177
    factor   ir ao estado 234
    fCall    ir ao estado 184


Estado 182

   69 sumExp: mulExp •
   72 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 100
    DIV   deslocar, e ir ao estado 101

    ADD        reduzir usando a regra 69 (sumExp)
    SUB        reduzir usando a regra 69 (sumExp)
    OR         reduzir usando a regra 69 (sumExp)
    AND        reduzir usando a regra 69 (sumExp)
    SMALLER    reduzir usando a regra 69 (sumExp)
    GREATER    reduzir usando a regra 69 (sumExp)
    SMALLEQ    reduzir usando a regra 69 (sumExp)
    GREATEQ    reduzir usando a regra 69 (sumExp)
    EQUALS     reduzir usando a regra 69 (sumExp)
    DIFFERENT  reduzir usando a regra 69 (sumExp)
    NEG        reduzir usando a regra 69 (sumExp)
    COMMA      reduzir usando a regra 69 (sumExp)
    PARENR     reduzir usando a regra 69 (sumExp)

    mulOp  ir ao estado 235


Estado 183

   73 mulExp: factor •

    ADD        reduzir usando a regra 73 (mulExp)
    SUB        reduzir usando a regra 73 (mulExp)
    MULT       reduzir usando a regra 73 (mulExp)
    DIV        reduzir usando a regra 73 (mulExp)
    OR         reduzir usando a regra 73 (mulExp)
    AND        reduzir usando a regra 73 (mulExp)
    SMALLER    reduzir usando a regra 73 (mulExp)
    GREATER    reduzir usando a regra 73 (mulExp)
    SMALLEQ    reduzir usando a regra 73 (mulExp)
    GREATEQ    reduzir usando a regra 73 (mulExp)
    EQUALS     reduzir usando a regra 73 (mulExp)
    DIFFERENT  reduzir usando a regra 73 (mulExp)
    NEG        reduzir usando a regra 73 (mulExp)
    COMMA      reduzir usando a regra 73 (mulExp)
    PARENR     reduzir usando a regra 73 (mulExp)


Estado 184

   78 factor: fCall •

    ADD        reduzir usando a regra 78 (factor)
    SUB        reduzir usando a regra 78 (factor)
    MULT       reduzir usando a regra 78 (factor)
    DIV        reduzir usando a regra 78 (factor)
    OR         reduzir usando a regra 78 (factor)
    AND        reduzir usando a regra 78 (factor)
    SMALLER    reduzir usando a regra 78 (factor)
    GREATER    reduzir usando a regra 78 (factor)
    SMALLEQ    reduzir usando a regra 78 (factor)
    GREATEQ    reduzir usando a regra 78 (factor)
    EQUALS     reduzir usando a regra 78 (factor)
    DIFFERENT  reduzir usando a regra 78 (factor)
    NEG        reduzir usando a regra 78 (factor)
    COMMA      reduzir usando a regra 78 (factor)
    PARENR     reduzir usando a regra 78 (factor)


Estado 185

   81 fCall: ID PARENL • callParams PARENR
   82      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 171
    LIST     deslocar, e ir ao estado 172
    NIL      deslocar, e ir ao estado 173
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 176
    PARENR   deslocar, e ir ao estado 236

    simpleExp      ir ao estado 107
    constOp        ir ao estado 177
    binLogicalExp  ir ao estado 178
    relationalExp  ir ao estado 179
    sumExp         ir ao estado 180
    sumOp          ir ao estado 181
    mulExp         ir ao estado 182
    factor         ir ao estado 183
    fCall          ir ao estado 184
    callParams     ir ao estado 237


Estado 186

   81 fCall: ID PARENL • callParams PARENR
   82      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 171
    LIST     deslocar, e ir ao estado 172
    NIL      deslocar, e ir ao estado 173
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 176
    PARENR   deslocar, e ir ao estado 238

    simpleExp      ir ao estado 107
    constOp        ir ao estado 177
    binLogicalExp  ir ao estado 178
    relationalExp  ir ao estado 179
    sumExp         ir ao estado 180
    sumOp          ir ao estado 181
    mulExp         ir ao estado 182
    factor         ir ao estado 183
    fCall          ir ao estado 184
    callParams     ir ao estado 239


Estado 187

   36 appendOps: ID • APPEND ID SEMIC
   44 assignExp: ID • ASSIGN expression
   77 factor: ID •
   81 fCall: ID • PARENL callParams PARENR
   82      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 240
    ASSIGN  deslocar, e ir ao estado 70
    PARENL  deslocar, e ir ao estado 71

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    NEG        reduzir usando a regra 77 (factor)
    SEMIC      reduzir usando a regra 77 (factor)


Estado 188

   40 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 241


Estado 189

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 242


Estado 190

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 243


Estado 191

   50 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 244


Estado 192

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 245


Estado 193

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 246


Estado 194

   31 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 78
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    expression     ir ao estado 247
    assignExp      ir ao estado 56
    simpleExp      ir ao estado 57
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 195

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 153
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 154
    compoundStmt          ir ao estado 42
    stmtList              ir ao estado 248
    primitiveStmt         ir ao estado 44
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 196

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    LIST         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    ELSE         reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 197

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 249


Estado 198

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    LIST         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    ELSE         reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 199

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    LIST         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    ELSE         reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 200

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    LIST         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    ELSE         reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 201

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    LIST         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    ELSE         reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 202

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    LIST         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    ELSE         reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 203

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    LIST         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    ELSE         reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 204

   32 listStmt: appendOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    LIST         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    ELSE         reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 205

   33 listStmt: returnListOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    LIST         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    ELSE         reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 206

   37 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 250


Estado 207

   34 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    LIST         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    ELSE         reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 208

   35 listStmt: mapFilterOps •

    ID           reduzir usando a regra 35 (listStmt)
    TYPE         reduzir usando a regra 35 (listStmt)
    LIST         reduzir usando a regra 35 (listStmt)
    NIL          reduzir usando a regra 35 (listStmt)
    INTEGER      reduzir usando a regra 35 (listStmt)
    DECIMAL      reduzir usando a regra 35 (listStmt)
    ADD          reduzir usando a regra 35 (listStmt)
    SUB          reduzir usando a regra 35 (listStmt)
    HEADLIST     reduzir usando a regra 35 (listStmt)
    TAILLIST     reduzir usando a regra 35 (listStmt)
    DESTROYHEAD  reduzir usando a regra 35 (listStmt)
    ELSE         reduzir usando a regra 35 (listStmt)
    IF           reduzir usando a regra 35 (listStmt)
    FOR          reduzir usando a regra 35 (listStmt)
    READ         reduzir usando a regra 35 (listStmt)
    WRITE        reduzir usando a regra 35 (listStmt)
    WRITELN      reduzir usando a regra 35 (listStmt)
    RETURN       reduzir usando a regra 35 (listStmt)
    STFUNC       reduzir usando a regra 35 (listStmt)
    ENDFUNC      reduzir usando a regra 35 (listStmt)
    PARENL       reduzir usando a regra 35 (listStmt)


Estado 209

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 251


Estado 210

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    LIST         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    ELSE         reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 211

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    LIST         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    ELSE         reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 212

   41 mapFilterOps: fCall • MAP ID SEMIC
   78 factor: fCall •

    MAP  deslocar, e ir ao estado 252

    ADD        reduzir usando a regra 78 (factor)
    SUB        reduzir usando a regra 78 (factor)
    MULT       reduzir usando a regra 78 (factor)
    DIV        reduzir usando a regra 78 (factor)
    OR         reduzir usando a regra 78 (factor)
    AND        reduzir usando a regra 78 (factor)
    SMALLER    reduzir usando a regra 78 (factor)
    GREATER    reduzir usando a regra 78 (factor)
    SMALLEQ    reduzir usando a regra 78 (factor)
    GREATEQ    reduzir usando a regra 78 (factor)
    EQUALS     reduzir usando a regra 78 (factor)
    DIFFERENT  reduzir usando a regra 78 (factor)
    NEG        reduzir usando a regra 78 (factor)
    SEMIC      reduzir usando a regra 78 (factor)


Estado 213

   44 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 253
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    expression     ir ao estado 254
    assignExp      ir ao estado 255
    simpleExp      ir ao estado 256
    constOp        ir ao estado 160
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 214

    9 simpleVarDeclaration: TYPE ID •

    SEMIC  reduzir usando a regra 9 (simpleVarDeclaration)


Estado 215

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 153
    ENDFUNC      deslocar, e ir ao estado 257
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 154
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 84
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 216

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    LIST         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 217

   79 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 258


Estado 218

   57 binLogicalOp: OR •

    OR      reduzir usando a regra 57 (binLogicalOp)
    AND     reduzir usando a regra 57 (binLogicalOp)
    NEG     reduzir usando a regra 57 (binLogicalOp)
    PARENR  reduzir usando a regra 57 (binLogicalOp)


Estado 219

   58 binLogicalOp: AND •

    OR      reduzir usando a regra 58 (binLogicalOp)
    AND     reduzir usando a regra 58 (binLogicalOp)
    NEG     reduzir usando a regra 58 (binLogicalOp)
    PARENR  reduzir usando a regra 58 (binLogicalOp)


Estado 220

   59 binLogicalOp: NEG •

    OR      reduzir usando a regra 59 (binLogicalOp)
    AND     reduzir usando a regra 59 (binLogicalOp)
    NEG     reduzir usando a regra 59 (binLogicalOp)
    PARENR  reduzir usando a regra 59 (binLogicalOp)


Estado 221

   55 binLogicalExp: binLogicalExp binLogicalOp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 222

   60 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    constOp  ir ao estado 160
    sumExp   ir ao estado 259
    sumOp    ir ao estado 164
    mulExp   ir ao estado 165
    factor   ir ao estado 166
    fCall    ir ao estado 167


Estado 223

   68 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    constOp  ir ao estado 160
    sumOp    ir ao estado 164
    mulExp   ir ao estado 260
    factor   ir ao estado 166
    fCall    ir ao estado 167


Estado 224

   74 mulExp: sumOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    NEG        reduzir usando a regra 74 (mulExp)
    PARENR     reduzir usando a regra 74 (mulExp)


Estado 225

   72 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    PARENL   deslocar, e ir ao estado 159

    constOp  ir ao estado 160
    factor   ir ao estado 261
    fCall    ir ao estado 167


Estado 226

   81 fCall: ID PARENL • callParams PARENR
   82      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 171
    LIST     deslocar, e ir ao estado 172
    NIL      deslocar, e ir ao estado 173
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 176
    PARENR   deslocar, e ir ao estado 262

    simpleExp      ir ao estado 107
    constOp        ir ao estado 177
    binLogicalExp  ir ao estado 178
    relationalExp  ir ao estado 179
    sumExp         ir ao estado 180
    sumOp          ir ao estado 181
    mulExp         ir ao estado 182
    factor         ir ao estado 183
    fCall          ir ao estado 184
    callParams     ir ao estado 263


Estado 227

   79 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 264


Estado 228

   57 binLogicalOp: OR •

    OR      reduzir usando a regra 57 (binLogicalOp)
    AND     reduzir usando a regra 57 (binLogicalOp)
    NEG     reduzir usando a regra 57 (binLogicalOp)
    COMMA   reduzir usando a regra 57 (binLogicalOp)
    PARENR  reduzir usando a regra 57 (binLogicalOp)


Estado 229

   58 binLogicalOp: AND •

    OR      reduzir usando a regra 58 (binLogicalOp)
    AND     reduzir usando a regra 58 (binLogicalOp)
    NEG     reduzir usando a regra 58 (binLogicalOp)
    COMMA   reduzir usando a regra 58 (binLogicalOp)
    PARENR  reduzir usando a regra 58 (binLogicalOp)


Estado 230

   59 binLogicalOp: NEG •

    OR      reduzir usando a regra 59 (binLogicalOp)
    AND     reduzir usando a regra 59 (binLogicalOp)
    NEG     reduzir usando a regra 59 (binLogicalOp)
    COMMA   reduzir usando a regra 59 (binLogicalOp)
    PARENR  reduzir usando a regra 59 (binLogicalOp)


Estado 231

   55 binLogicalExp: binLogicalExp binLogicalOp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    COMMA   reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 232

   60 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 171
    LIST     deslocar, e ir ao estado 172
    NIL      deslocar, e ir ao estado 173
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 176

    constOp  ir ao estado 177
    sumExp   ir ao estado 265
    sumOp    ir ao estado 181
    mulExp   ir ao estado 182
    factor   ir ao estado 183
    fCall    ir ao estado 184


Estado 233

   68 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 171
    LIST     deslocar, e ir ao estado 172
    NIL      deslocar, e ir ao estado 173
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 176

    constOp  ir ao estado 177
    sumOp    ir ao estado 181
    mulExp   ir ao estado 266
    factor   ir ao estado 183
    fCall    ir ao estado 184


Estado 234

   74 mulExp: sumOp factor •

    ADD        reduzir usando a regra 74 (mulExp)
    SUB        reduzir usando a regra 74 (mulExp)
    MULT       reduzir usando a regra 74 (mulExp)
    DIV        reduzir usando a regra 74 (mulExp)
    OR         reduzir usando a regra 74 (mulExp)
    AND        reduzir usando a regra 74 (mulExp)
    SMALLER    reduzir usando a regra 74 (mulExp)
    GREATER    reduzir usando a regra 74 (mulExp)
    SMALLEQ    reduzir usando a regra 74 (mulExp)
    GREATEQ    reduzir usando a regra 74 (mulExp)
    EQUALS     reduzir usando a regra 74 (mulExp)
    DIFFERENT  reduzir usando a regra 74 (mulExp)
    NEG        reduzir usando a regra 74 (mulExp)
    COMMA      reduzir usando a regra 74 (mulExp)
    PARENR     reduzir usando a regra 74 (mulExp)


Estado 235

   72 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 171
    LIST     deslocar, e ir ao estado 172
    NIL      deslocar, e ir ao estado 173
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    PARENL   deslocar, e ir ao estado 176

    constOp  ir ao estado 177
    factor   ir ao estado 267
    fCall    ir ao estado 184


Estado 236

   82 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 82 (fCall)
    SUB        reduzir usando a regra 82 (fCall)
    MULT       reduzir usando a regra 82 (fCall)
    DIV        reduzir usando a regra 82 (fCall)
    OR         reduzir usando a regra 82 (fCall)
    AND        reduzir usando a regra 82 (fCall)
    SMALLER    reduzir usando a regra 82 (fCall)
    GREATER    reduzir usando a regra 82 (fCall)
    SMALLEQ    reduzir usando a regra 82 (fCall)
    GREATEQ    reduzir usando a regra 82 (fCall)
    EQUALS     reduzir usando a regra 82 (fCall)
    DIFFERENT  reduzir usando a regra 82 (fCall)
    NEG        reduzir usando a regra 82 (fCall)
    SEMIC      reduzir usando a regra 82 (fCall)


Estado 237

   81 fCall: ID PARENL callParams • PARENR
   83 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 125
    PARENR  deslocar, e ir ao estado 268


Estado 238

   82 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 82 (fCall)
    SUB        reduzir usando a regra 82 (fCall)
    MULT       reduzir usando a regra 82 (fCall)
    DIV        reduzir usando a regra 82 (fCall)
    OR         reduzir usando a regra 82 (fCall)
    AND        reduzir usando a regra 82 (fCall)
    SMALLER    reduzir usando a regra 82 (fCall)
    GREATER    reduzir usando a regra 82 (fCall)
    SMALLEQ    reduzir usando a regra 82 (fCall)
    GREATEQ    reduzir usando a regra 82 (fCall)
    EQUALS     reduzir usando a regra 82 (fCall)
    DIFFERENT  reduzir usando a regra 82 (fCall)
    NEG        reduzir usando a regra 82 (fCall)
    PARENR     reduzir usando a regra 82 (fCall)


Estado 239

   81 fCall: ID PARENL callParams • PARENR
   83 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 125
    PARENR  deslocar, e ir ao estado 269


Estado 240

   36 appendOps: ID APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 270


Estado 241

   40 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 271


Estado 242

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    simpleExp      ir ao estado 272
    constOp        ir ao estado 160
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 243

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 78
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    assignExp      ir ao estado 273
    simpleExp      ir ao estado 274
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 244

   50 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 275


Estado 245

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    STRING   deslocar, e ir ao estado 114
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    simpleExp      ir ao estado 115
    constOp        ir ao estado 160
    outConst       ir ao estado 276
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 246

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 155
    STRING   deslocar, e ir ao estado 114
    NIL      deslocar, e ir ao estado 156
    INTEGER  deslocar, e ir ao estado 157
    DECIMAL  deslocar, e ir ao estado 158
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 159

    simpleExp      ir ao estado 115
    constOp        ir ao estado 160
    outConst       ir ao estado 277
    binLogicalExp  ir ao estado 161
    relationalExp  ir ao estado 162
    sumExp         ir ao estado 163
    sumOp          ir ao estado 164
    mulExp         ir ao estado 165
    factor         ir ao estado 166
    fCall          ir ao estado 167


Estado 247

   31 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 278


Estado 248

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 153
    ENDFUNC      deslocar, e ir ao estado 279
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 154
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 84
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 249

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    LIST         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    ELSE         reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 250

   37 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 37 (returnListOps)
    TYPE         reduzir usando a regra 37 (returnListOps)
    LIST         reduzir usando a regra 37 (returnListOps)
    NIL          reduzir usando a regra 37 (returnListOps)
    INTEGER      reduzir usando a regra 37 (returnListOps)
    DECIMAL      reduzir usando a regra 37 (returnListOps)
    ADD          reduzir usando a regra 37 (returnListOps)
    SUB          reduzir usando a regra 37 (returnListOps)
    HEADLIST     reduzir usando a regra 37 (returnListOps)
    TAILLIST     reduzir usando a regra 37 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 37 (returnListOps)
    ELSE         reduzir usando a regra 37 (returnListOps)
    IF           reduzir usando a regra 37 (returnListOps)
    FOR          reduzir usando a regra 37 (returnListOps)
    READ         reduzir usando a regra 37 (returnListOps)
    WRITE        reduzir usando a regra 37 (returnListOps)
    WRITELN      reduzir usando a regra 37 (returnListOps)
    RETURN       reduzir usando a regra 37 (returnListOps)
    STFUNC       reduzir usando a regra 37 (returnListOps)
    ENDFUNC      reduzir usando a regra 37 (returnListOps)
    PARENL       reduzir usando a regra 37 (returnListOps)


Estado 251

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    LIST         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    ELSE         reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 252

   41 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 280


Estado 253

   44 assignExp: ID • ASSIGN expression
   77 factor: ID •
   81 fCall: ID • PARENL callParams PARENR
   82      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 213
    PARENL  deslocar, e ir ao estado 186

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    NEG        reduzir usando a regra 77 (factor)
    PARENR     reduzir usando a regra 77 (factor)


Estado 254

   44 assignExp: ID ASSIGN expression •

    PARENR  reduzir usando a regra 44 (assignExp)


Estado 255

   42 expression: assignExp •

    PARENR  reduzir usando a regra 42 (expression)


Estado 256

   43 expression: simpleExp •

    PARENR  reduzir usando a regra 43 (expression)


Estado 257

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    LIST         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 258

   79 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 259

   60 relationalExp: relationalExp relationalOp sumExp •
   68 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 168
    SUB  deslocar, e ir ao estado 169

    OR         reduzir usando a regra 60 (relationalExp)
    AND        reduzir usando a regra 60 (relationalExp)
    SMALLER    reduzir usando a regra 60 (relationalExp)
    GREATER    reduzir usando a regra 60 (relationalExp)
    SMALLEQ    reduzir usando a regra 60 (relationalExp)
    GREATEQ    reduzir usando a regra 60 (relationalExp)
    EQUALS     reduzir usando a regra 60 (relationalExp)
    DIFFERENT  reduzir usando a regra 60 (relationalExp)
    NEG        reduzir usando a regra 60 (relationalExp)
    PARENR     reduzir usando a regra 60 (relationalExp)

    sumOp  ir ao estado 223


Estado 260

   68 sumExp: sumExp sumOp mulExp •
   72 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 100
    DIV   deslocar, e ir ao estado 101

    ADD        reduzir usando a regra 68 (sumExp)
    SUB        reduzir usando a regra 68 (sumExp)
    OR         reduzir usando a regra 68 (sumExp)
    AND        reduzir usando a regra 68 (sumExp)
    SMALLER    reduzir usando a regra 68 (sumExp)
    GREATER    reduzir usando a regra 68 (sumExp)
    SMALLEQ    reduzir usando a regra 68 (sumExp)
    GREATEQ    reduzir usando a regra 68 (sumExp)
    EQUALS     reduzir usando a regra 68 (sumExp)
    DIFFERENT  reduzir usando a regra 68 (sumExp)
    NEG        reduzir usando a regra 68 (sumExp)
    PARENR     reduzir usando a regra 68 (sumExp)

    mulOp  ir ao estado 225


Estado 261

   72 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 72 (mulExp)
    SUB        reduzir usando a regra 72 (mulExp)
    MULT       reduzir usando a regra 72 (mulExp)
    DIV        reduzir usando a regra 72 (mulExp)
    OR         reduzir usando a regra 72 (mulExp)
    AND        reduzir usando a regra 72 (mulExp)
    SMALLER    reduzir usando a regra 72 (mulExp)
    GREATER    reduzir usando a regra 72 (mulExp)
    SMALLEQ    reduzir usando a regra 72 (mulExp)
    GREATEQ    reduzir usando a regra 72 (mulExp)
    EQUALS     reduzir usando a regra 72 (mulExp)
    DIFFERENT  reduzir usando a regra 72 (mulExp)
    NEG        reduzir usando a regra 72 (mulExp)
    PARENR     reduzir usando a regra 72 (mulExp)


Estado 262

   82 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 82 (fCall)
    SUB        reduzir usando a regra 82 (fCall)
    MULT       reduzir usando a regra 82 (fCall)
    DIV        reduzir usando a regra 82 (fCall)
    OR         reduzir usando a regra 82 (fCall)
    AND        reduzir usando a regra 82 (fCall)
    SMALLER    reduzir usando a regra 82 (fCall)
    GREATER    reduzir usando a regra 82 (fCall)
    SMALLEQ    reduzir usando a regra 82 (fCall)
    GREATEQ    reduzir usando a regra 82 (fCall)
    EQUALS     reduzir usando a regra 82 (fCall)
    DIFFERENT  reduzir usando a regra 82 (fCall)
    NEG        reduzir usando a regra 82 (fCall)
    COMMA      reduzir usando a regra 82 (fCall)
    PARENR     reduzir usando a regra 82 (fCall)


Estado 263

   81 fCall: ID PARENL callParams • PARENR
   83 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 125
    PARENR  deslocar, e ir ao estado 281


Estado 264

   79 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    NEG        reduzir usando a regra 79 (factor)
    COMMA      reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 265

   60 relationalExp: relationalExp relationalOp sumExp •
   68 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 168
    SUB  deslocar, e ir ao estado 169

    OR         reduzir usando a regra 60 (relationalExp)
    AND        reduzir usando a regra 60 (relationalExp)
    SMALLER    reduzir usando a regra 60 (relationalExp)
    GREATER    reduzir usando a regra 60 (relationalExp)
    SMALLEQ    reduzir usando a regra 60 (relationalExp)
    GREATEQ    reduzir usando a regra 60 (relationalExp)
    EQUALS     reduzir usando a regra 60 (relationalExp)
    DIFFERENT  reduzir usando a regra 60 (relationalExp)
    NEG        reduzir usando a regra 60 (relationalExp)
    COMMA      reduzir usando a regra 60 (relationalExp)
    PARENR     reduzir usando a regra 60 (relationalExp)

    sumOp  ir ao estado 233


Estado 266

   68 sumExp: sumExp sumOp mulExp •
   72 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 100
    DIV   deslocar, e ir ao estado 101

    ADD        reduzir usando a regra 68 (sumExp)
    SUB        reduzir usando a regra 68 (sumExp)
    OR         reduzir usando a regra 68 (sumExp)
    AND        reduzir usando a regra 68 (sumExp)
    SMALLER    reduzir usando a regra 68 (sumExp)
    GREATER    reduzir usando a regra 68 (sumExp)
    SMALLEQ    reduzir usando a regra 68 (sumExp)
    GREATEQ    reduzir usando a regra 68 (sumExp)
    EQUALS     reduzir usando a regra 68 (sumExp)
    DIFFERENT  reduzir usando a regra 68 (sumExp)
    NEG        reduzir usando a regra 68 (sumExp)
    COMMA      reduzir usando a regra 68 (sumExp)
    PARENR     reduzir usando a regra 68 (sumExp)

    mulOp  ir ao estado 235


Estado 267

   72 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 72 (mulExp)
    SUB        reduzir usando a regra 72 (mulExp)
    MULT       reduzir usando a regra 72 (mulExp)
    DIV        reduzir usando a regra 72 (mulExp)
    OR         reduzir usando a regra 72 (mulExp)
    AND        reduzir usando a regra 72 (mulExp)
    SMALLER    reduzir usando a regra 72 (mulExp)
    GREATER    reduzir usando a regra 72 (mulExp)
    SMALLEQ    reduzir usando a regra 72 (mulExp)
    GREATEQ    reduzir usando a regra 72 (mulExp)
    EQUALS     reduzir usando a regra 72 (mulExp)
    DIFFERENT  reduzir usando a regra 72 (mulExp)
    NEG        reduzir usando a regra 72 (mulExp)
    COMMA      reduzir usando a regra 72 (mulExp)
    PARENR     reduzir usando a regra 72 (mulExp)


Estado 268

   81 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 81 (fCall)
    SUB        reduzir usando a regra 81 (fCall)
    MULT       reduzir usando a regra 81 (fCall)
    DIV        reduzir usando a regra 81 (fCall)
    OR         reduzir usando a regra 81 (fCall)
    AND        reduzir usando a regra 81 (fCall)
    SMALLER    reduzir usando a regra 81 (fCall)
    GREATER    reduzir usando a regra 81 (fCall)
    SMALLEQ    reduzir usando a regra 81 (fCall)
    GREATEQ    reduzir usando a regra 81 (fCall)
    EQUALS     reduzir usando a regra 81 (fCall)
    DIFFERENT  reduzir usando a regra 81 (fCall)
    NEG        reduzir usando a regra 81 (fCall)
    SEMIC      reduzir usando a regra 81 (fCall)


Estado 269

   81 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 81 (fCall)
    SUB        reduzir usando a regra 81 (fCall)
    MULT       reduzir usando a regra 81 (fCall)
    DIV        reduzir usando a regra 81 (fCall)
    OR         reduzir usando a regra 81 (fCall)
    AND        reduzir usando a regra 81 (fCall)
    SMALLER    reduzir usando a regra 81 (fCall)
    GREATER    reduzir usando a regra 81 (fCall)
    SMALLEQ    reduzir usando a regra 81 (fCall)
    GREATEQ    reduzir usando a regra 81 (fCall)
    EQUALS     reduzir usando a regra 81 (fCall)
    DIFFERENT  reduzir usando a regra 81 (fCall)
    NEG        reduzir usando a regra 81 (fCall)
    PARENR     reduzir usando a regra 81 (fCall)


Estado 270

   36 appendOps: ID APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 282


Estado 271

   40 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 40 (destroyHeadOps)
    TYPE         reduzir usando a regra 40 (destroyHeadOps)
    LIST         reduzir usando a regra 40 (destroyHeadOps)
    NIL          reduzir usando a regra 40 (destroyHeadOps)
    INTEGER      reduzir usando a regra 40 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 40 (destroyHeadOps)
    ADD          reduzir usando a regra 40 (destroyHeadOps)
    SUB          reduzir usando a regra 40 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 40 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 40 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 40 (destroyHeadOps)
    ELSE         reduzir usando a regra 40 (destroyHeadOps)
    IF           reduzir usando a regra 40 (destroyHeadOps)
    FOR          reduzir usando a regra 40 (destroyHeadOps)
    READ         reduzir usando a regra 40 (destroyHeadOps)
    WRITE        reduzir usando a regra 40 (destroyHeadOps)
    WRITELN      reduzir usando a regra 40 (destroyHeadOps)
    RETURN       reduzir usando a regra 40 (destroyHeadOps)
    STFUNC       reduzir usando a regra 40 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 40 (destroyHeadOps)
    PARENL       reduzir usando a regra 40 (destroyHeadOps)


Estado 272

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 283


Estado 273

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 284


Estado 274

   30 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 285


Estado 275

   50 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 286


Estado 276

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 287


Estado 277

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 288


Estado 278

   31 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 31 (returnStmt)
    TYPE         reduzir usando a regra 31 (returnStmt)
    LIST         reduzir usando a regra 31 (returnStmt)
    NIL          reduzir usando a regra 31 (returnStmt)
    INTEGER      reduzir usando a regra 31 (returnStmt)
    DECIMAL      reduzir usando a regra 31 (returnStmt)
    ADD          reduzir usando a regra 31 (returnStmt)
    SUB          reduzir usando a regra 31 (returnStmt)
    HEADLIST     reduzir usando a regra 31 (returnStmt)
    TAILLIST     reduzir usando a regra 31 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 31 (returnStmt)
    ELSE         reduzir usando a regra 31 (returnStmt)
    IF           reduzir usando a regra 31 (returnStmt)
    FOR          reduzir usando a regra 31 (returnStmt)
    READ         reduzir usando a regra 31 (returnStmt)
    WRITE        reduzir usando a regra 31 (returnStmt)
    WRITELN      reduzir usando a regra 31 (returnStmt)
    RETURN       reduzir usando a regra 31 (returnStmt)
    STFUNC       reduzir usando a regra 31 (returnStmt)
    ENDFUNC      reduzir usando a regra 31 (returnStmt)
    PARENL       reduzir usando a regra 31 (returnStmt)


Estado 279

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    LIST         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    ELSE         reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 280

   41 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 289


Estado 281

   81 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 81 (fCall)
    SUB        reduzir usando a regra 81 (fCall)
    MULT       reduzir usando a regra 81 (fCall)
    DIV        reduzir usando a regra 81 (fCall)
    OR         reduzir usando a regra 81 (fCall)
    AND        reduzir usando a regra 81 (fCall)
    SMALLER    reduzir usando a regra 81 (fCall)
    GREATER    reduzir usando a regra 81 (fCall)
    SMALLEQ    reduzir usando a regra 81 (fCall)
    GREATEQ    reduzir usando a regra 81 (fCall)
    EQUALS     reduzir usando a regra 81 (fCall)
    DIFFERENT  reduzir usando a regra 81 (fCall)
    NEG        reduzir usando a regra 81 (fCall)
    COMMA      reduzir usando a regra 81 (fCall)
    PARENR     reduzir usando a regra 81 (fCall)


Estado 282

   36 appendOps: ID APPEND ID SEMIC •

    ID           reduzir usando a regra 36 (appendOps)
    TYPE         reduzir usando a regra 36 (appendOps)
    LIST         reduzir usando a regra 36 (appendOps)
    NIL          reduzir usando a regra 36 (appendOps)
    INTEGER      reduzir usando a regra 36 (appendOps)
    DECIMAL      reduzir usando a regra 36 (appendOps)
    ADD          reduzir usando a regra 36 (appendOps)
    SUB          reduzir usando a regra 36 (appendOps)
    HEADLIST     reduzir usando a regra 36 (appendOps)
    TAILLIST     reduzir usando a regra 36 (appendOps)
    DESTROYHEAD  reduzir usando a regra 36 (appendOps)
    ELSE         reduzir usando a regra 36 (appendOps)
    IF           reduzir usando a regra 36 (appendOps)
    FOR          reduzir usando a regra 36 (appendOps)
    READ         reduzir usando a regra 36 (appendOps)
    WRITE        reduzir usando a regra 36 (appendOps)
    WRITELN      reduzir usando a regra 36 (appendOps)
    RETURN       reduzir usando a regra 36 (appendOps)
    STFUNC       reduzir usando a regra 36 (appendOps)
    ENDFUNC      reduzir usando a regra 36 (appendOps)
    PARENL       reduzir usando a regra 36 (appendOps)


Estado 283

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 187
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 188
    IF           deslocar, e ir ao estado 189
    FOR          deslocar, e ir ao estado 190
    READ         deslocar, e ir ao estado 191
    WRITE        deslocar, e ir ao estado 192
    WRITELN      deslocar, e ir ao estado 193
    RETURN       deslocar, e ir ao estado 194
    STFUNC       deslocar, e ir ao estado 195
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 196
    simpleVarDeclaration  ir ao estado 197
    compoundStmt          ir ao estado 198
    primitiveStmt         ir ao estado 290
    exprStmt              ir ao estado 199
    condStmt              ir ao estado 200
    iterStmt              ir ao estado 201
    returnStmt            ir ao estado 202
    listStmt              ir ao estado 203
    appendOps             ir ao estado 204
    returnListOps         ir ao estado 205
    returnListOp          ir ao estado 206
    destroyHeadOps        ir ao estado 207
    mapFilterOps          ir ao estado 208
    expression            ir ao estado 209
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 210
    outOp                 ir ao estado 211
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 212


Estado 284

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 170
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    simpleExp      ir ao estado 291
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 285

   30 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 170
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    simpleExp      ir ao estado 292
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 286

   50 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 293


Estado 287

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 294


Estado 288

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 295


Estado 289

   41 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 41 (mapFilterOps)
    TYPE         reduzir usando a regra 41 (mapFilterOps)
    LIST         reduzir usando a regra 41 (mapFilterOps)
    NIL          reduzir usando a regra 41 (mapFilterOps)
    INTEGER      reduzir usando a regra 41 (mapFilterOps)
    DECIMAL      reduzir usando a regra 41 (mapFilterOps)
    ADD          reduzir usando a regra 41 (mapFilterOps)
    SUB          reduzir usando a regra 41 (mapFilterOps)
    HEADLIST     reduzir usando a regra 41 (mapFilterOps)
    TAILLIST     reduzir usando a regra 41 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 41 (mapFilterOps)
    ELSE         reduzir usando a regra 41 (mapFilterOps)
    IF           reduzir usando a regra 41 (mapFilterOps)
    FOR          reduzir usando a regra 41 (mapFilterOps)
    READ         reduzir usando a regra 41 (mapFilterOps)
    WRITE        reduzir usando a regra 41 (mapFilterOps)
    WRITELN      reduzir usando a regra 41 (mapFilterOps)
    RETURN       reduzir usando a regra 41 (mapFilterOps)
    STFUNC       reduzir usando a regra 41 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 41 (mapFilterOps)
    PARENL       reduzir usando a regra 41 (mapFilterOps)


Estado 290

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 296

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    LIST         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 291

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 297


Estado 292

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 298


Estado 293

   50 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 50 (inOp)
    TYPE         reduzir usando a regra 50 (inOp)
    LIST         reduzir usando a regra 50 (inOp)
    NIL          reduzir usando a regra 50 (inOp)
    INTEGER      reduzir usando a regra 50 (inOp)
    DECIMAL      reduzir usando a regra 50 (inOp)
    ADD          reduzir usando a regra 50 (inOp)
    SUB          reduzir usando a regra 50 (inOp)
    HEADLIST     reduzir usando a regra 50 (inOp)
    TAILLIST     reduzir usando a regra 50 (inOp)
    DESTROYHEAD  reduzir usando a regra 50 (inOp)
    ELSE         reduzir usando a regra 50 (inOp)
    IF           reduzir usando a regra 50 (inOp)
    FOR          reduzir usando a regra 50 (inOp)
    READ         reduzir usando a regra 50 (inOp)
    WRITE        reduzir usando a regra 50 (inOp)
    WRITELN      reduzir usando a regra 50 (inOp)
    RETURN       reduzir usando a regra 50 (inOp)
    STFUNC       reduzir usando a regra 50 (inOp)
    ENDFUNC      reduzir usando a regra 50 (inOp)
    PARENL       reduzir usando a regra 50 (inOp)


Estado 294

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    LIST         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    ELSE         reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 295

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 52 (outOp)
    TYPE         reduzir usando a regra 52 (outOp)
    LIST         reduzir usando a regra 52 (outOp)
    NIL          reduzir usando a regra 52 (outOp)
    INTEGER      reduzir usando a regra 52 (outOp)
    DECIMAL      reduzir usando a regra 52 (outOp)
    ADD          reduzir usando a regra 52 (outOp)
    SUB          reduzir usando a regra 52 (outOp)
    HEADLIST     reduzir usando a regra 52 (outOp)
    TAILLIST     reduzir usando a regra 52 (outOp)
    DESTROYHEAD  reduzir usando a regra 52 (outOp)
    ELSE         reduzir usando a regra 52 (outOp)
    IF           reduzir usando a regra 52 (outOp)
    FOR          reduzir usando a regra 52 (outOp)
    READ         reduzir usando a regra 52 (outOp)
    WRITE        reduzir usando a regra 52 (outOp)
    WRITELN      reduzir usando a regra 52 (outOp)
    RETURN       reduzir usando a regra 52 (outOp)
    STFUNC       reduzir usando a regra 52 (outOp)
    ENDFUNC      reduzir usando a regra 52 (outOp)
    PARENL       reduzir usando a regra 52 (outOp)


Estado 296

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 187
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 188
    IF           deslocar, e ir ao estado 189
    FOR          deslocar, e ir ao estado 190
    READ         deslocar, e ir ao estado 191
    WRITE        deslocar, e ir ao estado 192
    WRITELN      deslocar, e ir ao estado 193
    RETURN       deslocar, e ir ao estado 194
    STFUNC       deslocar, e ir ao estado 195
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 196
    simpleVarDeclaration  ir ao estado 197
    compoundStmt          ir ao estado 198
    primitiveStmt         ir ao estado 299
    exprStmt              ir ao estado 199
    condStmt              ir ao estado 200
    iterStmt              ir ao estado 201
    returnStmt            ir ao estado 202
    listStmt              ir ao estado 203
    appendOps             ir ao estado 204
    returnListOps         ir ao estado 205
    returnListOp          ir ao estado 206
    destroyHeadOps        ir ao estado 207
    mapFilterOps          ir ao estado 208
    expression            ir ao estado 209
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 210
    outOp                 ir ao estado 211
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 212


Estado 297

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 145

    assignExp  ir ao estado 300


Estado 298

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 145

    assignExp  ir ao estado 301


Estado 299

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    LIST         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    ELSE         reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 300

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 302


Estado 301

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 303


Estado 302

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 187
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 188
    IF           deslocar, e ir ao estado 189
    FOR          deslocar, e ir ao estado 190
    READ         deslocar, e ir ao estado 191
    WRITE        deslocar, e ir ao estado 192
    WRITELN      deslocar, e ir ao estado 193
    RETURN       deslocar, e ir ao estado 194
    STFUNC       deslocar, e ir ao estado 195
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 196
    simpleVarDeclaration  ir ao estado 197
    compoundStmt          ir ao estado 198
    primitiveStmt         ir ao estado 304
    exprStmt              ir ao estado 199
    condStmt              ir ao estado 200
    iterStmt              ir ao estado 201
    returnStmt            ir ao estado 202
    listStmt              ir ao estado 203
    appendOps             ir ao estado 204
    returnListOps         ir ao estado 205
    returnListOp          ir ao estado 206
    destroyHeadOps        ir ao estado 207
    mapFilterOps          ir ao estado 208
    expression            ir ao estado 209
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 210
    outOp                 ir ao estado 211
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 212


Estado 303

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 187
    TYPE         deslocar, e ir ao estado 152
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 188
    IF           deslocar, e ir ao estado 189
    FOR          deslocar, e ir ao estado 190
    READ         deslocar, e ir ao estado 191
    WRITE        deslocar, e ir ao estado 192
    WRITELN      deslocar, e ir ao estado 193
    RETURN       deslocar, e ir ao estado 194
    STFUNC       deslocar, e ir ao estado 195
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 196
    simpleVarDeclaration  ir ao estado 197
    compoundStmt          ir ao estado 198
    primitiveStmt         ir ao estado 305
    exprStmt              ir ao estado 199
    condStmt              ir ao estado 200
    iterStmt              ir ao estado 201
    returnStmt            ir ao estado 202
    listStmt              ir ao estado 203
    appendOps             ir ao estado 204
    returnListOps         ir ao estado 205
    returnListOp          ir ao estado 206
    destroyHeadOps        ir ao estado 207
    mapFilterOps          ir ao estado 208
    expression            ir ao estado 209
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 210
    outOp                 ir ao estado 211
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 212


Estado 304

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    LIST         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    ELSE         reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)


Estado 305

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    LIST         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    ELSE         reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)
