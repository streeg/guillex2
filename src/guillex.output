Terminals unused in grammar

    DESTROYHEAD


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration
    4                | error

    5 declaration: varDeclaration
    6            | funcDeclaration

    7 varDeclaration: simpleVarDeclaration SEMIC

    8 $@1: %empty

    9 $@2: %empty

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC

   11 $@3: %empty

   12 $@4: %empty

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC

   14 simpleVarDeclaration: TYPE ID

   15 params: params COMMA param
   16       | param
   17       | error

   18 param: TYPE ID

   19 compoundStmt: STFUNC stmtList ENDFUNC

   20 stmtList: stmtList primitiveStmt
   21         | primitiveStmt
   22         | error

   23 primitiveStmt: exprStmt
   24              | compoundStmt
   25              | condStmt
   26              | iterStmt
   27              | returnStmt
   28              | inOp
   29              | outOp
   30              | varDeclaration

   31 exprStmt: expression SEMIC

   32 condStmt: ifStmt primitiveStmt
   33         | ifStmt primitiveStmt elseStmt
   34         | ifStmt STFUNC ENDFUNC
   35         | ifStmt STFUNC ENDFUNC elseStmt

   36 ifStmt: IF PARENL simpleExp PARENR

   37 $@5: %empty

   38 elseStmt: ELSE $@5 primitiveStmt

   39 $@6: %empty

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

   41 $@7: %empty

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

   43 returnStmt: RETURN expression SEMIC

   44 expression: assignExp
   45           | simpleExp

   46 assignExp: ID ASSIGN expression

   47 simpleExp: binLogicalExp
   48          | binListExp

   49 inOp: READ PARENL ID PARENR SEMIC
   50     | READ PARENL PARENR SEMIC

   51 outOp: WRITE PARENL outConst PARENR SEMIC
   52      | WRITELN PARENL outConst PARENR SEMIC

   53 outConst: STRING
   54         | simpleExp

   55 binListExp: factor APPEND factor
   56           | factor MAP factor
   57           | factor FILTER factor

   58 unaryListExp: HEADLIST factor
   59             | TAILLIST factor

   60 binLogicalExp: binLogicalExp binLogicalOp relationalExp
   61              | relationalExp

   62 binLogicalOp: OR
   63             | AND

   64 relationalExp: relationalExp relationalOp sumExp
   65              | sumExp

   66 relationalOp: SMALLER
   67             | GREATER
   68             | SMALLEQ
   69             | GREATEQ
   70             | EQUALS
   71             | DIFFERENT

   72 sumExp: sumExp ADD mulExp
   73       | sumExp SUB mulExp
   74       | mulExp

   75 mulExp: mulExp MULT factor
   76       | mulExp DIV factor
   77       | factor
   78       | ADD factor
   79       | SUB factor
   80       | unaryListExp

   81 factor: ID
   82       | fCall
   83       | PARENL simpleExp PARENR
   84       | INTEGER
   85       | DECIMAL
   86       | NIL
   87       | ERRORTOKEN

   88 fCall: ID PARENL callParams PARENR
   89      | ID PARENL PARENR

   90 callParams: callParams COMMA simpleExp
   91           | simpleExp


Terminals, with rules where they appear

    $end (0) 0
    error <treeNode> (256) 4 17 22
    ID <str> (258) 10 13 14 18 46 49 81 88 89
    TYPE <str> (259) 10 13 14 18
    STRING <str> (260) 53
    NIL <str> (261) 86
    INTEGER <integer> (262) 84
    DECIMAL <dec> (263) 85
    ERRORTOKEN <str> (264) 87
    THEN <str> (265)
    ELSE <str> (266) 38
    ADD <str> (267) 72 78
    SUB <str> (268) 73 79
    MULT <str> (269) 75
    DIV <str> (270) 76
    OR <str> (271) 62
    AND <str> (272) 63
    SMALLER <str> (273) 66
    GREATER <str> (274) 67
    SMALLEQ <str> (275) 68
    GREATEQ <str> (276) 69
    EQUALS <str> (277) 70
    DIFFERENT <str> (278) 71
    APPEND <str> (279) 55
    HEADLIST <str> (280) 58
    TAILLIST <str> (281) 59
    DESTROYHEAD <str> (282)
    FILTER <str> (283) 57
    ASSIGN <str> (284) 46
    MAP <str> (285) 56
    IF <str> (286) 36
    FOR <str> (287) 40 42
    READ <str> (288) 49 50
    WRITE <str> (289) 51
    WRITELN <str> (290) 52
    RETURN <str> (291) 43
    SEMIC <str> (292) 7 31 40 42 43 49 50 51 52
    COMMA <str> (293) 15 90
    STFUNC <str> (294) 10 13 19 34 35
    ENDFUNC <str> (295) 10 13 19 34 35
    PARENL <str> (296) 10 13 36 40 42 49 50 51 52 83 88 89
    PARENR <str> (297) 10 13 36 40 42 49 50 51 52 83 88 89


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <treeNode> (44)
        on left: 1
        on right: 0
    declarationList <treeNode> (45)
        on left: 2 3 4
        on right: 1 2
    declaration <treeNode> (46)
        on left: 5 6
        on right: 2 3
    varDeclaration <treeNode> (47)
        on left: 7
        on right: 5 30
    funcDeclaration <treeNode> (48)
        on left: 10 13
        on right: 6
    $@1 (49)
        on left: 8
        on right: 10
    $@2 (50)
        on left: 9
        on right: 10
    $@3 (51)
        on left: 11
        on right: 13
    $@4 (52)
        on left: 12
        on right: 13
    simpleVarDeclaration <treeNode> (53)
        on left: 14
        on right: 7
    params <treeNode> (54)
        on left: 15 16 17
        on right: 10 15
    param <treeNode> (55)
        on left: 18
        on right: 15 16
    compoundStmt <treeNode> (56)
        on left: 19
        on right: 24
    stmtList <treeNode> (57)
        on left: 20 21 22
        on right: 10 13 19 20
    primitiveStmt <treeNode> (58)
        on left: 23 24 25 26 27 28 29 30
        on right: 20 21 32 33 38 40 42
    exprStmt <treeNode> (59)
        on left: 31
        on right: 23
    condStmt <treeNode> (60)
        on left: 32 33 34 35
        on right: 25
    ifStmt <treeNode> (61)
        on left: 36
        on right: 32 33 34 35
    elseStmt <treeNode> (62)
        on left: 38
        on right: 33 35
    $@5 (63)
        on left: 37
        on right: 38
    iterStmt <treeNode> (64)
        on left: 40 42
        on right: 26
    $@6 (65)
        on left: 39
        on right: 40
    $@7 (66)
        on left: 41
        on right: 42
    returnStmt <treeNode> (67)
        on left: 43
        on right: 27
    expression <treeNode> (68)
        on left: 44 45
        on right: 31 43 46
    assignExp <treeNode> (69)
        on left: 46
        on right: 40 42 44
    simpleExp <treeNode> (70)
        on left: 47 48
        on right: 36 40 42 45 54 83 90 91
    inOp <treeNode> (71)
        on left: 49 50
        on right: 28
    outOp <treeNode> (72)
        on left: 51 52
        on right: 29
    outConst <treeNode> (73)
        on left: 53 54
        on right: 51 52
    binListExp <treeNode> (74)
        on left: 55 56 57
        on right: 48
    unaryListExp <treeNode> (75)
        on left: 58 59
        on right: 80
    binLogicalExp <treeNode> (76)
        on left: 60 61
        on right: 47 60
    binLogicalOp <treeNode> (77)
        on left: 62 63
        on right: 60
    relationalExp <treeNode> (78)
        on left: 64 65
        on right: 60 61 64
    relationalOp <treeNode> (79)
        on left: 66 67 68 69 70 71
        on right: 64
    sumExp <treeNode> (80)
        on left: 72 73 74
        on right: 64 65 72 73
    mulExp <treeNode> (81)
        on left: 75 76 77 78 79 80
        on right: 72 73 74 75 76
    factor <treeNode> (82)
        on left: 81 82 83 84 85 86 87
        on right: 55 56 57 58 59 75 76 77 78 79
    fCall <treeNode> (83)
        on left: 88 89
        on right: 82
    callParams <treeNode> (84)
        on left: 90 91
        on right: 88 90


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program               go to state 3
    declarationList       go to state 4
    declaration           go to state 5
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 1

    4 declarationList: error •

    $end  reduce using rule 4 (declarationList)
    TYPE  reduce using rule 4 (declarationList)


State 2

   10 funcDeclaration: TYPE • ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE • ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   14 simpleVarDeclaration: TYPE • ID

    ID  shift, and go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration           go to state 11
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 5

    3 declarationList: declaration •

    $end  reduce using rule 3 (declarationList)
    TYPE  reduce using rule 3 (declarationList)


State 6

    5 declaration: varDeclaration •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 7

    6 declaration: funcDeclaration •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 8

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 12


State 9

   10 funcDeclaration: TYPE ID • PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID • PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   14 simpleVarDeclaration: TYPE ID •

    PARENL  shift, and go to state 13

    SEMIC  reduce using rule 14 (simpleVarDeclaration)


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declarationList: declarationList declaration •

    $end  reduce using rule 2 (declarationList)
    TYPE  reduce using rule 2 (declarationList)


State 12

    7 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduce using rule 7 (varDeclaration)
    TYPE  reduce using rule 7 (varDeclaration)


State 13

   10 funcDeclaration: TYPE ID PARENL • $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID PARENL • $@3 PARENR STFUNC $@4 stmtList ENDFUNC

    error   reduce using rule 8 ($@1)
    TYPE    reduce using rule 8 ($@1)
    PARENR  reduce using rule 11 ($@3)

    $@1  go to state 14
    $@3  go to state 15


State 14

   10 funcDeclaration: TYPE ID PARENL $@1 • params PARENR STFUNC $@2 stmtList ENDFUNC

    error  shift, and go to state 16
    TYPE   shift, and go to state 17

    params  go to state 18
    param   go to state 19


State 15

   13 funcDeclaration: TYPE ID PARENL $@3 • PARENR STFUNC $@4 stmtList ENDFUNC

    PARENR  shift, and go to state 20


State 16

   17 params: error •

    COMMA   reduce using rule 17 (params)
    PARENR  reduce using rule 17 (params)


State 17

   18 param: TYPE • ID

    ID  shift, and go to state 21


State 18

   10 funcDeclaration: TYPE ID PARENL $@1 params • PARENR STFUNC $@2 stmtList ENDFUNC
   15 params: params • COMMA param

    COMMA   shift, and go to state 22
    PARENR  shift, and go to state 23


State 19

   16 params: param •

    COMMA   reduce using rule 16 (params)
    PARENR  reduce using rule 16 (params)


State 20

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR • STFUNC $@4 stmtList ENDFUNC

    STFUNC  shift, and go to state 24


State 21

   18 param: TYPE ID •

    COMMA   reduce using rule 18 (param)
    PARENR  reduce using rule 18 (param)


State 22

   15 params: params COMMA • param

    TYPE  shift, and go to state 17

    param  go to state 25


State 23

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR • STFUNC $@2 stmtList ENDFUNC

    STFUNC  shift, and go to state 26


State 24

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC • $@4 stmtList ENDFUNC

    error       reduce using rule 12 ($@4)
    ID          reduce using rule 12 ($@4)
    TYPE        reduce using rule 12 ($@4)
    NIL         reduce using rule 12 ($@4)
    INTEGER     reduce using rule 12 ($@4)
    DECIMAL     reduce using rule 12 ($@4)
    ERRORTOKEN  reduce using rule 12 ($@4)
    ADD         reduce using rule 12 ($@4)
    SUB         reduce using rule 12 ($@4)
    HEADLIST    reduce using rule 12 ($@4)
    TAILLIST    reduce using rule 12 ($@4)
    IF          reduce using rule 12 ($@4)
    FOR         reduce using rule 12 ($@4)
    READ        reduce using rule 12 ($@4)
    WRITE       reduce using rule 12 ($@4)
    WRITELN     reduce using rule 12 ($@4)
    RETURN      reduce using rule 12 ($@4)
    STFUNC      reduce using rule 12 ($@4)
    PARENL      reduce using rule 12 ($@4)

    $@4  go to state 27


State 25

   15 params: params COMMA param •

    COMMA   reduce using rule 15 (params)
    PARENR  reduce using rule 15 (params)


State 26

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC • $@2 stmtList ENDFUNC

    error       reduce using rule 9 ($@2)
    ID          reduce using rule 9 ($@2)
    TYPE        reduce using rule 9 ($@2)
    NIL         reduce using rule 9 ($@2)
    INTEGER     reduce using rule 9 ($@2)
    DECIMAL     reduce using rule 9 ($@2)
    ERRORTOKEN  reduce using rule 9 ($@2)
    ADD         reduce using rule 9 ($@2)
    SUB         reduce using rule 9 ($@2)
    HEADLIST    reduce using rule 9 ($@2)
    TAILLIST    reduce using rule 9 ($@2)
    IF          reduce using rule 9 ($@2)
    FOR         reduce using rule 9 ($@2)
    READ        reduce using rule 9 ($@2)
    WRITE       reduce using rule 9 ($@2)
    WRITELN     reduce using rule 9 ($@2)
    RETURN      reduce using rule 9 ($@2)
    STFUNC      reduce using rule 9 ($@2)
    PARENL      reduce using rule 9 ($@2)

    $@2  go to state 28


State 27

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 • stmtList ENDFUNC

    error       shift, and go to state 29
    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    stmtList              go to state 50
    primitiveStmt         go to state 51
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 28

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 • stmtList ENDFUNC

    error       shift, and go to state 29
    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    stmtList              go to state 70
    primitiveStmt         go to state 51
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 29

   22 stmtList: error •

    ID          reduce using rule 22 (stmtList)
    TYPE        reduce using rule 22 (stmtList)
    NIL         reduce using rule 22 (stmtList)
    INTEGER     reduce using rule 22 (stmtList)
    DECIMAL     reduce using rule 22 (stmtList)
    ERRORTOKEN  reduce using rule 22 (stmtList)
    ADD         reduce using rule 22 (stmtList)
    SUB         reduce using rule 22 (stmtList)
    HEADLIST    reduce using rule 22 (stmtList)
    TAILLIST    reduce using rule 22 (stmtList)
    IF          reduce using rule 22 (stmtList)
    FOR         reduce using rule 22 (stmtList)
    READ        reduce using rule 22 (stmtList)
    WRITE       reduce using rule 22 (stmtList)
    WRITELN     reduce using rule 22 (stmtList)
    RETURN      reduce using rule 22 (stmtList)
    STFUNC      reduce using rule 22 (stmtList)
    ENDFUNC     reduce using rule 22 (stmtList)
    PARENL      reduce using rule 22 (stmtList)


State 30

   46 assignExp: ID • ASSIGN expression
   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    ASSIGN  shift, and go to state 71
    PARENL  shift, and go to state 72

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    SEMIC      reduce using rule 81 (factor)


State 31

   14 simpleVarDeclaration: TYPE • ID

    ID  shift, and go to state 73


State 32

   86 factor: NIL •

    ADD        reduce using rule 86 (factor)
    SUB        reduce using rule 86 (factor)
    MULT       reduce using rule 86 (factor)
    DIV        reduce using rule 86 (factor)
    OR         reduce using rule 86 (factor)
    AND        reduce using rule 86 (factor)
    SMALLER    reduce using rule 86 (factor)
    GREATER    reduce using rule 86 (factor)
    SMALLEQ    reduce using rule 86 (factor)
    GREATEQ    reduce using rule 86 (factor)
    EQUALS     reduce using rule 86 (factor)
    DIFFERENT  reduce using rule 86 (factor)
    APPEND     reduce using rule 86 (factor)
    FILTER     reduce using rule 86 (factor)
    MAP        reduce using rule 86 (factor)
    SEMIC      reduce using rule 86 (factor)


State 33

   84 factor: INTEGER •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    APPEND     reduce using rule 84 (factor)
    FILTER     reduce using rule 84 (factor)
    MAP        reduce using rule 84 (factor)
    SEMIC      reduce using rule 84 (factor)


State 34

   85 factor: DECIMAL •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    APPEND     reduce using rule 85 (factor)
    FILTER     reduce using rule 85 (factor)
    MAP        reduce using rule 85 (factor)
    SEMIC      reduce using rule 85 (factor)


State 35

   87 factor: ERRORTOKEN •

    ADD        reduce using rule 87 (factor)
    SUB        reduce using rule 87 (factor)
    MULT       reduce using rule 87 (factor)
    DIV        reduce using rule 87 (factor)
    OR         reduce using rule 87 (factor)
    AND        reduce using rule 87 (factor)
    SMALLER    reduce using rule 87 (factor)
    GREATER    reduce using rule 87 (factor)
    SMALLEQ    reduce using rule 87 (factor)
    GREATEQ    reduce using rule 87 (factor)
    EQUALS     reduce using rule 87 (factor)
    DIFFERENT  reduce using rule 87 (factor)
    APPEND     reduce using rule 87 (factor)
    FILTER     reduce using rule 87 (factor)
    MAP        reduce using rule 87 (factor)
    SEMIC      reduce using rule 87 (factor)


State 36

   78 mulExp: ADD • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    PARENL      shift, and go to state 173

    factor  go to state 75
    fCall   go to state 174


State 37

   79 mulExp: SUB • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    PARENL      shift, and go to state 173

    factor  go to state 76
    fCall   go to state 174


State 38

   58 unaryListExp: HEADLIST • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    PARENL      shift, and go to state 173

    factor  go to state 77
    fCall   go to state 174


State 39

   59 unaryListExp: TAILLIST • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    PARENL      shift, and go to state 173

    factor  go to state 78
    fCall   go to state 174


State 40

   36 ifStmt: IF • PARENL simpleExp PARENR

    PARENL  shift, and go to state 79


State 41

   40 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt
   42         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    PARENL  shift, and go to state 80


State 42

   49 inOp: READ • PARENL ID PARENR SEMIC
   50     | READ • PARENL PARENR SEMIC

    PARENL  shift, and go to state 81


State 43

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 82


State 44

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 83


State 45

   43 returnStmt: RETURN • expression SEMIC

    ID          shift, and go to state 30
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 47

    expression     go to state 84
    assignExp      go to state 58
    simpleExp      go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 46

   19 compoundStmt: STFUNC • stmtList ENDFUNC

    error       shift, and go to state 29
    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    stmtList              go to state 85
    primitiveStmt         go to state 51
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 47

   83 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 86
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 48

   30 primitiveStmt: varDeclaration •

    ID          reduce using rule 30 (primitiveStmt)
    TYPE        reduce using rule 30 (primitiveStmt)
    NIL         reduce using rule 30 (primitiveStmt)
    INTEGER     reduce using rule 30 (primitiveStmt)
    DECIMAL     reduce using rule 30 (primitiveStmt)
    ERRORTOKEN  reduce using rule 30 (primitiveStmt)
    ADD         reduce using rule 30 (primitiveStmt)
    SUB         reduce using rule 30 (primitiveStmt)
    HEADLIST    reduce using rule 30 (primitiveStmt)
    TAILLIST    reduce using rule 30 (primitiveStmt)
    IF          reduce using rule 30 (primitiveStmt)
    FOR         reduce using rule 30 (primitiveStmt)
    READ        reduce using rule 30 (primitiveStmt)
    WRITE       reduce using rule 30 (primitiveStmt)
    WRITELN     reduce using rule 30 (primitiveStmt)
    RETURN      reduce using rule 30 (primitiveStmt)
    STFUNC      reduce using rule 30 (primitiveStmt)
    ENDFUNC     reduce using rule 30 (primitiveStmt)
    PARENL      reduce using rule 30 (primitiveStmt)


State 49

   24 primitiveStmt: compoundStmt •

    ID          reduce using rule 24 (primitiveStmt)
    TYPE        reduce using rule 24 (primitiveStmt)
    NIL         reduce using rule 24 (primitiveStmt)
    INTEGER     reduce using rule 24 (primitiveStmt)
    DECIMAL     reduce using rule 24 (primitiveStmt)
    ERRORTOKEN  reduce using rule 24 (primitiveStmt)
    ADD         reduce using rule 24 (primitiveStmt)
    SUB         reduce using rule 24 (primitiveStmt)
    HEADLIST    reduce using rule 24 (primitiveStmt)
    TAILLIST    reduce using rule 24 (primitiveStmt)
    IF          reduce using rule 24 (primitiveStmt)
    FOR         reduce using rule 24 (primitiveStmt)
    READ        reduce using rule 24 (primitiveStmt)
    WRITE       reduce using rule 24 (primitiveStmt)
    WRITELN     reduce using rule 24 (primitiveStmt)
    RETURN      reduce using rule 24 (primitiveStmt)
    STFUNC      reduce using rule 24 (primitiveStmt)
    ENDFUNC     reduce using rule 24 (primitiveStmt)
    PARENL      reduce using rule 24 (primitiveStmt)


State 50

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    ENDFUNC     shift, and go to state 87
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    primitiveStmt         go to state 88
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 51

   21 stmtList: primitiveStmt •

    ID          reduce using rule 21 (stmtList)
    TYPE        reduce using rule 21 (stmtList)
    NIL         reduce using rule 21 (stmtList)
    INTEGER     reduce using rule 21 (stmtList)
    DECIMAL     reduce using rule 21 (stmtList)
    ERRORTOKEN  reduce using rule 21 (stmtList)
    ADD         reduce using rule 21 (stmtList)
    SUB         reduce using rule 21 (stmtList)
    HEADLIST    reduce using rule 21 (stmtList)
    TAILLIST    reduce using rule 21 (stmtList)
    IF          reduce using rule 21 (stmtList)
    FOR         reduce using rule 21 (stmtList)
    READ        reduce using rule 21 (stmtList)
    WRITE       reduce using rule 21 (stmtList)
    WRITELN     reduce using rule 21 (stmtList)
    RETURN      reduce using rule 21 (stmtList)
    STFUNC      reduce using rule 21 (stmtList)
    ENDFUNC     reduce using rule 21 (stmtList)
    PARENL      reduce using rule 21 (stmtList)


State 52

   23 primitiveStmt: exprStmt •

    ID          reduce using rule 23 (primitiveStmt)
    TYPE        reduce using rule 23 (primitiveStmt)
    NIL         reduce using rule 23 (primitiveStmt)
    INTEGER     reduce using rule 23 (primitiveStmt)
    DECIMAL     reduce using rule 23 (primitiveStmt)
    ERRORTOKEN  reduce using rule 23 (primitiveStmt)
    ADD         reduce using rule 23 (primitiveStmt)
    SUB         reduce using rule 23 (primitiveStmt)
    HEADLIST    reduce using rule 23 (primitiveStmt)
    TAILLIST    reduce using rule 23 (primitiveStmt)
    IF          reduce using rule 23 (primitiveStmt)
    FOR         reduce using rule 23 (primitiveStmt)
    READ        reduce using rule 23 (primitiveStmt)
    WRITE       reduce using rule 23 (primitiveStmt)
    WRITELN     reduce using rule 23 (primitiveStmt)
    RETURN      reduce using rule 23 (primitiveStmt)
    STFUNC      reduce using rule 23 (primitiveStmt)
    ENDFUNC     reduce using rule 23 (primitiveStmt)
    PARENL      reduce using rule 23 (primitiveStmt)


State 53

   25 primitiveStmt: condStmt •

    ID          reduce using rule 25 (primitiveStmt)
    TYPE        reduce using rule 25 (primitiveStmt)
    NIL         reduce using rule 25 (primitiveStmt)
    INTEGER     reduce using rule 25 (primitiveStmt)
    DECIMAL     reduce using rule 25 (primitiveStmt)
    ERRORTOKEN  reduce using rule 25 (primitiveStmt)
    ADD         reduce using rule 25 (primitiveStmt)
    SUB         reduce using rule 25 (primitiveStmt)
    HEADLIST    reduce using rule 25 (primitiveStmt)
    TAILLIST    reduce using rule 25 (primitiveStmt)
    IF          reduce using rule 25 (primitiveStmt)
    FOR         reduce using rule 25 (primitiveStmt)
    READ        reduce using rule 25 (primitiveStmt)
    WRITE       reduce using rule 25 (primitiveStmt)
    WRITELN     reduce using rule 25 (primitiveStmt)
    RETURN      reduce using rule 25 (primitiveStmt)
    STFUNC      reduce using rule 25 (primitiveStmt)
    ENDFUNC     reduce using rule 25 (primitiveStmt)
    PARENL      reduce using rule 25 (primitiveStmt)


State 54

   32 condStmt: ifStmt • primitiveStmt
   33         | ifStmt • primitiveStmt elseStmt
   34         | ifStmt • STFUNC ENDFUNC
   35         | ifStmt • STFUNC ENDFUNC elseStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 193
    READ        shift, and go to state 194
    WRITE       shift, and go to state 195
    WRITELN     shift, and go to state 196
    RETURN      shift, and go to state 197
    STFUNC      shift, and go to state 89
    PARENL      shift, and go to state 47

    varDeclaration        go to state 198
    simpleVarDeclaration  go to state 199
    compoundStmt          go to state 200
    primitiveStmt         go to state 90
    exprStmt              go to state 201
    condStmt              go to state 202
    ifStmt                go to state 203
    iterStmt              go to state 204
    returnStmt            go to state 205
    expression            go to state 206
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 207
    outOp                 go to state 208
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 55

   26 primitiveStmt: iterStmt •

    ID          reduce using rule 26 (primitiveStmt)
    TYPE        reduce using rule 26 (primitiveStmt)
    NIL         reduce using rule 26 (primitiveStmt)
    INTEGER     reduce using rule 26 (primitiveStmt)
    DECIMAL     reduce using rule 26 (primitiveStmt)
    ERRORTOKEN  reduce using rule 26 (primitiveStmt)
    ADD         reduce using rule 26 (primitiveStmt)
    SUB         reduce using rule 26 (primitiveStmt)
    HEADLIST    reduce using rule 26 (primitiveStmt)
    TAILLIST    reduce using rule 26 (primitiveStmt)
    IF          reduce using rule 26 (primitiveStmt)
    FOR         reduce using rule 26 (primitiveStmt)
    READ        reduce using rule 26 (primitiveStmt)
    WRITE       reduce using rule 26 (primitiveStmt)
    WRITELN     reduce using rule 26 (primitiveStmt)
    RETURN      reduce using rule 26 (primitiveStmt)
    STFUNC      reduce using rule 26 (primitiveStmt)
    ENDFUNC     reduce using rule 26 (primitiveStmt)
    PARENL      reduce using rule 26 (primitiveStmt)


State 56

   27 primitiveStmt: returnStmt •

    ID          reduce using rule 27 (primitiveStmt)
    TYPE        reduce using rule 27 (primitiveStmt)
    NIL         reduce using rule 27 (primitiveStmt)
    INTEGER     reduce using rule 27 (primitiveStmt)
    DECIMAL     reduce using rule 27 (primitiveStmt)
    ERRORTOKEN  reduce using rule 27 (primitiveStmt)
    ADD         reduce using rule 27 (primitiveStmt)
    SUB         reduce using rule 27 (primitiveStmt)
    HEADLIST    reduce using rule 27 (primitiveStmt)
    TAILLIST    reduce using rule 27 (primitiveStmt)
    IF          reduce using rule 27 (primitiveStmt)
    FOR         reduce using rule 27 (primitiveStmt)
    READ        reduce using rule 27 (primitiveStmt)
    WRITE       reduce using rule 27 (primitiveStmt)
    WRITELN     reduce using rule 27 (primitiveStmt)
    RETURN      reduce using rule 27 (primitiveStmt)
    STFUNC      reduce using rule 27 (primitiveStmt)
    ENDFUNC     reduce using rule 27 (primitiveStmt)
    PARENL      reduce using rule 27 (primitiveStmt)


State 57

   31 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 91


State 58

   44 expression: assignExp •

    SEMIC  reduce using rule 44 (expression)


State 59

   45 expression: simpleExp •

    SEMIC  reduce using rule 45 (expression)


State 60

   28 primitiveStmt: inOp •

    ID          reduce using rule 28 (primitiveStmt)
    TYPE        reduce using rule 28 (primitiveStmt)
    NIL         reduce using rule 28 (primitiveStmt)
    INTEGER     reduce using rule 28 (primitiveStmt)
    DECIMAL     reduce using rule 28 (primitiveStmt)
    ERRORTOKEN  reduce using rule 28 (primitiveStmt)
    ADD         reduce using rule 28 (primitiveStmt)
    SUB         reduce using rule 28 (primitiveStmt)
    HEADLIST    reduce using rule 28 (primitiveStmt)
    TAILLIST    reduce using rule 28 (primitiveStmt)
    IF          reduce using rule 28 (primitiveStmt)
    FOR         reduce using rule 28 (primitiveStmt)
    READ        reduce using rule 28 (primitiveStmt)
    WRITE       reduce using rule 28 (primitiveStmt)
    WRITELN     reduce using rule 28 (primitiveStmt)
    RETURN      reduce using rule 28 (primitiveStmt)
    STFUNC      reduce using rule 28 (primitiveStmt)
    ENDFUNC     reduce using rule 28 (primitiveStmt)
    PARENL      reduce using rule 28 (primitiveStmt)


State 61

   29 primitiveStmt: outOp •

    ID          reduce using rule 29 (primitiveStmt)
    TYPE        reduce using rule 29 (primitiveStmt)
    NIL         reduce using rule 29 (primitiveStmt)
    INTEGER     reduce using rule 29 (primitiveStmt)
    DECIMAL     reduce using rule 29 (primitiveStmt)
    ERRORTOKEN  reduce using rule 29 (primitiveStmt)
    ADD         reduce using rule 29 (primitiveStmt)
    SUB         reduce using rule 29 (primitiveStmt)
    HEADLIST    reduce using rule 29 (primitiveStmt)
    TAILLIST    reduce using rule 29 (primitiveStmt)
    IF          reduce using rule 29 (primitiveStmt)
    FOR         reduce using rule 29 (primitiveStmt)
    READ        reduce using rule 29 (primitiveStmt)
    WRITE       reduce using rule 29 (primitiveStmt)
    WRITELN     reduce using rule 29 (primitiveStmt)
    RETURN      reduce using rule 29 (primitiveStmt)
    STFUNC      reduce using rule 29 (primitiveStmt)
    ENDFUNC     reduce using rule 29 (primitiveStmt)
    PARENL      reduce using rule 29 (primitiveStmt)


State 62

   48 simpleExp: binListExp •

    SEMIC  reduce using rule 48 (simpleExp)


State 63

   80 mulExp: unaryListExp •

    ADD        reduce using rule 80 (mulExp)
    SUB        reduce using rule 80 (mulExp)
    MULT       reduce using rule 80 (mulExp)
    DIV        reduce using rule 80 (mulExp)
    OR         reduce using rule 80 (mulExp)
    AND        reduce using rule 80 (mulExp)
    SMALLER    reduce using rule 80 (mulExp)
    GREATER    reduce using rule 80 (mulExp)
    SMALLEQ    reduce using rule 80 (mulExp)
    GREATEQ    reduce using rule 80 (mulExp)
    EQUALS     reduce using rule 80 (mulExp)
    DIFFERENT  reduce using rule 80 (mulExp)
    SEMIC      reduce using rule 80 (mulExp)


State 64

   47 simpleExp: binLogicalExp •
   60 binLogicalExp: binLogicalExp • binLogicalOp relationalExp

    OR   shift, and go to state 92
    AND  shift, and go to state 93

    SEMIC  reduce using rule 47 (simpleExp)

    binLogicalOp  go to state 94


State 65

   61 binLogicalExp: relationalExp •
   64 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 95
    GREATER    shift, and go to state 96
    SMALLEQ    shift, and go to state 97
    GREATEQ    shift, and go to state 98
    EQUALS     shift, and go to state 99
    DIFFERENT  shift, and go to state 100

    OR     reduce using rule 61 (binLogicalExp)
    AND    reduce using rule 61 (binLogicalExp)
    SEMIC  reduce using rule 61 (binLogicalExp)

    relationalOp  go to state 101


State 66

   65 relationalExp: sumExp •
   72 sumExp: sumExp • ADD mulExp
   73       | sumExp • SUB mulExp

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    OR         reduce using rule 65 (relationalExp)
    AND        reduce using rule 65 (relationalExp)
    SMALLER    reduce using rule 65 (relationalExp)
    GREATER    reduce using rule 65 (relationalExp)
    SMALLEQ    reduce using rule 65 (relationalExp)
    GREATEQ    reduce using rule 65 (relationalExp)
    EQUALS     reduce using rule 65 (relationalExp)
    DIFFERENT  reduce using rule 65 (relationalExp)
    SEMIC      reduce using rule 65 (relationalExp)


State 67

   74 sumExp: mulExp •
   75 mulExp: mulExp • MULT factor
   76       | mulExp • DIV factor

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    ADD        reduce using rule 74 (sumExp)
    SUB        reduce using rule 74 (sumExp)
    OR         reduce using rule 74 (sumExp)
    AND        reduce using rule 74 (sumExp)
    SMALLER    reduce using rule 74 (sumExp)
    GREATER    reduce using rule 74 (sumExp)
    SMALLEQ    reduce using rule 74 (sumExp)
    GREATEQ    reduce using rule 74 (sumExp)
    EQUALS     reduce using rule 74 (sumExp)
    DIFFERENT  reduce using rule 74 (sumExp)
    SEMIC      reduce using rule 74 (sumExp)


State 68

   55 binListExp: factor • APPEND factor
   56           | factor • MAP factor
   57           | factor • FILTER factor
   77 mulExp: factor •

    APPEND  shift, and go to state 106
    FILTER  shift, and go to state 107
    MAP     shift, and go to state 108

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    SEMIC      reduce using rule 77 (mulExp)


State 69

   82 factor: fCall •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    APPEND     reduce using rule 82 (factor)
    FILTER     reduce using rule 82 (factor)
    MAP        reduce using rule 82 (factor)
    SEMIC      reduce using rule 82 (factor)


State 70

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    ENDFUNC     shift, and go to state 109
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    primitiveStmt         go to state 88
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 71

   46 assignExp: ID ASSIGN • expression

    ID          shift, and go to state 30
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 47

    expression     go to state 110
    assignExp      go to state 58
    simpleExp      go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 72

   88 fCall: ID PARENL • callParams PARENR
   89      | ID PARENL • PARENR

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218
    PARENR      shift, and go to state 111

    simpleExp      go to state 112
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226
    callParams     go to state 113


State 73

   14 simpleVarDeclaration: TYPE ID •

    SEMIC  reduce using rule 14 (simpleVarDeclaration)


State 74

   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    PARENL  shift, and go to state 227

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    SEMIC      reduce using rule 81 (factor)


State 75

   78 mulExp: ADD factor •

    ADD        reduce using rule 78 (mulExp)
    SUB        reduce using rule 78 (mulExp)
    MULT       reduce using rule 78 (mulExp)
    DIV        reduce using rule 78 (mulExp)
    OR         reduce using rule 78 (mulExp)
    AND        reduce using rule 78 (mulExp)
    SMALLER    reduce using rule 78 (mulExp)
    GREATER    reduce using rule 78 (mulExp)
    SMALLEQ    reduce using rule 78 (mulExp)
    GREATEQ    reduce using rule 78 (mulExp)
    EQUALS     reduce using rule 78 (mulExp)
    DIFFERENT  reduce using rule 78 (mulExp)
    SEMIC      reduce using rule 78 (mulExp)


State 76

   79 mulExp: SUB factor •

    ADD        reduce using rule 79 (mulExp)
    SUB        reduce using rule 79 (mulExp)
    MULT       reduce using rule 79 (mulExp)
    DIV        reduce using rule 79 (mulExp)
    OR         reduce using rule 79 (mulExp)
    AND        reduce using rule 79 (mulExp)
    SMALLER    reduce using rule 79 (mulExp)
    GREATER    reduce using rule 79 (mulExp)
    SMALLEQ    reduce using rule 79 (mulExp)
    GREATEQ    reduce using rule 79 (mulExp)
    EQUALS     reduce using rule 79 (mulExp)
    DIFFERENT  reduce using rule 79 (mulExp)
    SEMIC      reduce using rule 79 (mulExp)


State 77

   58 unaryListExp: HEADLIST factor •

    ADD        reduce using rule 58 (unaryListExp)
    SUB        reduce using rule 58 (unaryListExp)
    MULT       reduce using rule 58 (unaryListExp)
    DIV        reduce using rule 58 (unaryListExp)
    OR         reduce using rule 58 (unaryListExp)
    AND        reduce using rule 58 (unaryListExp)
    SMALLER    reduce using rule 58 (unaryListExp)
    GREATER    reduce using rule 58 (unaryListExp)
    SMALLEQ    reduce using rule 58 (unaryListExp)
    GREATEQ    reduce using rule 58 (unaryListExp)
    EQUALS     reduce using rule 58 (unaryListExp)
    DIFFERENT  reduce using rule 58 (unaryListExp)
    SEMIC      reduce using rule 58 (unaryListExp)


State 78

   59 unaryListExp: TAILLIST factor •

    ADD        reduce using rule 59 (unaryListExp)
    SUB        reduce using rule 59 (unaryListExp)
    MULT       reduce using rule 59 (unaryListExp)
    DIV        reduce using rule 59 (unaryListExp)
    OR         reduce using rule 59 (unaryListExp)
    AND        reduce using rule 59 (unaryListExp)
    SMALLER    reduce using rule 59 (unaryListExp)
    GREATER    reduce using rule 59 (unaryListExp)
    SMALLEQ    reduce using rule 59 (unaryListExp)
    GREATEQ    reduce using rule 59 (unaryListExp)
    EQUALS     reduce using rule 59 (unaryListExp)
    DIFFERENT  reduce using rule 59 (unaryListExp)
    SEMIC      reduce using rule 59 (unaryListExp)


State 79

   36 ifStmt: IF PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 114
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 80

   40 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt
   42         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    ID          shift, and go to state 30
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 47

    assignExp      go to state 115
    simpleExp      go to state 116
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 81

   49 inOp: READ PARENL • ID PARENR SEMIC
   50     | READ PARENL • PARENR SEMIC

    ID      shift, and go to state 117
    PARENR  shift, and go to state 118


State 82

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 175
    STRING      shift, and go to state 119
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 120
    outConst       go to state 121
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 83

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 175
    STRING      shift, and go to state 119
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 120
    outConst       go to state 122
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 84

   43 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 123


State 85

   19 compoundStmt: STFUNC stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    ENDFUNC     shift, and go to state 124
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    primitiveStmt         go to state 88
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 86

   83 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 125


State 87

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC •

    $end  reduce using rule 13 (funcDeclaration)
    TYPE  reduce using rule 13 (funcDeclaration)


State 88

   20 stmtList: stmtList primitiveStmt •

    ID          reduce using rule 20 (stmtList)
    TYPE        reduce using rule 20 (stmtList)
    NIL         reduce using rule 20 (stmtList)
    INTEGER     reduce using rule 20 (stmtList)
    DECIMAL     reduce using rule 20 (stmtList)
    ERRORTOKEN  reduce using rule 20 (stmtList)
    ADD         reduce using rule 20 (stmtList)
    SUB         reduce using rule 20 (stmtList)
    HEADLIST    reduce using rule 20 (stmtList)
    TAILLIST    reduce using rule 20 (stmtList)
    IF          reduce using rule 20 (stmtList)
    FOR         reduce using rule 20 (stmtList)
    READ        reduce using rule 20 (stmtList)
    WRITE       reduce using rule 20 (stmtList)
    WRITELN     reduce using rule 20 (stmtList)
    RETURN      reduce using rule 20 (stmtList)
    STFUNC      reduce using rule 20 (stmtList)
    ENDFUNC     reduce using rule 20 (stmtList)
    PARENL      reduce using rule 20 (stmtList)


State 89

   19 compoundStmt: STFUNC • stmtList ENDFUNC
   34 condStmt: ifStmt STFUNC • ENDFUNC
   35         | ifStmt STFUNC • ENDFUNC elseStmt

    error       shift, and go to state 29
    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    ENDFUNC     shift, and go to state 126
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    stmtList              go to state 228
    primitiveStmt         go to state 51
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 90

   32 condStmt: ifStmt primitiveStmt •
   33         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 127

    ID          reduce using rule 32 (condStmt)
    TYPE        reduce using rule 32 (condStmt)
    NIL         reduce using rule 32 (condStmt)
    INTEGER     reduce using rule 32 (condStmt)
    DECIMAL     reduce using rule 32 (condStmt)
    ERRORTOKEN  reduce using rule 32 (condStmt)
    ADD         reduce using rule 32 (condStmt)
    SUB         reduce using rule 32 (condStmt)
    HEADLIST    reduce using rule 32 (condStmt)
    TAILLIST    reduce using rule 32 (condStmt)
    IF          reduce using rule 32 (condStmt)
    FOR         reduce using rule 32 (condStmt)
    READ        reduce using rule 32 (condStmt)
    WRITE       reduce using rule 32 (condStmt)
    WRITELN     reduce using rule 32 (condStmt)
    RETURN      reduce using rule 32 (condStmt)
    STFUNC      reduce using rule 32 (condStmt)
    ENDFUNC     reduce using rule 32 (condStmt)
    PARENL      reduce using rule 32 (condStmt)

    elseStmt  go to state 128


State 91

   31 exprStmt: expression SEMIC •

    ID          reduce using rule 31 (exprStmt)
    TYPE        reduce using rule 31 (exprStmt)
    NIL         reduce using rule 31 (exprStmt)
    INTEGER     reduce using rule 31 (exprStmt)
    DECIMAL     reduce using rule 31 (exprStmt)
    ERRORTOKEN  reduce using rule 31 (exprStmt)
    ADD         reduce using rule 31 (exprStmt)
    SUB         reduce using rule 31 (exprStmt)
    HEADLIST    reduce using rule 31 (exprStmt)
    TAILLIST    reduce using rule 31 (exprStmt)
    IF          reduce using rule 31 (exprStmt)
    FOR         reduce using rule 31 (exprStmt)
    READ        reduce using rule 31 (exprStmt)
    WRITE       reduce using rule 31 (exprStmt)
    WRITELN     reduce using rule 31 (exprStmt)
    RETURN      reduce using rule 31 (exprStmt)
    STFUNC      reduce using rule 31 (exprStmt)
    ENDFUNC     reduce using rule 31 (exprStmt)
    PARENL      reduce using rule 31 (exprStmt)


State 92

   62 binLogicalOp: OR •

    ID          reduce using rule 62 (binLogicalOp)
    NIL         reduce using rule 62 (binLogicalOp)
    INTEGER     reduce using rule 62 (binLogicalOp)
    DECIMAL     reduce using rule 62 (binLogicalOp)
    ERRORTOKEN  reduce using rule 62 (binLogicalOp)
    ADD         reduce using rule 62 (binLogicalOp)
    SUB         reduce using rule 62 (binLogicalOp)
    HEADLIST    reduce using rule 62 (binLogicalOp)
    TAILLIST    reduce using rule 62 (binLogicalOp)
    PARENL      reduce using rule 62 (binLogicalOp)


State 93

   63 binLogicalOp: AND •

    ID          reduce using rule 63 (binLogicalOp)
    NIL         reduce using rule 63 (binLogicalOp)
    INTEGER     reduce using rule 63 (binLogicalOp)
    DECIMAL     reduce using rule 63 (binLogicalOp)
    ERRORTOKEN  reduce using rule 63 (binLogicalOp)
    ADD         reduce using rule 63 (binLogicalOp)
    SUB         reduce using rule 63 (binLogicalOp)
    HEADLIST    reduce using rule 63 (binLogicalOp)
    TAILLIST    reduce using rule 63 (binLogicalOp)
    PARENL      reduce using rule 63 (binLogicalOp)


State 94

   60 binLogicalExp: binLogicalExp binLogicalOp • relationalExp

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 173

    unaryListExp   go to state 63
    relationalExp  go to state 129
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 130
    fCall          go to state 174


State 95

   66 relationalOp: SMALLER •

    ID          reduce using rule 66 (relationalOp)
    NIL         reduce using rule 66 (relationalOp)
    INTEGER     reduce using rule 66 (relationalOp)
    DECIMAL     reduce using rule 66 (relationalOp)
    ERRORTOKEN  reduce using rule 66 (relationalOp)
    ADD         reduce using rule 66 (relationalOp)
    SUB         reduce using rule 66 (relationalOp)
    HEADLIST    reduce using rule 66 (relationalOp)
    TAILLIST    reduce using rule 66 (relationalOp)
    PARENL      reduce using rule 66 (relationalOp)


State 96

   67 relationalOp: GREATER •

    ID          reduce using rule 67 (relationalOp)
    NIL         reduce using rule 67 (relationalOp)
    INTEGER     reduce using rule 67 (relationalOp)
    DECIMAL     reduce using rule 67 (relationalOp)
    ERRORTOKEN  reduce using rule 67 (relationalOp)
    ADD         reduce using rule 67 (relationalOp)
    SUB         reduce using rule 67 (relationalOp)
    HEADLIST    reduce using rule 67 (relationalOp)
    TAILLIST    reduce using rule 67 (relationalOp)
    PARENL      reduce using rule 67 (relationalOp)


State 97

   68 relationalOp: SMALLEQ •

    ID          reduce using rule 68 (relationalOp)
    NIL         reduce using rule 68 (relationalOp)
    INTEGER     reduce using rule 68 (relationalOp)
    DECIMAL     reduce using rule 68 (relationalOp)
    ERRORTOKEN  reduce using rule 68 (relationalOp)
    ADD         reduce using rule 68 (relationalOp)
    SUB         reduce using rule 68 (relationalOp)
    HEADLIST    reduce using rule 68 (relationalOp)
    TAILLIST    reduce using rule 68 (relationalOp)
    PARENL      reduce using rule 68 (relationalOp)


State 98

   69 relationalOp: GREATEQ •

    ID          reduce using rule 69 (relationalOp)
    NIL         reduce using rule 69 (relationalOp)
    INTEGER     reduce using rule 69 (relationalOp)
    DECIMAL     reduce using rule 69 (relationalOp)
    ERRORTOKEN  reduce using rule 69 (relationalOp)
    ADD         reduce using rule 69 (relationalOp)
    SUB         reduce using rule 69 (relationalOp)
    HEADLIST    reduce using rule 69 (relationalOp)
    TAILLIST    reduce using rule 69 (relationalOp)
    PARENL      reduce using rule 69 (relationalOp)


State 99

   70 relationalOp: EQUALS •

    ID          reduce using rule 70 (relationalOp)
    NIL         reduce using rule 70 (relationalOp)
    INTEGER     reduce using rule 70 (relationalOp)
    DECIMAL     reduce using rule 70 (relationalOp)
    ERRORTOKEN  reduce using rule 70 (relationalOp)
    ADD         reduce using rule 70 (relationalOp)
    SUB         reduce using rule 70 (relationalOp)
    HEADLIST    reduce using rule 70 (relationalOp)
    TAILLIST    reduce using rule 70 (relationalOp)
    PARENL      reduce using rule 70 (relationalOp)


State 100

   71 relationalOp: DIFFERENT •

    ID          reduce using rule 71 (relationalOp)
    NIL         reduce using rule 71 (relationalOp)
    INTEGER     reduce using rule 71 (relationalOp)
    DECIMAL     reduce using rule 71 (relationalOp)
    ERRORTOKEN  reduce using rule 71 (relationalOp)
    ADD         reduce using rule 71 (relationalOp)
    SUB         reduce using rule 71 (relationalOp)
    HEADLIST    reduce using rule 71 (relationalOp)
    TAILLIST    reduce using rule 71 (relationalOp)
    PARENL      reduce using rule 71 (relationalOp)


State 101

   64 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 173

    unaryListExp  go to state 63
    sumExp        go to state 131
    mulExp        go to state 67
    factor        go to state 130
    fCall         go to state 174


State 102

   72 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 173

    unaryListExp  go to state 63
    mulExp        go to state 132
    factor        go to state 130
    fCall         go to state 174


State 103

   73 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 173

    unaryListExp  go to state 63
    mulExp        go to state 133
    factor        go to state 130
    fCall         go to state 174


State 104

   75 mulExp: mulExp MULT • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    PARENL      shift, and go to state 173

    factor  go to state 134
    fCall   go to state 174


State 105

   76 mulExp: mulExp DIV • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 169
    INTEGER     shift, and go to state 170
    DECIMAL     shift, and go to state 171
    ERRORTOKEN  shift, and go to state 172
    PARENL      shift, and go to state 173

    factor  go to state 135
    fCall   go to state 174


State 106

   55 binListExp: factor APPEND • factor

    ID          shift, and go to state 229
    NIL         shift, and go to state 230
    INTEGER     shift, and go to state 231
    DECIMAL     shift, and go to state 232
    ERRORTOKEN  shift, and go to state 233
    PARENL      shift, and go to state 234

    factor  go to state 136
    fCall   go to state 235


State 107

   57 binListExp: factor FILTER • factor

    ID          shift, and go to state 229
    NIL         shift, and go to state 230
    INTEGER     shift, and go to state 231
    DECIMAL     shift, and go to state 232
    ERRORTOKEN  shift, and go to state 233
    PARENL      shift, and go to state 234

    factor  go to state 137
    fCall   go to state 235


State 108

   56 binListExp: factor MAP • factor

    ID          shift, and go to state 229
    NIL         shift, and go to state 230
    INTEGER     shift, and go to state 231
    DECIMAL     shift, and go to state 232
    ERRORTOKEN  shift, and go to state 233
    PARENL      shift, and go to state 234

    factor  go to state 138
    fCall   go to state 235


State 109

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC •

    $end  reduce using rule 10 (funcDeclaration)
    TYPE  reduce using rule 10 (funcDeclaration)


State 110

   46 assignExp: ID ASSIGN expression •

    SEMIC  reduce using rule 46 (assignExp)


State 111

   89 fCall: ID PARENL PARENR •

    ADD        reduce using rule 89 (fCall)
    SUB        reduce using rule 89 (fCall)
    MULT       reduce using rule 89 (fCall)
    DIV        reduce using rule 89 (fCall)
    OR         reduce using rule 89 (fCall)
    AND        reduce using rule 89 (fCall)
    SMALLER    reduce using rule 89 (fCall)
    GREATER    reduce using rule 89 (fCall)
    SMALLEQ    reduce using rule 89 (fCall)
    GREATEQ    reduce using rule 89 (fCall)
    EQUALS     reduce using rule 89 (fCall)
    DIFFERENT  reduce using rule 89 (fCall)
    APPEND     reduce using rule 89 (fCall)
    FILTER     reduce using rule 89 (fCall)
    MAP        reduce using rule 89 (fCall)
    SEMIC      reduce using rule 89 (fCall)


State 112

   91 callParams: simpleExp •

    COMMA   reduce using rule 91 (callParams)
    PARENR  reduce using rule 91 (callParams)


State 113

   88 fCall: ID PARENL callParams • PARENR
   90 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 139
    PARENR  shift, and go to state 140


State 114

   36 ifStmt: IF PARENL simpleExp • PARENR

    PARENR  shift, and go to state 141


State 115

   40 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

    SEMIC  shift, and go to state 142


State 116

   42 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    SEMIC  shift, and go to state 143


State 117

   49 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 144


State 118

   50 inOp: READ PARENL PARENR • SEMIC

    SEMIC  shift, and go to state 145


State 119

   53 outConst: STRING •

    PARENR  reduce using rule 53 (outConst)


State 120

   54 outConst: simpleExp •

    PARENR  reduce using rule 54 (outConst)


State 121

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 146


State 122

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 147


State 123

   43 returnStmt: RETURN expression SEMIC •

    ID          reduce using rule 43 (returnStmt)
    TYPE        reduce using rule 43 (returnStmt)
    NIL         reduce using rule 43 (returnStmt)
    INTEGER     reduce using rule 43 (returnStmt)
    DECIMAL     reduce using rule 43 (returnStmt)
    ERRORTOKEN  reduce using rule 43 (returnStmt)
    ADD         reduce using rule 43 (returnStmt)
    SUB         reduce using rule 43 (returnStmt)
    HEADLIST    reduce using rule 43 (returnStmt)
    TAILLIST    reduce using rule 43 (returnStmt)
    IF          reduce using rule 43 (returnStmt)
    FOR         reduce using rule 43 (returnStmt)
    READ        reduce using rule 43 (returnStmt)
    WRITE       reduce using rule 43 (returnStmt)
    WRITELN     reduce using rule 43 (returnStmt)
    RETURN      reduce using rule 43 (returnStmt)
    STFUNC      reduce using rule 43 (returnStmt)
    ENDFUNC     reduce using rule 43 (returnStmt)
    PARENL      reduce using rule 43 (returnStmt)


State 124

   19 compoundStmt: STFUNC stmtList ENDFUNC •

    ID          reduce using rule 19 (compoundStmt)
    TYPE        reduce using rule 19 (compoundStmt)
    NIL         reduce using rule 19 (compoundStmt)
    INTEGER     reduce using rule 19 (compoundStmt)
    DECIMAL     reduce using rule 19 (compoundStmt)
    ERRORTOKEN  reduce using rule 19 (compoundStmt)
    ADD         reduce using rule 19 (compoundStmt)
    SUB         reduce using rule 19 (compoundStmt)
    HEADLIST    reduce using rule 19 (compoundStmt)
    TAILLIST    reduce using rule 19 (compoundStmt)
    IF          reduce using rule 19 (compoundStmt)
    FOR         reduce using rule 19 (compoundStmt)
    READ        reduce using rule 19 (compoundStmt)
    WRITE       reduce using rule 19 (compoundStmt)
    WRITELN     reduce using rule 19 (compoundStmt)
    RETURN      reduce using rule 19 (compoundStmt)
    STFUNC      reduce using rule 19 (compoundStmt)
    ENDFUNC     reduce using rule 19 (compoundStmt)
    PARENL      reduce using rule 19 (compoundStmt)


State 125

   83 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    APPEND     reduce using rule 83 (factor)
    FILTER     reduce using rule 83 (factor)
    MAP        reduce using rule 83 (factor)
    SEMIC      reduce using rule 83 (factor)


State 126

   34 condStmt: ifStmt STFUNC ENDFUNC •
   35         | ifStmt STFUNC ENDFUNC • elseStmt

    ELSE  shift, and go to state 127

    ID          reduce using rule 34 (condStmt)
    TYPE        reduce using rule 34 (condStmt)
    NIL         reduce using rule 34 (condStmt)
    INTEGER     reduce using rule 34 (condStmt)
    DECIMAL     reduce using rule 34 (condStmt)
    ERRORTOKEN  reduce using rule 34 (condStmt)
    ADD         reduce using rule 34 (condStmt)
    SUB         reduce using rule 34 (condStmt)
    HEADLIST    reduce using rule 34 (condStmt)
    TAILLIST    reduce using rule 34 (condStmt)
    IF          reduce using rule 34 (condStmt)
    FOR         reduce using rule 34 (condStmt)
    READ        reduce using rule 34 (condStmt)
    WRITE       reduce using rule 34 (condStmt)
    WRITELN     reduce using rule 34 (condStmt)
    RETURN      reduce using rule 34 (condStmt)
    STFUNC      reduce using rule 34 (condStmt)
    ENDFUNC     reduce using rule 34 (condStmt)
    PARENL      reduce using rule 34 (condStmt)

    elseStmt  go to state 148


State 127

   38 elseStmt: ELSE • $@5 primitiveStmt

    ID          reduce using rule 37 ($@5)
    TYPE        reduce using rule 37 ($@5)
    NIL         reduce using rule 37 ($@5)
    INTEGER     reduce using rule 37 ($@5)
    DECIMAL     reduce using rule 37 ($@5)
    ERRORTOKEN  reduce using rule 37 ($@5)
    ADD         reduce using rule 37 ($@5)
    SUB         reduce using rule 37 ($@5)
    HEADLIST    reduce using rule 37 ($@5)
    TAILLIST    reduce using rule 37 ($@5)
    IF          reduce using rule 37 ($@5)
    FOR         reduce using rule 37 ($@5)
    READ        reduce using rule 37 ($@5)
    WRITE       reduce using rule 37 ($@5)
    WRITELN     reduce using rule 37 ($@5)
    RETURN      reduce using rule 37 ($@5)
    STFUNC      reduce using rule 37 ($@5)
    PARENL      reduce using rule 37 ($@5)

    $@5  go to state 149


State 128

   33 condStmt: ifStmt primitiveStmt elseStmt •

    ID          reduce using rule 33 (condStmt)
    TYPE        reduce using rule 33 (condStmt)
    NIL         reduce using rule 33 (condStmt)
    INTEGER     reduce using rule 33 (condStmt)
    DECIMAL     reduce using rule 33 (condStmt)
    ERRORTOKEN  reduce using rule 33 (condStmt)
    ADD         reduce using rule 33 (condStmt)
    SUB         reduce using rule 33 (condStmt)
    HEADLIST    reduce using rule 33 (condStmt)
    TAILLIST    reduce using rule 33 (condStmt)
    IF          reduce using rule 33 (condStmt)
    FOR         reduce using rule 33 (condStmt)
    READ        reduce using rule 33 (condStmt)
    WRITE       reduce using rule 33 (condStmt)
    WRITELN     reduce using rule 33 (condStmt)
    RETURN      reduce using rule 33 (condStmt)
    STFUNC      reduce using rule 33 (condStmt)
    ENDFUNC     reduce using rule 33 (condStmt)
    PARENL      reduce using rule 33 (condStmt)


State 129

   60 binLogicalExp: binLogicalExp binLogicalOp relationalExp •
   64 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 95
    GREATER    shift, and go to state 96
    SMALLEQ    shift, and go to state 97
    GREATEQ    shift, and go to state 98
    EQUALS     shift, and go to state 99
    DIFFERENT  shift, and go to state 100

    OR     reduce using rule 60 (binLogicalExp)
    AND    reduce using rule 60 (binLogicalExp)
    SEMIC  reduce using rule 60 (binLogicalExp)

    relationalOp  go to state 101


State 130

   77 mulExp: factor •

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    SEMIC      reduce using rule 77 (mulExp)


State 131

   64 relationalExp: relationalExp relationalOp sumExp •
   72 sumExp: sumExp • ADD mulExp
   73       | sumExp • SUB mulExp

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    OR         reduce using rule 64 (relationalExp)
    AND        reduce using rule 64 (relationalExp)
    SMALLER    reduce using rule 64 (relationalExp)
    GREATER    reduce using rule 64 (relationalExp)
    SMALLEQ    reduce using rule 64 (relationalExp)
    GREATEQ    reduce using rule 64 (relationalExp)
    EQUALS     reduce using rule 64 (relationalExp)
    DIFFERENT  reduce using rule 64 (relationalExp)
    SEMIC      reduce using rule 64 (relationalExp)


State 132

   72 sumExp: sumExp ADD mulExp •
   75 mulExp: mulExp • MULT factor
   76       | mulExp • DIV factor

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    ADD        reduce using rule 72 (sumExp)
    SUB        reduce using rule 72 (sumExp)
    OR         reduce using rule 72 (sumExp)
    AND        reduce using rule 72 (sumExp)
    SMALLER    reduce using rule 72 (sumExp)
    GREATER    reduce using rule 72 (sumExp)
    SMALLEQ    reduce using rule 72 (sumExp)
    GREATEQ    reduce using rule 72 (sumExp)
    EQUALS     reduce using rule 72 (sumExp)
    DIFFERENT  reduce using rule 72 (sumExp)
    SEMIC      reduce using rule 72 (sumExp)


State 133

   73 sumExp: sumExp SUB mulExp •
   75 mulExp: mulExp • MULT factor
   76       | mulExp • DIV factor

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    ADD        reduce using rule 73 (sumExp)
    SUB        reduce using rule 73 (sumExp)
    OR         reduce using rule 73 (sumExp)
    AND        reduce using rule 73 (sumExp)
    SMALLER    reduce using rule 73 (sumExp)
    GREATER    reduce using rule 73 (sumExp)
    SMALLEQ    reduce using rule 73 (sumExp)
    GREATEQ    reduce using rule 73 (sumExp)
    EQUALS     reduce using rule 73 (sumExp)
    DIFFERENT  reduce using rule 73 (sumExp)
    SEMIC      reduce using rule 73 (sumExp)


State 134

   75 mulExp: mulExp MULT factor •

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    SEMIC      reduce using rule 75 (mulExp)


State 135

   76 mulExp: mulExp DIV factor •

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    SEMIC      reduce using rule 76 (mulExp)


State 136

   55 binListExp: factor APPEND factor •

    SEMIC  reduce using rule 55 (binListExp)


State 137

   57 binListExp: factor FILTER factor •

    SEMIC  reduce using rule 57 (binListExp)


State 138

   56 binListExp: factor MAP factor •

    SEMIC  reduce using rule 56 (binListExp)


State 139

   90 callParams: callParams COMMA • simpleExp

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218

    simpleExp      go to state 150
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226


State 140

   88 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 88 (fCall)
    SUB        reduce using rule 88 (fCall)
    MULT       reduce using rule 88 (fCall)
    DIV        reduce using rule 88 (fCall)
    OR         reduce using rule 88 (fCall)
    AND        reduce using rule 88 (fCall)
    SMALLER    reduce using rule 88 (fCall)
    GREATER    reduce using rule 88 (fCall)
    SMALLEQ    reduce using rule 88 (fCall)
    GREATEQ    reduce using rule 88 (fCall)
    EQUALS     reduce using rule 88 (fCall)
    DIFFERENT  reduce using rule 88 (fCall)
    APPEND     reduce using rule 88 (fCall)
    FILTER     reduce using rule 88 (fCall)
    MAP        reduce using rule 88 (fCall)
    SEMIC      reduce using rule 88 (fCall)


State 141

   36 ifStmt: IF PARENL simpleExp PARENR •

    ID          reduce using rule 36 (ifStmt)
    TYPE        reduce using rule 36 (ifStmt)
    NIL         reduce using rule 36 (ifStmt)
    INTEGER     reduce using rule 36 (ifStmt)
    DECIMAL     reduce using rule 36 (ifStmt)
    ERRORTOKEN  reduce using rule 36 (ifStmt)
    ADD         reduce using rule 36 (ifStmt)
    SUB         reduce using rule 36 (ifStmt)
    HEADLIST    reduce using rule 36 (ifStmt)
    TAILLIST    reduce using rule 36 (ifStmt)
    IF          reduce using rule 36 (ifStmt)
    FOR         reduce using rule 36 (ifStmt)
    READ        reduce using rule 36 (ifStmt)
    WRITE       reduce using rule 36 (ifStmt)
    WRITELN     reduce using rule 36 (ifStmt)
    RETURN      reduce using rule 36 (ifStmt)
    STFUNC      reduce using rule 36 (ifStmt)
    PARENL      reduce using rule 36 (ifStmt)


State 142

   40 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

    ID          shift, and go to state 236
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 47

    simpleExp      go to state 151
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 143

   42 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    ID          shift, and go to state 236
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 47

    simpleExp      go to state 152
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 144

   49 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 153


State 145

   50 inOp: READ PARENL PARENR SEMIC •

    ID          reduce using rule 50 (inOp)
    TYPE        reduce using rule 50 (inOp)
    NIL         reduce using rule 50 (inOp)
    INTEGER     reduce using rule 50 (inOp)
    DECIMAL     reduce using rule 50 (inOp)
    ERRORTOKEN  reduce using rule 50 (inOp)
    ADD         reduce using rule 50 (inOp)
    SUB         reduce using rule 50 (inOp)
    HEADLIST    reduce using rule 50 (inOp)
    TAILLIST    reduce using rule 50 (inOp)
    IF          reduce using rule 50 (inOp)
    FOR         reduce using rule 50 (inOp)
    READ        reduce using rule 50 (inOp)
    WRITE       reduce using rule 50 (inOp)
    WRITELN     reduce using rule 50 (inOp)
    RETURN      reduce using rule 50 (inOp)
    STFUNC      reduce using rule 50 (inOp)
    ENDFUNC     reduce using rule 50 (inOp)
    PARENL      reduce using rule 50 (inOp)


State 146

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 154


State 147

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 155


State 148

   35 condStmt: ifStmt STFUNC ENDFUNC elseStmt •

    ID          reduce using rule 35 (condStmt)
    TYPE        reduce using rule 35 (condStmt)
    NIL         reduce using rule 35 (condStmt)
    INTEGER     reduce using rule 35 (condStmt)
    DECIMAL     reduce using rule 35 (condStmt)
    ERRORTOKEN  reduce using rule 35 (condStmt)
    ADD         reduce using rule 35 (condStmt)
    SUB         reduce using rule 35 (condStmt)
    HEADLIST    reduce using rule 35 (condStmt)
    TAILLIST    reduce using rule 35 (condStmt)
    IF          reduce using rule 35 (condStmt)
    FOR         reduce using rule 35 (condStmt)
    READ        reduce using rule 35 (condStmt)
    WRITE       reduce using rule 35 (condStmt)
    WRITELN     reduce using rule 35 (condStmt)
    RETURN      reduce using rule 35 (condStmt)
    STFUNC      reduce using rule 35 (condStmt)
    ENDFUNC     reduce using rule 35 (condStmt)
    PARENL      reduce using rule 35 (condStmt)


State 149

   38 elseStmt: ELSE $@5 • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    primitiveStmt         go to state 156
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 150

   90 callParams: callParams COMMA simpleExp •

    COMMA   reduce using rule 90 (callParams)
    PARENR  reduce using rule 90 (callParams)


State 151

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR $@6 primitiveStmt

    SEMIC  shift, and go to state 157


State 152

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR $@7 primitiveStmt

    SEMIC  shift, and go to state 158


State 153

   49 inOp: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 49 (inOp)
    TYPE        reduce using rule 49 (inOp)
    NIL         reduce using rule 49 (inOp)
    INTEGER     reduce using rule 49 (inOp)
    DECIMAL     reduce using rule 49 (inOp)
    ERRORTOKEN  reduce using rule 49 (inOp)
    ADD         reduce using rule 49 (inOp)
    SUB         reduce using rule 49 (inOp)
    HEADLIST    reduce using rule 49 (inOp)
    TAILLIST    reduce using rule 49 (inOp)
    IF          reduce using rule 49 (inOp)
    FOR         reduce using rule 49 (inOp)
    READ        reduce using rule 49 (inOp)
    WRITE       reduce using rule 49 (inOp)
    WRITELN     reduce using rule 49 (inOp)
    RETURN      reduce using rule 49 (inOp)
    STFUNC      reduce using rule 49 (inOp)
    ENDFUNC     reduce using rule 49 (inOp)
    PARENL      reduce using rule 49 (inOp)


State 154

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID          reduce using rule 51 (outOp)
    TYPE        reduce using rule 51 (outOp)
    NIL         reduce using rule 51 (outOp)
    INTEGER     reduce using rule 51 (outOp)
    DECIMAL     reduce using rule 51 (outOp)
    ERRORTOKEN  reduce using rule 51 (outOp)
    ADD         reduce using rule 51 (outOp)
    SUB         reduce using rule 51 (outOp)
    HEADLIST    reduce using rule 51 (outOp)
    TAILLIST    reduce using rule 51 (outOp)
    IF          reduce using rule 51 (outOp)
    FOR         reduce using rule 51 (outOp)
    READ        reduce using rule 51 (outOp)
    WRITE       reduce using rule 51 (outOp)
    WRITELN     reduce using rule 51 (outOp)
    RETURN      reduce using rule 51 (outOp)
    STFUNC      reduce using rule 51 (outOp)
    ENDFUNC     reduce using rule 51 (outOp)
    PARENL      reduce using rule 51 (outOp)


State 155

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID          reduce using rule 52 (outOp)
    TYPE        reduce using rule 52 (outOp)
    NIL         reduce using rule 52 (outOp)
    INTEGER     reduce using rule 52 (outOp)
    DECIMAL     reduce using rule 52 (outOp)
    ERRORTOKEN  reduce using rule 52 (outOp)
    ADD         reduce using rule 52 (outOp)
    SUB         reduce using rule 52 (outOp)
    HEADLIST    reduce using rule 52 (outOp)
    TAILLIST    reduce using rule 52 (outOp)
    IF          reduce using rule 52 (outOp)
    FOR         reduce using rule 52 (outOp)
    READ        reduce using rule 52 (outOp)
    WRITE       reduce using rule 52 (outOp)
    WRITELN     reduce using rule 52 (outOp)
    RETURN      reduce using rule 52 (outOp)
    STFUNC      reduce using rule 52 (outOp)
    ENDFUNC     reduce using rule 52 (outOp)
    PARENL      reduce using rule 52 (outOp)


State 156

   38 elseStmt: ELSE $@5 primitiveStmt •

    ID          reduce using rule 38 (elseStmt)
    TYPE        reduce using rule 38 (elseStmt)
    NIL         reduce using rule 38 (elseStmt)
    INTEGER     reduce using rule 38 (elseStmt)
    DECIMAL     reduce using rule 38 (elseStmt)
    ERRORTOKEN  reduce using rule 38 (elseStmt)
    ADD         reduce using rule 38 (elseStmt)
    SUB         reduce using rule 38 (elseStmt)
    HEADLIST    reduce using rule 38 (elseStmt)
    TAILLIST    reduce using rule 38 (elseStmt)
    IF          reduce using rule 38 (elseStmt)
    FOR         reduce using rule 38 (elseStmt)
    READ        reduce using rule 38 (elseStmt)
    WRITE       reduce using rule 38 (elseStmt)
    WRITELN     reduce using rule 38 (elseStmt)
    RETURN      reduce using rule 38 (elseStmt)
    STFUNC      reduce using rule 38 (elseStmt)
    ENDFUNC     reduce using rule 38 (elseStmt)
    PARENL      reduce using rule 38 (elseStmt)


State 157

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR $@6 primitiveStmt

    ID  shift, and go to state 159

    assignExp  go to state 160


State 158

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR $@7 primitiveStmt

    ID  shift, and go to state 159

    assignExp  go to state 161


State 159

   46 assignExp: ID • ASSIGN expression

    ASSIGN  shift, and go to state 237


State 160

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR $@6 primitiveStmt

    PARENR  shift, and go to state 162


State 161

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR $@7 primitiveStmt

    PARENR  shift, and go to state 163


State 162

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • $@6 primitiveStmt

    ID          reduce using rule 39 ($@6)
    TYPE        reduce using rule 39 ($@6)
    NIL         reduce using rule 39 ($@6)
    INTEGER     reduce using rule 39 ($@6)
    DECIMAL     reduce using rule 39 ($@6)
    ERRORTOKEN  reduce using rule 39 ($@6)
    ADD         reduce using rule 39 ($@6)
    SUB         reduce using rule 39 ($@6)
    HEADLIST    reduce using rule 39 ($@6)
    TAILLIST    reduce using rule 39 ($@6)
    IF          reduce using rule 39 ($@6)
    FOR         reduce using rule 39 ($@6)
    READ        reduce using rule 39 ($@6)
    WRITE       reduce using rule 39 ($@6)
    WRITELN     reduce using rule 39 ($@6)
    RETURN      reduce using rule 39 ($@6)
    STFUNC      reduce using rule 39 ($@6)
    PARENL      reduce using rule 39 ($@6)

    $@6  go to state 164


State 163

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • $@7 primitiveStmt

    ID          reduce using rule 41 ($@7)
    TYPE        reduce using rule 41 ($@7)
    NIL         reduce using rule 41 ($@7)
    INTEGER     reduce using rule 41 ($@7)
    DECIMAL     reduce using rule 41 ($@7)
    ERRORTOKEN  reduce using rule 41 ($@7)
    ADD         reduce using rule 41 ($@7)
    SUB         reduce using rule 41 ($@7)
    HEADLIST    reduce using rule 41 ($@7)
    TAILLIST    reduce using rule 41 ($@7)
    IF          reduce using rule 41 ($@7)
    FOR         reduce using rule 41 ($@7)
    READ        reduce using rule 41 ($@7)
    WRITE       reduce using rule 41 ($@7)
    WRITELN     reduce using rule 41 ($@7)
    RETURN      reduce using rule 41 ($@7)
    STFUNC      reduce using rule 41 ($@7)
    PARENL      reduce using rule 41 ($@7)

    $@7  go to state 165


State 164

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    primitiveStmt         go to state 166
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 165

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    primitiveStmt         go to state 167
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 166

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt •

    ID          reduce using rule 40 (iterStmt)
    TYPE        reduce using rule 40 (iterStmt)
    NIL         reduce using rule 40 (iterStmt)
    INTEGER     reduce using rule 40 (iterStmt)
    DECIMAL     reduce using rule 40 (iterStmt)
    ERRORTOKEN  reduce using rule 40 (iterStmt)
    ADD         reduce using rule 40 (iterStmt)
    SUB         reduce using rule 40 (iterStmt)
    HEADLIST    reduce using rule 40 (iterStmt)
    TAILLIST    reduce using rule 40 (iterStmt)
    IF          reduce using rule 40 (iterStmt)
    FOR         reduce using rule 40 (iterStmt)
    READ        reduce using rule 40 (iterStmt)
    WRITE       reduce using rule 40 (iterStmt)
    WRITELN     reduce using rule 40 (iterStmt)
    RETURN      reduce using rule 40 (iterStmt)
    STFUNC      reduce using rule 40 (iterStmt)
    ENDFUNC     reduce using rule 40 (iterStmt)
    PARENL      reduce using rule 40 (iterStmt)


State 167

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt •

    ID          reduce using rule 42 (iterStmt)
    TYPE        reduce using rule 42 (iterStmt)
    NIL         reduce using rule 42 (iterStmt)
    INTEGER     reduce using rule 42 (iterStmt)
    DECIMAL     reduce using rule 42 (iterStmt)
    ERRORTOKEN  reduce using rule 42 (iterStmt)
    ADD         reduce using rule 42 (iterStmt)
    SUB         reduce using rule 42 (iterStmt)
    HEADLIST    reduce using rule 42 (iterStmt)
    TAILLIST    reduce using rule 42 (iterStmt)
    IF          reduce using rule 42 (iterStmt)
    FOR         reduce using rule 42 (iterStmt)
    READ        reduce using rule 42 (iterStmt)
    WRITE       reduce using rule 42 (iterStmt)
    WRITELN     reduce using rule 42 (iterStmt)
    RETURN      reduce using rule 42 (iterStmt)
    STFUNC      reduce using rule 42 (iterStmt)
    ENDFUNC     reduce using rule 42 (iterStmt)
    PARENL      reduce using rule 42 (iterStmt)


State 168

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 238


State 169

   86 factor: NIL •

    ADD        reduce using rule 86 (factor)
    SUB        reduce using rule 86 (factor)
    MULT       reduce using rule 86 (factor)
    DIV        reduce using rule 86 (factor)
    OR         reduce using rule 86 (factor)
    AND        reduce using rule 86 (factor)
    SMALLER    reduce using rule 86 (factor)
    GREATER    reduce using rule 86 (factor)
    SMALLEQ    reduce using rule 86 (factor)
    GREATEQ    reduce using rule 86 (factor)
    EQUALS     reduce using rule 86 (factor)
    DIFFERENT  reduce using rule 86 (factor)
    SEMIC      reduce using rule 86 (factor)


State 170

   84 factor: INTEGER •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    SEMIC      reduce using rule 84 (factor)


State 171

   85 factor: DECIMAL •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    SEMIC      reduce using rule 85 (factor)


State 172

   87 factor: ERRORTOKEN •

    ADD        reduce using rule 87 (factor)
    SUB        reduce using rule 87 (factor)
    MULT       reduce using rule 87 (factor)
    DIV        reduce using rule 87 (factor)
    OR         reduce using rule 87 (factor)
    AND        reduce using rule 87 (factor)
    SMALLER    reduce using rule 87 (factor)
    GREATER    reduce using rule 87 (factor)
    SMALLEQ    reduce using rule 87 (factor)
    GREATEQ    reduce using rule 87 (factor)
    EQUALS     reduce using rule 87 (factor)
    DIFFERENT  reduce using rule 87 (factor)
    SEMIC      reduce using rule 87 (factor)


State 173

   83 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 239
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 174

   82 factor: fCall •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    SEMIC      reduce using rule 82 (factor)


State 175

   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    PARENL  shift, and go to state 240

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 176

   86 factor: NIL •

    ADD        reduce using rule 86 (factor)
    SUB        reduce using rule 86 (factor)
    MULT       reduce using rule 86 (factor)
    DIV        reduce using rule 86 (factor)
    OR         reduce using rule 86 (factor)
    AND        reduce using rule 86 (factor)
    SMALLER    reduce using rule 86 (factor)
    GREATER    reduce using rule 86 (factor)
    SMALLEQ    reduce using rule 86 (factor)
    GREATEQ    reduce using rule 86 (factor)
    EQUALS     reduce using rule 86 (factor)
    DIFFERENT  reduce using rule 86 (factor)
    APPEND     reduce using rule 86 (factor)
    FILTER     reduce using rule 86 (factor)
    MAP        reduce using rule 86 (factor)
    PARENR     reduce using rule 86 (factor)


State 177

   84 factor: INTEGER •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    APPEND     reduce using rule 84 (factor)
    FILTER     reduce using rule 84 (factor)
    MAP        reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 178

   85 factor: DECIMAL •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    APPEND     reduce using rule 85 (factor)
    FILTER     reduce using rule 85 (factor)
    MAP        reduce using rule 85 (factor)
    PARENR     reduce using rule 85 (factor)


State 179

   87 factor: ERRORTOKEN •

    ADD        reduce using rule 87 (factor)
    SUB        reduce using rule 87 (factor)
    MULT       reduce using rule 87 (factor)
    DIV        reduce using rule 87 (factor)
    OR         reduce using rule 87 (factor)
    AND        reduce using rule 87 (factor)
    SMALLER    reduce using rule 87 (factor)
    GREATER    reduce using rule 87 (factor)
    SMALLEQ    reduce using rule 87 (factor)
    GREATEQ    reduce using rule 87 (factor)
    EQUALS     reduce using rule 87 (factor)
    DIFFERENT  reduce using rule 87 (factor)
    APPEND     reduce using rule 87 (factor)
    FILTER     reduce using rule 87 (factor)
    MAP        reduce using rule 87 (factor)
    PARENR     reduce using rule 87 (factor)


State 180

   78 mulExp: ADD • factor

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    PARENL      shift, and go to state 246

    factor  go to state 247
    fCall   go to state 248


State 181

   79 mulExp: SUB • factor

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    PARENL      shift, and go to state 246

    factor  go to state 249
    fCall   go to state 248


State 182

   58 unaryListExp: HEADLIST • factor

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    PARENL      shift, and go to state 246

    factor  go to state 250
    fCall   go to state 248


State 183

   59 unaryListExp: TAILLIST • factor

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    PARENL      shift, and go to state 246

    factor  go to state 251
    fCall   go to state 248


State 184

   83 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 252
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 185

   48 simpleExp: binListExp •

    PARENR  reduce using rule 48 (simpleExp)


State 186

   80 mulExp: unaryListExp •

    ADD        reduce using rule 80 (mulExp)
    SUB        reduce using rule 80 (mulExp)
    MULT       reduce using rule 80 (mulExp)
    DIV        reduce using rule 80 (mulExp)
    OR         reduce using rule 80 (mulExp)
    AND        reduce using rule 80 (mulExp)
    SMALLER    reduce using rule 80 (mulExp)
    GREATER    reduce using rule 80 (mulExp)
    SMALLEQ    reduce using rule 80 (mulExp)
    GREATEQ    reduce using rule 80 (mulExp)
    EQUALS     reduce using rule 80 (mulExp)
    DIFFERENT  reduce using rule 80 (mulExp)
    PARENR     reduce using rule 80 (mulExp)


State 187

   47 simpleExp: binLogicalExp •
   60 binLogicalExp: binLogicalExp • binLogicalOp relationalExp

    OR   shift, and go to state 92
    AND  shift, and go to state 93

    PARENR  reduce using rule 47 (simpleExp)

    binLogicalOp  go to state 253


State 188

   61 binLogicalExp: relationalExp •
   64 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 95
    GREATER    shift, and go to state 96
    SMALLEQ    shift, and go to state 97
    GREATEQ    shift, and go to state 98
    EQUALS     shift, and go to state 99
    DIFFERENT  shift, and go to state 100

    OR      reduce using rule 61 (binLogicalExp)
    AND     reduce using rule 61 (binLogicalExp)
    PARENR  reduce using rule 61 (binLogicalExp)

    relationalOp  go to state 254


State 189

   65 relationalExp: sumExp •
   72 sumExp: sumExp • ADD mulExp
   73       | sumExp • SUB mulExp

    ADD  shift, and go to state 255
    SUB  shift, and go to state 256

    OR         reduce using rule 65 (relationalExp)
    AND        reduce using rule 65 (relationalExp)
    SMALLER    reduce using rule 65 (relationalExp)
    GREATER    reduce using rule 65 (relationalExp)
    SMALLEQ    reduce using rule 65 (relationalExp)
    GREATEQ    reduce using rule 65 (relationalExp)
    EQUALS     reduce using rule 65 (relationalExp)
    DIFFERENT  reduce using rule 65 (relationalExp)
    PARENR     reduce using rule 65 (relationalExp)


State 190

   74 sumExp: mulExp •
   75 mulExp: mulExp • MULT factor
   76       | mulExp • DIV factor

    MULT  shift, and go to state 257
    DIV   shift, and go to state 258

    ADD        reduce using rule 74 (sumExp)
    SUB        reduce using rule 74 (sumExp)
    OR         reduce using rule 74 (sumExp)
    AND        reduce using rule 74 (sumExp)
    SMALLER    reduce using rule 74 (sumExp)
    GREATER    reduce using rule 74 (sumExp)
    SMALLEQ    reduce using rule 74 (sumExp)
    GREATEQ    reduce using rule 74 (sumExp)
    EQUALS     reduce using rule 74 (sumExp)
    DIFFERENT  reduce using rule 74 (sumExp)
    PARENR     reduce using rule 74 (sumExp)


State 191

   55 binListExp: factor • APPEND factor
   56           | factor • MAP factor
   57           | factor • FILTER factor
   77 mulExp: factor •

    APPEND  shift, and go to state 259
    FILTER  shift, and go to state 260
    MAP     shift, and go to state 261

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    PARENR     reduce using rule 77 (mulExp)


State 192

   82 factor: fCall •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    APPEND     reduce using rule 82 (factor)
    FILTER     reduce using rule 82 (factor)
    MAP        reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 193

   40 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt
   42         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    PARENL  shift, and go to state 262


State 194

   49 inOp: READ • PARENL ID PARENR SEMIC
   50     | READ • PARENL PARENR SEMIC

    PARENL  shift, and go to state 263


State 195

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 264


State 196

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 265


State 197

   43 returnStmt: RETURN • expression SEMIC

    ID          shift, and go to state 30
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 47

    expression     go to state 266
    assignExp      go to state 58
    simpleExp      go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 198

   30 primitiveStmt: varDeclaration •

    ID          reduce using rule 30 (primitiveStmt)
    TYPE        reduce using rule 30 (primitiveStmt)
    NIL         reduce using rule 30 (primitiveStmt)
    INTEGER     reduce using rule 30 (primitiveStmt)
    DECIMAL     reduce using rule 30 (primitiveStmt)
    ERRORTOKEN  reduce using rule 30 (primitiveStmt)
    ELSE        reduce using rule 30 (primitiveStmt)
    ADD         reduce using rule 30 (primitiveStmt)
    SUB         reduce using rule 30 (primitiveStmt)
    HEADLIST    reduce using rule 30 (primitiveStmt)
    TAILLIST    reduce using rule 30 (primitiveStmt)
    IF          reduce using rule 30 (primitiveStmt)
    FOR         reduce using rule 30 (primitiveStmt)
    READ        reduce using rule 30 (primitiveStmt)
    WRITE       reduce using rule 30 (primitiveStmt)
    WRITELN     reduce using rule 30 (primitiveStmt)
    RETURN      reduce using rule 30 (primitiveStmt)
    STFUNC      reduce using rule 30 (primitiveStmt)
    ENDFUNC     reduce using rule 30 (primitiveStmt)
    PARENL      reduce using rule 30 (primitiveStmt)


State 199

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 267


State 200

   24 primitiveStmt: compoundStmt •

    ID          reduce using rule 24 (primitiveStmt)
    TYPE        reduce using rule 24 (primitiveStmt)
    NIL         reduce using rule 24 (primitiveStmt)
    INTEGER     reduce using rule 24 (primitiveStmt)
    DECIMAL     reduce using rule 24 (primitiveStmt)
    ERRORTOKEN  reduce using rule 24 (primitiveStmt)
    ELSE        reduce using rule 24 (primitiveStmt)
    ADD         reduce using rule 24 (primitiveStmt)
    SUB         reduce using rule 24 (primitiveStmt)
    HEADLIST    reduce using rule 24 (primitiveStmt)
    TAILLIST    reduce using rule 24 (primitiveStmt)
    IF          reduce using rule 24 (primitiveStmt)
    FOR         reduce using rule 24 (primitiveStmt)
    READ        reduce using rule 24 (primitiveStmt)
    WRITE       reduce using rule 24 (primitiveStmt)
    WRITELN     reduce using rule 24 (primitiveStmt)
    RETURN      reduce using rule 24 (primitiveStmt)
    STFUNC      reduce using rule 24 (primitiveStmt)
    ENDFUNC     reduce using rule 24 (primitiveStmt)
    PARENL      reduce using rule 24 (primitiveStmt)


State 201

   23 primitiveStmt: exprStmt •

    ID          reduce using rule 23 (primitiveStmt)
    TYPE        reduce using rule 23 (primitiveStmt)
    NIL         reduce using rule 23 (primitiveStmt)
    INTEGER     reduce using rule 23 (primitiveStmt)
    DECIMAL     reduce using rule 23 (primitiveStmt)
    ERRORTOKEN  reduce using rule 23 (primitiveStmt)
    ELSE        reduce using rule 23 (primitiveStmt)
    ADD         reduce using rule 23 (primitiveStmt)
    SUB         reduce using rule 23 (primitiveStmt)
    HEADLIST    reduce using rule 23 (primitiveStmt)
    TAILLIST    reduce using rule 23 (primitiveStmt)
    IF          reduce using rule 23 (primitiveStmt)
    FOR         reduce using rule 23 (primitiveStmt)
    READ        reduce using rule 23 (primitiveStmt)
    WRITE       reduce using rule 23 (primitiveStmt)
    WRITELN     reduce using rule 23 (primitiveStmt)
    RETURN      reduce using rule 23 (primitiveStmt)
    STFUNC      reduce using rule 23 (primitiveStmt)
    ENDFUNC     reduce using rule 23 (primitiveStmt)
    PARENL      reduce using rule 23 (primitiveStmt)


State 202

   25 primitiveStmt: condStmt •

    ID          reduce using rule 25 (primitiveStmt)
    TYPE        reduce using rule 25 (primitiveStmt)
    NIL         reduce using rule 25 (primitiveStmt)
    INTEGER     reduce using rule 25 (primitiveStmt)
    DECIMAL     reduce using rule 25 (primitiveStmt)
    ERRORTOKEN  reduce using rule 25 (primitiveStmt)
    ELSE        reduce using rule 25 (primitiveStmt)
    ADD         reduce using rule 25 (primitiveStmt)
    SUB         reduce using rule 25 (primitiveStmt)
    HEADLIST    reduce using rule 25 (primitiveStmt)
    TAILLIST    reduce using rule 25 (primitiveStmt)
    IF          reduce using rule 25 (primitiveStmt)
    FOR         reduce using rule 25 (primitiveStmt)
    READ        reduce using rule 25 (primitiveStmt)
    WRITE       reduce using rule 25 (primitiveStmt)
    WRITELN     reduce using rule 25 (primitiveStmt)
    RETURN      reduce using rule 25 (primitiveStmt)
    STFUNC      reduce using rule 25 (primitiveStmt)
    ENDFUNC     reduce using rule 25 (primitiveStmt)
    PARENL      reduce using rule 25 (primitiveStmt)


State 203

   32 condStmt: ifStmt • primitiveStmt
   33         | ifStmt • primitiveStmt elseStmt
   34         | ifStmt • STFUNC ENDFUNC
   35         | ifStmt • STFUNC ENDFUNC elseStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 193
    READ        shift, and go to state 194
    WRITE       shift, and go to state 195
    WRITELN     shift, and go to state 196
    RETURN      shift, and go to state 197
    STFUNC      shift, and go to state 268
    PARENL      shift, and go to state 47

    varDeclaration        go to state 198
    simpleVarDeclaration  go to state 199
    compoundStmt          go to state 200
    primitiveStmt         go to state 269
    exprStmt              go to state 201
    condStmt              go to state 202
    ifStmt                go to state 203
    iterStmt              go to state 204
    returnStmt            go to state 205
    expression            go to state 206
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 207
    outOp                 go to state 208
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 204

   26 primitiveStmt: iterStmt •

    ID          reduce using rule 26 (primitiveStmt)
    TYPE        reduce using rule 26 (primitiveStmt)
    NIL         reduce using rule 26 (primitiveStmt)
    INTEGER     reduce using rule 26 (primitiveStmt)
    DECIMAL     reduce using rule 26 (primitiveStmt)
    ERRORTOKEN  reduce using rule 26 (primitiveStmt)
    ELSE        reduce using rule 26 (primitiveStmt)
    ADD         reduce using rule 26 (primitiveStmt)
    SUB         reduce using rule 26 (primitiveStmt)
    HEADLIST    reduce using rule 26 (primitiveStmt)
    TAILLIST    reduce using rule 26 (primitiveStmt)
    IF          reduce using rule 26 (primitiveStmt)
    FOR         reduce using rule 26 (primitiveStmt)
    READ        reduce using rule 26 (primitiveStmt)
    WRITE       reduce using rule 26 (primitiveStmt)
    WRITELN     reduce using rule 26 (primitiveStmt)
    RETURN      reduce using rule 26 (primitiveStmt)
    STFUNC      reduce using rule 26 (primitiveStmt)
    ENDFUNC     reduce using rule 26 (primitiveStmt)
    PARENL      reduce using rule 26 (primitiveStmt)


State 205

   27 primitiveStmt: returnStmt •

    ID          reduce using rule 27 (primitiveStmt)
    TYPE        reduce using rule 27 (primitiveStmt)
    NIL         reduce using rule 27 (primitiveStmt)
    INTEGER     reduce using rule 27 (primitiveStmt)
    DECIMAL     reduce using rule 27 (primitiveStmt)
    ERRORTOKEN  reduce using rule 27 (primitiveStmt)
    ELSE        reduce using rule 27 (primitiveStmt)
    ADD         reduce using rule 27 (primitiveStmt)
    SUB         reduce using rule 27 (primitiveStmt)
    HEADLIST    reduce using rule 27 (primitiveStmt)
    TAILLIST    reduce using rule 27 (primitiveStmt)
    IF          reduce using rule 27 (primitiveStmt)
    FOR         reduce using rule 27 (primitiveStmt)
    READ        reduce using rule 27 (primitiveStmt)
    WRITE       reduce using rule 27 (primitiveStmt)
    WRITELN     reduce using rule 27 (primitiveStmt)
    RETURN      reduce using rule 27 (primitiveStmt)
    STFUNC      reduce using rule 27 (primitiveStmt)
    ENDFUNC     reduce using rule 27 (primitiveStmt)
    PARENL      reduce using rule 27 (primitiveStmt)


State 206

   31 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 270


State 207

   28 primitiveStmt: inOp •

    ID          reduce using rule 28 (primitiveStmt)
    TYPE        reduce using rule 28 (primitiveStmt)
    NIL         reduce using rule 28 (primitiveStmt)
    INTEGER     reduce using rule 28 (primitiveStmt)
    DECIMAL     reduce using rule 28 (primitiveStmt)
    ERRORTOKEN  reduce using rule 28 (primitiveStmt)
    ELSE        reduce using rule 28 (primitiveStmt)
    ADD         reduce using rule 28 (primitiveStmt)
    SUB         reduce using rule 28 (primitiveStmt)
    HEADLIST    reduce using rule 28 (primitiveStmt)
    TAILLIST    reduce using rule 28 (primitiveStmt)
    IF          reduce using rule 28 (primitiveStmt)
    FOR         reduce using rule 28 (primitiveStmt)
    READ        reduce using rule 28 (primitiveStmt)
    WRITE       reduce using rule 28 (primitiveStmt)
    WRITELN     reduce using rule 28 (primitiveStmt)
    RETURN      reduce using rule 28 (primitiveStmt)
    STFUNC      reduce using rule 28 (primitiveStmt)
    ENDFUNC     reduce using rule 28 (primitiveStmt)
    PARENL      reduce using rule 28 (primitiveStmt)


State 208

   29 primitiveStmt: outOp •

    ID          reduce using rule 29 (primitiveStmt)
    TYPE        reduce using rule 29 (primitiveStmt)
    NIL         reduce using rule 29 (primitiveStmt)
    INTEGER     reduce using rule 29 (primitiveStmt)
    DECIMAL     reduce using rule 29 (primitiveStmt)
    ERRORTOKEN  reduce using rule 29 (primitiveStmt)
    ELSE        reduce using rule 29 (primitiveStmt)
    ADD         reduce using rule 29 (primitiveStmt)
    SUB         reduce using rule 29 (primitiveStmt)
    HEADLIST    reduce using rule 29 (primitiveStmt)
    TAILLIST    reduce using rule 29 (primitiveStmt)
    IF          reduce using rule 29 (primitiveStmt)
    FOR         reduce using rule 29 (primitiveStmt)
    READ        reduce using rule 29 (primitiveStmt)
    WRITE       reduce using rule 29 (primitiveStmt)
    WRITELN     reduce using rule 29 (primitiveStmt)
    RETURN      reduce using rule 29 (primitiveStmt)
    STFUNC      reduce using rule 29 (primitiveStmt)
    ENDFUNC     reduce using rule 29 (primitiveStmt)
    PARENL      reduce using rule 29 (primitiveStmt)


State 209

   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    PARENL  shift, and go to state 271

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    COMMA      reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 210

   86 factor: NIL •

    ADD        reduce using rule 86 (factor)
    SUB        reduce using rule 86 (factor)
    MULT       reduce using rule 86 (factor)
    DIV        reduce using rule 86 (factor)
    OR         reduce using rule 86 (factor)
    AND        reduce using rule 86 (factor)
    SMALLER    reduce using rule 86 (factor)
    GREATER    reduce using rule 86 (factor)
    SMALLEQ    reduce using rule 86 (factor)
    GREATEQ    reduce using rule 86 (factor)
    EQUALS     reduce using rule 86 (factor)
    DIFFERENT  reduce using rule 86 (factor)
    APPEND     reduce using rule 86 (factor)
    FILTER     reduce using rule 86 (factor)
    MAP        reduce using rule 86 (factor)
    COMMA      reduce using rule 86 (factor)
    PARENR     reduce using rule 86 (factor)


State 211

   84 factor: INTEGER •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    APPEND     reduce using rule 84 (factor)
    FILTER     reduce using rule 84 (factor)
    MAP        reduce using rule 84 (factor)
    COMMA      reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 212

   85 factor: DECIMAL •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    APPEND     reduce using rule 85 (factor)
    FILTER     reduce using rule 85 (factor)
    MAP        reduce using rule 85 (factor)
    COMMA      reduce using rule 85 (factor)
    PARENR     reduce using rule 85 (factor)


State 213

   87 factor: ERRORTOKEN •

    ADD        reduce using rule 87 (factor)
    SUB        reduce using rule 87 (factor)
    MULT       reduce using rule 87 (factor)
    DIV        reduce using rule 87 (factor)
    OR         reduce using rule 87 (factor)
    AND        reduce using rule 87 (factor)
    SMALLER    reduce using rule 87 (factor)
    GREATER    reduce using rule 87 (factor)
    SMALLEQ    reduce using rule 87 (factor)
    GREATEQ    reduce using rule 87 (factor)
    EQUALS     reduce using rule 87 (factor)
    DIFFERENT  reduce using rule 87 (factor)
    APPEND     reduce using rule 87 (factor)
    FILTER     reduce using rule 87 (factor)
    MAP        reduce using rule 87 (factor)
    COMMA      reduce using rule 87 (factor)
    PARENR     reduce using rule 87 (factor)


State 214

   78 mulExp: ADD • factor

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    PARENL      shift, and go to state 277

    factor  go to state 278
    fCall   go to state 279


State 215

   79 mulExp: SUB • factor

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    PARENL      shift, and go to state 277

    factor  go to state 280
    fCall   go to state 279


State 216

   58 unaryListExp: HEADLIST • factor

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    PARENL      shift, and go to state 277

    factor  go to state 281
    fCall   go to state 279


State 217

   59 unaryListExp: TAILLIST • factor

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    PARENL      shift, and go to state 277

    factor  go to state 282
    fCall   go to state 279


State 218

   83 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 283
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 219

   48 simpleExp: binListExp •

    COMMA   reduce using rule 48 (simpleExp)
    PARENR  reduce using rule 48 (simpleExp)


State 220

   80 mulExp: unaryListExp •

    ADD        reduce using rule 80 (mulExp)
    SUB        reduce using rule 80 (mulExp)
    MULT       reduce using rule 80 (mulExp)
    DIV        reduce using rule 80 (mulExp)
    OR         reduce using rule 80 (mulExp)
    AND        reduce using rule 80 (mulExp)
    SMALLER    reduce using rule 80 (mulExp)
    GREATER    reduce using rule 80 (mulExp)
    SMALLEQ    reduce using rule 80 (mulExp)
    GREATEQ    reduce using rule 80 (mulExp)
    EQUALS     reduce using rule 80 (mulExp)
    DIFFERENT  reduce using rule 80 (mulExp)
    COMMA      reduce using rule 80 (mulExp)
    PARENR     reduce using rule 80 (mulExp)


State 221

   47 simpleExp: binLogicalExp •
   60 binLogicalExp: binLogicalExp • binLogicalOp relationalExp

    OR   shift, and go to state 92
    AND  shift, and go to state 93

    COMMA   reduce using rule 47 (simpleExp)
    PARENR  reduce using rule 47 (simpleExp)

    binLogicalOp  go to state 284


State 222

   61 binLogicalExp: relationalExp •
   64 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 95
    GREATER    shift, and go to state 96
    SMALLEQ    shift, and go to state 97
    GREATEQ    shift, and go to state 98
    EQUALS     shift, and go to state 99
    DIFFERENT  shift, and go to state 100

    OR      reduce using rule 61 (binLogicalExp)
    AND     reduce using rule 61 (binLogicalExp)
    COMMA   reduce using rule 61 (binLogicalExp)
    PARENR  reduce using rule 61 (binLogicalExp)

    relationalOp  go to state 285


State 223

   65 relationalExp: sumExp •
   72 sumExp: sumExp • ADD mulExp
   73       | sumExp • SUB mulExp

    ADD  shift, and go to state 286
    SUB  shift, and go to state 287

    OR         reduce using rule 65 (relationalExp)
    AND        reduce using rule 65 (relationalExp)
    SMALLER    reduce using rule 65 (relationalExp)
    GREATER    reduce using rule 65 (relationalExp)
    SMALLEQ    reduce using rule 65 (relationalExp)
    GREATEQ    reduce using rule 65 (relationalExp)
    EQUALS     reduce using rule 65 (relationalExp)
    DIFFERENT  reduce using rule 65 (relationalExp)
    COMMA      reduce using rule 65 (relationalExp)
    PARENR     reduce using rule 65 (relationalExp)


State 224

   74 sumExp: mulExp •
   75 mulExp: mulExp • MULT factor
   76       | mulExp • DIV factor

    MULT  shift, and go to state 288
    DIV   shift, and go to state 289

    ADD        reduce using rule 74 (sumExp)
    SUB        reduce using rule 74 (sumExp)
    OR         reduce using rule 74 (sumExp)
    AND        reduce using rule 74 (sumExp)
    SMALLER    reduce using rule 74 (sumExp)
    GREATER    reduce using rule 74 (sumExp)
    SMALLEQ    reduce using rule 74 (sumExp)
    GREATEQ    reduce using rule 74 (sumExp)
    EQUALS     reduce using rule 74 (sumExp)
    DIFFERENT  reduce using rule 74 (sumExp)
    COMMA      reduce using rule 74 (sumExp)
    PARENR     reduce using rule 74 (sumExp)


State 225

   55 binListExp: factor • APPEND factor
   56           | factor • MAP factor
   57           | factor • FILTER factor
   77 mulExp: factor •

    APPEND  shift, and go to state 290
    FILTER  shift, and go to state 291
    MAP     shift, and go to state 292

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    COMMA      reduce using rule 77 (mulExp)
    PARENR     reduce using rule 77 (mulExp)


State 226

   82 factor: fCall •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    APPEND     reduce using rule 82 (factor)
    FILTER     reduce using rule 82 (factor)
    MAP        reduce using rule 82 (factor)
    COMMA      reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 227

   88 fCall: ID PARENL • callParams PARENR
   89      | ID PARENL • PARENR

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218
    PARENR      shift, and go to state 293

    simpleExp      go to state 112
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226
    callParams     go to state 294


State 228

   19 compoundStmt: STFUNC stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    ENDFUNC     shift, and go to state 295
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    primitiveStmt         go to state 88
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 229

   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    PARENL  shift, and go to state 296

    SEMIC  reduce using rule 81 (factor)


State 230

   86 factor: NIL •

    SEMIC  reduce using rule 86 (factor)


State 231

   84 factor: INTEGER •

    SEMIC  reduce using rule 84 (factor)


State 232

   85 factor: DECIMAL •

    SEMIC  reduce using rule 85 (factor)


State 233

   87 factor: ERRORTOKEN •

    SEMIC  reduce using rule 87 (factor)


State 234

   83 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 297
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 235

   82 factor: fCall •

    SEMIC  reduce using rule 82 (factor)


State 236

   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    PARENL  shift, and go to state 72

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    SEMIC      reduce using rule 81 (factor)


State 237

   46 assignExp: ID ASSIGN • expression

    ID          shift, and go to state 298
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    expression     go to state 299
    assignExp      go to state 300
    simpleExp      go to state 301
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 238

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID          reduce using rule 7 (varDeclaration)
    TYPE        reduce using rule 7 (varDeclaration)
    NIL         reduce using rule 7 (varDeclaration)
    INTEGER     reduce using rule 7 (varDeclaration)
    DECIMAL     reduce using rule 7 (varDeclaration)
    ERRORTOKEN  reduce using rule 7 (varDeclaration)
    ADD         reduce using rule 7 (varDeclaration)
    SUB         reduce using rule 7 (varDeclaration)
    HEADLIST    reduce using rule 7 (varDeclaration)
    TAILLIST    reduce using rule 7 (varDeclaration)
    IF          reduce using rule 7 (varDeclaration)
    FOR         reduce using rule 7 (varDeclaration)
    READ        reduce using rule 7 (varDeclaration)
    WRITE       reduce using rule 7 (varDeclaration)
    WRITELN     reduce using rule 7 (varDeclaration)
    RETURN      reduce using rule 7 (varDeclaration)
    STFUNC      reduce using rule 7 (varDeclaration)
    ENDFUNC     reduce using rule 7 (varDeclaration)
    PARENL      reduce using rule 7 (varDeclaration)


State 239

   83 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 302


State 240

   88 fCall: ID PARENL • callParams PARENR
   89      | ID PARENL • PARENR

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218
    PARENR      shift, and go to state 303

    simpleExp      go to state 112
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226
    callParams     go to state 304


State 241

   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    PARENL  shift, and go to state 305

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 242

   86 factor: NIL •

    ADD        reduce using rule 86 (factor)
    SUB        reduce using rule 86 (factor)
    MULT       reduce using rule 86 (factor)
    DIV        reduce using rule 86 (factor)
    OR         reduce using rule 86 (factor)
    AND        reduce using rule 86 (factor)
    SMALLER    reduce using rule 86 (factor)
    GREATER    reduce using rule 86 (factor)
    SMALLEQ    reduce using rule 86 (factor)
    GREATEQ    reduce using rule 86 (factor)
    EQUALS     reduce using rule 86 (factor)
    DIFFERENT  reduce using rule 86 (factor)
    PARENR     reduce using rule 86 (factor)


State 243

   84 factor: INTEGER •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 244

   85 factor: DECIMAL •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    PARENR     reduce using rule 85 (factor)


State 245

   87 factor: ERRORTOKEN •

    ADD        reduce using rule 87 (factor)
    SUB        reduce using rule 87 (factor)
    MULT       reduce using rule 87 (factor)
    DIV        reduce using rule 87 (factor)
    OR         reduce using rule 87 (factor)
    AND        reduce using rule 87 (factor)
    SMALLER    reduce using rule 87 (factor)
    GREATER    reduce using rule 87 (factor)
    SMALLEQ    reduce using rule 87 (factor)
    GREATEQ    reduce using rule 87 (factor)
    EQUALS     reduce using rule 87 (factor)
    DIFFERENT  reduce using rule 87 (factor)
    PARENR     reduce using rule 87 (factor)


State 246

   83 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 306
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 247

   78 mulExp: ADD factor •

    ADD        reduce using rule 78 (mulExp)
    SUB        reduce using rule 78 (mulExp)
    MULT       reduce using rule 78 (mulExp)
    DIV        reduce using rule 78 (mulExp)
    OR         reduce using rule 78 (mulExp)
    AND        reduce using rule 78 (mulExp)
    SMALLER    reduce using rule 78 (mulExp)
    GREATER    reduce using rule 78 (mulExp)
    SMALLEQ    reduce using rule 78 (mulExp)
    GREATEQ    reduce using rule 78 (mulExp)
    EQUALS     reduce using rule 78 (mulExp)
    DIFFERENT  reduce using rule 78 (mulExp)
    PARENR     reduce using rule 78 (mulExp)


State 248

   82 factor: fCall •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 249

   79 mulExp: SUB factor •

    ADD        reduce using rule 79 (mulExp)
    SUB        reduce using rule 79 (mulExp)
    MULT       reduce using rule 79 (mulExp)
    DIV        reduce using rule 79 (mulExp)
    OR         reduce using rule 79 (mulExp)
    AND        reduce using rule 79 (mulExp)
    SMALLER    reduce using rule 79 (mulExp)
    GREATER    reduce using rule 79 (mulExp)
    SMALLEQ    reduce using rule 79 (mulExp)
    GREATEQ    reduce using rule 79 (mulExp)
    EQUALS     reduce using rule 79 (mulExp)
    DIFFERENT  reduce using rule 79 (mulExp)
    PARENR     reduce using rule 79 (mulExp)


State 250

   58 unaryListExp: HEADLIST factor •

    ADD        reduce using rule 58 (unaryListExp)
    SUB        reduce using rule 58 (unaryListExp)
    MULT       reduce using rule 58 (unaryListExp)
    DIV        reduce using rule 58 (unaryListExp)
    OR         reduce using rule 58 (unaryListExp)
    AND        reduce using rule 58 (unaryListExp)
    SMALLER    reduce using rule 58 (unaryListExp)
    GREATER    reduce using rule 58 (unaryListExp)
    SMALLEQ    reduce using rule 58 (unaryListExp)
    GREATEQ    reduce using rule 58 (unaryListExp)
    EQUALS     reduce using rule 58 (unaryListExp)
    DIFFERENT  reduce using rule 58 (unaryListExp)
    PARENR     reduce using rule 58 (unaryListExp)


State 251

   59 unaryListExp: TAILLIST factor •

    ADD        reduce using rule 59 (unaryListExp)
    SUB        reduce using rule 59 (unaryListExp)
    MULT       reduce using rule 59 (unaryListExp)
    DIV        reduce using rule 59 (unaryListExp)
    OR         reduce using rule 59 (unaryListExp)
    AND        reduce using rule 59 (unaryListExp)
    SMALLER    reduce using rule 59 (unaryListExp)
    GREATER    reduce using rule 59 (unaryListExp)
    SMALLEQ    reduce using rule 59 (unaryListExp)
    GREATEQ    reduce using rule 59 (unaryListExp)
    EQUALS     reduce using rule 59 (unaryListExp)
    DIFFERENT  reduce using rule 59 (unaryListExp)
    PARENR     reduce using rule 59 (unaryListExp)


State 252

   83 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 307


State 253

   60 binLogicalExp: binLogicalExp binLogicalOp • relationalExp

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 246

    unaryListExp   go to state 186
    relationalExp  go to state 308
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 309
    fCall          go to state 248


State 254

   64 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 246

    unaryListExp  go to state 186
    sumExp        go to state 310
    mulExp        go to state 190
    factor        go to state 309
    fCall         go to state 248


State 255

   72 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 246

    unaryListExp  go to state 186
    mulExp        go to state 311
    factor        go to state 309
    fCall         go to state 248


State 256

   73 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 246

    unaryListExp  go to state 186
    mulExp        go to state 312
    factor        go to state 309
    fCall         go to state 248


State 257

   75 mulExp: mulExp MULT • factor

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    PARENL      shift, and go to state 246

    factor  go to state 313
    fCall   go to state 248


State 258

   76 mulExp: mulExp DIV • factor

    ID          shift, and go to state 241
    NIL         shift, and go to state 242
    INTEGER     shift, and go to state 243
    DECIMAL     shift, and go to state 244
    ERRORTOKEN  shift, and go to state 245
    PARENL      shift, and go to state 246

    factor  go to state 314
    fCall   go to state 248


State 259

   55 binListExp: factor APPEND • factor

    ID          shift, and go to state 315
    NIL         shift, and go to state 316
    INTEGER     shift, and go to state 317
    DECIMAL     shift, and go to state 318
    ERRORTOKEN  shift, and go to state 319
    PARENL      shift, and go to state 320

    factor  go to state 321
    fCall   go to state 322


State 260

   57 binListExp: factor FILTER • factor

    ID          shift, and go to state 315
    NIL         shift, and go to state 316
    INTEGER     shift, and go to state 317
    DECIMAL     shift, and go to state 318
    ERRORTOKEN  shift, and go to state 319
    PARENL      shift, and go to state 320

    factor  go to state 323
    fCall   go to state 322


State 261

   56 binListExp: factor MAP • factor

    ID          shift, and go to state 315
    NIL         shift, and go to state 316
    INTEGER     shift, and go to state 317
    DECIMAL     shift, and go to state 318
    ERRORTOKEN  shift, and go to state 319
    PARENL      shift, and go to state 320

    factor  go to state 324
    fCall   go to state 322


State 262

   40 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt
   42         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    ID          shift, and go to state 30
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 47

    assignExp      go to state 325
    simpleExp      go to state 326
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 263

   49 inOp: READ PARENL • ID PARENR SEMIC
   50     | READ PARENL • PARENR SEMIC

    ID      shift, and go to state 327
    PARENR  shift, and go to state 328


State 264

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 175
    STRING      shift, and go to state 119
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 120
    outConst       go to state 329
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 265

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 175
    STRING      shift, and go to state 119
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 120
    outConst       go to state 330
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 266

   43 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 331


State 267

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID          reduce using rule 7 (varDeclaration)
    TYPE        reduce using rule 7 (varDeclaration)
    NIL         reduce using rule 7 (varDeclaration)
    INTEGER     reduce using rule 7 (varDeclaration)
    DECIMAL     reduce using rule 7 (varDeclaration)
    ERRORTOKEN  reduce using rule 7 (varDeclaration)
    ELSE        reduce using rule 7 (varDeclaration)
    ADD         reduce using rule 7 (varDeclaration)
    SUB         reduce using rule 7 (varDeclaration)
    HEADLIST    reduce using rule 7 (varDeclaration)
    TAILLIST    reduce using rule 7 (varDeclaration)
    IF          reduce using rule 7 (varDeclaration)
    FOR         reduce using rule 7 (varDeclaration)
    READ        reduce using rule 7 (varDeclaration)
    WRITE       reduce using rule 7 (varDeclaration)
    WRITELN     reduce using rule 7 (varDeclaration)
    RETURN      reduce using rule 7 (varDeclaration)
    STFUNC      reduce using rule 7 (varDeclaration)
    ENDFUNC     reduce using rule 7 (varDeclaration)
    PARENL      reduce using rule 7 (varDeclaration)


State 268

   19 compoundStmt: STFUNC • stmtList ENDFUNC
   34 condStmt: ifStmt STFUNC • ENDFUNC
   35         | ifStmt STFUNC • ENDFUNC elseStmt

    error       shift, and go to state 29
    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    ENDFUNC     shift, and go to state 332
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    stmtList              go to state 228
    primitiveStmt         go to state 51
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 269

   32 condStmt: ifStmt primitiveStmt •
   33         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 333

    ID          reduce using rule 32 (condStmt)
    TYPE        reduce using rule 32 (condStmt)
    NIL         reduce using rule 32 (condStmt)
    INTEGER     reduce using rule 32 (condStmt)
    DECIMAL     reduce using rule 32 (condStmt)
    ERRORTOKEN  reduce using rule 32 (condStmt)
    ADD         reduce using rule 32 (condStmt)
    SUB         reduce using rule 32 (condStmt)
    HEADLIST    reduce using rule 32 (condStmt)
    TAILLIST    reduce using rule 32 (condStmt)
    IF          reduce using rule 32 (condStmt)
    FOR         reduce using rule 32 (condStmt)
    READ        reduce using rule 32 (condStmt)
    WRITE       reduce using rule 32 (condStmt)
    WRITELN     reduce using rule 32 (condStmt)
    RETURN      reduce using rule 32 (condStmt)
    STFUNC      reduce using rule 32 (condStmt)
    ENDFUNC     reduce using rule 32 (condStmt)
    PARENL      reduce using rule 32 (condStmt)

    elseStmt  go to state 334


State 270

   31 exprStmt: expression SEMIC •

    ID          reduce using rule 31 (exprStmt)
    TYPE        reduce using rule 31 (exprStmt)
    NIL         reduce using rule 31 (exprStmt)
    INTEGER     reduce using rule 31 (exprStmt)
    DECIMAL     reduce using rule 31 (exprStmt)
    ERRORTOKEN  reduce using rule 31 (exprStmt)
    ELSE        reduce using rule 31 (exprStmt)
    ADD         reduce using rule 31 (exprStmt)
    SUB         reduce using rule 31 (exprStmt)
    HEADLIST    reduce using rule 31 (exprStmt)
    TAILLIST    reduce using rule 31 (exprStmt)
    IF          reduce using rule 31 (exprStmt)
    FOR         reduce using rule 31 (exprStmt)
    READ        reduce using rule 31 (exprStmt)
    WRITE       reduce using rule 31 (exprStmt)
    WRITELN     reduce using rule 31 (exprStmt)
    RETURN      reduce using rule 31 (exprStmt)
    STFUNC      reduce using rule 31 (exprStmt)
    ENDFUNC     reduce using rule 31 (exprStmt)
    PARENL      reduce using rule 31 (exprStmt)


State 271

   88 fCall: ID PARENL • callParams PARENR
   89      | ID PARENL • PARENR

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218
    PARENR      shift, and go to state 335

    simpleExp      go to state 112
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226
    callParams     go to state 336


State 272

   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    PARENL  shift, and go to state 337

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    COMMA      reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 273

   86 factor: NIL •

    ADD        reduce using rule 86 (factor)
    SUB        reduce using rule 86 (factor)
    MULT       reduce using rule 86 (factor)
    DIV        reduce using rule 86 (factor)
    OR         reduce using rule 86 (factor)
    AND        reduce using rule 86 (factor)
    SMALLER    reduce using rule 86 (factor)
    GREATER    reduce using rule 86 (factor)
    SMALLEQ    reduce using rule 86 (factor)
    GREATEQ    reduce using rule 86 (factor)
    EQUALS     reduce using rule 86 (factor)
    DIFFERENT  reduce using rule 86 (factor)
    COMMA      reduce using rule 86 (factor)
    PARENR     reduce using rule 86 (factor)


State 274

   84 factor: INTEGER •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    COMMA      reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 275

   85 factor: DECIMAL •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    COMMA      reduce using rule 85 (factor)
    PARENR     reduce using rule 85 (factor)


State 276

   87 factor: ERRORTOKEN •

    ADD        reduce using rule 87 (factor)
    SUB        reduce using rule 87 (factor)
    MULT       reduce using rule 87 (factor)
    DIV        reduce using rule 87 (factor)
    OR         reduce using rule 87 (factor)
    AND        reduce using rule 87 (factor)
    SMALLER    reduce using rule 87 (factor)
    GREATER    reduce using rule 87 (factor)
    SMALLEQ    reduce using rule 87 (factor)
    GREATEQ    reduce using rule 87 (factor)
    EQUALS     reduce using rule 87 (factor)
    DIFFERENT  reduce using rule 87 (factor)
    COMMA      reduce using rule 87 (factor)
    PARENR     reduce using rule 87 (factor)


State 277

   83 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 338
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 278

   78 mulExp: ADD factor •

    ADD        reduce using rule 78 (mulExp)
    SUB        reduce using rule 78 (mulExp)
    MULT       reduce using rule 78 (mulExp)
    DIV        reduce using rule 78 (mulExp)
    OR         reduce using rule 78 (mulExp)
    AND        reduce using rule 78 (mulExp)
    SMALLER    reduce using rule 78 (mulExp)
    GREATER    reduce using rule 78 (mulExp)
    SMALLEQ    reduce using rule 78 (mulExp)
    GREATEQ    reduce using rule 78 (mulExp)
    EQUALS     reduce using rule 78 (mulExp)
    DIFFERENT  reduce using rule 78 (mulExp)
    COMMA      reduce using rule 78 (mulExp)
    PARENR     reduce using rule 78 (mulExp)


State 279

   82 factor: fCall •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    COMMA      reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 280

   79 mulExp: SUB factor •

    ADD        reduce using rule 79 (mulExp)
    SUB        reduce using rule 79 (mulExp)
    MULT       reduce using rule 79 (mulExp)
    DIV        reduce using rule 79 (mulExp)
    OR         reduce using rule 79 (mulExp)
    AND        reduce using rule 79 (mulExp)
    SMALLER    reduce using rule 79 (mulExp)
    GREATER    reduce using rule 79 (mulExp)
    SMALLEQ    reduce using rule 79 (mulExp)
    GREATEQ    reduce using rule 79 (mulExp)
    EQUALS     reduce using rule 79 (mulExp)
    DIFFERENT  reduce using rule 79 (mulExp)
    COMMA      reduce using rule 79 (mulExp)
    PARENR     reduce using rule 79 (mulExp)


State 281

   58 unaryListExp: HEADLIST factor •

    ADD        reduce using rule 58 (unaryListExp)
    SUB        reduce using rule 58 (unaryListExp)
    MULT       reduce using rule 58 (unaryListExp)
    DIV        reduce using rule 58 (unaryListExp)
    OR         reduce using rule 58 (unaryListExp)
    AND        reduce using rule 58 (unaryListExp)
    SMALLER    reduce using rule 58 (unaryListExp)
    GREATER    reduce using rule 58 (unaryListExp)
    SMALLEQ    reduce using rule 58 (unaryListExp)
    GREATEQ    reduce using rule 58 (unaryListExp)
    EQUALS     reduce using rule 58 (unaryListExp)
    DIFFERENT  reduce using rule 58 (unaryListExp)
    COMMA      reduce using rule 58 (unaryListExp)
    PARENR     reduce using rule 58 (unaryListExp)


State 282

   59 unaryListExp: TAILLIST factor •

    ADD        reduce using rule 59 (unaryListExp)
    SUB        reduce using rule 59 (unaryListExp)
    MULT       reduce using rule 59 (unaryListExp)
    DIV        reduce using rule 59 (unaryListExp)
    OR         reduce using rule 59 (unaryListExp)
    AND        reduce using rule 59 (unaryListExp)
    SMALLER    reduce using rule 59 (unaryListExp)
    GREATER    reduce using rule 59 (unaryListExp)
    SMALLEQ    reduce using rule 59 (unaryListExp)
    GREATEQ    reduce using rule 59 (unaryListExp)
    EQUALS     reduce using rule 59 (unaryListExp)
    DIFFERENT  reduce using rule 59 (unaryListExp)
    COMMA      reduce using rule 59 (unaryListExp)
    PARENR     reduce using rule 59 (unaryListExp)


State 283

   83 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 339


State 284

   60 binLogicalExp: binLogicalExp binLogicalOp • relationalExp

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 277

    unaryListExp   go to state 220
    relationalExp  go to state 340
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 341
    fCall          go to state 279


State 285

   64 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 277

    unaryListExp  go to state 220
    sumExp        go to state 342
    mulExp        go to state 224
    factor        go to state 341
    fCall         go to state 279


State 286

   72 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 277

    unaryListExp  go to state 220
    mulExp        go to state 343
    factor        go to state 341
    fCall         go to state 279


State 287

   73 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 277

    unaryListExp  go to state 220
    mulExp        go to state 344
    factor        go to state 341
    fCall         go to state 279


State 288

   75 mulExp: mulExp MULT • factor

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    PARENL      shift, and go to state 277

    factor  go to state 345
    fCall   go to state 279


State 289

   76 mulExp: mulExp DIV • factor

    ID          shift, and go to state 272
    NIL         shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    ERRORTOKEN  shift, and go to state 276
    PARENL      shift, and go to state 277

    factor  go to state 346
    fCall   go to state 279


State 290

   55 binListExp: factor APPEND • factor

    ID          shift, and go to state 347
    NIL         shift, and go to state 348
    INTEGER     shift, and go to state 349
    DECIMAL     shift, and go to state 350
    ERRORTOKEN  shift, and go to state 351
    PARENL      shift, and go to state 352

    factor  go to state 353
    fCall   go to state 354


State 291

   57 binListExp: factor FILTER • factor

    ID          shift, and go to state 347
    NIL         shift, and go to state 348
    INTEGER     shift, and go to state 349
    DECIMAL     shift, and go to state 350
    ERRORTOKEN  shift, and go to state 351
    PARENL      shift, and go to state 352

    factor  go to state 355
    fCall   go to state 354


State 292

   56 binListExp: factor MAP • factor

    ID          shift, and go to state 347
    NIL         shift, and go to state 348
    INTEGER     shift, and go to state 349
    DECIMAL     shift, and go to state 350
    ERRORTOKEN  shift, and go to state 351
    PARENL      shift, and go to state 352

    factor  go to state 356
    fCall   go to state 354


State 293

   89 fCall: ID PARENL PARENR •

    ADD        reduce using rule 89 (fCall)
    SUB        reduce using rule 89 (fCall)
    MULT       reduce using rule 89 (fCall)
    DIV        reduce using rule 89 (fCall)
    OR         reduce using rule 89 (fCall)
    AND        reduce using rule 89 (fCall)
    SMALLER    reduce using rule 89 (fCall)
    GREATER    reduce using rule 89 (fCall)
    SMALLEQ    reduce using rule 89 (fCall)
    GREATEQ    reduce using rule 89 (fCall)
    EQUALS     reduce using rule 89 (fCall)
    DIFFERENT  reduce using rule 89 (fCall)
    SEMIC      reduce using rule 89 (fCall)


State 294

   88 fCall: ID PARENL callParams • PARENR
   90 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 139
    PARENR  shift, and go to state 357


State 295

   19 compoundStmt: STFUNC stmtList ENDFUNC •

    ID          reduce using rule 19 (compoundStmt)
    TYPE        reduce using rule 19 (compoundStmt)
    NIL         reduce using rule 19 (compoundStmt)
    INTEGER     reduce using rule 19 (compoundStmt)
    DECIMAL     reduce using rule 19 (compoundStmt)
    ERRORTOKEN  reduce using rule 19 (compoundStmt)
    ELSE        reduce using rule 19 (compoundStmt)
    ADD         reduce using rule 19 (compoundStmt)
    SUB         reduce using rule 19 (compoundStmt)
    HEADLIST    reduce using rule 19 (compoundStmt)
    TAILLIST    reduce using rule 19 (compoundStmt)
    IF          reduce using rule 19 (compoundStmt)
    FOR         reduce using rule 19 (compoundStmt)
    READ        reduce using rule 19 (compoundStmt)
    WRITE       reduce using rule 19 (compoundStmt)
    WRITELN     reduce using rule 19 (compoundStmt)
    RETURN      reduce using rule 19 (compoundStmt)
    STFUNC      reduce using rule 19 (compoundStmt)
    ENDFUNC     reduce using rule 19 (compoundStmt)
    PARENL      reduce using rule 19 (compoundStmt)


State 296

   88 fCall: ID PARENL • callParams PARENR
   89      | ID PARENL • PARENR

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218
    PARENR      shift, and go to state 358

    simpleExp      go to state 112
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226
    callParams     go to state 359


State 297

   83 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 360


State 298

   46 assignExp: ID • ASSIGN expression
   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    ASSIGN  shift, and go to state 237
    PARENL  shift, and go to state 240

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 299

   46 assignExp: ID ASSIGN expression •

    PARENR  reduce using rule 46 (assignExp)


State 300

   44 expression: assignExp •

    PARENR  reduce using rule 44 (expression)


State 301

   45 expression: simpleExp •

    PARENR  reduce using rule 45 (expression)


State 302

   83 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    SEMIC      reduce using rule 83 (factor)


State 303

   89 fCall: ID PARENL PARENR •

    ADD        reduce using rule 89 (fCall)
    SUB        reduce using rule 89 (fCall)
    MULT       reduce using rule 89 (fCall)
    DIV        reduce using rule 89 (fCall)
    OR         reduce using rule 89 (fCall)
    AND        reduce using rule 89 (fCall)
    SMALLER    reduce using rule 89 (fCall)
    GREATER    reduce using rule 89 (fCall)
    SMALLEQ    reduce using rule 89 (fCall)
    GREATEQ    reduce using rule 89 (fCall)
    EQUALS     reduce using rule 89 (fCall)
    DIFFERENT  reduce using rule 89 (fCall)
    APPEND     reduce using rule 89 (fCall)
    FILTER     reduce using rule 89 (fCall)
    MAP        reduce using rule 89 (fCall)
    PARENR     reduce using rule 89 (fCall)


State 304

   88 fCall: ID PARENL callParams • PARENR
   90 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 139
    PARENR  shift, and go to state 361


State 305

   88 fCall: ID PARENL • callParams PARENR
   89      | ID PARENL • PARENR

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218
    PARENR      shift, and go to state 362

    simpleExp      go to state 112
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226
    callParams     go to state 363


State 306

   83 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 364


State 307

   83 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    APPEND     reduce using rule 83 (factor)
    FILTER     reduce using rule 83 (factor)
    MAP        reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 308

   60 binLogicalExp: binLogicalExp binLogicalOp relationalExp •
   64 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 95
    GREATER    shift, and go to state 96
    SMALLEQ    shift, and go to state 97
    GREATEQ    shift, and go to state 98
    EQUALS     shift, and go to state 99
    DIFFERENT  shift, and go to state 100

    OR      reduce using rule 60 (binLogicalExp)
    AND     reduce using rule 60 (binLogicalExp)
    PARENR  reduce using rule 60 (binLogicalExp)

    relationalOp  go to state 254


State 309

   77 mulExp: factor •

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    PARENR     reduce using rule 77 (mulExp)


State 310

   64 relationalExp: relationalExp relationalOp sumExp •
   72 sumExp: sumExp • ADD mulExp
   73       | sumExp • SUB mulExp

    ADD  shift, and go to state 255
    SUB  shift, and go to state 256

    OR         reduce using rule 64 (relationalExp)
    AND        reduce using rule 64 (relationalExp)
    SMALLER    reduce using rule 64 (relationalExp)
    GREATER    reduce using rule 64 (relationalExp)
    SMALLEQ    reduce using rule 64 (relationalExp)
    GREATEQ    reduce using rule 64 (relationalExp)
    EQUALS     reduce using rule 64 (relationalExp)
    DIFFERENT  reduce using rule 64 (relationalExp)
    PARENR     reduce using rule 64 (relationalExp)


State 311

   72 sumExp: sumExp ADD mulExp •
   75 mulExp: mulExp • MULT factor
   76       | mulExp • DIV factor

    MULT  shift, and go to state 257
    DIV   shift, and go to state 258

    ADD        reduce using rule 72 (sumExp)
    SUB        reduce using rule 72 (sumExp)
    OR         reduce using rule 72 (sumExp)
    AND        reduce using rule 72 (sumExp)
    SMALLER    reduce using rule 72 (sumExp)
    GREATER    reduce using rule 72 (sumExp)
    SMALLEQ    reduce using rule 72 (sumExp)
    GREATEQ    reduce using rule 72 (sumExp)
    EQUALS     reduce using rule 72 (sumExp)
    DIFFERENT  reduce using rule 72 (sumExp)
    PARENR     reduce using rule 72 (sumExp)


State 312

   73 sumExp: sumExp SUB mulExp •
   75 mulExp: mulExp • MULT factor
   76       | mulExp • DIV factor

    MULT  shift, and go to state 257
    DIV   shift, and go to state 258

    ADD        reduce using rule 73 (sumExp)
    SUB        reduce using rule 73 (sumExp)
    OR         reduce using rule 73 (sumExp)
    AND        reduce using rule 73 (sumExp)
    SMALLER    reduce using rule 73 (sumExp)
    GREATER    reduce using rule 73 (sumExp)
    SMALLEQ    reduce using rule 73 (sumExp)
    GREATEQ    reduce using rule 73 (sumExp)
    EQUALS     reduce using rule 73 (sumExp)
    DIFFERENT  reduce using rule 73 (sumExp)
    PARENR     reduce using rule 73 (sumExp)


State 313

   75 mulExp: mulExp MULT factor •

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    PARENR     reduce using rule 75 (mulExp)


State 314

   76 mulExp: mulExp DIV factor •

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    PARENR     reduce using rule 76 (mulExp)


State 315

   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    PARENL  shift, and go to state 365

    PARENR  reduce using rule 81 (factor)


State 316

   86 factor: NIL •

    PARENR  reduce using rule 86 (factor)


State 317

   84 factor: INTEGER •

    PARENR  reduce using rule 84 (factor)


State 318

   85 factor: DECIMAL •

    PARENR  reduce using rule 85 (factor)


State 319

   87 factor: ERRORTOKEN •

    PARENR  reduce using rule 87 (factor)


State 320

   83 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 366
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 321

   55 binListExp: factor APPEND factor •

    PARENR  reduce using rule 55 (binListExp)


State 322

   82 factor: fCall •

    PARENR  reduce using rule 82 (factor)


State 323

   57 binListExp: factor FILTER factor •

    PARENR  reduce using rule 57 (binListExp)


State 324

   56 binListExp: factor MAP factor •

    PARENR  reduce using rule 56 (binListExp)


State 325

   40 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

    SEMIC  shift, and go to state 367


State 326

   42 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    SEMIC  shift, and go to state 368


State 327

   49 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 369


State 328

   50 inOp: READ PARENL PARENR • SEMIC

    SEMIC  shift, and go to state 370


State 329

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 371


State 330

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 372


State 331

   43 returnStmt: RETURN expression SEMIC •

    ID          reduce using rule 43 (returnStmt)
    TYPE        reduce using rule 43 (returnStmt)
    NIL         reduce using rule 43 (returnStmt)
    INTEGER     reduce using rule 43 (returnStmt)
    DECIMAL     reduce using rule 43 (returnStmt)
    ERRORTOKEN  reduce using rule 43 (returnStmt)
    ELSE        reduce using rule 43 (returnStmt)
    ADD         reduce using rule 43 (returnStmt)
    SUB         reduce using rule 43 (returnStmt)
    HEADLIST    reduce using rule 43 (returnStmt)
    TAILLIST    reduce using rule 43 (returnStmt)
    IF          reduce using rule 43 (returnStmt)
    FOR         reduce using rule 43 (returnStmt)
    READ        reduce using rule 43 (returnStmt)
    WRITE       reduce using rule 43 (returnStmt)
    WRITELN     reduce using rule 43 (returnStmt)
    RETURN      reduce using rule 43 (returnStmt)
    STFUNC      reduce using rule 43 (returnStmt)
    ENDFUNC     reduce using rule 43 (returnStmt)
    PARENL      reduce using rule 43 (returnStmt)


State 332

   34 condStmt: ifStmt STFUNC ENDFUNC •
   35         | ifStmt STFUNC ENDFUNC • elseStmt

    ELSE  shift, and go to state 333

    ID          reduce using rule 34 (condStmt)
    TYPE        reduce using rule 34 (condStmt)
    NIL         reduce using rule 34 (condStmt)
    INTEGER     reduce using rule 34 (condStmt)
    DECIMAL     reduce using rule 34 (condStmt)
    ERRORTOKEN  reduce using rule 34 (condStmt)
    ADD         reduce using rule 34 (condStmt)
    SUB         reduce using rule 34 (condStmt)
    HEADLIST    reduce using rule 34 (condStmt)
    TAILLIST    reduce using rule 34 (condStmt)
    IF          reduce using rule 34 (condStmt)
    FOR         reduce using rule 34 (condStmt)
    READ        reduce using rule 34 (condStmt)
    WRITE       reduce using rule 34 (condStmt)
    WRITELN     reduce using rule 34 (condStmt)
    RETURN      reduce using rule 34 (condStmt)
    STFUNC      reduce using rule 34 (condStmt)
    ENDFUNC     reduce using rule 34 (condStmt)
    PARENL      reduce using rule 34 (condStmt)

    elseStmt  go to state 373


State 333

   38 elseStmt: ELSE • $@5 primitiveStmt

    ID          reduce using rule 37 ($@5)
    TYPE        reduce using rule 37 ($@5)
    NIL         reduce using rule 37 ($@5)
    INTEGER     reduce using rule 37 ($@5)
    DECIMAL     reduce using rule 37 ($@5)
    ERRORTOKEN  reduce using rule 37 ($@5)
    ADD         reduce using rule 37 ($@5)
    SUB         reduce using rule 37 ($@5)
    HEADLIST    reduce using rule 37 ($@5)
    TAILLIST    reduce using rule 37 ($@5)
    IF          reduce using rule 37 ($@5)
    FOR         reduce using rule 37 ($@5)
    READ        reduce using rule 37 ($@5)
    WRITE       reduce using rule 37 ($@5)
    WRITELN     reduce using rule 37 ($@5)
    RETURN      reduce using rule 37 ($@5)
    STFUNC      reduce using rule 37 ($@5)
    PARENL      reduce using rule 37 ($@5)

    $@5  go to state 374


State 334

   33 condStmt: ifStmt primitiveStmt elseStmt •

    ID          reduce using rule 33 (condStmt)
    TYPE        reduce using rule 33 (condStmt)
    NIL         reduce using rule 33 (condStmt)
    INTEGER     reduce using rule 33 (condStmt)
    DECIMAL     reduce using rule 33 (condStmt)
    ERRORTOKEN  reduce using rule 33 (condStmt)
    ELSE        reduce using rule 33 (condStmt)
    ADD         reduce using rule 33 (condStmt)
    SUB         reduce using rule 33 (condStmt)
    HEADLIST    reduce using rule 33 (condStmt)
    TAILLIST    reduce using rule 33 (condStmt)
    IF          reduce using rule 33 (condStmt)
    FOR         reduce using rule 33 (condStmt)
    READ        reduce using rule 33 (condStmt)
    WRITE       reduce using rule 33 (condStmt)
    WRITELN     reduce using rule 33 (condStmt)
    RETURN      reduce using rule 33 (condStmt)
    STFUNC      reduce using rule 33 (condStmt)
    ENDFUNC     reduce using rule 33 (condStmt)
    PARENL      reduce using rule 33 (condStmt)


State 335

   89 fCall: ID PARENL PARENR •

    ADD        reduce using rule 89 (fCall)
    SUB        reduce using rule 89 (fCall)
    MULT       reduce using rule 89 (fCall)
    DIV        reduce using rule 89 (fCall)
    OR         reduce using rule 89 (fCall)
    AND        reduce using rule 89 (fCall)
    SMALLER    reduce using rule 89 (fCall)
    GREATER    reduce using rule 89 (fCall)
    SMALLEQ    reduce using rule 89 (fCall)
    GREATEQ    reduce using rule 89 (fCall)
    EQUALS     reduce using rule 89 (fCall)
    DIFFERENT  reduce using rule 89 (fCall)
    APPEND     reduce using rule 89 (fCall)
    FILTER     reduce using rule 89 (fCall)
    MAP        reduce using rule 89 (fCall)
    COMMA      reduce using rule 89 (fCall)
    PARENR     reduce using rule 89 (fCall)


State 336

   88 fCall: ID PARENL callParams • PARENR
   90 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 139
    PARENR  shift, and go to state 375


State 337

   88 fCall: ID PARENL • callParams PARENR
   89      | ID PARENL • PARENR

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218
    PARENR      shift, and go to state 376

    simpleExp      go to state 112
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226
    callParams     go to state 377


State 338

   83 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 378


State 339

   83 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    APPEND     reduce using rule 83 (factor)
    FILTER     reduce using rule 83 (factor)
    MAP        reduce using rule 83 (factor)
    COMMA      reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 340

   60 binLogicalExp: binLogicalExp binLogicalOp relationalExp •
   64 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 95
    GREATER    shift, and go to state 96
    SMALLEQ    shift, and go to state 97
    GREATEQ    shift, and go to state 98
    EQUALS     shift, and go to state 99
    DIFFERENT  shift, and go to state 100

    OR      reduce using rule 60 (binLogicalExp)
    AND     reduce using rule 60 (binLogicalExp)
    COMMA   reduce using rule 60 (binLogicalExp)
    PARENR  reduce using rule 60 (binLogicalExp)

    relationalOp  go to state 285


State 341

   77 mulExp: factor •

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    COMMA      reduce using rule 77 (mulExp)
    PARENR     reduce using rule 77 (mulExp)


State 342

   64 relationalExp: relationalExp relationalOp sumExp •
   72 sumExp: sumExp • ADD mulExp
   73       | sumExp • SUB mulExp

    ADD  shift, and go to state 286
    SUB  shift, and go to state 287

    OR         reduce using rule 64 (relationalExp)
    AND        reduce using rule 64 (relationalExp)
    SMALLER    reduce using rule 64 (relationalExp)
    GREATER    reduce using rule 64 (relationalExp)
    SMALLEQ    reduce using rule 64 (relationalExp)
    GREATEQ    reduce using rule 64 (relationalExp)
    EQUALS     reduce using rule 64 (relationalExp)
    DIFFERENT  reduce using rule 64 (relationalExp)
    COMMA      reduce using rule 64 (relationalExp)
    PARENR     reduce using rule 64 (relationalExp)


State 343

   72 sumExp: sumExp ADD mulExp •
   75 mulExp: mulExp • MULT factor
   76       | mulExp • DIV factor

    MULT  shift, and go to state 288
    DIV   shift, and go to state 289

    ADD        reduce using rule 72 (sumExp)
    SUB        reduce using rule 72 (sumExp)
    OR         reduce using rule 72 (sumExp)
    AND        reduce using rule 72 (sumExp)
    SMALLER    reduce using rule 72 (sumExp)
    GREATER    reduce using rule 72 (sumExp)
    SMALLEQ    reduce using rule 72 (sumExp)
    GREATEQ    reduce using rule 72 (sumExp)
    EQUALS     reduce using rule 72 (sumExp)
    DIFFERENT  reduce using rule 72 (sumExp)
    COMMA      reduce using rule 72 (sumExp)
    PARENR     reduce using rule 72 (sumExp)


State 344

   73 sumExp: sumExp SUB mulExp •
   75 mulExp: mulExp • MULT factor
   76       | mulExp • DIV factor

    MULT  shift, and go to state 288
    DIV   shift, and go to state 289

    ADD        reduce using rule 73 (sumExp)
    SUB        reduce using rule 73 (sumExp)
    OR         reduce using rule 73 (sumExp)
    AND        reduce using rule 73 (sumExp)
    SMALLER    reduce using rule 73 (sumExp)
    GREATER    reduce using rule 73 (sumExp)
    SMALLEQ    reduce using rule 73 (sumExp)
    GREATEQ    reduce using rule 73 (sumExp)
    EQUALS     reduce using rule 73 (sumExp)
    DIFFERENT  reduce using rule 73 (sumExp)
    COMMA      reduce using rule 73 (sumExp)
    PARENR     reduce using rule 73 (sumExp)


State 345

   75 mulExp: mulExp MULT factor •

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    COMMA      reduce using rule 75 (mulExp)
    PARENR     reduce using rule 75 (mulExp)


State 346

   76 mulExp: mulExp DIV factor •

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    COMMA      reduce using rule 76 (mulExp)
    PARENR     reduce using rule 76 (mulExp)


State 347

   81 factor: ID •
   88 fCall: ID • PARENL callParams PARENR
   89      | ID • PARENL PARENR

    PARENL  shift, and go to state 379

    COMMA   reduce using rule 81 (factor)
    PARENR  reduce using rule 81 (factor)


State 348

   86 factor: NIL •

    COMMA   reduce using rule 86 (factor)
    PARENR  reduce using rule 86 (factor)


State 349

   84 factor: INTEGER •

    COMMA   reduce using rule 84 (factor)
    PARENR  reduce using rule 84 (factor)


State 350

   85 factor: DECIMAL •

    COMMA   reduce using rule 85 (factor)
    PARENR  reduce using rule 85 (factor)


State 351

   87 factor: ERRORTOKEN •

    COMMA   reduce using rule 87 (factor)
    PARENR  reduce using rule 87 (factor)


State 352

   83 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 175
    NIL         shift, and go to state 176
    INTEGER     shift, and go to state 177
    DECIMAL     shift, and go to state 178
    ERRORTOKEN  shift, and go to state 179
    ADD         shift, and go to state 180
    SUB         shift, and go to state 181
    HEADLIST    shift, and go to state 182
    TAILLIST    shift, and go to state 183
    PARENL      shift, and go to state 184

    simpleExp      go to state 380
    binListExp     go to state 185
    unaryListExp   go to state 186
    binLogicalExp  go to state 187
    relationalExp  go to state 188
    sumExp         go to state 189
    mulExp         go to state 190
    factor         go to state 191
    fCall          go to state 192


State 353

   55 binListExp: factor APPEND factor •

    COMMA   reduce using rule 55 (binListExp)
    PARENR  reduce using rule 55 (binListExp)


State 354

   82 factor: fCall •

    COMMA   reduce using rule 82 (factor)
    PARENR  reduce using rule 82 (factor)


State 355

   57 binListExp: factor FILTER factor •

    COMMA   reduce using rule 57 (binListExp)
    PARENR  reduce using rule 57 (binListExp)


State 356

   56 binListExp: factor MAP factor •

    COMMA   reduce using rule 56 (binListExp)
    PARENR  reduce using rule 56 (binListExp)


State 357

   88 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 88 (fCall)
    SUB        reduce using rule 88 (fCall)
    MULT       reduce using rule 88 (fCall)
    DIV        reduce using rule 88 (fCall)
    OR         reduce using rule 88 (fCall)
    AND        reduce using rule 88 (fCall)
    SMALLER    reduce using rule 88 (fCall)
    GREATER    reduce using rule 88 (fCall)
    SMALLEQ    reduce using rule 88 (fCall)
    GREATEQ    reduce using rule 88 (fCall)
    EQUALS     reduce using rule 88 (fCall)
    DIFFERENT  reduce using rule 88 (fCall)
    SEMIC      reduce using rule 88 (fCall)


State 358

   89 fCall: ID PARENL PARENR •

    SEMIC  reduce using rule 89 (fCall)


State 359

   88 fCall: ID PARENL callParams • PARENR
   90 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 139
    PARENR  shift, and go to state 381


State 360

   83 factor: PARENL simpleExp PARENR •

    SEMIC  reduce using rule 83 (factor)


State 361

   88 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 88 (fCall)
    SUB        reduce using rule 88 (fCall)
    MULT       reduce using rule 88 (fCall)
    DIV        reduce using rule 88 (fCall)
    OR         reduce using rule 88 (fCall)
    AND        reduce using rule 88 (fCall)
    SMALLER    reduce using rule 88 (fCall)
    GREATER    reduce using rule 88 (fCall)
    SMALLEQ    reduce using rule 88 (fCall)
    GREATEQ    reduce using rule 88 (fCall)
    EQUALS     reduce using rule 88 (fCall)
    DIFFERENT  reduce using rule 88 (fCall)
    APPEND     reduce using rule 88 (fCall)
    FILTER     reduce using rule 88 (fCall)
    MAP        reduce using rule 88 (fCall)
    PARENR     reduce using rule 88 (fCall)


State 362

   89 fCall: ID PARENL PARENR •

    ADD        reduce using rule 89 (fCall)
    SUB        reduce using rule 89 (fCall)
    MULT       reduce using rule 89 (fCall)
    DIV        reduce using rule 89 (fCall)
    OR         reduce using rule 89 (fCall)
    AND        reduce using rule 89 (fCall)
    SMALLER    reduce using rule 89 (fCall)
    GREATER    reduce using rule 89 (fCall)
    SMALLEQ    reduce using rule 89 (fCall)
    GREATEQ    reduce using rule 89 (fCall)
    EQUALS     reduce using rule 89 (fCall)
    DIFFERENT  reduce using rule 89 (fCall)
    PARENR     reduce using rule 89 (fCall)


State 363

   88 fCall: ID PARENL callParams • PARENR
   90 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 139
    PARENR  shift, and go to state 382


State 364

   83 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 365

   88 fCall: ID PARENL • callParams PARENR
   89      | ID PARENL • PARENR

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218
    PARENR      shift, and go to state 383

    simpleExp      go to state 112
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226
    callParams     go to state 384


State 366

   83 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 385


State 367

   40 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

    ID          shift, and go to state 236
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 47

    simpleExp      go to state 386
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 368

   42 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    ID          shift, and go to state 236
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    PARENL      shift, and go to state 47

    simpleExp      go to state 387
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 369

   49 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 388


State 370

   50 inOp: READ PARENL PARENR SEMIC •

    ID          reduce using rule 50 (inOp)
    TYPE        reduce using rule 50 (inOp)
    NIL         reduce using rule 50 (inOp)
    INTEGER     reduce using rule 50 (inOp)
    DECIMAL     reduce using rule 50 (inOp)
    ERRORTOKEN  reduce using rule 50 (inOp)
    ELSE        reduce using rule 50 (inOp)
    ADD         reduce using rule 50 (inOp)
    SUB         reduce using rule 50 (inOp)
    HEADLIST    reduce using rule 50 (inOp)
    TAILLIST    reduce using rule 50 (inOp)
    IF          reduce using rule 50 (inOp)
    FOR         reduce using rule 50 (inOp)
    READ        reduce using rule 50 (inOp)
    WRITE       reduce using rule 50 (inOp)
    WRITELN     reduce using rule 50 (inOp)
    RETURN      reduce using rule 50 (inOp)
    STFUNC      reduce using rule 50 (inOp)
    ENDFUNC     reduce using rule 50 (inOp)
    PARENL      reduce using rule 50 (inOp)


State 371

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 389


State 372

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 390


State 373

   35 condStmt: ifStmt STFUNC ENDFUNC elseStmt •

    ID          reduce using rule 35 (condStmt)
    TYPE        reduce using rule 35 (condStmt)
    NIL         reduce using rule 35 (condStmt)
    INTEGER     reduce using rule 35 (condStmt)
    DECIMAL     reduce using rule 35 (condStmt)
    ERRORTOKEN  reduce using rule 35 (condStmt)
    ELSE        reduce using rule 35 (condStmt)
    ADD         reduce using rule 35 (condStmt)
    SUB         reduce using rule 35 (condStmt)
    HEADLIST    reduce using rule 35 (condStmt)
    TAILLIST    reduce using rule 35 (condStmt)
    IF          reduce using rule 35 (condStmt)
    FOR         reduce using rule 35 (condStmt)
    READ        reduce using rule 35 (condStmt)
    WRITE       reduce using rule 35 (condStmt)
    WRITELN     reduce using rule 35 (condStmt)
    RETURN      reduce using rule 35 (condStmt)
    STFUNC      reduce using rule 35 (condStmt)
    ENDFUNC     reduce using rule 35 (condStmt)
    PARENL      reduce using rule 35 (condStmt)


State 374

   38 elseStmt: ELSE $@5 • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 193
    READ        shift, and go to state 194
    WRITE       shift, and go to state 195
    WRITELN     shift, and go to state 196
    RETURN      shift, and go to state 197
    STFUNC      shift, and go to state 391
    PARENL      shift, and go to state 47

    varDeclaration        go to state 198
    simpleVarDeclaration  go to state 199
    compoundStmt          go to state 200
    primitiveStmt         go to state 392
    exprStmt              go to state 201
    condStmt              go to state 202
    ifStmt                go to state 203
    iterStmt              go to state 204
    returnStmt            go to state 205
    expression            go to state 206
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 207
    outOp                 go to state 208
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 375

   88 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 88 (fCall)
    SUB        reduce using rule 88 (fCall)
    MULT       reduce using rule 88 (fCall)
    DIV        reduce using rule 88 (fCall)
    OR         reduce using rule 88 (fCall)
    AND        reduce using rule 88 (fCall)
    SMALLER    reduce using rule 88 (fCall)
    GREATER    reduce using rule 88 (fCall)
    SMALLEQ    reduce using rule 88 (fCall)
    GREATEQ    reduce using rule 88 (fCall)
    EQUALS     reduce using rule 88 (fCall)
    DIFFERENT  reduce using rule 88 (fCall)
    APPEND     reduce using rule 88 (fCall)
    FILTER     reduce using rule 88 (fCall)
    MAP        reduce using rule 88 (fCall)
    COMMA      reduce using rule 88 (fCall)
    PARENR     reduce using rule 88 (fCall)


State 376

   89 fCall: ID PARENL PARENR •

    ADD        reduce using rule 89 (fCall)
    SUB        reduce using rule 89 (fCall)
    MULT       reduce using rule 89 (fCall)
    DIV        reduce using rule 89 (fCall)
    OR         reduce using rule 89 (fCall)
    AND        reduce using rule 89 (fCall)
    SMALLER    reduce using rule 89 (fCall)
    GREATER    reduce using rule 89 (fCall)
    SMALLEQ    reduce using rule 89 (fCall)
    GREATEQ    reduce using rule 89 (fCall)
    EQUALS     reduce using rule 89 (fCall)
    DIFFERENT  reduce using rule 89 (fCall)
    COMMA      reduce using rule 89 (fCall)
    PARENR     reduce using rule 89 (fCall)


State 377

   88 fCall: ID PARENL callParams • PARENR
   90 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 139
    PARENR  shift, and go to state 393


State 378

   83 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    COMMA      reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 379

   88 fCall: ID PARENL • callParams PARENR
   89      | ID PARENL • PARENR

    ID          shift, and go to state 209
    NIL         shift, and go to state 210
    INTEGER     shift, and go to state 211
    DECIMAL     shift, and go to state 212
    ERRORTOKEN  shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    HEADLIST    shift, and go to state 216
    TAILLIST    shift, and go to state 217
    PARENL      shift, and go to state 218
    PARENR      shift, and go to state 394

    simpleExp      go to state 112
    binListExp     go to state 219
    unaryListExp   go to state 220
    binLogicalExp  go to state 221
    relationalExp  go to state 222
    sumExp         go to state 223
    mulExp         go to state 224
    factor         go to state 225
    fCall          go to state 226
    callParams     go to state 395


State 380

   83 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 396


State 381

   88 fCall: ID PARENL callParams PARENR •

    SEMIC  reduce using rule 88 (fCall)


State 382

   88 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 88 (fCall)
    SUB        reduce using rule 88 (fCall)
    MULT       reduce using rule 88 (fCall)
    DIV        reduce using rule 88 (fCall)
    OR         reduce using rule 88 (fCall)
    AND        reduce using rule 88 (fCall)
    SMALLER    reduce using rule 88 (fCall)
    GREATER    reduce using rule 88 (fCall)
    SMALLEQ    reduce using rule 88 (fCall)
    GREATEQ    reduce using rule 88 (fCall)
    EQUALS     reduce using rule 88 (fCall)
    DIFFERENT  reduce using rule 88 (fCall)
    PARENR     reduce using rule 88 (fCall)


State 383

   89 fCall: ID PARENL PARENR •

    PARENR  reduce using rule 89 (fCall)


State 384

   88 fCall: ID PARENL callParams • PARENR
   90 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 139
    PARENR  shift, and go to state 397


State 385

   83 factor: PARENL simpleExp PARENR •

    PARENR  reduce using rule 83 (factor)


State 386

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR $@6 primitiveStmt

    SEMIC  shift, and go to state 398


State 387

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR $@7 primitiveStmt

    SEMIC  shift, and go to state 399


State 388

   49 inOp: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 49 (inOp)
    TYPE        reduce using rule 49 (inOp)
    NIL         reduce using rule 49 (inOp)
    INTEGER     reduce using rule 49 (inOp)
    DECIMAL     reduce using rule 49 (inOp)
    ERRORTOKEN  reduce using rule 49 (inOp)
    ELSE        reduce using rule 49 (inOp)
    ADD         reduce using rule 49 (inOp)
    SUB         reduce using rule 49 (inOp)
    HEADLIST    reduce using rule 49 (inOp)
    TAILLIST    reduce using rule 49 (inOp)
    IF          reduce using rule 49 (inOp)
    FOR         reduce using rule 49 (inOp)
    READ        reduce using rule 49 (inOp)
    WRITE       reduce using rule 49 (inOp)
    WRITELN     reduce using rule 49 (inOp)
    RETURN      reduce using rule 49 (inOp)
    STFUNC      reduce using rule 49 (inOp)
    ENDFUNC     reduce using rule 49 (inOp)
    PARENL      reduce using rule 49 (inOp)


State 389

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID          reduce using rule 51 (outOp)
    TYPE        reduce using rule 51 (outOp)
    NIL         reduce using rule 51 (outOp)
    INTEGER     reduce using rule 51 (outOp)
    DECIMAL     reduce using rule 51 (outOp)
    ERRORTOKEN  reduce using rule 51 (outOp)
    ELSE        reduce using rule 51 (outOp)
    ADD         reduce using rule 51 (outOp)
    SUB         reduce using rule 51 (outOp)
    HEADLIST    reduce using rule 51 (outOp)
    TAILLIST    reduce using rule 51 (outOp)
    IF          reduce using rule 51 (outOp)
    FOR         reduce using rule 51 (outOp)
    READ        reduce using rule 51 (outOp)
    WRITE       reduce using rule 51 (outOp)
    WRITELN     reduce using rule 51 (outOp)
    RETURN      reduce using rule 51 (outOp)
    STFUNC      reduce using rule 51 (outOp)
    ENDFUNC     reduce using rule 51 (outOp)
    PARENL      reduce using rule 51 (outOp)


State 390

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID          reduce using rule 52 (outOp)
    TYPE        reduce using rule 52 (outOp)
    NIL         reduce using rule 52 (outOp)
    INTEGER     reduce using rule 52 (outOp)
    DECIMAL     reduce using rule 52 (outOp)
    ERRORTOKEN  reduce using rule 52 (outOp)
    ELSE        reduce using rule 52 (outOp)
    ADD         reduce using rule 52 (outOp)
    SUB         reduce using rule 52 (outOp)
    HEADLIST    reduce using rule 52 (outOp)
    TAILLIST    reduce using rule 52 (outOp)
    IF          reduce using rule 52 (outOp)
    FOR         reduce using rule 52 (outOp)
    READ        reduce using rule 52 (outOp)
    WRITE       reduce using rule 52 (outOp)
    WRITELN     reduce using rule 52 (outOp)
    RETURN      reduce using rule 52 (outOp)
    STFUNC      reduce using rule 52 (outOp)
    ENDFUNC     reduce using rule 52 (outOp)
    PARENL      reduce using rule 52 (outOp)


State 391

   19 compoundStmt: STFUNC • stmtList ENDFUNC

    error       shift, and go to state 29
    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 41
    READ        shift, and go to state 42
    WRITE       shift, and go to state 43
    WRITELN     shift, and go to state 44
    RETURN      shift, and go to state 45
    STFUNC      shift, and go to state 46
    PARENL      shift, and go to state 47

    varDeclaration        go to state 48
    simpleVarDeclaration  go to state 168
    compoundStmt          go to state 49
    stmtList              go to state 228
    primitiveStmt         go to state 51
    exprStmt              go to state 52
    condStmt              go to state 53
    ifStmt                go to state 54
    iterStmt              go to state 55
    returnStmt            go to state 56
    expression            go to state 57
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 392

   38 elseStmt: ELSE $@5 primitiveStmt •

    ID          reduce using rule 38 (elseStmt)
    TYPE        reduce using rule 38 (elseStmt)
    NIL         reduce using rule 38 (elseStmt)
    INTEGER     reduce using rule 38 (elseStmt)
    DECIMAL     reduce using rule 38 (elseStmt)
    ERRORTOKEN  reduce using rule 38 (elseStmt)
    ELSE        reduce using rule 38 (elseStmt)
    ADD         reduce using rule 38 (elseStmt)
    SUB         reduce using rule 38 (elseStmt)
    HEADLIST    reduce using rule 38 (elseStmt)
    TAILLIST    reduce using rule 38 (elseStmt)
    IF          reduce using rule 38 (elseStmt)
    FOR         reduce using rule 38 (elseStmt)
    READ        reduce using rule 38 (elseStmt)
    WRITE       reduce using rule 38 (elseStmt)
    WRITELN     reduce using rule 38 (elseStmt)
    RETURN      reduce using rule 38 (elseStmt)
    STFUNC      reduce using rule 38 (elseStmt)
    ENDFUNC     reduce using rule 38 (elseStmt)
    PARENL      reduce using rule 38 (elseStmt)


State 393

   88 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 88 (fCall)
    SUB        reduce using rule 88 (fCall)
    MULT       reduce using rule 88 (fCall)
    DIV        reduce using rule 88 (fCall)
    OR         reduce using rule 88 (fCall)
    AND        reduce using rule 88 (fCall)
    SMALLER    reduce using rule 88 (fCall)
    GREATER    reduce using rule 88 (fCall)
    SMALLEQ    reduce using rule 88 (fCall)
    GREATEQ    reduce using rule 88 (fCall)
    EQUALS     reduce using rule 88 (fCall)
    DIFFERENT  reduce using rule 88 (fCall)
    COMMA      reduce using rule 88 (fCall)
    PARENR     reduce using rule 88 (fCall)


State 394

   89 fCall: ID PARENL PARENR •

    COMMA   reduce using rule 89 (fCall)
    PARENR  reduce using rule 89 (fCall)


State 395

   88 fCall: ID PARENL callParams • PARENR
   90 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 139
    PARENR  shift, and go to state 400


State 396

   83 factor: PARENL simpleExp PARENR •

    COMMA   reduce using rule 83 (factor)
    PARENR  reduce using rule 83 (factor)


State 397

   88 fCall: ID PARENL callParams PARENR •

    PARENR  reduce using rule 88 (fCall)


State 398

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR $@6 primitiveStmt

    ID  shift, and go to state 159

    assignExp  go to state 401


State 399

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR $@7 primitiveStmt

    ID  shift, and go to state 159

    assignExp  go to state 402


State 400

   88 fCall: ID PARENL callParams PARENR •

    COMMA   reduce using rule 88 (fCall)
    PARENR  reduce using rule 88 (fCall)


State 401

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR $@6 primitiveStmt

    PARENR  shift, and go to state 403


State 402

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR $@7 primitiveStmt

    PARENR  shift, and go to state 404


State 403

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • $@6 primitiveStmt

    ID          reduce using rule 39 ($@6)
    TYPE        reduce using rule 39 ($@6)
    NIL         reduce using rule 39 ($@6)
    INTEGER     reduce using rule 39 ($@6)
    DECIMAL     reduce using rule 39 ($@6)
    ERRORTOKEN  reduce using rule 39 ($@6)
    ADD         reduce using rule 39 ($@6)
    SUB         reduce using rule 39 ($@6)
    HEADLIST    reduce using rule 39 ($@6)
    TAILLIST    reduce using rule 39 ($@6)
    IF          reduce using rule 39 ($@6)
    FOR         reduce using rule 39 ($@6)
    READ        reduce using rule 39 ($@6)
    WRITE       reduce using rule 39 ($@6)
    WRITELN     reduce using rule 39 ($@6)
    RETURN      reduce using rule 39 ($@6)
    STFUNC      reduce using rule 39 ($@6)
    PARENL      reduce using rule 39 ($@6)

    $@6  go to state 405


State 404

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • $@7 primitiveStmt

    ID          reduce using rule 41 ($@7)
    TYPE        reduce using rule 41 ($@7)
    NIL         reduce using rule 41 ($@7)
    INTEGER     reduce using rule 41 ($@7)
    DECIMAL     reduce using rule 41 ($@7)
    ERRORTOKEN  reduce using rule 41 ($@7)
    ADD         reduce using rule 41 ($@7)
    SUB         reduce using rule 41 ($@7)
    HEADLIST    reduce using rule 41 ($@7)
    TAILLIST    reduce using rule 41 ($@7)
    IF          reduce using rule 41 ($@7)
    FOR         reduce using rule 41 ($@7)
    READ        reduce using rule 41 ($@7)
    WRITE       reduce using rule 41 ($@7)
    WRITELN     reduce using rule 41 ($@7)
    RETURN      reduce using rule 41 ($@7)
    STFUNC      reduce using rule 41 ($@7)
    PARENL      reduce using rule 41 ($@7)

    $@7  go to state 406


State 405

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 193
    READ        shift, and go to state 194
    WRITE       shift, and go to state 195
    WRITELN     shift, and go to state 196
    RETURN      shift, and go to state 197
    STFUNC      shift, and go to state 391
    PARENL      shift, and go to state 47

    varDeclaration        go to state 198
    simpleVarDeclaration  go to state 199
    compoundStmt          go to state 200
    primitiveStmt         go to state 407
    exprStmt              go to state 201
    condStmt              go to state 202
    ifStmt                go to state 203
    iterStmt              go to state 204
    returnStmt            go to state 205
    expression            go to state 206
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 207
    outOp                 go to state 208
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 406

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 • primitiveStmt

    ID          shift, and go to state 30
    TYPE        shift, and go to state 31
    NIL         shift, and go to state 32
    INTEGER     shift, and go to state 33
    DECIMAL     shift, and go to state 34
    ERRORTOKEN  shift, and go to state 35
    ADD         shift, and go to state 36
    SUB         shift, and go to state 37
    HEADLIST    shift, and go to state 38
    TAILLIST    shift, and go to state 39
    IF          shift, and go to state 40
    FOR         shift, and go to state 193
    READ        shift, and go to state 194
    WRITE       shift, and go to state 195
    WRITELN     shift, and go to state 196
    RETURN      shift, and go to state 197
    STFUNC      shift, and go to state 391
    PARENL      shift, and go to state 47

    varDeclaration        go to state 198
    simpleVarDeclaration  go to state 199
    compoundStmt          go to state 200
    primitiveStmt         go to state 408
    exprStmt              go to state 201
    condStmt              go to state 202
    ifStmt                go to state 203
    iterStmt              go to state 204
    returnStmt            go to state 205
    expression            go to state 206
    assignExp             go to state 58
    simpleExp             go to state 59
    inOp                  go to state 207
    outOp                 go to state 208
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 407

   40 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt •

    ID          reduce using rule 40 (iterStmt)
    TYPE        reduce using rule 40 (iterStmt)
    NIL         reduce using rule 40 (iterStmt)
    INTEGER     reduce using rule 40 (iterStmt)
    DECIMAL     reduce using rule 40 (iterStmt)
    ERRORTOKEN  reduce using rule 40 (iterStmt)
    ELSE        reduce using rule 40 (iterStmt)
    ADD         reduce using rule 40 (iterStmt)
    SUB         reduce using rule 40 (iterStmt)
    HEADLIST    reduce using rule 40 (iterStmt)
    TAILLIST    reduce using rule 40 (iterStmt)
    IF          reduce using rule 40 (iterStmt)
    FOR         reduce using rule 40 (iterStmt)
    READ        reduce using rule 40 (iterStmt)
    WRITE       reduce using rule 40 (iterStmt)
    WRITELN     reduce using rule 40 (iterStmt)
    RETURN      reduce using rule 40 (iterStmt)
    STFUNC      reduce using rule 40 (iterStmt)
    ENDFUNC     reduce using rule 40 (iterStmt)
    PARENL      reduce using rule 40 (iterStmt)


State 408

   42 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt •

    ID          reduce using rule 42 (iterStmt)
    TYPE        reduce using rule 42 (iterStmt)
    NIL         reduce using rule 42 (iterStmt)
    INTEGER     reduce using rule 42 (iterStmt)
    DECIMAL     reduce using rule 42 (iterStmt)
    ERRORTOKEN  reduce using rule 42 (iterStmt)
    ELSE        reduce using rule 42 (iterStmt)
    ADD         reduce using rule 42 (iterStmt)
    SUB         reduce using rule 42 (iterStmt)
    HEADLIST    reduce using rule 42 (iterStmt)
    TAILLIST    reduce using rule 42 (iterStmt)
    IF          reduce using rule 42 (iterStmt)
    FOR         reduce using rule 42 (iterStmt)
    READ        reduce using rule 42 (iterStmt)
    WRITE       reduce using rule 42 (iterStmt)
    WRITELN     reduce using rule 42 (iterStmt)
    RETURN      reduce using rule 42 (iterStmt)
    STFUNC      reduce using rule 42 (iterStmt)
    ENDFUNC     reduce using rule 42 (iterStmt)
    PARENL      reduce using rule 42 (iterStmt)
