

#### beginning ####

------------------------Semantic analysis---------------------
Type: 'int' on line: 1, column: 1
Id: 'a' at line: 1, column: 5
';' at line: 1, column: 6
Type: 'int' on line: 2, column: 1
Id: 'b' at line: 2, column: 5
';' at line: 2, column: 6
Type: 'int' on line: 3, column: 1
Id: 'c' at line: 3, column: 5
';' at line: 3, column: 6
Type: 'float' on line: 4, column: 1
Id: 'd' at line: 4, column: 7
';' at line: 4, column: 8
Type: 'int' on line: 6, column: 1
Id: 'resp' at line: 6, column: 5
';' at line: 6, column: 9
Type: 'int' on line: 8, column: 1
Id: 'somadois' at line: 8, column: 5
'(' at line: 8, column: 13
Type: 'int' on line: 8, column: 14
Id: 'a' at line: 8, column: 18
',' at line: 8, column: 19
Type: 'int' on line: 8, column: 21
Id: 'b' at line: 8, column: 25
')' at line: 8, column: 26
'{' on line: 9, column: 1
Id: 'a' at line: 10, column: 5
'=' at line: 10, column: 7
Id: 'a' at line: 10, column: 9
'+' at line: 10, column: 11
Id: 'b' at line: 10, column: 13
';' at line: 10, column: 14
Keyword [RETURN]: 'return' at line: 11, column: 5
Id: 'a' at line: 11, column: 12
';' at line: 11, column: 13
'}' at line: 12, column: 1
Type: 'int' on line: 14, column: 1
Id: 'main' at line: 14, column: 5
'(' at line: 14, column: 9
')' at line: 14, column: 10
'{' on line: 15, column: 1
Id: 'a' at line: 17, column: 5
'=' at line: 17, column: 7
Integer: '20' at line: 17, column: 9
';' at line: 17, column: 11
Id: 'b' at line: 18, column: 5
'=' at line: 18, column: 7
Integer: '30' at line: 18, column: 9
';' at line: 18, column: 11
Keyword [WRITE]: 'write' at line: 19, column: 5
'(' at line: 19, column: 10
String: "oi" on line: 19, column: 11
')' at line: 19, column: 15
';' at line: 19, column: 16
Id: 'resp' at line: 20, column: 5
'=' at line: 20, column: 10
Id: 'somadois' at line: 20, column: 12
'(' at line: 20, column: 20
Id: 'a' at line: 20, column: 21
',' at line: 20, column: 22
Id: 'b' at line: 20, column: 24
')' at line: 20, column: 25
';' at line: 20, column: 26
Id: 'c' at line: 21, column: 5
'=' at line: 21, column: 7
Id: 'a' at line: 21, column: 9
'+' at line: 21, column: 11
Id: 'b' at line: 21, column: 13
';' at line: 21, column: 14
Id: 'd' at line: 22, column: 5
'=' at line: 22, column: 7
Id: 'a' at line: 22, column: 9
'/' at line: 22, column: 11
Id: 'b' at line: 22, column: 13
';' at line: 22, column: 14
Keyword [WRITELN]: 'writeln' at line: 23, column: 5
'(' at line: 23, column: 12
Id: 'c' at line: 23, column: 13
')' at line: 23, column: 14
';' at line: 23, column: 15
Keyword [WRITELN]: 'writeln' at line: 24, column: 5
'(' at line: 24, column: 12
Id: 'd' at line: 24, column: 13
')' at line: 24, column: 14
';' at line: 24, column: 15
Keyword [RETURN]: 'return' at line: 25, column: 5
Integer: '0' at line: 25, column: 12
';' at line: 25, column: 13
'}' at line: 26, column: 1


#### EOF ####



------------------------------------------------------symbols------------------------------------------------



|         Value         |         Symbol type             |         Return type           |         Scope       |     Parameters      |

|   a                   |    var                          |      int                     |         0            |         0          |
|   b                   |    var                          |      int                     |         0            |         0          |
|   c                   |    var                          |      int                     |         0            |         0          |
|   d                   |    var                          |      float                   |         0            |         0          |
|   resp                |    var                          |      int                     |         0            |         0          |
|   a                   |    param                        |      int                     |         1            |         0          |
|   b                   |    param                        |      int                     |         1            |         0          |
|   somadois            |    func                         |      int                     |         1            |         2          |
|   main                |    func                         |      int                     |         1            |         0          |


--------------------------------tree--------------------------------

>declarationsList declaration
->declarationsList declaration
-->declarationsList declaration
--->declarationsList declaration
---->declarationsList declaration
----->declarationsList declaration
------>declaration
------->varDeclaration
-------->simpleVarDeclaration
--------->TYPE ID
---------->int
---------->a
------>varDeclaration
------->simpleVarDeclaration
-------->TYPE ID
--------->int
--------->b
----->varDeclaration
------>simpleVarDeclaration
------->TYPE ID
-------->int
-------->c
---->varDeclaration
----->simpleVarDeclaration
------>TYPE ID
------->float
------->d
--->varDeclaration
---->simpleVarDeclaration
----->TYPE ID
------>int
------>resp
-->funcDeclaration
--->TYPE ID PARENL params PARENR STFUNC stmtList ENDFUNC
---->int
---->somadois
---->params COMMA param
----->param
------>TYPE ID
------->int
------->a
----->TYPE ID
------>int
------>b
---->stmtList primitiveStmt
----->primitiveStmt
------>exprStmt
------->expression SEMIC
-------->assignExp
--------->ID ASSIGN expression
---------->a
---------->=
---------->simpleExp
----------->binLogicalExp
------------>relationalExp
------------->sumExp
-------------->sumExp add mulExp
--------------->mulExp
---------------->factor
----------------->ID
~~~~~~~~~~~~~~~~~~--------------->+
--------------->factor
---------------->ID
~~~~~~~~~~~~~~~~~----->returnStmt
------>RETURN expression SEMIC
------->return
------->simpleExp
-------->binLogicalExp
--------->relationalExp
---------->sumExp
----------->mulExp
------------>factor
------------->ID
~~~~~~~~~~~~~~->funcDeclaration
-->TYPE ID PARENL PARENR stmtList ENDFUNC 
--->int
--->main
--->stmtList primitiveStmt
---->stmtList primitiveStmt
----->stmtList primitiveStmt
------>stmtList primitiveStmt
------->stmtList primitiveStmt
-------->stmtList primitiveStmt
--------->stmtList primitiveStmt
---------->stmtList primitiveStmt
----------->primitiveStmt
------------>exprStmt
------------->expression SEMIC
-------------->assignExp
--------------->ID ASSIGN expression
---------------->a
---------------->=
---------------->simpleExp
----------------->binLogicalExp
------------------>relationalExp
------------------->sumExp
-------------------->mulExp
--------------------->factor
~~~~~~~~~~~~~~~~~~~~~~20
----------->exprStmt
------------>expression SEMIC
------------->assignExp
-------------->ID ASSIGN expression
--------------->b
--------------->=
--------------->simpleExp
---------------->binLogicalExp
----------------->relationalExp
------------------>sumExp
------------------->mulExp
-------------------->factor
~~~~~~~~~~~~~~~~~~~~~30
---------->outOp
----------->WRITE PARENL outConst PARENR SEMIC
------------>write
------------>STRING
------------->"oi"
--------->exprStmt
---------->expression SEMIC
----------->assignExp
------------>ID ASSIGN expression
------------->resp
------------->=
------------->simpleExp
-------------->binLogicalExp
--------------->relationalExp
---------------->sumExp
----------------->mulExp
------------------>factor
------------------->fCall
-------------------->ID PARENL callParams PARENR
--------------------->somadois
--------------------->callParams COMMA simpleExp
---------------------->simpleExp
----------------------->binLogicalExp
------------------------>relationalExp
------------------------->sumExp
-------------------------->mulExp
--------------------------->factor
---------------------------->ID
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~---------------------->binLogicalExp
----------------------->relationalExp
------------------------>sumExp
------------------------->mulExp
-------------------------->factor
--------------------------->ID
~~~~~~~~~~~~~~~~~~~~~~~~~~~~-------->exprStmt
--------->expression SEMIC
---------->assignExp
----------->ID ASSIGN expression
------------>c
------------>=
------------>simpleExp
------------->binLogicalExp
-------------->relationalExp
--------------->sumExp
---------------->sumExp add mulExp
----------------->mulExp
------------------>factor
------------------->ID
~~~~~~~~~~~~~~~~~~~~----------------->+
----------------->factor
------------------>ID
~~~~~~~~~~~~~~~~~~~------->exprStmt
-------->expression SEMIC
--------->assignExp
---------->ID ASSIGN expression
----------->d
----------->=
----------->simpleExp
------------>binLogicalExp
------------->relationalExp
-------------->sumExp
--------------->mulExp
---------------->mulExp mulOp factor
----------------->factor
------------------>ID
~~~~~~~~~~~~~~~~~~~----------------->/
----------------->ID
~~~~~~~~~~~~~~~~~~------>outOp
------->WRITELN PARENL outConst PARENR SEMIC
-------->writeln
-------->simpleExp
--------->binLogicalExp
---------->relationalExp
----------->sumExp
------------>mulExp
------------->factor
-------------->ID
~~~~~~~~~~~~~~~----->outOp
------>WRITELN PARENL outConst PARENR SEMIC
------->writeln
------->simpleExp
-------->binLogicalExp
--------->relationalExp
---------->sumExp
----------->mulExp
------------>factor
------------->ID
~~~~~~~~~~~~~~---->returnStmt
----->RETURN expression SEMIC
------>return
------>simpleExp
------->binLogicalExp
-------->relationalExp
--------->sumExp
---------->mulExp
----------->factor
~~~~~~~~~~~~0


 There is 0 errors and 0 warnings in the file

