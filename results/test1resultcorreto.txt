

#### beginning ####

------------------------Syntax analysis---------------------
Type: 'int' on line: 1, column: 1
Id: 'x' at line: 1, column: 5
';' at line: 1, column: 6
Type: 'int' on line: 3, column: 1
Id: 'main' at line: 3, column: 5
'(' at line: 3, column: 9
')' at line: 3, column: 10
'{' on line: 3, column: 11
Type: 'int' on line: 4, column: 5
Id: 'x' at line: 4, column: 9
';' at line: 4, column: 10
cannot add symbol to table
Keyword [FOR]: 'for' at line: 5, column: 5
'(' at line: 5, column: 9
Id: 'x' at line: 5, column: 10
';' at line: 5, column: 11
Id: 'x' at line: 5, column: 13
OP [SMALLER THAN]: '<' at line: 5, column: 15
Integer: '5' at line: 5, column: 17
';' at line: 5, column: 19
Id: 'x' at line: 5, column: 21
'=' at line: 5, column: 23
Id: 'x' at line: 5, column: 25
'+' at line: 5, column: 27
Integer: '1' at line: 5, column: 29
')' at line: 5, column: 30
'{' on line: 5, column: 31
Id: 'x' at line: 6, column: 9
'=' at line: 6, column: 11
Id: 'x' at line: 6, column: 13
'+' at line: 6, column: 15
Integer: '1' at line: 6, column: 17
';' at line: 6, column: 18
'}' at line: 8, column: 5
'}' at line: 9, column: 1


#### EOF ####



--------------------------------symbols--------------------------------

|   x                   |    var                          |      int                     |    0      |    0    |
|   main                |    func                         |      int                     |    0      |    0    |


--------------------------------tree--------------------------------


declarationsList declaration
-->   declaration

--->   varDeclaration

---->   simpleVarDeclaration

----->   TYPE ID

------>   int

------->   x

--->   funcDeclaration

---->   TYPE ID PARENL PARENR compoundStmt

----->   int

------>   main

------->   stmtList primitiveStmt

-------->   primitiveStmt

--------->   varDeclaration

---------->   simpleVarDeclaration

----------->   TYPE ID

------------>   int

------------->   x

--------->   iterStmt

---------->   FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

----------->   for

------------>   binLogicalExp

------------->   relationalExp

-------------->   sumExp

--------------->   mulExp

---------------->   factor

----------------->   ID

------------------>   x

------------->   binLogicalExp

-------------->   relationalExp

--------------->   relationalExp relationalOp sumExp

---------------->   sumExp

----------------->   mulExp

------------------>   factor

------------------->   ID

-------------------->   x

----------------->   SMALLER

------------------>   <

------------------>   mulExp

------------------->   factor

-------------------->   constOp

--------------------->   5

-------------->   ID ASSIGN expression

--------------->   x

---------------->   =

----------------->   simpleExp

------------------>   binLogicalExp

------------------->   relationalExp

-------------------->   sumExp

--------------------->   sumExp sumOp mulExp

---------------------->   mulExp

----------------------->   factor

------------------------>   ID

------------------------->   x

----------------------->   ADD

------------------------>   +

------------------------>   factor

------------------------->   constOp

-------------------------->   1

--------------->   compoundStmt

---------------->   compoundStmt

----------------->   primitiveStmt

------------------>   exprStmt

------------------->   expression SEMIC

-------------------->   assignExp

--------------------->   ID ASSIGN expression

---------------------->   x

----------------------->   =

------------------------>   simpleExp

------------------------->   binLogicalExp

-------------------------->   relationalExp

--------------------------->   sumExp

---------------------------->   sumExp sumOp mulExp

----------------------------->   mulExp

------------------------------>   factor

------------------------------->   ID

-------------------------------->   x

------------------------------>   ADD

------------------------------->   +

------------------------------->   factor

-------------------------------->   constOp

--------------------------------->   1
