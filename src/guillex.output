Terminais sem uso na gramática

    FILTER


Gramática

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funcDeclaration

    6 varDeclaration: simpleVarDeclaration SEMIC

    7 funcDeclaration: simpleFuncDeclaration PARENL params PARENR compoundStmt
    8                | simpleFuncDeclaration PARENL PARENR compoundStmt

    9 simpleVarDeclaration: TYPE ID

   10 simpleFuncDeclaration: TYPE ID

   11 params: params param
   12       | param

   13 param: simpleVarDeclaration

   14 compoundStmt: STFUNC stmtList ENDFUNC

   15 stmtList: stmtList primitiveStmt
   16         | primitiveStmt

   17 primitiveStmt: exprStmt
   18              | compoundStmt
   19              | condStmt
   20              | iterStmt
   21              | returnStmt
   22              | listStmt
   23              | inOp
   24              | outOp
   25              | varDeclaration

   26 exprStmt: expression SEMIC

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt
   28         | IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   31 returnStmt: RETURN expression SEMIC

   32 listStmt: appendOps
   33         | returnListOps
   34         | destroyHeadOps
   35         | mapFilterOps

   36 appendOps: simpleExp APPEND ID SEMIC

   37 returnListOps: returnListOp ID

   38 returnListOp: HEADLIST
   39             | TAILLIST

   40 destroyHeadOps: DESTROYHEAD ID SEMIC

   41 mapFilterOps: fCall MAP ID SEMIC

   42 expression: assignExp
   43           | simpleExp

   44 assignExp: ID ASSIGN expression

   45 simpleExp: binLogicalExp

   46 constOp: INTEGER
   47        | DECIMAL
   48        | LIST
   49        | NIL

   50 inOp: READ PARENL ID PARENR

   51 outOp: WRITE PARENL outConst PARENR SEMIC
   52      | WRITELN PARENL outConst PARENR SEMIC

   53 outConst: STRING
   54         | simpleExp

   55 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp
   56              | unLogicalExp

   57 binLogicalOp: OR
   58             | AND
   59             | NEG

   60 unLogicalExp: unLogicalOp unLogicalExp
   61             | relationalExp

   62 unLogicalOp: NOT

   63 relationalExp: relationalExp relationalOp sumExp
   64              | sumExp

   65 relationalOp: SMALLER
   66             | GREATER
   67             | SMALLEQ
   68             | GREATEQ
   69             | EQUALS
   70             | DIFFERENT

   71 sumExp: sumExp sumOp mulExp
   72       | mulExp

   73 sumOp: ADD
   74      | SUB

   75 mulExp: mulExp mulOp factor
   76       | factor
   77       | sumOp factor

   78 mulOp: MULT
   79      | DIV

   80 factor: ID
   81       | fCall
   82       | PARENL simpleExp PARENR
   83       | constOp

   84 fCall: ID PARENL callParams PARENR
   85      | ID PARENL PARENR

   86 callParams: callParams COMMA simpleExp
   87           | simpleExp


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    ID <str> (258) 9 10 36 37 40 41 44 50 80 84 85
    TYPE <str> (259) 9 10
    INTEGER <integer> (260) 46
    DECIMAL <dec> (261) 47
    LIST <str> (262) 48
    STRING <str> (263) 53
    NIL <str> (264) 49
    ADD (265) 73
    SUB (266) 74
    MULT (267) 78
    DIV (268) 79
    OR (269) 57
    AND (270) 58
    SMALLER (271) 65
    GREATER (272) 66
    SMALLEQ (273) 67
    GREATEQ (274) 68
    EQUALS (275) 69
    DIFFERENT (276) 70
    APPEND (277) 36
    HEADLIST (278) 38
    TAILLIST (279) 39
    DESTROYHEAD (280) 40
    FILTER (281)
    ASSIGN (282) 44
    NEG (283) 59
    NOT (284) 62
    MAP (285) 41
    ELSE (286) 28
    THEN (287)
    IF (288) 27 28
    FOR (289) 29 30
    READ (290) 50
    WRITE (291) 51
    WRITELN (292) 52
    RETURN (293) 31
    SEMIC (294) 6 26 29 30 31 36 40 41 51 52
    COMMA (295) 86
    STFUNC (296) 14
    ENDFUNC (297) 14
    PARENL (298) 7 8 27 28 29 30 50 51 52 82 84 85
    PARENR (299) 7 8 27 28 29 30 50 51 52 82 84 85


Não terminais com as regras onde eles aparecem

    $accept (45)
        à esquerda: 0
    program (46)
        à esquerda: 1
        à direita: 0
    declarationList <node> (47)
        à esquerda: 2 3
        à direita: 1 2
    declaration <node> (48)
        à esquerda: 4 5
        à direita: 2 3
    varDeclaration <node> (49)
        à esquerda: 6
        à direita: 4 25
    funcDeclaration <node> (50)
        à esquerda: 7 8
        à direita: 5
    simpleVarDeclaration <node> (51)
        à esquerda: 9
        à direita: 6 13
    simpleFuncDeclaration <node> (52)
        à esquerda: 10
        à direita: 7 8
    params <node> (53)
        à esquerda: 11 12
        à direita: 7 11
    param <node> (54)
        à esquerda: 13
        à direita: 11 12
    compoundStmt <node> (55)
        à esquerda: 14
        à direita: 7 8 18
    stmtList <node> (56)
        à esquerda: 15 16
        à direita: 14 15
    primitiveStmt <node> (57)
        à esquerda: 17 18 19 20 21 22 23 24 25
        à direita: 15 16 27 28 29 30
    exprStmt <node> (58)
        à esquerda: 26
        à direita: 17
    condStmt <node> (59)
        à esquerda: 27 28
        à direita: 19
    iterStmt <node> (60)
        à esquerda: 29 30
        à direita: 20
    returnStmt <node> (61)
        à esquerda: 31
        à direita: 21
    listStmt <node> (62)
        à esquerda: 32 33 34 35
        à direita: 22
    appendOps <node> (63)
        à esquerda: 36
        à direita: 32
    returnListOps <node> (64)
        à esquerda: 37
        à direita: 33
    returnListOp <node> (65)
        à esquerda: 38 39
        à direita: 37
    destroyHeadOps <node> (66)
        à esquerda: 40
        à direita: 34
    mapFilterOps <node> (67)
        à esquerda: 41
        à direita: 35
    expression <node> (68)
        à esquerda: 42 43
        à direita: 26 31 44
    assignExp <node> (69)
        à esquerda: 44
        à direita: 29 30 42
    simpleExp <node> (70)
        à esquerda: 45
        à direita: 27 28 29 30 36 43 54 82 86 87
    constOp <node> (71)
        à esquerda: 46 47 48 49
        à direita: 83
    inOp <node> (72)
        à esquerda: 50
        à direita: 23
    outOp <node> (73)
        à esquerda: 51 52
        à direita: 24
    outConst <node> (74)
        à esquerda: 53 54
        à direita: 51 52
    binLogicalExp <node> (75)
        à esquerda: 55 56
        à direita: 45 55
    binLogicalOp <node> (76)
        à esquerda: 57 58 59
        à direita: 55
    unLogicalExp <node> (77)
        à esquerda: 60 61
        à direita: 56 60
    unLogicalOp <node> (78)
        à esquerda: 62
        à direita: 55 60
    relationalExp <node> (79)
        à esquerda: 63 64
        à direita: 61 63
    relationalOp <node> (80)
        à esquerda: 65 66 67 68 69 70
        à direita: 63
    sumExp <node> (81)
        à esquerda: 71 72
        à direita: 63 64 71
    sumOp <node> (82)
        à esquerda: 73 74
        à direita: 71 77
    mulExp <node> (83)
        à esquerda: 75 76 77
        à direita: 71 72 75
    mulOp <node> (84)
        à esquerda: 78 79
        à direita: 75
    factor <node> (85)
        à esquerda: 80 81 82 83
        à direita: 75 76 77
    fCall <node> (86)
        à esquerda: 84 85
        à direita: 41 81
    callParams <node> (87)
        à esquerda: 86 87
        à direita: 84 86


Estado 0

    0 $accept: • program $end

    TYPE  deslocar, e ir ao estado 1

    program                ir ao estado 2
    declarationList        ir ao estado 3
    declaration            ir ao estado 4
    varDeclaration         ir ao estado 5
    funcDeclaration        ir ao estado 6
    simpleVarDeclaration   ir ao estado 7
    simpleFuncDeclaration  ir ao estado 8


Estado 1

    9 simpleVarDeclaration: TYPE • ID
   10 simpleFuncDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 9


Estado 2

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 10


Estado 3

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  deslocar, e ir ao estado 1

    $end  reduzir usando a regra 1 (program)

    declaration            ir ao estado 11
    varDeclaration         ir ao estado 5
    funcDeclaration        ir ao estado 6
    simpleVarDeclaration   ir ao estado 7
    simpleFuncDeclaration  ir ao estado 8


Estado 4

    3 declarationList: declaration •

    $end  reduzir usando a regra 3 (declarationList)
    TYPE  reduzir usando a regra 3 (declarationList)


Estado 5

    4 declaration: varDeclaration •

    $end  reduzir usando a regra 4 (declaration)
    TYPE  reduzir usando a regra 4 (declaration)


Estado 6

    5 declaration: funcDeclaration •

    $end  reduzir usando a regra 5 (declaration)
    TYPE  reduzir usando a regra 5 (declaration)


Estado 7

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 12


Estado 8

    7 funcDeclaration: simpleFuncDeclaration • PARENL params PARENR compoundStmt
    8                | simpleFuncDeclaration • PARENL PARENR compoundStmt

    PARENL  deslocar, e ir ao estado 13


Estado 9

    9 simpleVarDeclaration: TYPE ID •
   10 simpleFuncDeclaration: TYPE ID •

    SEMIC   reduzir usando a regra 9 (simpleVarDeclaration)
    PARENL  reduzir usando a regra 10 (simpleFuncDeclaration)


Estado 10

    0 $accept: program $end •

    $padrão  aceitar


Estado 11

    2 declarationList: declarationList declaration •

    $end  reduzir usando a regra 2 (declarationList)
    TYPE  reduzir usando a regra 2 (declarationList)


Estado 12

    6 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduzir usando a regra 6 (varDeclaration)
    TYPE  reduzir usando a regra 6 (varDeclaration)


Estado 13

    7 funcDeclaration: simpleFuncDeclaration PARENL • params PARENR compoundStmt
    8                | simpleFuncDeclaration PARENL • PARENR compoundStmt

    TYPE    deslocar, e ir ao estado 14
    PARENR  deslocar, e ir ao estado 15

    simpleVarDeclaration  ir ao estado 16
    params                ir ao estado 17
    param                 ir ao estado 18


Estado 14

    9 simpleVarDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 19


Estado 15

    8 funcDeclaration: simpleFuncDeclaration PARENL PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 20

    compoundStmt  ir ao estado 21


Estado 16

   13 param: simpleVarDeclaration •

    TYPE    reduzir usando a regra 13 (param)
    PARENR  reduzir usando a regra 13 (param)


Estado 17

    7 funcDeclaration: simpleFuncDeclaration PARENL params • PARENR compoundStmt
   11 params: params • param

    TYPE    deslocar, e ir ao estado 14
    PARENR  deslocar, e ir ao estado 22

    simpleVarDeclaration  ir ao estado 16
    param                 ir ao estado 23


Estado 18

   12 params: param •

    TYPE    reduzir usando a regra 12 (params)
    PARENR  reduzir usando a regra 12 (params)


Estado 19

    9 simpleVarDeclaration: TYPE ID •

    TYPE    reduzir usando a regra 9 (simpleVarDeclaration)
    PARENR  reduzir usando a regra 9 (simpleVarDeclaration)


Estado 20

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 43
    stmtList              ir ao estado 44
    primitiveStmt         ir ao estado 45
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 21

    8 funcDeclaration: simpleFuncDeclaration PARENL PARENR compoundStmt •

    $end  reduzir usando a regra 8 (funcDeclaration)
    TYPE  reduzir usando a regra 8 (funcDeclaration)


Estado 22

    7 funcDeclaration: simpleFuncDeclaration PARENL params PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 20

    compoundStmt  ir ao estado 71


Estado 23

   11 params: params param •

    TYPE    reduzir usando a regra 11 (params)
    PARENR  reduzir usando a regra 11 (params)


Estado 24

   44 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 72
    PARENL  deslocar, e ir ao estado 73

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    APPEND     reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 25

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    APPEND     reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    SEMIC      reduzir usando a regra 46 (constOp)


Estado 26

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    APPEND     reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    SEMIC      reduzir usando a regra 47 (constOp)


Estado 27

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    APPEND     reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    SEMIC      reduzir usando a regra 48 (constOp)


Estado 28

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    APPEND     reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    SEMIC      reduzir usando a regra 49 (constOp)


Estado 29

   73 sumOp: ADD •

    ID       reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    LIST     reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 30

   74 sumOp: SUB •

    ID       reduzir usando a regra 74 (sumOp)
    INTEGER  reduzir usando a regra 74 (sumOp)
    DECIMAL  reduzir usando a regra 74 (sumOp)
    LIST     reduzir usando a regra 74 (sumOp)
    NIL      reduzir usando a regra 74 (sumOp)
    PARENL   reduzir usando a regra 74 (sumOp)


Estado 31

   38 returnListOp: HEADLIST •

    ID  reduzir usando a regra 38 (returnListOp)


Estado 32

   39 returnListOp: TAILLIST •

    ID  reduzir usando a regra 39 (returnListOp)


Estado 33

   40 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 74


Estado 34

   62 unLogicalOp: NOT •

    ID       reduzir usando a regra 62 (unLogicalOp)
    INTEGER  reduzir usando a regra 62 (unLogicalOp)
    DECIMAL  reduzir usando a regra 62 (unLogicalOp)
    LIST     reduzir usando a regra 62 (unLogicalOp)
    NIL      reduzir usando a regra 62 (unLogicalOp)
    ADD      reduzir usando a regra 62 (unLogicalOp)
    SUB      reduzir usando a regra 62 (unLogicalOp)
    NOT      reduzir usando a regra 62 (unLogicalOp)
    PARENL   reduzir usando a regra 62 (unLogicalOp)


Estado 35

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 75


Estado 36

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 76


Estado 37

   50 inOp: READ • PARENL ID PARENR

    PARENL  deslocar, e ir ao estado 77


Estado 38

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 78


Estado 39

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 79


Estado 40

   31 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    expression     ir ao estado 80
    assignExp      ir ao estado 57
    simpleExp      ir ao estado 81
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 41

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 84
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 42

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    LIST         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    NOT          reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 43

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    LIST         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    NOT          reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 44

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 157
    ENDFUNC      deslocar, e ir ao estado 85
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 86
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 45

   16 stmtList: primitiveStmt •

    ID           reduzir usando a regra 16 (stmtList)
    TYPE         reduzir usando a regra 16 (stmtList)
    INTEGER      reduzir usando a regra 16 (stmtList)
    DECIMAL      reduzir usando a regra 16 (stmtList)
    LIST         reduzir usando a regra 16 (stmtList)
    NIL          reduzir usando a regra 16 (stmtList)
    ADD          reduzir usando a regra 16 (stmtList)
    SUB          reduzir usando a regra 16 (stmtList)
    HEADLIST     reduzir usando a regra 16 (stmtList)
    TAILLIST     reduzir usando a regra 16 (stmtList)
    DESTROYHEAD  reduzir usando a regra 16 (stmtList)
    NOT          reduzir usando a regra 16 (stmtList)
    IF           reduzir usando a regra 16 (stmtList)
    FOR          reduzir usando a regra 16 (stmtList)
    READ         reduzir usando a regra 16 (stmtList)
    WRITE        reduzir usando a regra 16 (stmtList)
    WRITELN      reduzir usando a regra 16 (stmtList)
    RETURN       reduzir usando a regra 16 (stmtList)
    STFUNC       reduzir usando a regra 16 (stmtList)
    ENDFUNC      reduzir usando a regra 16 (stmtList)
    PARENL       reduzir usando a regra 16 (stmtList)


Estado 46

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    LIST         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    NOT          reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 47

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    LIST         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    NOT          reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 48

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    LIST         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    NOT          reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 49

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    LIST         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    NOT          reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 50

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    LIST         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    NOT          reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 51

   32 listStmt: appendOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    LIST         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    NOT          reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 52

   33 listStmt: returnListOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    LIST         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    NOT          reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 53

   37 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 87


Estado 54

   34 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    LIST         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    NOT          reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 55

   35 listStmt: mapFilterOps •

    ID           reduzir usando a regra 35 (listStmt)
    TYPE         reduzir usando a regra 35 (listStmt)
    INTEGER      reduzir usando a regra 35 (listStmt)
    DECIMAL      reduzir usando a regra 35 (listStmt)
    LIST         reduzir usando a regra 35 (listStmt)
    NIL          reduzir usando a regra 35 (listStmt)
    ADD          reduzir usando a regra 35 (listStmt)
    SUB          reduzir usando a regra 35 (listStmt)
    HEADLIST     reduzir usando a regra 35 (listStmt)
    TAILLIST     reduzir usando a regra 35 (listStmt)
    DESTROYHEAD  reduzir usando a regra 35 (listStmt)
    NOT          reduzir usando a regra 35 (listStmt)
    IF           reduzir usando a regra 35 (listStmt)
    FOR          reduzir usando a regra 35 (listStmt)
    READ         reduzir usando a regra 35 (listStmt)
    WRITE        reduzir usando a regra 35 (listStmt)
    WRITELN      reduzir usando a regra 35 (listStmt)
    RETURN       reduzir usando a regra 35 (listStmt)
    STFUNC       reduzir usando a regra 35 (listStmt)
    ENDFUNC      reduzir usando a regra 35 (listStmt)
    PARENL       reduzir usando a regra 35 (listStmt)


Estado 56

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 88


Estado 57

   42 expression: assignExp •

    SEMIC  reduzir usando a regra 42 (expression)


Estado 58

   36 appendOps: simpleExp • APPEND ID SEMIC
   43 expression: simpleExp •

    APPEND  deslocar, e ir ao estado 89

    SEMIC  reduzir usando a regra 43 (expression)


Estado 59

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    APPEND     reduzir usando a regra 83 (factor)
    NEG        reduzir usando a regra 83 (factor)
    SEMIC      reduzir usando a regra 83 (factor)


Estado 60

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    LIST         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    NOT          reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 61

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    LIST         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    NOT          reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 62

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 90
    AND  deslocar, e ir ao estado 91
    NEG  deslocar, e ir ao estado 92

    APPEND  reduzir usando a regra 45 (simpleExp)
    SEMIC   reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 93


Estado 63

   56 binLogicalExp: unLogicalExp •

    OR      reduzir usando a regra 56 (binLogicalExp)
    AND     reduzir usando a regra 56 (binLogicalExp)
    APPEND  reduzir usando a regra 56 (binLogicalExp)
    NEG     reduzir usando a regra 56 (binLogicalExp)
    SEMIC   reduzir usando a regra 56 (binLogicalExp)


Estado 64

   60 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 189
    INTEGER  deslocar, e ir ao estado 25
    DECIMAL  deslocar, e ir ao estado 26
    LIST     deslocar, e ir ao estado 27
    NIL      deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    constOp        ir ao estado 59
    unLogicalExp   ir ao estado 94
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 190


Estado 65

   61 unLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 95
    GREATER    deslocar, e ir ao estado 96
    SMALLEQ    deslocar, e ir ao estado 97
    GREATEQ    deslocar, e ir ao estado 98
    EQUALS     deslocar, e ir ao estado 99
    DIFFERENT  deslocar, e ir ao estado 100

    OR      reduzir usando a regra 61 (unLogicalExp)
    AND     reduzir usando a regra 61 (unLogicalExp)
    APPEND  reduzir usando a regra 61 (unLogicalExp)
    NEG     reduzir usando a regra 61 (unLogicalExp)
    SEMIC   reduzir usando a regra 61 (unLogicalExp)

    relationalOp  ir ao estado 101


Estado 66

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 191
    SUB  deslocar, e ir ao estado 192

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    APPEND     reduzir usando a regra 64 (relationalExp)
    NEG        reduzir usando a regra 64 (relationalExp)
    SEMIC      reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 102


Estado 67

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 189
    INTEGER  deslocar, e ir ao estado 25
    DECIMAL  deslocar, e ir ao estado 26
    LIST     deslocar, e ir ao estado 27
    NIL      deslocar, e ir ao estado 28
    PARENL   deslocar, e ir ao estado 41

    constOp  ir ao estado 59
    factor   ir ao estado 103
    fCall    ir ao estado 190


Estado 68

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    APPEND     reduzir usando a regra 72 (sumExp)
    NEG        reduzir usando a regra 72 (sumExp)
    SEMIC      reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 106


Estado 69

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    APPEND     reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    SEMIC      reduzir usando a regra 76 (mulExp)


Estado 70

   41 mapFilterOps: fCall • MAP ID SEMIC
   81 factor: fCall •

    MAP  deslocar, e ir ao estado 107

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    APPEND     reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 71

    7 funcDeclaration: simpleFuncDeclaration PARENL params PARENR compoundStmt •

    $end  reduzir usando a regra 7 (funcDeclaration)
    TYPE  reduzir usando a regra 7 (funcDeclaration)


Estado 72

   44 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    expression     ir ao estado 108
    assignExp      ir ao estado 57
    simpleExp      ir ao estado 81
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 73

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 198
    PARENR   deslocar, e ir ao estado 109

    simpleExp      ir ao estado 110
    constOp        ir ao estado 199
    binLogicalExp  ir ao estado 200
    unLogicalExp   ir ao estado 201
    unLogicalOp    ir ao estado 202
    relationalExp  ir ao estado 203
    sumExp         ir ao estado 204
    sumOp          ir ao estado 205
    mulExp         ir ao estado 206
    factor         ir ao estado 207
    fCall          ir ao estado 208
    callParams     ir ao estado 111


Estado 74

   40 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 112


Estado 75

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 113
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 76

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    assignExp      ir ao estado 114
    simpleExp      ir ao estado 115
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 77

   50 inOp: READ PARENL • ID PARENR

    ID  deslocar, e ir ao estado 116


Estado 78

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    STRING   deslocar, e ir ao estado 117
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 118
    constOp        ir ao estado 179
    outConst       ir ao estado 119
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 79

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    STRING   deslocar, e ir ao estado 117
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 118
    constOp        ir ao estado 179
    outConst       ir ao estado 120
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 80

   31 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 121


Estado 81

   43 expression: simpleExp •

    SEMIC  reduzir usando a regra 43 (expression)


Estado 82

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 83

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 209

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 84

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 122


Estado 85

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    $end  reduzir usando a regra 14 (compoundStmt)
    TYPE  reduzir usando a regra 14 (compoundStmt)


Estado 86

   15 stmtList: stmtList primitiveStmt •

    ID           reduzir usando a regra 15 (stmtList)
    TYPE         reduzir usando a regra 15 (stmtList)
    INTEGER      reduzir usando a regra 15 (stmtList)
    DECIMAL      reduzir usando a regra 15 (stmtList)
    LIST         reduzir usando a regra 15 (stmtList)
    NIL          reduzir usando a regra 15 (stmtList)
    ADD          reduzir usando a regra 15 (stmtList)
    SUB          reduzir usando a regra 15 (stmtList)
    HEADLIST     reduzir usando a regra 15 (stmtList)
    TAILLIST     reduzir usando a regra 15 (stmtList)
    DESTROYHEAD  reduzir usando a regra 15 (stmtList)
    NOT          reduzir usando a regra 15 (stmtList)
    IF           reduzir usando a regra 15 (stmtList)
    FOR          reduzir usando a regra 15 (stmtList)
    READ         reduzir usando a regra 15 (stmtList)
    WRITE        reduzir usando a regra 15 (stmtList)
    WRITELN      reduzir usando a regra 15 (stmtList)
    RETURN       reduzir usando a regra 15 (stmtList)
    STFUNC       reduzir usando a regra 15 (stmtList)
    ENDFUNC      reduzir usando a regra 15 (stmtList)
    PARENL       reduzir usando a regra 15 (stmtList)


Estado 87

   37 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 37 (returnListOps)
    TYPE         reduzir usando a regra 37 (returnListOps)
    INTEGER      reduzir usando a regra 37 (returnListOps)
    DECIMAL      reduzir usando a regra 37 (returnListOps)
    LIST         reduzir usando a regra 37 (returnListOps)
    NIL          reduzir usando a regra 37 (returnListOps)
    ADD          reduzir usando a regra 37 (returnListOps)
    SUB          reduzir usando a regra 37 (returnListOps)
    HEADLIST     reduzir usando a regra 37 (returnListOps)
    TAILLIST     reduzir usando a regra 37 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 37 (returnListOps)
    NOT          reduzir usando a regra 37 (returnListOps)
    IF           reduzir usando a regra 37 (returnListOps)
    FOR          reduzir usando a regra 37 (returnListOps)
    READ         reduzir usando a regra 37 (returnListOps)
    WRITE        reduzir usando a regra 37 (returnListOps)
    WRITELN      reduzir usando a regra 37 (returnListOps)
    RETURN       reduzir usando a regra 37 (returnListOps)
    STFUNC       reduzir usando a regra 37 (returnListOps)
    ENDFUNC      reduzir usando a regra 37 (returnListOps)
    PARENL       reduzir usando a regra 37 (returnListOps)


Estado 88

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    LIST         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    NOT          reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 89

   36 appendOps: simpleExp APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 123


Estado 90

   57 binLogicalOp: OR •

    NOT  reduzir usando a regra 57 (binLogicalOp)


Estado 91

   58 binLogicalOp: AND •

    NOT  reduzir usando a regra 58 (binLogicalOp)


Estado 92

   59 binLogicalOp: NEG •

    NOT  reduzir usando a regra 59 (binLogicalOp)


Estado 93

   55 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 210

    unLogicalOp  ir ao estado 124


Estado 94

   60 unLogicalExp: unLogicalOp unLogicalExp •

    OR      reduzir usando a regra 60 (unLogicalExp)
    AND     reduzir usando a regra 60 (unLogicalExp)
    APPEND  reduzir usando a regra 60 (unLogicalExp)
    NEG     reduzir usando a regra 60 (unLogicalExp)
    SEMIC   reduzir usando a regra 60 (unLogicalExp)


Estado 95

   65 relationalOp: SMALLER •

    ID       reduzir usando a regra 65 (relationalOp)
    INTEGER  reduzir usando a regra 65 (relationalOp)
    DECIMAL  reduzir usando a regra 65 (relationalOp)
    LIST     reduzir usando a regra 65 (relationalOp)
    NIL      reduzir usando a regra 65 (relationalOp)
    ADD      reduzir usando a regra 65 (relationalOp)
    SUB      reduzir usando a regra 65 (relationalOp)
    PARENL   reduzir usando a regra 65 (relationalOp)


Estado 96

   66 relationalOp: GREATER •

    ID       reduzir usando a regra 66 (relationalOp)
    INTEGER  reduzir usando a regra 66 (relationalOp)
    DECIMAL  reduzir usando a regra 66 (relationalOp)
    LIST     reduzir usando a regra 66 (relationalOp)
    NIL      reduzir usando a regra 66 (relationalOp)
    ADD      reduzir usando a regra 66 (relationalOp)
    SUB      reduzir usando a regra 66 (relationalOp)
    PARENL   reduzir usando a regra 66 (relationalOp)


Estado 97

   67 relationalOp: SMALLEQ •

    ID       reduzir usando a regra 67 (relationalOp)
    INTEGER  reduzir usando a regra 67 (relationalOp)
    DECIMAL  reduzir usando a regra 67 (relationalOp)
    LIST     reduzir usando a regra 67 (relationalOp)
    NIL      reduzir usando a regra 67 (relationalOp)
    ADD      reduzir usando a regra 67 (relationalOp)
    SUB      reduzir usando a regra 67 (relationalOp)
    PARENL   reduzir usando a regra 67 (relationalOp)


Estado 98

   68 relationalOp: GREATEQ •

    ID       reduzir usando a regra 68 (relationalOp)
    INTEGER  reduzir usando a regra 68 (relationalOp)
    DECIMAL  reduzir usando a regra 68 (relationalOp)
    LIST     reduzir usando a regra 68 (relationalOp)
    NIL      reduzir usando a regra 68 (relationalOp)
    ADD      reduzir usando a regra 68 (relationalOp)
    SUB      reduzir usando a regra 68 (relationalOp)
    PARENL   reduzir usando a regra 68 (relationalOp)


Estado 99

   69 relationalOp: EQUALS •

    ID       reduzir usando a regra 69 (relationalOp)
    INTEGER  reduzir usando a regra 69 (relationalOp)
    DECIMAL  reduzir usando a regra 69 (relationalOp)
    LIST     reduzir usando a regra 69 (relationalOp)
    NIL      reduzir usando a regra 69 (relationalOp)
    ADD      reduzir usando a regra 69 (relationalOp)
    SUB      reduzir usando a regra 69 (relationalOp)
    PARENL   reduzir usando a regra 69 (relationalOp)


Estado 100

   70 relationalOp: DIFFERENT •

    ID       reduzir usando a regra 70 (relationalOp)
    INTEGER  reduzir usando a regra 70 (relationalOp)
    DECIMAL  reduzir usando a regra 70 (relationalOp)
    LIST     reduzir usando a regra 70 (relationalOp)
    NIL      reduzir usando a regra 70 (relationalOp)
    ADD      reduzir usando a regra 70 (relationalOp)
    SUB      reduzir usando a regra 70 (relationalOp)
    PARENL   reduzir usando a regra 70 (relationalOp)


Estado 101

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 189
    INTEGER  deslocar, e ir ao estado 25
    DECIMAL  deslocar, e ir ao estado 26
    LIST     deslocar, e ir ao estado 27
    NIL      deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 41

    constOp  ir ao estado 59
    sumExp   ir ao estado 125
    sumOp    ir ao estado 67
    mulExp   ir ao estado 68
    factor   ir ao estado 69
    fCall    ir ao estado 190


Estado 102

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 189
    INTEGER  deslocar, e ir ao estado 25
    DECIMAL  deslocar, e ir ao estado 26
    LIST     deslocar, e ir ao estado 27
    NIL      deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 41

    constOp  ir ao estado 59
    sumOp    ir ao estado 67
    mulExp   ir ao estado 126
    factor   ir ao estado 69
    fCall    ir ao estado 190


Estado 103

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    APPEND     reduzir usando a regra 77 (mulExp)
    NEG        reduzir usando a regra 77 (mulExp)
    SEMIC      reduzir usando a regra 77 (mulExp)


Estado 104

   78 mulOp: MULT •

    ID       reduzir usando a regra 78 (mulOp)
    INTEGER  reduzir usando a regra 78 (mulOp)
    DECIMAL  reduzir usando a regra 78 (mulOp)
    LIST     reduzir usando a regra 78 (mulOp)
    NIL      reduzir usando a regra 78 (mulOp)
    PARENL   reduzir usando a regra 78 (mulOp)


Estado 105

   79 mulOp: DIV •

    ID       reduzir usando a regra 79 (mulOp)
    INTEGER  reduzir usando a regra 79 (mulOp)
    DECIMAL  reduzir usando a regra 79 (mulOp)
    LIST     reduzir usando a regra 79 (mulOp)
    NIL      reduzir usando a regra 79 (mulOp)
    PARENL   reduzir usando a regra 79 (mulOp)


Estado 106

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 189
    INTEGER  deslocar, e ir ao estado 25
    DECIMAL  deslocar, e ir ao estado 26
    LIST     deslocar, e ir ao estado 27
    NIL      deslocar, e ir ao estado 28
    PARENL   deslocar, e ir ao estado 41

    constOp  ir ao estado 59
    factor   ir ao estado 127
    fCall    ir ao estado 190


Estado 107

   41 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 128


Estado 108

   44 assignExp: ID ASSIGN expression •

    SEMIC  reduzir usando a regra 44 (assignExp)


Estado 109

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    APPEND     reduzir usando a regra 85 (fCall)
    NEG        reduzir usando a regra 85 (fCall)
    MAP        reduzir usando a regra 85 (fCall)
    SEMIC      reduzir usando a regra 85 (fCall)


Estado 110

   87 callParams: simpleExp •

    COMMA   reduzir usando a regra 87 (callParams)
    PARENR  reduzir usando a regra 87 (callParams)


Estado 111

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 129
    PARENR  deslocar, e ir ao estado 130


Estado 112

   40 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 40 (destroyHeadOps)
    TYPE         reduzir usando a regra 40 (destroyHeadOps)
    INTEGER      reduzir usando a regra 40 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 40 (destroyHeadOps)
    LIST         reduzir usando a regra 40 (destroyHeadOps)
    NIL          reduzir usando a regra 40 (destroyHeadOps)
    ADD          reduzir usando a regra 40 (destroyHeadOps)
    SUB          reduzir usando a regra 40 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 40 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 40 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 40 (destroyHeadOps)
    NOT          reduzir usando a regra 40 (destroyHeadOps)
    IF           reduzir usando a regra 40 (destroyHeadOps)
    FOR          reduzir usando a regra 40 (destroyHeadOps)
    READ         reduzir usando a regra 40 (destroyHeadOps)
    WRITE        reduzir usando a regra 40 (destroyHeadOps)
    WRITELN      reduzir usando a regra 40 (destroyHeadOps)
    RETURN       reduzir usando a regra 40 (destroyHeadOps)
    STFUNC       reduzir usando a regra 40 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 40 (destroyHeadOps)
    PARENL       reduzir usando a regra 40 (destroyHeadOps)


Estado 113

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 131


Estado 114

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 132


Estado 115

   30 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 133


Estado 116

   50 inOp: READ PARENL ID • PARENR

    PARENR  deslocar, e ir ao estado 134


Estado 117

   53 outConst: STRING •

    PARENR  reduzir usando a regra 53 (outConst)


Estado 118

   54 outConst: simpleExp •

    PARENR  reduzir usando a regra 54 (outConst)


Estado 119

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 135


Estado 120

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 136


Estado 121

   31 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 31 (returnStmt)
    TYPE         reduzir usando a regra 31 (returnStmt)
    INTEGER      reduzir usando a regra 31 (returnStmt)
    DECIMAL      reduzir usando a regra 31 (returnStmt)
    LIST         reduzir usando a regra 31 (returnStmt)
    NIL          reduzir usando a regra 31 (returnStmt)
    ADD          reduzir usando a regra 31 (returnStmt)
    SUB          reduzir usando a regra 31 (returnStmt)
    HEADLIST     reduzir usando a regra 31 (returnStmt)
    TAILLIST     reduzir usando a regra 31 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 31 (returnStmt)
    NOT          reduzir usando a regra 31 (returnStmt)
    IF           reduzir usando a regra 31 (returnStmt)
    FOR          reduzir usando a regra 31 (returnStmt)
    READ         reduzir usando a regra 31 (returnStmt)
    WRITE        reduzir usando a regra 31 (returnStmt)
    WRITELN      reduzir usando a regra 31 (returnStmt)
    RETURN       reduzir usando a regra 31 (returnStmt)
    STFUNC       reduzir usando a regra 31 (returnStmt)
    ENDFUNC      reduzir usando a regra 31 (returnStmt)
    PARENL       reduzir usando a regra 31 (returnStmt)


Estado 122

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    APPEND     reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    SEMIC      reduzir usando a regra 82 (factor)


Estado 123

   36 appendOps: simpleExp APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 137


Estado 124

   55 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    APPEND  reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    SEMIC   reduzir usando a regra 55 (binLogicalExp)


Estado 125

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 191
    SUB  deslocar, e ir ao estado 192

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    APPEND     reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    SEMIC      reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 102


Estado 126

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    APPEND     reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    SEMIC      reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 106


Estado 127

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    APPEND     reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    SEMIC      reduzir usando a regra 75 (mulExp)


Estado 128

   41 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 138


Estado 129

   86 callParams: callParams COMMA • simpleExp

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 198

    simpleExp      ir ao estado 139
    constOp        ir ao estado 199
    binLogicalExp  ir ao estado 200
    unLogicalExp   ir ao estado 201
    unLogicalOp    ir ao estado 202
    relationalExp  ir ao estado 203
    sumExp         ir ao estado 204
    sumOp          ir ao estado 205
    mulExp         ir ao estado 206
    factor         ir ao estado 207
    fCall          ir ao estado 208


Estado 130

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    APPEND     reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    MAP        reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 131

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 211
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 212
    FOR          deslocar, e ir ao estado 213
    READ         deslocar, e ir ao estado 214
    WRITE        deslocar, e ir ao estado 215
    WRITELN      deslocar, e ir ao estado 216
    RETURN       deslocar, e ir ao estado 217
    STFUNC       deslocar, e ir ao estado 218
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 219
    simpleVarDeclaration  ir ao estado 220
    compoundStmt          ir ao estado 221
    primitiveStmt         ir ao estado 140
    exprStmt              ir ao estado 222
    condStmt              ir ao estado 223
    iterStmt              ir ao estado 224
    returnStmt            ir ao estado 225
    listStmt              ir ao estado 226
    appendOps             ir ao estado 227
    returnListOps         ir ao estado 228
    returnListOp          ir ao estado 229
    destroyHeadOps        ir ao estado 230
    mapFilterOps          ir ao estado 231
    expression            ir ao estado 232
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 233
    constOp               ir ao estado 59
    inOp                  ir ao estado 234
    outOp                 ir ao estado 235
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 236


Estado 132

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 237
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 141
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 133

   30 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 237
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 142
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 134

   50 inOp: READ PARENL ID PARENR •

    ID           reduzir usando a regra 50 (inOp)
    TYPE         reduzir usando a regra 50 (inOp)
    INTEGER      reduzir usando a regra 50 (inOp)
    DECIMAL      reduzir usando a regra 50 (inOp)
    LIST         reduzir usando a regra 50 (inOp)
    NIL          reduzir usando a regra 50 (inOp)
    ADD          reduzir usando a regra 50 (inOp)
    SUB          reduzir usando a regra 50 (inOp)
    HEADLIST     reduzir usando a regra 50 (inOp)
    TAILLIST     reduzir usando a regra 50 (inOp)
    DESTROYHEAD  reduzir usando a regra 50 (inOp)
    NOT          reduzir usando a regra 50 (inOp)
    IF           reduzir usando a regra 50 (inOp)
    FOR          reduzir usando a regra 50 (inOp)
    READ         reduzir usando a regra 50 (inOp)
    WRITE        reduzir usando a regra 50 (inOp)
    WRITELN      reduzir usando a regra 50 (inOp)
    RETURN       reduzir usando a regra 50 (inOp)
    STFUNC       reduzir usando a regra 50 (inOp)
    ENDFUNC      reduzir usando a regra 50 (inOp)
    PARENL       reduzir usando a regra 50 (inOp)


Estado 135

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 143


Estado 136

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 144


Estado 137

   36 appendOps: simpleExp APPEND ID SEMIC •

    ID           reduzir usando a regra 36 (appendOps)
    TYPE         reduzir usando a regra 36 (appendOps)
    INTEGER      reduzir usando a regra 36 (appendOps)
    DECIMAL      reduzir usando a regra 36 (appendOps)
    LIST         reduzir usando a regra 36 (appendOps)
    NIL          reduzir usando a regra 36 (appendOps)
    ADD          reduzir usando a regra 36 (appendOps)
    SUB          reduzir usando a regra 36 (appendOps)
    HEADLIST     reduzir usando a regra 36 (appendOps)
    TAILLIST     reduzir usando a regra 36 (appendOps)
    DESTROYHEAD  reduzir usando a regra 36 (appendOps)
    NOT          reduzir usando a regra 36 (appendOps)
    IF           reduzir usando a regra 36 (appendOps)
    FOR          reduzir usando a regra 36 (appendOps)
    READ         reduzir usando a regra 36 (appendOps)
    WRITE        reduzir usando a regra 36 (appendOps)
    WRITELN      reduzir usando a regra 36 (appendOps)
    RETURN       reduzir usando a regra 36 (appendOps)
    STFUNC       reduzir usando a regra 36 (appendOps)
    ENDFUNC      reduzir usando a regra 36 (appendOps)
    PARENL       reduzir usando a regra 36 (appendOps)


Estado 138

   41 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 41 (mapFilterOps)
    TYPE         reduzir usando a regra 41 (mapFilterOps)
    INTEGER      reduzir usando a regra 41 (mapFilterOps)
    DECIMAL      reduzir usando a regra 41 (mapFilterOps)
    LIST         reduzir usando a regra 41 (mapFilterOps)
    NIL          reduzir usando a regra 41 (mapFilterOps)
    ADD          reduzir usando a regra 41 (mapFilterOps)
    SUB          reduzir usando a regra 41 (mapFilterOps)
    HEADLIST     reduzir usando a regra 41 (mapFilterOps)
    TAILLIST     reduzir usando a regra 41 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 41 (mapFilterOps)
    NOT          reduzir usando a regra 41 (mapFilterOps)
    IF           reduzir usando a regra 41 (mapFilterOps)
    FOR          reduzir usando a regra 41 (mapFilterOps)
    READ         reduzir usando a regra 41 (mapFilterOps)
    WRITE        reduzir usando a regra 41 (mapFilterOps)
    WRITELN      reduzir usando a regra 41 (mapFilterOps)
    RETURN       reduzir usando a regra 41 (mapFilterOps)
    STFUNC       reduzir usando a regra 41 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 41 (mapFilterOps)
    PARENL       reduzir usando a regra 41 (mapFilterOps)


Estado 139

   86 callParams: callParams COMMA simpleExp •

    COMMA   reduzir usando a regra 86 (callParams)
    PARENR  reduzir usando a regra 86 (callParams)


Estado 140

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 145

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    LIST         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    NOT          reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 141

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 146


Estado 142

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 147


Estado 143

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    LIST         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    NOT          reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 144

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 52 (outOp)
    TYPE         reduzir usando a regra 52 (outOp)
    INTEGER      reduzir usando a regra 52 (outOp)
    DECIMAL      reduzir usando a regra 52 (outOp)
    LIST         reduzir usando a regra 52 (outOp)
    NIL          reduzir usando a regra 52 (outOp)
    ADD          reduzir usando a regra 52 (outOp)
    SUB          reduzir usando a regra 52 (outOp)
    HEADLIST     reduzir usando a regra 52 (outOp)
    TAILLIST     reduzir usando a regra 52 (outOp)
    DESTROYHEAD  reduzir usando a regra 52 (outOp)
    NOT          reduzir usando a regra 52 (outOp)
    IF           reduzir usando a regra 52 (outOp)
    FOR          reduzir usando a regra 52 (outOp)
    READ         reduzir usando a regra 52 (outOp)
    WRITE        reduzir usando a regra 52 (outOp)
    WRITELN      reduzir usando a regra 52 (outOp)
    RETURN       reduzir usando a regra 52 (outOp)
    STFUNC       reduzir usando a regra 52 (outOp)
    ENDFUNC      reduzir usando a regra 52 (outOp)
    PARENL       reduzir usando a regra 52 (outOp)


Estado 145

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 148
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 146

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 149

    assignExp  ir ao estado 150


Estado 147

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 149

    assignExp  ir ao estado 151


Estado 148

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    LIST         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    NOT          reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 149

   44 assignExp: ID • ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 238


Estado 150

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 152


Estado 151

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 153


Estado 152

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 154
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 153

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 155
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 154

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    LIST         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    NOT          reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)


Estado 155

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    LIST         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    NOT          reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)


Estado 156

    9 simpleVarDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 239


Estado 157

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 43
    stmtList              ir ao estado 240
    primitiveStmt         ir ao estado 45
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 158

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 241


Estado 159

   44 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 72
    PARENL  deslocar, e ir ao estado 242

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 160

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    SEMIC      reduzir usando a regra 46 (constOp)


Estado 161

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    SEMIC      reduzir usando a regra 47 (constOp)


Estado 162

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    SEMIC      reduzir usando a regra 48 (constOp)


Estado 163

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    SEMIC      reduzir usando a regra 49 (constOp)


Estado 164

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 243
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 165

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    NEG        reduzir usando a regra 83 (factor)
    SEMIC      reduzir usando a regra 83 (factor)


Estado 166

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 90
    AND  deslocar, e ir ao estado 91
    NEG  deslocar, e ir ao estado 92

    SEMIC  reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 244


Estado 167

   56 binLogicalExp: unLogicalExp •

    OR     reduzir usando a regra 56 (binLogicalExp)
    AND    reduzir usando a regra 56 (binLogicalExp)
    NEG    reduzir usando a regra 56 (binLogicalExp)
    SEMIC  reduzir usando a regra 56 (binLogicalExp)


Estado 168

   60 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 237
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    constOp        ir ao estado 165
    unLogicalExp   ir ao estado 245
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 169

   61 unLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 95
    GREATER    deslocar, e ir ao estado 96
    SMALLEQ    deslocar, e ir ao estado 97
    GREATEQ    deslocar, e ir ao estado 98
    EQUALS     deslocar, e ir ao estado 99
    DIFFERENT  deslocar, e ir ao estado 100

    OR     reduzir usando a regra 61 (unLogicalExp)
    AND    reduzir usando a regra 61 (unLogicalExp)
    NEG    reduzir usando a regra 61 (unLogicalExp)
    SEMIC  reduzir usando a regra 61 (unLogicalExp)

    relationalOp  ir ao estado 246


Estado 170

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 191
    SUB  deslocar, e ir ao estado 192

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    NEG        reduzir usando a regra 64 (relationalExp)
    SEMIC      reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 247


Estado 171

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 237
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    PARENL   deslocar, e ir ao estado 164

    constOp  ir ao estado 165
    factor   ir ao estado 248
    fCall    ir ao estado 82


Estado 172

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    NEG        reduzir usando a regra 72 (sumExp)
    SEMIC      reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 249


Estado 173

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    SEMIC      reduzir usando a regra 76 (mulExp)


Estado 174

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    PARENR     reduzir usando a regra 46 (constOp)


Estado 175

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 176

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 177

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 178

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 250
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 179

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    NEG        reduzir usando a regra 83 (factor)
    PARENR     reduzir usando a regra 83 (factor)


Estado 180

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 90
    AND  deslocar, e ir ao estado 91
    NEG  deslocar, e ir ao estado 92

    PARENR  reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 251


Estado 181

   56 binLogicalExp: unLogicalExp •

    OR      reduzir usando a regra 56 (binLogicalExp)
    AND     reduzir usando a regra 56 (binLogicalExp)
    NEG     reduzir usando a regra 56 (binLogicalExp)
    PARENR  reduzir usando a regra 56 (binLogicalExp)


Estado 182

   60 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    constOp        ir ao estado 179
    unLogicalExp   ir ao estado 252
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 183

   61 unLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 95
    GREATER    deslocar, e ir ao estado 96
    SMALLEQ    deslocar, e ir ao estado 97
    GREATEQ    deslocar, e ir ao estado 98
    EQUALS     deslocar, e ir ao estado 99
    DIFFERENT  deslocar, e ir ao estado 100

    OR      reduzir usando a regra 61 (unLogicalExp)
    AND     reduzir usando a regra 61 (unLogicalExp)
    NEG     reduzir usando a regra 61 (unLogicalExp)
    PARENR  reduzir usando a regra 61 (unLogicalExp)

    relationalOp  ir ao estado 253


Estado 184

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 191
    SUB  deslocar, e ir ao estado 192

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    NEG        reduzir usando a regra 64 (relationalExp)
    PARENR     reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 254


Estado 185

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    PARENL   deslocar, e ir ao estado 178

    constOp  ir ao estado 179
    factor   ir ao estado 255
    fCall    ir ao estado 188


Estado 186

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    NEG        reduzir usando a regra 72 (sumExp)
    PARENR     reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 256


Estado 187

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 188

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 189

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 257

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    APPEND     reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 190

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    APPEND     reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 191

   73 sumOp: ADD •

    ID       reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    LIST     reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    ADD      reduzir usando a regra 73 (sumOp)
    SUB      reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 192

   74 sumOp: SUB •

    ID       reduzir usando a regra 74 (sumOp)
    INTEGER  reduzir usando a regra 74 (sumOp)
    DECIMAL  reduzir usando a regra 74 (sumOp)
    LIST     reduzir usando a regra 74 (sumOp)
    NIL      reduzir usando a regra 74 (sumOp)
    ADD      reduzir usando a regra 74 (sumOp)
    SUB      reduzir usando a regra 74 (sumOp)
    PARENL   reduzir usando a regra 74 (sumOp)


Estado 193

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 258

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    COMMA      reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 194

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    COMMA      reduzir usando a regra 46 (constOp)
    PARENR     reduzir usando a regra 46 (constOp)


Estado 195

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    COMMA      reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 196

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    COMMA      reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 197

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    COMMA      reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 198

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 259
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 199

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    NEG        reduzir usando a regra 83 (factor)
    COMMA      reduzir usando a regra 83 (factor)
    PARENR     reduzir usando a regra 83 (factor)


Estado 200

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 90
    AND  deslocar, e ir ao estado 91
    NEG  deslocar, e ir ao estado 92

    COMMA   reduzir usando a regra 45 (simpleExp)
    PARENR  reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 260


Estado 201

   56 binLogicalExp: unLogicalExp •

    OR      reduzir usando a regra 56 (binLogicalExp)
    AND     reduzir usando a regra 56 (binLogicalExp)
    NEG     reduzir usando a regra 56 (binLogicalExp)
    COMMA   reduzir usando a regra 56 (binLogicalExp)
    PARENR  reduzir usando a regra 56 (binLogicalExp)


Estado 202

   60 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 198

    constOp        ir ao estado 199
    unLogicalExp   ir ao estado 261
    unLogicalOp    ir ao estado 202
    relationalExp  ir ao estado 203
    sumExp         ir ao estado 204
    sumOp          ir ao estado 205
    mulExp         ir ao estado 206
    factor         ir ao estado 207
    fCall          ir ao estado 208


Estado 203

   61 unLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 95
    GREATER    deslocar, e ir ao estado 96
    SMALLEQ    deslocar, e ir ao estado 97
    GREATEQ    deslocar, e ir ao estado 98
    EQUALS     deslocar, e ir ao estado 99
    DIFFERENT  deslocar, e ir ao estado 100

    OR      reduzir usando a regra 61 (unLogicalExp)
    AND     reduzir usando a regra 61 (unLogicalExp)
    NEG     reduzir usando a regra 61 (unLogicalExp)
    COMMA   reduzir usando a regra 61 (unLogicalExp)
    PARENR  reduzir usando a regra 61 (unLogicalExp)

    relationalOp  ir ao estado 262


Estado 204

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 191
    SUB  deslocar, e ir ao estado 192

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    NEG        reduzir usando a regra 64 (relationalExp)
    COMMA      reduzir usando a regra 64 (relationalExp)
    PARENR     reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 263


Estado 205

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    PARENL   deslocar, e ir ao estado 198

    constOp  ir ao estado 199
    factor   ir ao estado 264
    fCall    ir ao estado 208


Estado 206

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    NEG        reduzir usando a regra 72 (sumExp)
    COMMA      reduzir usando a regra 72 (sumExp)
    PARENR     reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 265


Estado 207

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    COMMA      reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 208

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    COMMA      reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 209

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 198
    PARENR   deslocar, e ir ao estado 266

    simpleExp      ir ao estado 110
    constOp        ir ao estado 199
    binLogicalExp  ir ao estado 200
    unLogicalExp   ir ao estado 201
    unLogicalOp    ir ao estado 202
    relationalExp  ir ao estado 203
    sumExp         ir ao estado 204
    sumOp          ir ao estado 205
    mulExp         ir ao estado 206
    factor         ir ao estado 207
    fCall          ir ao estado 208
    callParams     ir ao estado 267


Estado 210

   62 unLogicalOp: NOT •

    OR      reduzir usando a regra 62 (unLogicalOp)
    AND     reduzir usando a regra 62 (unLogicalOp)
    APPEND  reduzir usando a regra 62 (unLogicalOp)
    NEG     reduzir usando a regra 62 (unLogicalOp)
    SEMIC   reduzir usando a regra 62 (unLogicalOp)


Estado 211

   40 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 268


Estado 212

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 269


Estado 213

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 270


Estado 214

   50 inOp: READ • PARENL ID PARENR

    PARENL  deslocar, e ir ao estado 271


Estado 215

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 272


Estado 216

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 273


Estado 217

   31 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    expression     ir ao estado 274
    assignExp      ir ao estado 57
    simpleExp      ir ao estado 81
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 218

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 43
    stmtList              ir ao estado 275
    primitiveStmt         ir ao estado 45
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 219

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    LIST         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    NOT          reduzir usando a regra 25 (primitiveStmt)
    ELSE         reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 220

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 276


Estado 221

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    LIST         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    NOT          reduzir usando a regra 18 (primitiveStmt)
    ELSE         reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 222

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    LIST         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    NOT          reduzir usando a regra 17 (primitiveStmt)
    ELSE         reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 223

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    LIST         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    NOT          reduzir usando a regra 19 (primitiveStmt)
    ELSE         reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 224

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    LIST         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    NOT          reduzir usando a regra 20 (primitiveStmt)
    ELSE         reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 225

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    LIST         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    NOT          reduzir usando a regra 21 (primitiveStmt)
    ELSE         reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 226

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    LIST         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    NOT          reduzir usando a regra 22 (primitiveStmt)
    ELSE         reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 227

   32 listStmt: appendOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    LIST         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    NOT          reduzir usando a regra 32 (listStmt)
    ELSE         reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 228

   33 listStmt: returnListOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    LIST         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    NOT          reduzir usando a regra 33 (listStmt)
    ELSE         reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 229

   37 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 277


Estado 230

   34 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    LIST         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    NOT          reduzir usando a regra 34 (listStmt)
    ELSE         reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 231

   35 listStmt: mapFilterOps •

    ID           reduzir usando a regra 35 (listStmt)
    TYPE         reduzir usando a regra 35 (listStmt)
    INTEGER      reduzir usando a regra 35 (listStmt)
    DECIMAL      reduzir usando a regra 35 (listStmt)
    LIST         reduzir usando a regra 35 (listStmt)
    NIL          reduzir usando a regra 35 (listStmt)
    ADD          reduzir usando a regra 35 (listStmt)
    SUB          reduzir usando a regra 35 (listStmt)
    HEADLIST     reduzir usando a regra 35 (listStmt)
    TAILLIST     reduzir usando a regra 35 (listStmt)
    DESTROYHEAD  reduzir usando a regra 35 (listStmt)
    NOT          reduzir usando a regra 35 (listStmt)
    ELSE         reduzir usando a regra 35 (listStmt)
    IF           reduzir usando a regra 35 (listStmt)
    FOR          reduzir usando a regra 35 (listStmt)
    READ         reduzir usando a regra 35 (listStmt)
    WRITE        reduzir usando a regra 35 (listStmt)
    WRITELN      reduzir usando a regra 35 (listStmt)
    RETURN       reduzir usando a regra 35 (listStmt)
    STFUNC       reduzir usando a regra 35 (listStmt)
    ENDFUNC      reduzir usando a regra 35 (listStmt)
    PARENL       reduzir usando a regra 35 (listStmt)


Estado 232

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 278


Estado 233

   36 appendOps: simpleExp • APPEND ID SEMIC
   43 expression: simpleExp •

    APPEND  deslocar, e ir ao estado 279

    SEMIC  reduzir usando a regra 43 (expression)


Estado 234

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    LIST         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    NOT          reduzir usando a regra 23 (primitiveStmt)
    ELSE         reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 235

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    LIST         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    NOT          reduzir usando a regra 24 (primitiveStmt)
    ELSE         reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 236

   41 mapFilterOps: fCall • MAP ID SEMIC
   81 factor: fCall •

    MAP  deslocar, e ir ao estado 280

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    APPEND     reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 237

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 242

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 238

   44 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 281
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    expression     ir ao estado 282
    assignExp      ir ao estado 283
    simpleExp      ir ao estado 284
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 239

    9 simpleVarDeclaration: TYPE ID •

    SEMIC  reduzir usando a regra 9 (simpleVarDeclaration)


Estado 240

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 157
    ENDFUNC      deslocar, e ir ao estado 285
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 86
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 241

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    LIST         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    NOT          reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 242

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 198
    PARENR   deslocar, e ir ao estado 286

    simpleExp      ir ao estado 110
    constOp        ir ao estado 199
    binLogicalExp  ir ao estado 200
    unLogicalExp   ir ao estado 201
    unLogicalOp    ir ao estado 202
    relationalExp  ir ao estado 203
    sumExp         ir ao estado 204
    sumOp          ir ao estado 205
    mulExp         ir ao estado 206
    factor         ir ao estado 207
    fCall          ir ao estado 208
    callParams     ir ao estado 287


Estado 243

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 288


Estado 244

   55 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 289

    unLogicalOp  ir ao estado 290


Estado 245

   60 unLogicalExp: unLogicalOp unLogicalExp •

    OR     reduzir usando a regra 60 (unLogicalExp)
    AND    reduzir usando a regra 60 (unLogicalExp)
    NEG    reduzir usando a regra 60 (unLogicalExp)
    SEMIC  reduzir usando a regra 60 (unLogicalExp)


Estado 246

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 237
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 164

    constOp  ir ao estado 165
    sumExp   ir ao estado 291
    sumOp    ir ao estado 171
    mulExp   ir ao estado 172
    factor   ir ao estado 173
    fCall    ir ao estado 82


Estado 247

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 237
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 164

    constOp  ir ao estado 165
    sumOp    ir ao estado 171
    mulExp   ir ao estado 292
    factor   ir ao estado 173
    fCall    ir ao estado 82


Estado 248

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    NEG        reduzir usando a regra 77 (mulExp)
    SEMIC      reduzir usando a regra 77 (mulExp)


Estado 249

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 237
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    PARENL   deslocar, e ir ao estado 164

    constOp  ir ao estado 165
    factor   ir ao estado 293
    fCall    ir ao estado 82


Estado 250

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 294


Estado 251

   55 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 295

    unLogicalOp  ir ao estado 296


Estado 252

   60 unLogicalExp: unLogicalOp unLogicalExp •

    OR      reduzir usando a regra 60 (unLogicalExp)
    AND     reduzir usando a regra 60 (unLogicalExp)
    NEG     reduzir usando a regra 60 (unLogicalExp)
    PARENR  reduzir usando a regra 60 (unLogicalExp)


Estado 253

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 178

    constOp  ir ao estado 179
    sumExp   ir ao estado 297
    sumOp    ir ao estado 185
    mulExp   ir ao estado 186
    factor   ir ao estado 187
    fCall    ir ao estado 188


Estado 254

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 178

    constOp  ir ao estado 179
    sumOp    ir ao estado 185
    mulExp   ir ao estado 298
    factor   ir ao estado 187
    fCall    ir ao estado 188


Estado 255

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    NEG        reduzir usando a regra 77 (mulExp)
    PARENR     reduzir usando a regra 77 (mulExp)


Estado 256

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    PARENL   deslocar, e ir ao estado 178

    constOp  ir ao estado 179
    factor   ir ao estado 299
    fCall    ir ao estado 188


Estado 257

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 198
    PARENR   deslocar, e ir ao estado 300

    simpleExp      ir ao estado 110
    constOp        ir ao estado 199
    binLogicalExp  ir ao estado 200
    unLogicalExp   ir ao estado 201
    unLogicalOp    ir ao estado 202
    relationalExp  ir ao estado 203
    sumExp         ir ao estado 204
    sumOp          ir ao estado 205
    mulExp         ir ao estado 206
    factor         ir ao estado 207
    fCall          ir ao estado 208
    callParams     ir ao estado 301


Estado 258

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 198
    PARENR   deslocar, e ir ao estado 302

    simpleExp      ir ao estado 110
    constOp        ir ao estado 199
    binLogicalExp  ir ao estado 200
    unLogicalExp   ir ao estado 201
    unLogicalOp    ir ao estado 202
    relationalExp  ir ao estado 203
    sumExp         ir ao estado 204
    sumOp          ir ao estado 205
    mulExp         ir ao estado 206
    factor         ir ao estado 207
    fCall          ir ao estado 208
    callParams     ir ao estado 303


Estado 259

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 304


Estado 260

   55 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 305

    unLogicalOp  ir ao estado 306


Estado 261

   60 unLogicalExp: unLogicalOp unLogicalExp •

    OR      reduzir usando a regra 60 (unLogicalExp)
    AND     reduzir usando a regra 60 (unLogicalExp)
    NEG     reduzir usando a regra 60 (unLogicalExp)
    COMMA   reduzir usando a regra 60 (unLogicalExp)
    PARENR  reduzir usando a regra 60 (unLogicalExp)


Estado 262

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 198

    constOp  ir ao estado 199
    sumExp   ir ao estado 307
    sumOp    ir ao estado 205
    mulExp   ir ao estado 206
    factor   ir ao estado 207
    fCall    ir ao estado 208


Estado 263

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 198

    constOp  ir ao estado 199
    sumOp    ir ao estado 205
    mulExp   ir ao estado 308
    factor   ir ao estado 207
    fCall    ir ao estado 208


Estado 264

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    NEG        reduzir usando a regra 77 (mulExp)
    COMMA      reduzir usando a regra 77 (mulExp)
    PARENR     reduzir usando a regra 77 (mulExp)


Estado 265

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 193
    INTEGER  deslocar, e ir ao estado 194
    DECIMAL  deslocar, e ir ao estado 195
    LIST     deslocar, e ir ao estado 196
    NIL      deslocar, e ir ao estado 197
    PARENL   deslocar, e ir ao estado 198

    constOp  ir ao estado 199
    factor   ir ao estado 309
    fCall    ir ao estado 208


Estado 266

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    NEG        reduzir usando a regra 85 (fCall)
    PARENR     reduzir usando a regra 85 (fCall)


Estado 267

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 129
    PARENR  deslocar, e ir ao estado 310


Estado 268

   40 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 311


Estado 269

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 312
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 270

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    assignExp      ir ao estado 313
    simpleExp      ir ao estado 314
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 271

   50 inOp: READ PARENL • ID PARENR

    ID  deslocar, e ir ao estado 315


Estado 272

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    STRING   deslocar, e ir ao estado 117
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 118
    constOp        ir ao estado 179
    outConst       ir ao estado 316
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 273

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 83
    INTEGER  deslocar, e ir ao estado 174
    DECIMAL  deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 176
    STRING   deslocar, e ir ao estado 117
    NIL      deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 118
    constOp        ir ao estado 179
    outConst       ir ao estado 317
    binLogicalExp  ir ao estado 180
    unLogicalExp   ir ao estado 181
    unLogicalOp    ir ao estado 182
    relationalExp  ir ao estado 183
    sumExp         ir ao estado 184
    sumOp          ir ao estado 185
    mulExp         ir ao estado 186
    factor         ir ao estado 187
    fCall          ir ao estado 188


Estado 274

   31 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 318


Estado 275

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 157
    ENDFUNC      deslocar, e ir ao estado 319
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 86
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 276

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    LIST         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    NOT          reduzir usando a regra 6 (varDeclaration)
    ELSE         reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 277

   37 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 37 (returnListOps)
    TYPE         reduzir usando a regra 37 (returnListOps)
    INTEGER      reduzir usando a regra 37 (returnListOps)
    DECIMAL      reduzir usando a regra 37 (returnListOps)
    LIST         reduzir usando a regra 37 (returnListOps)
    NIL          reduzir usando a regra 37 (returnListOps)
    ADD          reduzir usando a regra 37 (returnListOps)
    SUB          reduzir usando a regra 37 (returnListOps)
    HEADLIST     reduzir usando a regra 37 (returnListOps)
    TAILLIST     reduzir usando a regra 37 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 37 (returnListOps)
    NOT          reduzir usando a regra 37 (returnListOps)
    ELSE         reduzir usando a regra 37 (returnListOps)
    IF           reduzir usando a regra 37 (returnListOps)
    FOR          reduzir usando a regra 37 (returnListOps)
    READ         reduzir usando a regra 37 (returnListOps)
    WRITE        reduzir usando a regra 37 (returnListOps)
    WRITELN      reduzir usando a regra 37 (returnListOps)
    RETURN       reduzir usando a regra 37 (returnListOps)
    STFUNC       reduzir usando a regra 37 (returnListOps)
    ENDFUNC      reduzir usando a regra 37 (returnListOps)
    PARENL       reduzir usando a regra 37 (returnListOps)


Estado 278

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    LIST         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    NOT          reduzir usando a regra 26 (exprStmt)
    ELSE         reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 279

   36 appendOps: simpleExp APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 320


Estado 280

   41 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 321


Estado 281

   44 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 238
    PARENL  deslocar, e ir ao estado 209

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 282

   44 assignExp: ID ASSIGN expression •

    PARENR  reduzir usando a regra 44 (assignExp)


Estado 283

   42 expression: assignExp •

    PARENR  reduzir usando a regra 42 (expression)


Estado 284

   43 expression: simpleExp •

    PARENR  reduzir usando a regra 43 (expression)


Estado 285

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    LIST         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    NOT          reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 286

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    NEG        reduzir usando a regra 85 (fCall)
    SEMIC      reduzir usando a regra 85 (fCall)


Estado 287

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 129
    PARENR  deslocar, e ir ao estado 322


Estado 288

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    SEMIC      reduzir usando a regra 82 (factor)


Estado 289

   62 unLogicalOp: NOT •

    OR     reduzir usando a regra 62 (unLogicalOp)
    AND    reduzir usando a regra 62 (unLogicalOp)
    NEG    reduzir usando a regra 62 (unLogicalOp)
    SEMIC  reduzir usando a regra 62 (unLogicalOp)


Estado 290

   55 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR     reduzir usando a regra 55 (binLogicalExp)
    AND    reduzir usando a regra 55 (binLogicalExp)
    NEG    reduzir usando a regra 55 (binLogicalExp)
    SEMIC  reduzir usando a regra 55 (binLogicalExp)


Estado 291

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 191
    SUB  deslocar, e ir ao estado 192

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    SEMIC      reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 247


Estado 292

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    SEMIC      reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 249


Estado 293

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    SEMIC      reduzir usando a regra 75 (mulExp)


Estado 294

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 295

   62 unLogicalOp: NOT •

    OR      reduzir usando a regra 62 (unLogicalOp)
    AND     reduzir usando a regra 62 (unLogicalOp)
    NEG     reduzir usando a regra 62 (unLogicalOp)
    PARENR  reduzir usando a regra 62 (unLogicalOp)


Estado 296

   55 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 297

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 191
    SUB  deslocar, e ir ao estado 192

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 254


Estado 298

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 256


Estado 299

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 300

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    APPEND     reduzir usando a regra 85 (fCall)
    NEG        reduzir usando a regra 85 (fCall)
    SEMIC      reduzir usando a regra 85 (fCall)


Estado 301

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 129
    PARENR  deslocar, e ir ao estado 323


Estado 302

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    NEG        reduzir usando a regra 85 (fCall)
    COMMA      reduzir usando a regra 85 (fCall)
    PARENR     reduzir usando a regra 85 (fCall)


Estado 303

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 129
    PARENR  deslocar, e ir ao estado 324


Estado 304

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    COMMA      reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 305

   62 unLogicalOp: NOT •

    OR      reduzir usando a regra 62 (unLogicalOp)
    AND     reduzir usando a regra 62 (unLogicalOp)
    NEG     reduzir usando a regra 62 (unLogicalOp)
    COMMA   reduzir usando a regra 62 (unLogicalOp)
    PARENR  reduzir usando a regra 62 (unLogicalOp)


Estado 306

   55 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    COMMA   reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 307

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 191
    SUB  deslocar, e ir ao estado 192

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    COMMA      reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 263


Estado 308

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    COMMA      reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 265


Estado 309

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    COMMA      reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 310

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 311

   40 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 40 (destroyHeadOps)
    TYPE         reduzir usando a regra 40 (destroyHeadOps)
    INTEGER      reduzir usando a regra 40 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 40 (destroyHeadOps)
    LIST         reduzir usando a regra 40 (destroyHeadOps)
    NIL          reduzir usando a regra 40 (destroyHeadOps)
    ADD          reduzir usando a regra 40 (destroyHeadOps)
    SUB          reduzir usando a regra 40 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 40 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 40 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 40 (destroyHeadOps)
    NOT          reduzir usando a regra 40 (destroyHeadOps)
    ELSE         reduzir usando a regra 40 (destroyHeadOps)
    IF           reduzir usando a regra 40 (destroyHeadOps)
    FOR          reduzir usando a regra 40 (destroyHeadOps)
    READ         reduzir usando a regra 40 (destroyHeadOps)
    WRITE        reduzir usando a regra 40 (destroyHeadOps)
    WRITELN      reduzir usando a regra 40 (destroyHeadOps)
    RETURN       reduzir usando a regra 40 (destroyHeadOps)
    STFUNC       reduzir usando a regra 40 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 40 (destroyHeadOps)
    PARENL       reduzir usando a regra 40 (destroyHeadOps)


Estado 312

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 325


Estado 313

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 326


Estado 314

   30 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 327


Estado 315

   50 inOp: READ PARENL ID • PARENR

    PARENR  deslocar, e ir ao estado 328


Estado 316

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 329


Estado 317

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 330


Estado 318

   31 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 31 (returnStmt)
    TYPE         reduzir usando a regra 31 (returnStmt)
    INTEGER      reduzir usando a regra 31 (returnStmt)
    DECIMAL      reduzir usando a regra 31 (returnStmt)
    LIST         reduzir usando a regra 31 (returnStmt)
    NIL          reduzir usando a regra 31 (returnStmt)
    ADD          reduzir usando a regra 31 (returnStmt)
    SUB          reduzir usando a regra 31 (returnStmt)
    HEADLIST     reduzir usando a regra 31 (returnStmt)
    TAILLIST     reduzir usando a regra 31 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 31 (returnStmt)
    NOT          reduzir usando a regra 31 (returnStmt)
    ELSE         reduzir usando a regra 31 (returnStmt)
    IF           reduzir usando a regra 31 (returnStmt)
    FOR          reduzir usando a regra 31 (returnStmt)
    READ         reduzir usando a regra 31 (returnStmt)
    WRITE        reduzir usando a regra 31 (returnStmt)
    WRITELN      reduzir usando a regra 31 (returnStmt)
    RETURN       reduzir usando a regra 31 (returnStmt)
    STFUNC       reduzir usando a regra 31 (returnStmt)
    ENDFUNC      reduzir usando a regra 31 (returnStmt)
    PARENL       reduzir usando a regra 31 (returnStmt)


Estado 319

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    LIST         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    NOT          reduzir usando a regra 14 (compoundStmt)
    ELSE         reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 320

   36 appendOps: simpleExp APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 331


Estado 321

   41 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 332


Estado 322

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 323

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    APPEND     reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 324

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    COMMA      reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 325

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 211
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 212
    FOR          deslocar, e ir ao estado 213
    READ         deslocar, e ir ao estado 214
    WRITE        deslocar, e ir ao estado 215
    WRITELN      deslocar, e ir ao estado 216
    RETURN       deslocar, e ir ao estado 217
    STFUNC       deslocar, e ir ao estado 218
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 219
    simpleVarDeclaration  ir ao estado 220
    compoundStmt          ir ao estado 221
    primitiveStmt         ir ao estado 333
    exprStmt              ir ao estado 222
    condStmt              ir ao estado 223
    iterStmt              ir ao estado 224
    returnStmt            ir ao estado 225
    listStmt              ir ao estado 226
    appendOps             ir ao estado 227
    returnListOps         ir ao estado 228
    returnListOp          ir ao estado 229
    destroyHeadOps        ir ao estado 230
    mapFilterOps          ir ao estado 231
    expression            ir ao estado 232
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 233
    constOp               ir ao estado 59
    inOp                  ir ao estado 234
    outOp                 ir ao estado 235
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 236


Estado 326

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 237
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 334
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 327

   30 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 237
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    LIST     deslocar, e ir ao estado 162
    NIL      deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 335
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 82


Estado 328

   50 inOp: READ PARENL ID PARENR •

    ID           reduzir usando a regra 50 (inOp)
    TYPE         reduzir usando a regra 50 (inOp)
    INTEGER      reduzir usando a regra 50 (inOp)
    DECIMAL      reduzir usando a regra 50 (inOp)
    LIST         reduzir usando a regra 50 (inOp)
    NIL          reduzir usando a regra 50 (inOp)
    ADD          reduzir usando a regra 50 (inOp)
    SUB          reduzir usando a regra 50 (inOp)
    HEADLIST     reduzir usando a regra 50 (inOp)
    TAILLIST     reduzir usando a regra 50 (inOp)
    DESTROYHEAD  reduzir usando a regra 50 (inOp)
    NOT          reduzir usando a regra 50 (inOp)
    ELSE         reduzir usando a regra 50 (inOp)
    IF           reduzir usando a regra 50 (inOp)
    FOR          reduzir usando a regra 50 (inOp)
    READ         reduzir usando a regra 50 (inOp)
    WRITE        reduzir usando a regra 50 (inOp)
    WRITELN      reduzir usando a regra 50 (inOp)
    RETURN       reduzir usando a regra 50 (inOp)
    STFUNC       reduzir usando a regra 50 (inOp)
    ENDFUNC      reduzir usando a regra 50 (inOp)
    PARENL       reduzir usando a regra 50 (inOp)


Estado 329

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 336


Estado 330

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 337


Estado 331

   36 appendOps: simpleExp APPEND ID SEMIC •

    ID           reduzir usando a regra 36 (appendOps)
    TYPE         reduzir usando a regra 36 (appendOps)
    INTEGER      reduzir usando a regra 36 (appendOps)
    DECIMAL      reduzir usando a regra 36 (appendOps)
    LIST         reduzir usando a regra 36 (appendOps)
    NIL          reduzir usando a regra 36 (appendOps)
    ADD          reduzir usando a regra 36 (appendOps)
    SUB          reduzir usando a regra 36 (appendOps)
    HEADLIST     reduzir usando a regra 36 (appendOps)
    TAILLIST     reduzir usando a regra 36 (appendOps)
    DESTROYHEAD  reduzir usando a regra 36 (appendOps)
    NOT          reduzir usando a regra 36 (appendOps)
    ELSE         reduzir usando a regra 36 (appendOps)
    IF           reduzir usando a regra 36 (appendOps)
    FOR          reduzir usando a regra 36 (appendOps)
    READ         reduzir usando a regra 36 (appendOps)
    WRITE        reduzir usando a regra 36 (appendOps)
    WRITELN      reduzir usando a regra 36 (appendOps)
    RETURN       reduzir usando a regra 36 (appendOps)
    STFUNC       reduzir usando a regra 36 (appendOps)
    ENDFUNC      reduzir usando a regra 36 (appendOps)
    PARENL       reduzir usando a regra 36 (appendOps)


Estado 332

   41 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 41 (mapFilterOps)
    TYPE         reduzir usando a regra 41 (mapFilterOps)
    INTEGER      reduzir usando a regra 41 (mapFilterOps)
    DECIMAL      reduzir usando a regra 41 (mapFilterOps)
    LIST         reduzir usando a regra 41 (mapFilterOps)
    NIL          reduzir usando a regra 41 (mapFilterOps)
    ADD          reduzir usando a regra 41 (mapFilterOps)
    SUB          reduzir usando a regra 41 (mapFilterOps)
    HEADLIST     reduzir usando a regra 41 (mapFilterOps)
    TAILLIST     reduzir usando a regra 41 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 41 (mapFilterOps)
    NOT          reduzir usando a regra 41 (mapFilterOps)
    ELSE         reduzir usando a regra 41 (mapFilterOps)
    IF           reduzir usando a regra 41 (mapFilterOps)
    FOR          reduzir usando a regra 41 (mapFilterOps)
    READ         reduzir usando a regra 41 (mapFilterOps)
    WRITE        reduzir usando a regra 41 (mapFilterOps)
    WRITELN      reduzir usando a regra 41 (mapFilterOps)
    RETURN       reduzir usando a regra 41 (mapFilterOps)
    STFUNC       reduzir usando a regra 41 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 41 (mapFilterOps)
    PARENL       reduzir usando a regra 41 (mapFilterOps)


Estado 333

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 338

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    LIST         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    NOT          reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 334

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 339


Estado 335

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 340


Estado 336

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    LIST         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    NOT          reduzir usando a regra 51 (outOp)
    ELSE         reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 337

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 52 (outOp)
    TYPE         reduzir usando a regra 52 (outOp)
    INTEGER      reduzir usando a regra 52 (outOp)
    DECIMAL      reduzir usando a regra 52 (outOp)
    LIST         reduzir usando a regra 52 (outOp)
    NIL          reduzir usando a regra 52 (outOp)
    ADD          reduzir usando a regra 52 (outOp)
    SUB          reduzir usando a regra 52 (outOp)
    HEADLIST     reduzir usando a regra 52 (outOp)
    TAILLIST     reduzir usando a regra 52 (outOp)
    DESTROYHEAD  reduzir usando a regra 52 (outOp)
    NOT          reduzir usando a regra 52 (outOp)
    ELSE         reduzir usando a regra 52 (outOp)
    IF           reduzir usando a regra 52 (outOp)
    FOR          reduzir usando a regra 52 (outOp)
    READ         reduzir usando a regra 52 (outOp)
    WRITE        reduzir usando a regra 52 (outOp)
    WRITELN      reduzir usando a regra 52 (outOp)
    RETURN       reduzir usando a regra 52 (outOp)
    STFUNC       reduzir usando a regra 52 (outOp)
    ENDFUNC      reduzir usando a regra 52 (outOp)
    PARENL       reduzir usando a regra 52 (outOp)


Estado 338

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 211
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 212
    FOR          deslocar, e ir ao estado 213
    READ         deslocar, e ir ao estado 214
    WRITE        deslocar, e ir ao estado 215
    WRITELN      deslocar, e ir ao estado 216
    RETURN       deslocar, e ir ao estado 217
    STFUNC       deslocar, e ir ao estado 218
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 219
    simpleVarDeclaration  ir ao estado 220
    compoundStmt          ir ao estado 221
    primitiveStmt         ir ao estado 341
    exprStmt              ir ao estado 222
    condStmt              ir ao estado 223
    iterStmt              ir ao estado 224
    returnStmt            ir ao estado 225
    listStmt              ir ao estado 226
    appendOps             ir ao estado 227
    returnListOps         ir ao estado 228
    returnListOp          ir ao estado 229
    destroyHeadOps        ir ao estado 230
    mapFilterOps          ir ao estado 231
    expression            ir ao estado 232
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 233
    constOp               ir ao estado 59
    inOp                  ir ao estado 234
    outOp                 ir ao estado 235
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 236


Estado 339

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 149

    assignExp  ir ao estado 342


Estado 340

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 149

    assignExp  ir ao estado 343


Estado 341

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    LIST         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    NOT          reduzir usando a regra 28 (condStmt)
    ELSE         reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 342

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 344


Estado 343

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 345


Estado 344

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 211
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 212
    FOR          deslocar, e ir ao estado 213
    READ         deslocar, e ir ao estado 214
    WRITE        deslocar, e ir ao estado 215
    WRITELN      deslocar, e ir ao estado 216
    RETURN       deslocar, e ir ao estado 217
    STFUNC       deslocar, e ir ao estado 218
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 219
    simpleVarDeclaration  ir ao estado 220
    compoundStmt          ir ao estado 221
    primitiveStmt         ir ao estado 346
    exprStmt              ir ao estado 222
    condStmt              ir ao estado 223
    iterStmt              ir ao estado 224
    returnStmt            ir ao estado 225
    listStmt              ir ao estado 226
    appendOps             ir ao estado 227
    returnListOps         ir ao estado 228
    returnListOp          ir ao estado 229
    destroyHeadOps        ir ao estado 230
    mapFilterOps          ir ao estado 231
    expression            ir ao estado 232
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 233
    constOp               ir ao estado 59
    inOp                  ir ao estado 234
    outOp                 ir ao estado 235
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 236


Estado 345

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 156
    INTEGER      deslocar, e ir ao estado 25
    DECIMAL      deslocar, e ir ao estado 26
    LIST         deslocar, e ir ao estado 27
    NIL          deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 211
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 212
    FOR          deslocar, e ir ao estado 213
    READ         deslocar, e ir ao estado 214
    WRITE        deslocar, e ir ao estado 215
    WRITELN      deslocar, e ir ao estado 216
    RETURN       deslocar, e ir ao estado 217
    STFUNC       deslocar, e ir ao estado 218
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 219
    simpleVarDeclaration  ir ao estado 220
    compoundStmt          ir ao estado 221
    primitiveStmt         ir ao estado 347
    exprStmt              ir ao estado 222
    condStmt              ir ao estado 223
    iterStmt              ir ao estado 224
    returnStmt            ir ao estado 225
    listStmt              ir ao estado 226
    appendOps             ir ao estado 227
    returnListOps         ir ao estado 228
    returnListOp          ir ao estado 229
    destroyHeadOps        ir ao estado 230
    mapFilterOps          ir ao estado 231
    expression            ir ao estado 232
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 233
    constOp               ir ao estado 59
    inOp                  ir ao estado 234
    outOp                 ir ao estado 235
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 236


Estado 346

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    LIST         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    NOT          reduzir usando a regra 29 (iterStmt)
    ELSE         reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)


Estado 347

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    LIST         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    NOT          reduzir usando a regra 30 (iterStmt)
    ELSE         reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)
