Terminais sem uso na gramática

    FILTER


Gramática

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funcDeclaration

    6 varDeclaration: simpleVarDeclaration SEMIC

    7 funcDeclaration: simpleFuncDeclaration PARENL params PARENR compoundStmt
    8                | simpleFuncDeclaration PARENL PARENR compoundStmt

    9 simpleVarDeclaration: TYPE ID

   10 simpleFuncDeclaration: TYPE ID

   11 params: params param
   12       | param

   13 param: simpleVarDeclaration

   14 compoundStmt: STFUNC stmtList ENDFUNC

   15 stmtList: stmtList primitiveStmt
   16         | primitiveStmt

   17 primitiveStmt: exprStmt
   18              | compoundStmt
   19              | condStmt
   20              | iterStmt
   21              | returnStmt
   22              | listStmt
   23              | inOp
   24              | outOp
   25              | varDeclaration

   26 exprStmt: expression SEMIC

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt
   28         | IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   31 returnStmt: RETURN expression SEMIC

   32 listStmt: appendOps
   33         | returnListOps
   34         | destroyHeadOps
   35         | mapFilterOps

   36 appendOps: ID APPEND ID SEMIC

   37 returnListOps: returnListOp ID

   38 returnListOp: HEADLIST
   39             | TAILLIST

   40 destroyHeadOps: DESTROYHEAD ID SEMIC

   41 mapFilterOps: fCall MAP ID SEMIC

   42 expression: assignExp
   43           | simpleExp

   44 assignExp: ID ASSIGN expression

   45 simpleExp: binLogicalExp

   46 constOp: INTEGER
   47        | DECIMAL
   48        | LIST
   49        | NIL

   50 inOp: READ PARENL ID PARENR SEMIC

   51 outOp: WRITE PARENL outConst PARENR SEMIC
   52      | WRITELN PARENL outConst PARENR SEMIC

   53 outConst: STRING
   54         | simpleExp

   55 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp
   56              | unLogicalExp

   57 binLogicalOp: OR
   58             | AND
   59             | NEG

   60 unLogicalExp: unLogicalOp unLogicalExp
   61             | relationalExp

   62 unLogicalOp: NOT

   63 relationalExp: relationalExp relationalOp sumExp
   64              | sumExp

   65 relationalOp: SMALLER
   66             | GREATER
   67             | SMALLEQ
   68             | GREATEQ
   69             | EQUALS
   70             | DIFFERENT

   71 sumExp: sumExp sumOp mulExp
   72       | mulExp

   73 sumOp: ADD
   74      | SUB

   75 mulExp: mulExp mulOp factor
   76       | factor
   77       | sumOp factor

   78 mulOp: MULT
   79      | DIV

   80 factor: ID
   81       | fCall
   82       | PARENL simpleExp PARENR
   83       | constOp

   84 fCall: ID PARENL callParams PARENR
   85      | ID PARENL PARENR

   86 callParams: callParams COMMA simpleExp
   87           | simpleExp


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    ID <str> (258) 9 10 36 37 40 41 44 50 80 84 85
    TYPE <str> (259) 9 10
    LIST <str> (260) 48
    STRING <str> (261) 53
    NIL <str> (262) 49
    INTEGER <integer> (263) 46
    DECIMAL <dec> (264) 47
    ADD <str> (265) 73
    SUB <str> (266) 74
    MULT <str> (267) 78
    DIV <str> (268) 79
    OR <str> (269) 57
    AND <str> (270) 58
    SMALLER <str> (271) 65
    GREATER <str> (272) 66
    SMALLEQ <str> (273) 67
    GREATEQ <str> (274) 68
    EQUALS <str> (275) 69
    DIFFERENT <str> (276) 70
    APPEND <str> (277) 36
    HEADLIST <str> (278) 38
    TAILLIST <str> (279) 39
    DESTROYHEAD <str> (280) 40
    FILTER <str> (281)
    ASSIGN <str> (282) 44
    NEG <str> (283) 59
    NOT <str> (284) 62
    MAP <str> (285) 41
    ELSE <str> (286) 28
    THEN <str> (287)
    IF <str> (288) 27 28
    FOR <str> (289) 29 30
    READ <str> (290) 50
    WRITE <str> (291) 51
    WRITELN <str> (292) 52
    RETURN <str> (293) 31
    SEMIC <str> (294) 6 26 29 30 31 36 40 41 50 51 52
    COMMA <str> (295) 86
    STFUNC <str> (296) 14
    ENDFUNC <str> (297) 14
    PARENL <str> (298) 7 8 27 28 29 30 50 51 52 82 84 85
    PARENR <str> (299) 7 8 27 28 29 30 50 51 52 82 84 85


Não terminais com as regras onde eles aparecem

    $accept (45)
        à esquerda: 0
    program (46)
        à esquerda: 1
        à direita: 0
    declarationList <node> (47)
        à esquerda: 2 3
        à direita: 1 2
    declaration <node> (48)
        à esquerda: 4 5
        à direita: 2 3
    varDeclaration <node> (49)
        à esquerda: 6
        à direita: 4 25
    funcDeclaration <node> (50)
        à esquerda: 7 8
        à direita: 5
    simpleVarDeclaration <node> (51)
        à esquerda: 9
        à direita: 6 13
    simpleFuncDeclaration <node> (52)
        à esquerda: 10
        à direita: 7 8
    params <node> (53)
        à esquerda: 11 12
        à direita: 7 11
    param <node> (54)
        à esquerda: 13
        à direita: 11 12
    compoundStmt <node> (55)
        à esquerda: 14
        à direita: 7 8 18
    stmtList <node> (56)
        à esquerda: 15 16
        à direita: 14 15
    primitiveStmt <node> (57)
        à esquerda: 17 18 19 20 21 22 23 24 25
        à direita: 15 16 27 28 29 30
    exprStmt <node> (58)
        à esquerda: 26
        à direita: 17
    condStmt <node> (59)
        à esquerda: 27 28
        à direita: 19
    iterStmt <node> (60)
        à esquerda: 29 30
        à direita: 20
    returnStmt <node> (61)
        à esquerda: 31
        à direita: 21
    listStmt <node> (62)
        à esquerda: 32 33 34 35
        à direita: 22
    appendOps <node> (63)
        à esquerda: 36
        à direita: 32
    returnListOps <node> (64)
        à esquerda: 37
        à direita: 33
    returnListOp <node> (65)
        à esquerda: 38 39
        à direita: 37
    destroyHeadOps <node> (66)
        à esquerda: 40
        à direita: 34
    mapFilterOps <node> (67)
        à esquerda: 41
        à direita: 35
    expression <node> (68)
        à esquerda: 42 43
        à direita: 26 31 44
    assignExp <node> (69)
        à esquerda: 44
        à direita: 29 30 42
    simpleExp <node> (70)
        à esquerda: 45
        à direita: 27 28 29 30 43 54 82 86 87
    constOp <node> (71)
        à esquerda: 46 47 48 49
        à direita: 83
    inOp <node> (72)
        à esquerda: 50
        à direita: 23
    outOp <node> (73)
        à esquerda: 51 52
        à direita: 24
    outConst <node> (74)
        à esquerda: 53 54
        à direita: 51 52
    binLogicalExp <node> (75)
        à esquerda: 55 56
        à direita: 45 55
    binLogicalOp <node> (76)
        à esquerda: 57 58 59
        à direita: 55
    unLogicalExp <node> (77)
        à esquerda: 60 61
        à direita: 56 60
    unLogicalOp <node> (78)
        à esquerda: 62
        à direita: 55 60
    relationalExp <node> (79)
        à esquerda: 63 64
        à direita: 61 63
    relationalOp <node> (80)
        à esquerda: 65 66 67 68 69 70
        à direita: 63
    sumExp <node> (81)
        à esquerda: 71 72
        à direita: 63 64 71
    sumOp <node> (82)
        à esquerda: 73 74
        à direita: 71 77
    mulExp <node> (83)
        à esquerda: 75 76 77
        à direita: 71 72 75
    mulOp <node> (84)
        à esquerda: 78 79
        à direita: 75
    factor <node> (85)
        à esquerda: 80 81 82 83
        à direita: 75 76 77
    fCall <node> (86)
        à esquerda: 84 85
        à direita: 41 81
    callParams <node> (87)
        à esquerda: 86 87
        à direita: 84 86


Estado 0

    0 $accept: • program $end

    TYPE  deslocar, e ir ao estado 1

    program                ir ao estado 2
    declarationList        ir ao estado 3
    declaration            ir ao estado 4
    varDeclaration         ir ao estado 5
    funcDeclaration        ir ao estado 6
    simpleVarDeclaration   ir ao estado 7
    simpleFuncDeclaration  ir ao estado 8


Estado 1

    9 simpleVarDeclaration: TYPE • ID
   10 simpleFuncDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 9


Estado 2

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 10


Estado 3

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  deslocar, e ir ao estado 1

    $end  reduzir usando a regra 1 (program)

    declaration            ir ao estado 11
    varDeclaration         ir ao estado 5
    funcDeclaration        ir ao estado 6
    simpleVarDeclaration   ir ao estado 7
    simpleFuncDeclaration  ir ao estado 8


Estado 4

    3 declarationList: declaration •

    $end  reduzir usando a regra 3 (declarationList)
    TYPE  reduzir usando a regra 3 (declarationList)


Estado 5

    4 declaration: varDeclaration •

    $end  reduzir usando a regra 4 (declaration)
    TYPE  reduzir usando a regra 4 (declaration)


Estado 6

    5 declaration: funcDeclaration •

    $end  reduzir usando a regra 5 (declaration)
    TYPE  reduzir usando a regra 5 (declaration)


Estado 7

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 12


Estado 8

    7 funcDeclaration: simpleFuncDeclaration • PARENL params PARENR compoundStmt
    8                | simpleFuncDeclaration • PARENL PARENR compoundStmt

    PARENL  deslocar, e ir ao estado 13


Estado 9

    9 simpleVarDeclaration: TYPE ID •
   10 simpleFuncDeclaration: TYPE ID •

    SEMIC   reduzir usando a regra 9 (simpleVarDeclaration)
    PARENL  reduzir usando a regra 10 (simpleFuncDeclaration)


Estado 10

    0 $accept: program $end •

    $padrão  aceitar


Estado 11

    2 declarationList: declarationList declaration •

    $end  reduzir usando a regra 2 (declarationList)
    TYPE  reduzir usando a regra 2 (declarationList)


Estado 12

    6 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduzir usando a regra 6 (varDeclaration)
    TYPE  reduzir usando a regra 6 (varDeclaration)


Estado 13

    7 funcDeclaration: simpleFuncDeclaration PARENL • params PARENR compoundStmt
    8                | simpleFuncDeclaration PARENL • PARENR compoundStmt

    TYPE    deslocar, e ir ao estado 14
    PARENR  deslocar, e ir ao estado 15

    simpleVarDeclaration  ir ao estado 16
    params                ir ao estado 17
    param                 ir ao estado 18


Estado 14

    9 simpleVarDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 19


Estado 15

    8 funcDeclaration: simpleFuncDeclaration PARENL PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 20

    compoundStmt  ir ao estado 21


Estado 16

   13 param: simpleVarDeclaration •

    TYPE    reduzir usando a regra 13 (param)
    PARENR  reduzir usando a regra 13 (param)


Estado 17

    7 funcDeclaration: simpleFuncDeclaration PARENL params • PARENR compoundStmt
   11 params: params • param

    TYPE    deslocar, e ir ao estado 14
    PARENR  deslocar, e ir ao estado 22

    simpleVarDeclaration  ir ao estado 16
    param                 ir ao estado 23


Estado 18

   12 params: param •

    TYPE    reduzir usando a regra 12 (params)
    PARENR  reduzir usando a regra 12 (params)


Estado 19

    9 simpleVarDeclaration: TYPE ID •

    TYPE    reduzir usando a regra 9 (simpleVarDeclaration)
    PARENR  reduzir usando a regra 9 (simpleVarDeclaration)


Estado 20

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 158
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 159
    compoundStmt          ir ao estado 43
    stmtList              ir ao estado 44
    primitiveStmt         ir ao estado 45
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 21

    8 funcDeclaration: simpleFuncDeclaration PARENL PARENR compoundStmt •

    $end  reduzir usando a regra 8 (funcDeclaration)
    TYPE  reduzir usando a regra 8 (funcDeclaration)


Estado 22

    7 funcDeclaration: simpleFuncDeclaration PARENL params PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 20

    compoundStmt  ir ao estado 71


Estado 23

   11 params: params param •

    TYPE    reduzir usando a regra 11 (params)
    PARENR  reduzir usando a regra 11 (params)


Estado 24

   36 appendOps: ID • APPEND ID SEMIC
   44 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 72
    ASSIGN  deslocar, e ir ao estado 73
    PARENL  deslocar, e ir ao estado 74

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 25

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    SEMIC      reduzir usando a regra 48 (constOp)


Estado 26

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    SEMIC      reduzir usando a regra 49 (constOp)


Estado 27

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    SEMIC      reduzir usando a regra 46 (constOp)


Estado 28

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    SEMIC      reduzir usando a regra 47 (constOp)


Estado 29

   73 sumOp: ADD •

    ID       reduzir usando a regra 73 (sumOp)
    LIST     reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 30

   74 sumOp: SUB •

    ID       reduzir usando a regra 74 (sumOp)
    LIST     reduzir usando a regra 74 (sumOp)
    NIL      reduzir usando a regra 74 (sumOp)
    INTEGER  reduzir usando a regra 74 (sumOp)
    DECIMAL  reduzir usando a regra 74 (sumOp)
    PARENL   reduzir usando a regra 74 (sumOp)


Estado 31

   38 returnListOp: HEADLIST •

    ID  reduzir usando a regra 38 (returnListOp)


Estado 32

   39 returnListOp: TAILLIST •

    ID  reduzir usando a regra 39 (returnListOp)


Estado 33

   40 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 75


Estado 34

   62 unLogicalOp: NOT •

    ID       reduzir usando a regra 62 (unLogicalOp)
    LIST     reduzir usando a regra 62 (unLogicalOp)
    NIL      reduzir usando a regra 62 (unLogicalOp)
    INTEGER  reduzir usando a regra 62 (unLogicalOp)
    DECIMAL  reduzir usando a regra 62 (unLogicalOp)
    ADD      reduzir usando a regra 62 (unLogicalOp)
    SUB      reduzir usando a regra 62 (unLogicalOp)
    NOT      reduzir usando a regra 62 (unLogicalOp)
    PARENL   reduzir usando a regra 62 (unLogicalOp)


Estado 35

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 76


Estado 36

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 77


Estado 37

   50 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 78


Estado 38

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 79


Estado 39

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 80


Estado 40

   31 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    expression     ir ao estado 82
    assignExp      ir ao estado 57
    simpleExp      ir ao estado 58
    constOp        ir ao estado 59
    binLogicalExp  ir ao estado 62
    unLogicalExp   ir ao estado 63
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 41

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 85
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 42

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    LIST         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    NOT          reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 43

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    LIST         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    NOT          reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 44

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 158
    ENDFUNC      deslocar, e ir ao estado 86
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 159
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 87
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 45

   16 stmtList: primitiveStmt •

    ID           reduzir usando a regra 16 (stmtList)
    TYPE         reduzir usando a regra 16 (stmtList)
    LIST         reduzir usando a regra 16 (stmtList)
    NIL          reduzir usando a regra 16 (stmtList)
    INTEGER      reduzir usando a regra 16 (stmtList)
    DECIMAL      reduzir usando a regra 16 (stmtList)
    ADD          reduzir usando a regra 16 (stmtList)
    SUB          reduzir usando a regra 16 (stmtList)
    HEADLIST     reduzir usando a regra 16 (stmtList)
    TAILLIST     reduzir usando a regra 16 (stmtList)
    DESTROYHEAD  reduzir usando a regra 16 (stmtList)
    NOT          reduzir usando a regra 16 (stmtList)
    IF           reduzir usando a regra 16 (stmtList)
    FOR          reduzir usando a regra 16 (stmtList)
    READ         reduzir usando a regra 16 (stmtList)
    WRITE        reduzir usando a regra 16 (stmtList)
    WRITELN      reduzir usando a regra 16 (stmtList)
    RETURN       reduzir usando a regra 16 (stmtList)
    STFUNC       reduzir usando a regra 16 (stmtList)
    ENDFUNC      reduzir usando a regra 16 (stmtList)
    PARENL       reduzir usando a regra 16 (stmtList)


Estado 46

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    LIST         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    NOT          reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 47

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    LIST         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    NOT          reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 48

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    LIST         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    NOT          reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 49

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    LIST         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    NOT          reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 50

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    LIST         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    NOT          reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 51

   32 listStmt: appendOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    LIST         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    NOT          reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 52

   33 listStmt: returnListOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    LIST         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    NOT          reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 53

   37 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 88


Estado 54

   34 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    LIST         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    NOT          reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 55

   35 listStmt: mapFilterOps •

    ID           reduzir usando a regra 35 (listStmt)
    TYPE         reduzir usando a regra 35 (listStmt)
    LIST         reduzir usando a regra 35 (listStmt)
    NIL          reduzir usando a regra 35 (listStmt)
    INTEGER      reduzir usando a regra 35 (listStmt)
    DECIMAL      reduzir usando a regra 35 (listStmt)
    ADD          reduzir usando a regra 35 (listStmt)
    SUB          reduzir usando a regra 35 (listStmt)
    HEADLIST     reduzir usando a regra 35 (listStmt)
    TAILLIST     reduzir usando a regra 35 (listStmt)
    DESTROYHEAD  reduzir usando a regra 35 (listStmt)
    NOT          reduzir usando a regra 35 (listStmt)
    IF           reduzir usando a regra 35 (listStmt)
    FOR          reduzir usando a regra 35 (listStmt)
    READ         reduzir usando a regra 35 (listStmt)
    WRITE        reduzir usando a regra 35 (listStmt)
    WRITELN      reduzir usando a regra 35 (listStmt)
    RETURN       reduzir usando a regra 35 (listStmt)
    STFUNC       reduzir usando a regra 35 (listStmt)
    ENDFUNC      reduzir usando a regra 35 (listStmt)
    PARENL       reduzir usando a regra 35 (listStmt)


Estado 56

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 89


Estado 57

   42 expression: assignExp •

    SEMIC  reduzir usando a regra 42 (expression)


Estado 58

   43 expression: simpleExp •

    SEMIC  reduzir usando a regra 43 (expression)


Estado 59

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    NEG        reduzir usando a regra 83 (factor)
    SEMIC      reduzir usando a regra 83 (factor)


Estado 60

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    LIST         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    NOT          reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 61

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    LIST         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    NOT          reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 62

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 90
    AND  deslocar, e ir ao estado 91
    NEG  deslocar, e ir ao estado 92

    SEMIC  reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 93


Estado 63

   56 binLogicalExp: unLogicalExp •

    OR     reduzir usando a regra 56 (binLogicalExp)
    AND    reduzir usando a regra 56 (binLogicalExp)
    NEG    reduzir usando a regra 56 (binLogicalExp)
    SEMIC  reduzir usando a regra 56 (binLogicalExp)


Estado 64

   60 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    constOp        ir ao estado 59
    unLogicalExp   ir ao estado 94
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 65

   61 unLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 95
    GREATER    deslocar, e ir ao estado 96
    SMALLEQ    deslocar, e ir ao estado 97
    GREATEQ    deslocar, e ir ao estado 98
    EQUALS     deslocar, e ir ao estado 99
    DIFFERENT  deslocar, e ir ao estado 100

    OR     reduzir usando a regra 61 (unLogicalExp)
    AND    reduzir usando a regra 61 (unLogicalExp)
    NEG    reduzir usando a regra 61 (unLogicalExp)
    SEMIC  reduzir usando a regra 61 (unLogicalExp)

    relationalOp  ir ao estado 101


Estado 66

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    NEG        reduzir usando a regra 64 (relationalExp)
    SEMIC      reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 102


Estado 67

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    PARENL   deslocar, e ir ao estado 41

    constOp  ir ao estado 59
    factor   ir ao estado 103
    fCall    ir ao estado 83


Estado 68

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    NEG        reduzir usando a regra 72 (sumExp)
    SEMIC      reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 106


Estado 69

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    SEMIC      reduzir usando a regra 76 (mulExp)


Estado 70

   41 mapFilterOps: fCall • MAP ID SEMIC
   81 factor: fCall •

    MAP  deslocar, e ir ao estado 107

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 71

    7 funcDeclaration: simpleFuncDeclaration PARENL params PARENR compoundStmt •

    $end  reduzir usando a regra 7 (funcDeclaration)
    TYPE  reduzir usando a regra 7 (funcDeclaration)


Estado 72

   36 appendOps: ID APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 108


Estado 73

   44 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    expression     ir ao estado 109
    assignExp      ir ao estado 57
    simpleExp      ir ao estado 58
    constOp        ir ao estado 59
    binLogicalExp  ir ao estado 62
    unLogicalExp   ir ao estado 63
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 74

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 183
    PARENR   deslocar, e ir ao estado 110

    simpleExp      ir ao estado 111
    constOp        ir ao estado 184
    binLogicalExp  ir ao estado 185
    unLogicalExp   ir ao estado 186
    unLogicalOp    ir ao estado 187
    relationalExp  ir ao estado 188
    sumExp         ir ao estado 189
    sumOp          ir ao estado 190
    mulExp         ir ao estado 191
    factor         ir ao estado 192
    fCall          ir ao estado 193
    callParams     ir ao estado 112


Estado 75

   40 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 113


Estado 76

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 114
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 77

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    assignExp      ir ao estado 115
    simpleExp      ir ao estado 116
    constOp        ir ao estado 59
    binLogicalExp  ir ao estado 62
    unLogicalExp   ir ao estado 63
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 78

   50 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 117


Estado 79

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    STRING   deslocar, e ir ao estado 118
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 119
    constOp        ir ao estado 165
    outConst       ir ao estado 120
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 80

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    STRING   deslocar, e ir ao estado 118
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 119
    constOp        ir ao estado 165
    outConst       ir ao estado 121
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 81

   44 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 73
    PARENL  deslocar, e ir ao estado 194

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 82

   31 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 122


Estado 83

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 84

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 195

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 85

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 123


Estado 86

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    $end  reduzir usando a regra 14 (compoundStmt)
    TYPE  reduzir usando a regra 14 (compoundStmt)


Estado 87

   15 stmtList: stmtList primitiveStmt •

    ID           reduzir usando a regra 15 (stmtList)
    TYPE         reduzir usando a regra 15 (stmtList)
    LIST         reduzir usando a regra 15 (stmtList)
    NIL          reduzir usando a regra 15 (stmtList)
    INTEGER      reduzir usando a regra 15 (stmtList)
    DECIMAL      reduzir usando a regra 15 (stmtList)
    ADD          reduzir usando a regra 15 (stmtList)
    SUB          reduzir usando a regra 15 (stmtList)
    HEADLIST     reduzir usando a regra 15 (stmtList)
    TAILLIST     reduzir usando a regra 15 (stmtList)
    DESTROYHEAD  reduzir usando a regra 15 (stmtList)
    NOT          reduzir usando a regra 15 (stmtList)
    IF           reduzir usando a regra 15 (stmtList)
    FOR          reduzir usando a regra 15 (stmtList)
    READ         reduzir usando a regra 15 (stmtList)
    WRITE        reduzir usando a regra 15 (stmtList)
    WRITELN      reduzir usando a regra 15 (stmtList)
    RETURN       reduzir usando a regra 15 (stmtList)
    STFUNC       reduzir usando a regra 15 (stmtList)
    ENDFUNC      reduzir usando a regra 15 (stmtList)
    PARENL       reduzir usando a regra 15 (stmtList)


Estado 88

   37 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 37 (returnListOps)
    TYPE         reduzir usando a regra 37 (returnListOps)
    LIST         reduzir usando a regra 37 (returnListOps)
    NIL          reduzir usando a regra 37 (returnListOps)
    INTEGER      reduzir usando a regra 37 (returnListOps)
    DECIMAL      reduzir usando a regra 37 (returnListOps)
    ADD          reduzir usando a regra 37 (returnListOps)
    SUB          reduzir usando a regra 37 (returnListOps)
    HEADLIST     reduzir usando a regra 37 (returnListOps)
    TAILLIST     reduzir usando a regra 37 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 37 (returnListOps)
    NOT          reduzir usando a regra 37 (returnListOps)
    IF           reduzir usando a regra 37 (returnListOps)
    FOR          reduzir usando a regra 37 (returnListOps)
    READ         reduzir usando a regra 37 (returnListOps)
    WRITE        reduzir usando a regra 37 (returnListOps)
    WRITELN      reduzir usando a regra 37 (returnListOps)
    RETURN       reduzir usando a regra 37 (returnListOps)
    STFUNC       reduzir usando a regra 37 (returnListOps)
    ENDFUNC      reduzir usando a regra 37 (returnListOps)
    PARENL       reduzir usando a regra 37 (returnListOps)


Estado 89

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    LIST         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    NOT          reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 90

   57 binLogicalOp: OR •

    NOT  reduzir usando a regra 57 (binLogicalOp)


Estado 91

   58 binLogicalOp: AND •

    NOT  reduzir usando a regra 58 (binLogicalOp)


Estado 92

   59 binLogicalOp: NEG •

    NOT  reduzir usando a regra 59 (binLogicalOp)


Estado 93

   55 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 196

    unLogicalOp  ir ao estado 124


Estado 94

   60 unLogicalExp: unLogicalOp unLogicalExp •

    OR     reduzir usando a regra 60 (unLogicalExp)
    AND    reduzir usando a regra 60 (unLogicalExp)
    NEG    reduzir usando a regra 60 (unLogicalExp)
    SEMIC  reduzir usando a regra 60 (unLogicalExp)


Estado 95

   65 relationalOp: SMALLER •

    ID       reduzir usando a regra 65 (relationalOp)
    LIST     reduzir usando a regra 65 (relationalOp)
    NIL      reduzir usando a regra 65 (relationalOp)
    INTEGER  reduzir usando a regra 65 (relationalOp)
    DECIMAL  reduzir usando a regra 65 (relationalOp)
    ADD      reduzir usando a regra 65 (relationalOp)
    SUB      reduzir usando a regra 65 (relationalOp)
    PARENL   reduzir usando a regra 65 (relationalOp)


Estado 96

   66 relationalOp: GREATER •

    ID       reduzir usando a regra 66 (relationalOp)
    LIST     reduzir usando a regra 66 (relationalOp)
    NIL      reduzir usando a regra 66 (relationalOp)
    INTEGER  reduzir usando a regra 66 (relationalOp)
    DECIMAL  reduzir usando a regra 66 (relationalOp)
    ADD      reduzir usando a regra 66 (relationalOp)
    SUB      reduzir usando a regra 66 (relationalOp)
    PARENL   reduzir usando a regra 66 (relationalOp)


Estado 97

   67 relationalOp: SMALLEQ •

    ID       reduzir usando a regra 67 (relationalOp)
    LIST     reduzir usando a regra 67 (relationalOp)
    NIL      reduzir usando a regra 67 (relationalOp)
    INTEGER  reduzir usando a regra 67 (relationalOp)
    DECIMAL  reduzir usando a regra 67 (relationalOp)
    ADD      reduzir usando a regra 67 (relationalOp)
    SUB      reduzir usando a regra 67 (relationalOp)
    PARENL   reduzir usando a regra 67 (relationalOp)


Estado 98

   68 relationalOp: GREATEQ •

    ID       reduzir usando a regra 68 (relationalOp)
    LIST     reduzir usando a regra 68 (relationalOp)
    NIL      reduzir usando a regra 68 (relationalOp)
    INTEGER  reduzir usando a regra 68 (relationalOp)
    DECIMAL  reduzir usando a regra 68 (relationalOp)
    ADD      reduzir usando a regra 68 (relationalOp)
    SUB      reduzir usando a regra 68 (relationalOp)
    PARENL   reduzir usando a regra 68 (relationalOp)


Estado 99

   69 relationalOp: EQUALS •

    ID       reduzir usando a regra 69 (relationalOp)
    LIST     reduzir usando a regra 69 (relationalOp)
    NIL      reduzir usando a regra 69 (relationalOp)
    INTEGER  reduzir usando a regra 69 (relationalOp)
    DECIMAL  reduzir usando a regra 69 (relationalOp)
    ADD      reduzir usando a regra 69 (relationalOp)
    SUB      reduzir usando a regra 69 (relationalOp)
    PARENL   reduzir usando a regra 69 (relationalOp)


Estado 100

   70 relationalOp: DIFFERENT •

    ID       reduzir usando a regra 70 (relationalOp)
    LIST     reduzir usando a regra 70 (relationalOp)
    NIL      reduzir usando a regra 70 (relationalOp)
    INTEGER  reduzir usando a regra 70 (relationalOp)
    DECIMAL  reduzir usando a regra 70 (relationalOp)
    ADD      reduzir usando a regra 70 (relationalOp)
    SUB      reduzir usando a regra 70 (relationalOp)
    PARENL   reduzir usando a regra 70 (relationalOp)


Estado 101

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 41

    constOp  ir ao estado 59
    sumExp   ir ao estado 125
    sumOp    ir ao estado 67
    mulExp   ir ao estado 68
    factor   ir ao estado 69
    fCall    ir ao estado 83


Estado 102

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 41

    constOp  ir ao estado 59
    sumOp    ir ao estado 67
    mulExp   ir ao estado 126
    factor   ir ao estado 69
    fCall    ir ao estado 83


Estado 103

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    NEG        reduzir usando a regra 77 (mulExp)
    SEMIC      reduzir usando a regra 77 (mulExp)


Estado 104

   78 mulOp: MULT •

    ID       reduzir usando a regra 78 (mulOp)
    LIST     reduzir usando a regra 78 (mulOp)
    NIL      reduzir usando a regra 78 (mulOp)
    INTEGER  reduzir usando a regra 78 (mulOp)
    DECIMAL  reduzir usando a regra 78 (mulOp)
    PARENL   reduzir usando a regra 78 (mulOp)


Estado 105

   79 mulOp: DIV •

    ID       reduzir usando a regra 79 (mulOp)
    LIST     reduzir usando a regra 79 (mulOp)
    NIL      reduzir usando a regra 79 (mulOp)
    INTEGER  reduzir usando a regra 79 (mulOp)
    DECIMAL  reduzir usando a regra 79 (mulOp)
    PARENL   reduzir usando a regra 79 (mulOp)


Estado 106

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    PARENL   deslocar, e ir ao estado 41

    constOp  ir ao estado 59
    factor   ir ao estado 127
    fCall    ir ao estado 83


Estado 107

   41 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 128


Estado 108

   36 appendOps: ID APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 129


Estado 109

   44 assignExp: ID ASSIGN expression •

    SEMIC  reduzir usando a regra 44 (assignExp)


Estado 110

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    NEG        reduzir usando a regra 85 (fCall)
    MAP        reduzir usando a regra 85 (fCall)
    SEMIC      reduzir usando a regra 85 (fCall)


Estado 111

   87 callParams: simpleExp •

    COMMA   reduzir usando a regra 87 (callParams)
    PARENR  reduzir usando a regra 87 (callParams)


Estado 112

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 130
    PARENR  deslocar, e ir ao estado 131


Estado 113

   40 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 40 (destroyHeadOps)
    TYPE         reduzir usando a regra 40 (destroyHeadOps)
    LIST         reduzir usando a regra 40 (destroyHeadOps)
    NIL          reduzir usando a regra 40 (destroyHeadOps)
    INTEGER      reduzir usando a regra 40 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 40 (destroyHeadOps)
    ADD          reduzir usando a regra 40 (destroyHeadOps)
    SUB          reduzir usando a regra 40 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 40 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 40 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 40 (destroyHeadOps)
    NOT          reduzir usando a regra 40 (destroyHeadOps)
    IF           reduzir usando a regra 40 (destroyHeadOps)
    FOR          reduzir usando a regra 40 (destroyHeadOps)
    READ         reduzir usando a regra 40 (destroyHeadOps)
    WRITE        reduzir usando a regra 40 (destroyHeadOps)
    WRITELN      reduzir usando a regra 40 (destroyHeadOps)
    RETURN       reduzir usando a regra 40 (destroyHeadOps)
    STFUNC       reduzir usando a regra 40 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 40 (destroyHeadOps)
    PARENL       reduzir usando a regra 40 (destroyHeadOps)


Estado 114

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 132


Estado 115

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 133


Estado 116

   30 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 134


Estado 117

   50 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 135


Estado 118

   53 outConst: STRING •

    PARENR  reduzir usando a regra 53 (outConst)


Estado 119

   54 outConst: simpleExp •

    PARENR  reduzir usando a regra 54 (outConst)


Estado 120

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 136


Estado 121

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 137


Estado 122

   31 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 31 (returnStmt)
    TYPE         reduzir usando a regra 31 (returnStmt)
    LIST         reduzir usando a regra 31 (returnStmt)
    NIL          reduzir usando a regra 31 (returnStmt)
    INTEGER      reduzir usando a regra 31 (returnStmt)
    DECIMAL      reduzir usando a regra 31 (returnStmt)
    ADD          reduzir usando a regra 31 (returnStmt)
    SUB          reduzir usando a regra 31 (returnStmt)
    HEADLIST     reduzir usando a regra 31 (returnStmt)
    TAILLIST     reduzir usando a regra 31 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 31 (returnStmt)
    NOT          reduzir usando a regra 31 (returnStmt)
    IF           reduzir usando a regra 31 (returnStmt)
    FOR          reduzir usando a regra 31 (returnStmt)
    READ         reduzir usando a regra 31 (returnStmt)
    WRITE        reduzir usando a regra 31 (returnStmt)
    WRITELN      reduzir usando a regra 31 (returnStmt)
    RETURN       reduzir usando a regra 31 (returnStmt)
    STFUNC       reduzir usando a regra 31 (returnStmt)
    ENDFUNC      reduzir usando a regra 31 (returnStmt)
    PARENL       reduzir usando a regra 31 (returnStmt)


Estado 123

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    SEMIC      reduzir usando a regra 82 (factor)


Estado 124

   55 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR     reduzir usando a regra 55 (binLogicalExp)
    AND    reduzir usando a regra 55 (binLogicalExp)
    NEG    reduzir usando a regra 55 (binLogicalExp)
    SEMIC  reduzir usando a regra 55 (binLogicalExp)


Estado 125

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    SEMIC      reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 102


Estado 126

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    SEMIC      reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 106


Estado 127

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    SEMIC      reduzir usando a regra 75 (mulExp)


Estado 128

   41 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 138


Estado 129

   36 appendOps: ID APPEND ID SEMIC •

    ID           reduzir usando a regra 36 (appendOps)
    TYPE         reduzir usando a regra 36 (appendOps)
    LIST         reduzir usando a regra 36 (appendOps)
    NIL          reduzir usando a regra 36 (appendOps)
    INTEGER      reduzir usando a regra 36 (appendOps)
    DECIMAL      reduzir usando a regra 36 (appendOps)
    ADD          reduzir usando a regra 36 (appendOps)
    SUB          reduzir usando a regra 36 (appendOps)
    HEADLIST     reduzir usando a regra 36 (appendOps)
    TAILLIST     reduzir usando a regra 36 (appendOps)
    DESTROYHEAD  reduzir usando a regra 36 (appendOps)
    NOT          reduzir usando a regra 36 (appendOps)
    IF           reduzir usando a regra 36 (appendOps)
    FOR          reduzir usando a regra 36 (appendOps)
    READ         reduzir usando a regra 36 (appendOps)
    WRITE        reduzir usando a regra 36 (appendOps)
    WRITELN      reduzir usando a regra 36 (appendOps)
    RETURN       reduzir usando a regra 36 (appendOps)
    STFUNC       reduzir usando a regra 36 (appendOps)
    ENDFUNC      reduzir usando a regra 36 (appendOps)
    PARENL       reduzir usando a regra 36 (appendOps)


Estado 130

   86 callParams: callParams COMMA • simpleExp

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 183

    simpleExp      ir ao estado 139
    constOp        ir ao estado 184
    binLogicalExp  ir ao estado 185
    unLogicalExp   ir ao estado 186
    unLogicalOp    ir ao estado 187
    relationalExp  ir ao estado 188
    sumExp         ir ao estado 189
    sumOp          ir ao estado 190
    mulExp         ir ao estado 191
    factor         ir ao estado 192
    fCall          ir ao estado 193


Estado 131

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    MAP        reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 132

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 197
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 198
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 199
    FOR          deslocar, e ir ao estado 200
    READ         deslocar, e ir ao estado 201
    WRITE        deslocar, e ir ao estado 202
    WRITELN      deslocar, e ir ao estado 203
    RETURN       deslocar, e ir ao estado 204
    STFUNC       deslocar, e ir ao estado 205
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 206
    simpleVarDeclaration  ir ao estado 207
    compoundStmt          ir ao estado 208
    primitiveStmt         ir ao estado 140
    exprStmt              ir ao estado 209
    condStmt              ir ao estado 210
    iterStmt              ir ao estado 211
    returnStmt            ir ao estado 212
    listStmt              ir ao estado 213
    appendOps             ir ao estado 214
    returnListOps         ir ao estado 215
    returnListOp          ir ao estado 216
    destroyHeadOps        ir ao estado 217
    mapFilterOps          ir ao estado 218
    expression            ir ao estado 219
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 220
    outOp                 ir ao estado 221
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 222


Estado 133

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    simpleExp      ir ao estado 141
    constOp        ir ao estado 59
    binLogicalExp  ir ao estado 62
    unLogicalExp   ir ao estado 63
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 134

   30 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    simpleExp      ir ao estado 142
    constOp        ir ao estado 59
    binLogicalExp  ir ao estado 62
    unLogicalExp   ir ao estado 63
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 135

   50 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 143


Estado 136

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 144


Estado 137

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 145


Estado 138

   41 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 41 (mapFilterOps)
    TYPE         reduzir usando a regra 41 (mapFilterOps)
    LIST         reduzir usando a regra 41 (mapFilterOps)
    NIL          reduzir usando a regra 41 (mapFilterOps)
    INTEGER      reduzir usando a regra 41 (mapFilterOps)
    DECIMAL      reduzir usando a regra 41 (mapFilterOps)
    ADD          reduzir usando a regra 41 (mapFilterOps)
    SUB          reduzir usando a regra 41 (mapFilterOps)
    HEADLIST     reduzir usando a regra 41 (mapFilterOps)
    TAILLIST     reduzir usando a regra 41 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 41 (mapFilterOps)
    NOT          reduzir usando a regra 41 (mapFilterOps)
    IF           reduzir usando a regra 41 (mapFilterOps)
    FOR          reduzir usando a regra 41 (mapFilterOps)
    READ         reduzir usando a regra 41 (mapFilterOps)
    WRITE        reduzir usando a regra 41 (mapFilterOps)
    WRITELN      reduzir usando a regra 41 (mapFilterOps)
    RETURN       reduzir usando a regra 41 (mapFilterOps)
    STFUNC       reduzir usando a regra 41 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 41 (mapFilterOps)
    PARENL       reduzir usando a regra 41 (mapFilterOps)


Estado 139

   86 callParams: callParams COMMA simpleExp •

    COMMA   reduzir usando a regra 86 (callParams)
    PARENR  reduzir usando a regra 86 (callParams)


Estado 140

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 146

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    LIST         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    NOT          reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 141

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 147


Estado 142

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 148


Estado 143

   50 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 50 (inOp)
    TYPE         reduzir usando a regra 50 (inOp)
    LIST         reduzir usando a regra 50 (inOp)
    NIL          reduzir usando a regra 50 (inOp)
    INTEGER      reduzir usando a regra 50 (inOp)
    DECIMAL      reduzir usando a regra 50 (inOp)
    ADD          reduzir usando a regra 50 (inOp)
    SUB          reduzir usando a regra 50 (inOp)
    HEADLIST     reduzir usando a regra 50 (inOp)
    TAILLIST     reduzir usando a regra 50 (inOp)
    DESTROYHEAD  reduzir usando a regra 50 (inOp)
    NOT          reduzir usando a regra 50 (inOp)
    IF           reduzir usando a regra 50 (inOp)
    FOR          reduzir usando a regra 50 (inOp)
    READ         reduzir usando a regra 50 (inOp)
    WRITE        reduzir usando a regra 50 (inOp)
    WRITELN      reduzir usando a regra 50 (inOp)
    RETURN       reduzir usando a regra 50 (inOp)
    STFUNC       reduzir usando a regra 50 (inOp)
    ENDFUNC      reduzir usando a regra 50 (inOp)
    PARENL       reduzir usando a regra 50 (inOp)


Estado 144

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    LIST         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    NOT          reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 145

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 52 (outOp)
    TYPE         reduzir usando a regra 52 (outOp)
    LIST         reduzir usando a regra 52 (outOp)
    NIL          reduzir usando a regra 52 (outOp)
    INTEGER      reduzir usando a regra 52 (outOp)
    DECIMAL      reduzir usando a regra 52 (outOp)
    ADD          reduzir usando a regra 52 (outOp)
    SUB          reduzir usando a regra 52 (outOp)
    HEADLIST     reduzir usando a regra 52 (outOp)
    TAILLIST     reduzir usando a regra 52 (outOp)
    DESTROYHEAD  reduzir usando a regra 52 (outOp)
    NOT          reduzir usando a regra 52 (outOp)
    IF           reduzir usando a regra 52 (outOp)
    FOR          reduzir usando a regra 52 (outOp)
    READ         reduzir usando a regra 52 (outOp)
    WRITE        reduzir usando a regra 52 (outOp)
    WRITELN      reduzir usando a regra 52 (outOp)
    RETURN       reduzir usando a regra 52 (outOp)
    STFUNC       reduzir usando a regra 52 (outOp)
    ENDFUNC      reduzir usando a regra 52 (outOp)
    PARENL       reduzir usando a regra 52 (outOp)


Estado 146

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 158
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 159
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 149
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 147

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 150

    assignExp  ir ao estado 151


Estado 148

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 150

    assignExp  ir ao estado 152


Estado 149

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    LIST         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    NOT          reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 150

   44 assignExp: ID • ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 223


Estado 151

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 153


Estado 152

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 154


Estado 153

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 158
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 159
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 155
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 154

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 158
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 159
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 156
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 155

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    LIST         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    NOT          reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)


Estado 156

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    LIST         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    NOT          reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)


Estado 157

    9 simpleVarDeclaration: TYPE • ID

    ID  deslocar, e ir ao estado 224


Estado 158

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 158
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 159
    compoundStmt          ir ao estado 43
    stmtList              ir ao estado 225
    primitiveStmt         ir ao estado 45
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 159

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 226


Estado 160

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 161

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 162

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    PARENR     reduzir usando a regra 46 (constOp)


Estado 163

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 164

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 227
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 165

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    NEG        reduzir usando a regra 83 (factor)
    PARENR     reduzir usando a regra 83 (factor)


Estado 166

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 90
    AND  deslocar, e ir ao estado 91
    NEG  deslocar, e ir ao estado 92

    PARENR  reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 228


Estado 167

   56 binLogicalExp: unLogicalExp •

    OR      reduzir usando a regra 56 (binLogicalExp)
    AND     reduzir usando a regra 56 (binLogicalExp)
    NEG     reduzir usando a regra 56 (binLogicalExp)
    PARENR  reduzir usando a regra 56 (binLogicalExp)


Estado 168

   60 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    constOp        ir ao estado 165
    unLogicalExp   ir ao estado 229
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 169

   61 unLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 95
    GREATER    deslocar, e ir ao estado 96
    SMALLEQ    deslocar, e ir ao estado 97
    GREATEQ    deslocar, e ir ao estado 98
    EQUALS     deslocar, e ir ao estado 99
    DIFFERENT  deslocar, e ir ao estado 100

    OR      reduzir usando a regra 61 (unLogicalExp)
    AND     reduzir usando a regra 61 (unLogicalExp)
    NEG     reduzir usando a regra 61 (unLogicalExp)
    PARENR  reduzir usando a regra 61 (unLogicalExp)

    relationalOp  ir ao estado 230


Estado 170

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    NEG        reduzir usando a regra 64 (relationalExp)
    PARENR     reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 231


Estado 171

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    PARENL   deslocar, e ir ao estado 164

    constOp  ir ao estado 165
    factor   ir ao estado 232
    fCall    ir ao estado 174


Estado 172

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    NEG        reduzir usando a regra 72 (sumExp)
    PARENR     reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 233


Estado 173

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 174

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 175

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 194

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 176

   73 sumOp: ADD •

    ID       reduzir usando a regra 73 (sumOp)
    LIST     reduzir usando a regra 73 (sumOp)
    NIL      reduzir usando a regra 73 (sumOp)
    INTEGER  reduzir usando a regra 73 (sumOp)
    DECIMAL  reduzir usando a regra 73 (sumOp)
    ADD      reduzir usando a regra 73 (sumOp)
    SUB      reduzir usando a regra 73 (sumOp)
    PARENL   reduzir usando a regra 73 (sumOp)


Estado 177

   74 sumOp: SUB •

    ID       reduzir usando a regra 74 (sumOp)
    LIST     reduzir usando a regra 74 (sumOp)
    NIL      reduzir usando a regra 74 (sumOp)
    INTEGER  reduzir usando a regra 74 (sumOp)
    DECIMAL  reduzir usando a regra 74 (sumOp)
    ADD      reduzir usando a regra 74 (sumOp)
    SUB      reduzir usando a regra 74 (sumOp)
    PARENL   reduzir usando a regra 74 (sumOp)


Estado 178

   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 234

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    COMMA      reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 179

   48 constOp: LIST •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    NEG        reduzir usando a regra 48 (constOp)
    COMMA      reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 180

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    NEG        reduzir usando a regra 49 (constOp)
    COMMA      reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 181

   46 constOp: INTEGER •

    ADD        reduzir usando a regra 46 (constOp)
    SUB        reduzir usando a regra 46 (constOp)
    MULT       reduzir usando a regra 46 (constOp)
    DIV        reduzir usando a regra 46 (constOp)
    OR         reduzir usando a regra 46 (constOp)
    AND        reduzir usando a regra 46 (constOp)
    SMALLER    reduzir usando a regra 46 (constOp)
    GREATER    reduzir usando a regra 46 (constOp)
    SMALLEQ    reduzir usando a regra 46 (constOp)
    GREATEQ    reduzir usando a regra 46 (constOp)
    EQUALS     reduzir usando a regra 46 (constOp)
    DIFFERENT  reduzir usando a regra 46 (constOp)
    NEG        reduzir usando a regra 46 (constOp)
    COMMA      reduzir usando a regra 46 (constOp)
    PARENR     reduzir usando a regra 46 (constOp)


Estado 182

   47 constOp: DECIMAL •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    NEG        reduzir usando a regra 47 (constOp)
    COMMA      reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 183

   82 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 235
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 184

   83 factor: constOp •

    ADD        reduzir usando a regra 83 (factor)
    SUB        reduzir usando a regra 83 (factor)
    MULT       reduzir usando a regra 83 (factor)
    DIV        reduzir usando a regra 83 (factor)
    OR         reduzir usando a regra 83 (factor)
    AND        reduzir usando a regra 83 (factor)
    SMALLER    reduzir usando a regra 83 (factor)
    GREATER    reduzir usando a regra 83 (factor)
    SMALLEQ    reduzir usando a regra 83 (factor)
    GREATEQ    reduzir usando a regra 83 (factor)
    EQUALS     reduzir usando a regra 83 (factor)
    DIFFERENT  reduzir usando a regra 83 (factor)
    NEG        reduzir usando a regra 83 (factor)
    COMMA      reduzir usando a regra 83 (factor)
    PARENR     reduzir usando a regra 83 (factor)


Estado 185

   45 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp unLogicalOp

    OR   deslocar, e ir ao estado 90
    AND  deslocar, e ir ao estado 91
    NEG  deslocar, e ir ao estado 92

    COMMA   reduzir usando a regra 45 (simpleExp)
    PARENR  reduzir usando a regra 45 (simpleExp)

    binLogicalOp  ir ao estado 236


Estado 186

   56 binLogicalExp: unLogicalExp •

    OR      reduzir usando a regra 56 (binLogicalExp)
    AND     reduzir usando a regra 56 (binLogicalExp)
    NEG     reduzir usando a regra 56 (binLogicalExp)
    COMMA   reduzir usando a regra 56 (binLogicalExp)
    PARENR  reduzir usando a regra 56 (binLogicalExp)


Estado 187

   60 unLogicalExp: unLogicalOp • unLogicalExp

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 183

    constOp        ir ao estado 184
    unLogicalExp   ir ao estado 237
    unLogicalOp    ir ao estado 187
    relationalExp  ir ao estado 188
    sumExp         ir ao estado 189
    sumOp          ir ao estado 190
    mulExp         ir ao estado 191
    factor         ir ao estado 192
    fCall          ir ao estado 193


Estado 188

   61 unLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 95
    GREATER    deslocar, e ir ao estado 96
    SMALLEQ    deslocar, e ir ao estado 97
    GREATEQ    deslocar, e ir ao estado 98
    EQUALS     deslocar, e ir ao estado 99
    DIFFERENT  deslocar, e ir ao estado 100

    OR      reduzir usando a regra 61 (unLogicalExp)
    AND     reduzir usando a regra 61 (unLogicalExp)
    NEG     reduzir usando a regra 61 (unLogicalExp)
    COMMA   reduzir usando a regra 61 (unLogicalExp)
    PARENR  reduzir usando a regra 61 (unLogicalExp)

    relationalOp  ir ao estado 238


Estado 189

   64 relationalExp: sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 64 (relationalExp)
    AND        reduzir usando a regra 64 (relationalExp)
    SMALLER    reduzir usando a regra 64 (relationalExp)
    GREATER    reduzir usando a regra 64 (relationalExp)
    SMALLEQ    reduzir usando a regra 64 (relationalExp)
    GREATEQ    reduzir usando a regra 64 (relationalExp)
    EQUALS     reduzir usando a regra 64 (relationalExp)
    DIFFERENT  reduzir usando a regra 64 (relationalExp)
    NEG        reduzir usando a regra 64 (relationalExp)
    COMMA      reduzir usando a regra 64 (relationalExp)
    PARENR     reduzir usando a regra 64 (relationalExp)

    sumOp  ir ao estado 239


Estado 190

   77 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    PARENL   deslocar, e ir ao estado 183

    constOp  ir ao estado 184
    factor   ir ao estado 240
    fCall    ir ao estado 193


Estado 191

   72 sumExp: mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 72 (sumExp)
    SUB        reduzir usando a regra 72 (sumExp)
    OR         reduzir usando a regra 72 (sumExp)
    AND        reduzir usando a regra 72 (sumExp)
    SMALLER    reduzir usando a regra 72 (sumExp)
    GREATER    reduzir usando a regra 72 (sumExp)
    SMALLEQ    reduzir usando a regra 72 (sumExp)
    GREATEQ    reduzir usando a regra 72 (sumExp)
    EQUALS     reduzir usando a regra 72 (sumExp)
    DIFFERENT  reduzir usando a regra 72 (sumExp)
    NEG        reduzir usando a regra 72 (sumExp)
    COMMA      reduzir usando a regra 72 (sumExp)
    PARENR     reduzir usando a regra 72 (sumExp)

    mulOp  ir ao estado 241


Estado 192

   76 mulExp: factor •

    ADD        reduzir usando a regra 76 (mulExp)
    SUB        reduzir usando a regra 76 (mulExp)
    MULT       reduzir usando a regra 76 (mulExp)
    DIV        reduzir usando a regra 76 (mulExp)
    OR         reduzir usando a regra 76 (mulExp)
    AND        reduzir usando a regra 76 (mulExp)
    SMALLER    reduzir usando a regra 76 (mulExp)
    GREATER    reduzir usando a regra 76 (mulExp)
    SMALLEQ    reduzir usando a regra 76 (mulExp)
    GREATEQ    reduzir usando a regra 76 (mulExp)
    EQUALS     reduzir usando a regra 76 (mulExp)
    DIFFERENT  reduzir usando a regra 76 (mulExp)
    NEG        reduzir usando a regra 76 (mulExp)
    COMMA      reduzir usando a regra 76 (mulExp)
    PARENR     reduzir usando a regra 76 (mulExp)


Estado 193

   81 factor: fCall •

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    COMMA      reduzir usando a regra 81 (factor)
    PARENR     reduzir usando a regra 81 (factor)


Estado 194

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 183
    PARENR   deslocar, e ir ao estado 242

    simpleExp      ir ao estado 111
    constOp        ir ao estado 184
    binLogicalExp  ir ao estado 185
    unLogicalExp   ir ao estado 186
    unLogicalOp    ir ao estado 187
    relationalExp  ir ao estado 188
    sumExp         ir ao estado 189
    sumOp          ir ao estado 190
    mulExp         ir ao estado 191
    factor         ir ao estado 192
    fCall          ir ao estado 193
    callParams     ir ao estado 243


Estado 195

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 183
    PARENR   deslocar, e ir ao estado 244

    simpleExp      ir ao estado 111
    constOp        ir ao estado 184
    binLogicalExp  ir ao estado 185
    unLogicalExp   ir ao estado 186
    unLogicalOp    ir ao estado 187
    relationalExp  ir ao estado 188
    sumExp         ir ao estado 189
    sumOp          ir ao estado 190
    mulExp         ir ao estado 191
    factor         ir ao estado 192
    fCall          ir ao estado 193
    callParams     ir ao estado 245


Estado 196

   62 unLogicalOp: NOT •

    OR     reduzir usando a regra 62 (unLogicalOp)
    AND    reduzir usando a regra 62 (unLogicalOp)
    NEG    reduzir usando a regra 62 (unLogicalOp)
    SEMIC  reduzir usando a regra 62 (unLogicalOp)


Estado 197

   36 appendOps: ID • APPEND ID SEMIC
   44 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 246
    ASSIGN  deslocar, e ir ao estado 73
    PARENL  deslocar, e ir ao estado 74

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    SEMIC      reduzir usando a regra 80 (factor)


Estado 198

   40 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 247


Estado 199

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 248


Estado 200

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 249


Estado 201

   50 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 250


Estado 202

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 251


Estado 203

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 252


Estado 204

   31 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    expression     ir ao estado 253
    assignExp      ir ao estado 57
    simpleExp      ir ao estado 58
    constOp        ir ao estado 59
    binLogicalExp  ir ao estado 62
    unLogicalExp   ir ao estado 63
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 205

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 158
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 159
    compoundStmt          ir ao estado 43
    stmtList              ir ao estado 254
    primitiveStmt         ir ao estado 45
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 206

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    LIST         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    NOT          reduzir usando a regra 25 (primitiveStmt)
    ELSE         reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 207

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 255


Estado 208

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    LIST         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    NOT          reduzir usando a regra 18 (primitiveStmt)
    ELSE         reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 209

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    LIST         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    NOT          reduzir usando a regra 17 (primitiveStmt)
    ELSE         reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 210

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    LIST         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    NOT          reduzir usando a regra 19 (primitiveStmt)
    ELSE         reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 211

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    LIST         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    NOT          reduzir usando a regra 20 (primitiveStmt)
    ELSE         reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 212

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    LIST         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    NOT          reduzir usando a regra 21 (primitiveStmt)
    ELSE         reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 213

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    LIST         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    NOT          reduzir usando a regra 22 (primitiveStmt)
    ELSE         reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 214

   32 listStmt: appendOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    LIST         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    NOT          reduzir usando a regra 32 (listStmt)
    ELSE         reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 215

   33 listStmt: returnListOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    LIST         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    NOT          reduzir usando a regra 33 (listStmt)
    ELSE         reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 216

   37 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 256


Estado 217

   34 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    LIST         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    NOT          reduzir usando a regra 34 (listStmt)
    ELSE         reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 218

   35 listStmt: mapFilterOps •

    ID           reduzir usando a regra 35 (listStmt)
    TYPE         reduzir usando a regra 35 (listStmt)
    LIST         reduzir usando a regra 35 (listStmt)
    NIL          reduzir usando a regra 35 (listStmt)
    INTEGER      reduzir usando a regra 35 (listStmt)
    DECIMAL      reduzir usando a regra 35 (listStmt)
    ADD          reduzir usando a regra 35 (listStmt)
    SUB          reduzir usando a regra 35 (listStmt)
    HEADLIST     reduzir usando a regra 35 (listStmt)
    TAILLIST     reduzir usando a regra 35 (listStmt)
    DESTROYHEAD  reduzir usando a regra 35 (listStmt)
    NOT          reduzir usando a regra 35 (listStmt)
    ELSE         reduzir usando a regra 35 (listStmt)
    IF           reduzir usando a regra 35 (listStmt)
    FOR          reduzir usando a regra 35 (listStmt)
    READ         reduzir usando a regra 35 (listStmt)
    WRITE        reduzir usando a regra 35 (listStmt)
    WRITELN      reduzir usando a regra 35 (listStmt)
    RETURN       reduzir usando a regra 35 (listStmt)
    STFUNC       reduzir usando a regra 35 (listStmt)
    ENDFUNC      reduzir usando a regra 35 (listStmt)
    PARENL       reduzir usando a regra 35 (listStmt)


Estado 219

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 257


Estado 220

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    LIST         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    NOT          reduzir usando a regra 23 (primitiveStmt)
    ELSE         reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 221

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    LIST         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    NOT          reduzir usando a regra 24 (primitiveStmt)
    ELSE         reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 222

   41 mapFilterOps: fCall • MAP ID SEMIC
   81 factor: fCall •

    MAP  deslocar, e ir ao estado 258

    ADD        reduzir usando a regra 81 (factor)
    SUB        reduzir usando a regra 81 (factor)
    MULT       reduzir usando a regra 81 (factor)
    DIV        reduzir usando a regra 81 (factor)
    OR         reduzir usando a regra 81 (factor)
    AND        reduzir usando a regra 81 (factor)
    SMALLER    reduzir usando a regra 81 (factor)
    GREATER    reduzir usando a regra 81 (factor)
    SMALLEQ    reduzir usando a regra 81 (factor)
    GREATEQ    reduzir usando a regra 81 (factor)
    EQUALS     reduzir usando a regra 81 (factor)
    DIFFERENT  reduzir usando a regra 81 (factor)
    NEG        reduzir usando a regra 81 (factor)
    SEMIC      reduzir usando a regra 81 (factor)


Estado 223

   44 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 259
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    expression     ir ao estado 260
    assignExp      ir ao estado 261
    simpleExp      ir ao estado 262
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 224

    9 simpleVarDeclaration: TYPE ID •

    SEMIC  reduzir usando a regra 9 (simpleVarDeclaration)


Estado 225

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 158
    ENDFUNC      deslocar, e ir ao estado 263
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 159
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 87
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 226

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    LIST         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    NOT          reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 227

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 264


Estado 228

   55 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 265

    unLogicalOp  ir ao estado 266


Estado 229

   60 unLogicalExp: unLogicalOp unLogicalExp •

    OR      reduzir usando a regra 60 (unLogicalExp)
    AND     reduzir usando a regra 60 (unLogicalExp)
    NEG     reduzir usando a regra 60 (unLogicalExp)
    PARENR  reduzir usando a regra 60 (unLogicalExp)


Estado 230

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 164

    constOp  ir ao estado 165
    sumExp   ir ao estado 267
    sumOp    ir ao estado 171
    mulExp   ir ao estado 172
    factor   ir ao estado 173
    fCall    ir ao estado 174


Estado 231

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 164

    constOp  ir ao estado 165
    sumOp    ir ao estado 171
    mulExp   ir ao estado 268
    factor   ir ao estado 173
    fCall    ir ao estado 174


Estado 232

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    NEG        reduzir usando a regra 77 (mulExp)
    PARENR     reduzir usando a regra 77 (mulExp)


Estado 233

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    PARENL   deslocar, e ir ao estado 164

    constOp  ir ao estado 165
    factor   ir ao estado 269
    fCall    ir ao estado 174


Estado 234

   84 fCall: ID PARENL • callParams PARENR
   85      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 183
    PARENR   deslocar, e ir ao estado 270

    simpleExp      ir ao estado 111
    constOp        ir ao estado 184
    binLogicalExp  ir ao estado 185
    unLogicalExp   ir ao estado 186
    unLogicalOp    ir ao estado 187
    relationalExp  ir ao estado 188
    sumExp         ir ao estado 189
    sumOp          ir ao estado 190
    mulExp         ir ao estado 191
    factor         ir ao estado 192
    fCall          ir ao estado 193
    callParams     ir ao estado 271


Estado 235

   82 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 272


Estado 236

   55 binLogicalExp: binLogicalExp binLogicalOp • unLogicalOp

    NOT  deslocar, e ir ao estado 273

    unLogicalOp  ir ao estado 274


Estado 237

   60 unLogicalExp: unLogicalOp unLogicalExp •

    OR      reduzir usando a regra 60 (unLogicalExp)
    AND     reduzir usando a regra 60 (unLogicalExp)
    NEG     reduzir usando a regra 60 (unLogicalExp)
    COMMA   reduzir usando a regra 60 (unLogicalExp)
    PARENR  reduzir usando a regra 60 (unLogicalExp)


Estado 238

   63 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 183

    constOp  ir ao estado 184
    sumExp   ir ao estado 275
    sumOp    ir ao estado 190
    mulExp   ir ao estado 191
    factor   ir ao estado 192
    fCall    ir ao estado 193


Estado 239

   71 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 183

    constOp  ir ao estado 184
    sumOp    ir ao estado 190
    mulExp   ir ao estado 276
    factor   ir ao estado 192
    fCall    ir ao estado 193


Estado 240

   77 mulExp: sumOp factor •

    ADD        reduzir usando a regra 77 (mulExp)
    SUB        reduzir usando a regra 77 (mulExp)
    MULT       reduzir usando a regra 77 (mulExp)
    DIV        reduzir usando a regra 77 (mulExp)
    OR         reduzir usando a regra 77 (mulExp)
    AND        reduzir usando a regra 77 (mulExp)
    SMALLER    reduzir usando a regra 77 (mulExp)
    GREATER    reduzir usando a regra 77 (mulExp)
    SMALLEQ    reduzir usando a regra 77 (mulExp)
    GREATEQ    reduzir usando a regra 77 (mulExp)
    EQUALS     reduzir usando a regra 77 (mulExp)
    DIFFERENT  reduzir usando a regra 77 (mulExp)
    NEG        reduzir usando a regra 77 (mulExp)
    COMMA      reduzir usando a regra 77 (mulExp)
    PARENR     reduzir usando a regra 77 (mulExp)


Estado 241

   75 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 178
    LIST     deslocar, e ir ao estado 179
    NIL      deslocar, e ir ao estado 180
    INTEGER  deslocar, e ir ao estado 181
    DECIMAL  deslocar, e ir ao estado 182
    PARENL   deslocar, e ir ao estado 183

    constOp  ir ao estado 184
    factor   ir ao estado 277
    fCall    ir ao estado 193


Estado 242

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    NEG        reduzir usando a regra 85 (fCall)
    SEMIC      reduzir usando a regra 85 (fCall)


Estado 243

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 130
    PARENR  deslocar, e ir ao estado 278


Estado 244

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    NEG        reduzir usando a regra 85 (fCall)
    PARENR     reduzir usando a regra 85 (fCall)


Estado 245

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 130
    PARENR  deslocar, e ir ao estado 279


Estado 246

   36 appendOps: ID APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 280


Estado 247

   40 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 281


Estado 248

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 282
    constOp        ir ao estado 165
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 249

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 81
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    assignExp      ir ao estado 283
    simpleExp      ir ao estado 284
    constOp        ir ao estado 59
    binLogicalExp  ir ao estado 62
    unLogicalExp   ir ao estado 63
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 250

   50 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 285


Estado 251

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    STRING   deslocar, e ir ao estado 118
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 119
    constOp        ir ao estado 165
    outConst       ir ao estado 286
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 252

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 84
    LIST     deslocar, e ir ao estado 160
    STRING   deslocar, e ir ao estado 118
    NIL      deslocar, e ir ao estado 161
    INTEGER  deslocar, e ir ao estado 162
    DECIMAL  deslocar, e ir ao estado 163
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 164

    simpleExp      ir ao estado 119
    constOp        ir ao estado 165
    outConst       ir ao estado 287
    binLogicalExp  ir ao estado 166
    unLogicalExp   ir ao estado 167
    unLogicalOp    ir ao estado 168
    relationalExp  ir ao estado 169
    sumExp         ir ao estado 170
    sumOp          ir ao estado 171
    mulExp         ir ao estado 172
    factor         ir ao estado 173
    fCall          ir ao estado 174


Estado 253

   31 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 288


Estado 254

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 24
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 35
    FOR          deslocar, e ir ao estado 36
    READ         deslocar, e ir ao estado 37
    WRITE        deslocar, e ir ao estado 38
    WRITELN      deslocar, e ir ao estado 39
    RETURN       deslocar, e ir ao estado 40
    STFUNC       deslocar, e ir ao estado 158
    ENDFUNC      deslocar, e ir ao estado 289
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 42
    simpleVarDeclaration  ir ao estado 159
    compoundStmt          ir ao estado 43
    primitiveStmt         ir ao estado 87
    exprStmt              ir ao estado 46
    condStmt              ir ao estado 47
    iterStmt              ir ao estado 48
    returnStmt            ir ao estado 49
    listStmt              ir ao estado 50
    appendOps             ir ao estado 51
    returnListOps         ir ao estado 52
    returnListOp          ir ao estado 53
    destroyHeadOps        ir ao estado 54
    mapFilterOps          ir ao estado 55
    expression            ir ao estado 56
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 60
    outOp                 ir ao estado 61
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 70


Estado 255

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    LIST         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    NOT          reduzir usando a regra 6 (varDeclaration)
    ELSE         reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 256

   37 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 37 (returnListOps)
    TYPE         reduzir usando a regra 37 (returnListOps)
    LIST         reduzir usando a regra 37 (returnListOps)
    NIL          reduzir usando a regra 37 (returnListOps)
    INTEGER      reduzir usando a regra 37 (returnListOps)
    DECIMAL      reduzir usando a regra 37 (returnListOps)
    ADD          reduzir usando a regra 37 (returnListOps)
    SUB          reduzir usando a regra 37 (returnListOps)
    HEADLIST     reduzir usando a regra 37 (returnListOps)
    TAILLIST     reduzir usando a regra 37 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 37 (returnListOps)
    NOT          reduzir usando a regra 37 (returnListOps)
    ELSE         reduzir usando a regra 37 (returnListOps)
    IF           reduzir usando a regra 37 (returnListOps)
    FOR          reduzir usando a regra 37 (returnListOps)
    READ         reduzir usando a regra 37 (returnListOps)
    WRITE        reduzir usando a regra 37 (returnListOps)
    WRITELN      reduzir usando a regra 37 (returnListOps)
    RETURN       reduzir usando a regra 37 (returnListOps)
    STFUNC       reduzir usando a regra 37 (returnListOps)
    ENDFUNC      reduzir usando a regra 37 (returnListOps)
    PARENL       reduzir usando a regra 37 (returnListOps)


Estado 257

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    LIST         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    NOT          reduzir usando a regra 26 (exprStmt)
    ELSE         reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 258

   41 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 290


Estado 259

   44 assignExp: ID • ASSIGN expression
   80 factor: ID •
   84 fCall: ID • PARENL callParams PARENR
   85      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 223
    PARENL  deslocar, e ir ao estado 195

    ADD        reduzir usando a regra 80 (factor)
    SUB        reduzir usando a regra 80 (factor)
    MULT       reduzir usando a regra 80 (factor)
    DIV        reduzir usando a regra 80 (factor)
    OR         reduzir usando a regra 80 (factor)
    AND        reduzir usando a regra 80 (factor)
    SMALLER    reduzir usando a regra 80 (factor)
    GREATER    reduzir usando a regra 80 (factor)
    SMALLEQ    reduzir usando a regra 80 (factor)
    GREATEQ    reduzir usando a regra 80 (factor)
    EQUALS     reduzir usando a regra 80 (factor)
    DIFFERENT  reduzir usando a regra 80 (factor)
    NEG        reduzir usando a regra 80 (factor)
    PARENR     reduzir usando a regra 80 (factor)


Estado 260

   44 assignExp: ID ASSIGN expression •

    PARENR  reduzir usando a regra 44 (assignExp)


Estado 261

   42 expression: assignExp •

    PARENR  reduzir usando a regra 42 (expression)


Estado 262

   43 expression: simpleExp •

    PARENR  reduzir usando a regra 43 (expression)


Estado 263

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    LIST         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    NOT          reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 264

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 265

   62 unLogicalOp: NOT •

    OR      reduzir usando a regra 62 (unLogicalOp)
    AND     reduzir usando a regra 62 (unLogicalOp)
    NEG     reduzir usando a regra 62 (unLogicalOp)
    PARENR  reduzir usando a regra 62 (unLogicalOp)


Estado 266

   55 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 267

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 231


Estado 268

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 233


Estado 269

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 270

   85 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 85 (fCall)
    SUB        reduzir usando a regra 85 (fCall)
    MULT       reduzir usando a regra 85 (fCall)
    DIV        reduzir usando a regra 85 (fCall)
    OR         reduzir usando a regra 85 (fCall)
    AND        reduzir usando a regra 85 (fCall)
    SMALLER    reduzir usando a regra 85 (fCall)
    GREATER    reduzir usando a regra 85 (fCall)
    SMALLEQ    reduzir usando a regra 85 (fCall)
    GREATEQ    reduzir usando a regra 85 (fCall)
    EQUALS     reduzir usando a regra 85 (fCall)
    DIFFERENT  reduzir usando a regra 85 (fCall)
    NEG        reduzir usando a regra 85 (fCall)
    COMMA      reduzir usando a regra 85 (fCall)
    PARENR     reduzir usando a regra 85 (fCall)


Estado 271

   84 fCall: ID PARENL callParams • PARENR
   86 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 130
    PARENR  deslocar, e ir ao estado 291


Estado 272

   82 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 82 (factor)
    SUB        reduzir usando a regra 82 (factor)
    MULT       reduzir usando a regra 82 (factor)
    DIV        reduzir usando a regra 82 (factor)
    OR         reduzir usando a regra 82 (factor)
    AND        reduzir usando a regra 82 (factor)
    SMALLER    reduzir usando a regra 82 (factor)
    GREATER    reduzir usando a regra 82 (factor)
    SMALLEQ    reduzir usando a regra 82 (factor)
    GREATEQ    reduzir usando a regra 82 (factor)
    EQUALS     reduzir usando a regra 82 (factor)
    DIFFERENT  reduzir usando a regra 82 (factor)
    NEG        reduzir usando a regra 82 (factor)
    COMMA      reduzir usando a regra 82 (factor)
    PARENR     reduzir usando a regra 82 (factor)


Estado 273

   62 unLogicalOp: NOT •

    OR      reduzir usando a regra 62 (unLogicalOp)
    AND     reduzir usando a regra 62 (unLogicalOp)
    NEG     reduzir usando a regra 62 (unLogicalOp)
    COMMA   reduzir usando a regra 62 (unLogicalOp)
    PARENR  reduzir usando a regra 62 (unLogicalOp)


Estado 274

   55 binLogicalExp: binLogicalExp binLogicalOp unLogicalOp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    NEG     reduzir usando a regra 55 (binLogicalExp)
    COMMA   reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 275

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 176
    SUB  deslocar, e ir ao estado 177

    OR         reduzir usando a regra 63 (relationalExp)
    AND        reduzir usando a regra 63 (relationalExp)
    SMALLER    reduzir usando a regra 63 (relationalExp)
    GREATER    reduzir usando a regra 63 (relationalExp)
    SMALLEQ    reduzir usando a regra 63 (relationalExp)
    GREATEQ    reduzir usando a regra 63 (relationalExp)
    EQUALS     reduzir usando a regra 63 (relationalExp)
    DIFFERENT  reduzir usando a regra 63 (relationalExp)
    NEG        reduzir usando a regra 63 (relationalExp)
    COMMA      reduzir usando a regra 63 (relationalExp)
    PARENR     reduzir usando a regra 63 (relationalExp)

    sumOp  ir ao estado 239


Estado 276

   71 sumExp: sumExp sumOp mulExp •
   75 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 104
    DIV   deslocar, e ir ao estado 105

    ADD        reduzir usando a regra 71 (sumExp)
    SUB        reduzir usando a regra 71 (sumExp)
    OR         reduzir usando a regra 71 (sumExp)
    AND        reduzir usando a regra 71 (sumExp)
    SMALLER    reduzir usando a regra 71 (sumExp)
    GREATER    reduzir usando a regra 71 (sumExp)
    SMALLEQ    reduzir usando a regra 71 (sumExp)
    GREATEQ    reduzir usando a regra 71 (sumExp)
    EQUALS     reduzir usando a regra 71 (sumExp)
    DIFFERENT  reduzir usando a regra 71 (sumExp)
    NEG        reduzir usando a regra 71 (sumExp)
    COMMA      reduzir usando a regra 71 (sumExp)
    PARENR     reduzir usando a regra 71 (sumExp)

    mulOp  ir ao estado 241


Estado 277

   75 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 75 (mulExp)
    SUB        reduzir usando a regra 75 (mulExp)
    MULT       reduzir usando a regra 75 (mulExp)
    DIV        reduzir usando a regra 75 (mulExp)
    OR         reduzir usando a regra 75 (mulExp)
    AND        reduzir usando a regra 75 (mulExp)
    SMALLER    reduzir usando a regra 75 (mulExp)
    GREATER    reduzir usando a regra 75 (mulExp)
    SMALLEQ    reduzir usando a regra 75 (mulExp)
    GREATEQ    reduzir usando a regra 75 (mulExp)
    EQUALS     reduzir usando a regra 75 (mulExp)
    DIFFERENT  reduzir usando a regra 75 (mulExp)
    NEG        reduzir usando a regra 75 (mulExp)
    COMMA      reduzir usando a regra 75 (mulExp)
    PARENR     reduzir usando a regra 75 (mulExp)


Estado 278

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    SEMIC      reduzir usando a regra 84 (fCall)


Estado 279

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 280

   36 appendOps: ID APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 292


Estado 281

   40 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 40 (destroyHeadOps)
    TYPE         reduzir usando a regra 40 (destroyHeadOps)
    LIST         reduzir usando a regra 40 (destroyHeadOps)
    NIL          reduzir usando a regra 40 (destroyHeadOps)
    INTEGER      reduzir usando a regra 40 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 40 (destroyHeadOps)
    ADD          reduzir usando a regra 40 (destroyHeadOps)
    SUB          reduzir usando a regra 40 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 40 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 40 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 40 (destroyHeadOps)
    NOT          reduzir usando a regra 40 (destroyHeadOps)
    ELSE         reduzir usando a regra 40 (destroyHeadOps)
    IF           reduzir usando a regra 40 (destroyHeadOps)
    FOR          reduzir usando a regra 40 (destroyHeadOps)
    READ         reduzir usando a regra 40 (destroyHeadOps)
    WRITE        reduzir usando a regra 40 (destroyHeadOps)
    WRITELN      reduzir usando a regra 40 (destroyHeadOps)
    RETURN       reduzir usando a regra 40 (destroyHeadOps)
    STFUNC       reduzir usando a regra 40 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 40 (destroyHeadOps)
    PARENL       reduzir usando a regra 40 (destroyHeadOps)


Estado 282

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 293


Estado 283

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 294


Estado 284

   30 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 295


Estado 285

   50 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 296


Estado 286

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 297


Estado 287

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 298


Estado 288

   31 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 31 (returnStmt)
    TYPE         reduzir usando a regra 31 (returnStmt)
    LIST         reduzir usando a regra 31 (returnStmt)
    NIL          reduzir usando a regra 31 (returnStmt)
    INTEGER      reduzir usando a regra 31 (returnStmt)
    DECIMAL      reduzir usando a regra 31 (returnStmt)
    ADD          reduzir usando a regra 31 (returnStmt)
    SUB          reduzir usando a regra 31 (returnStmt)
    HEADLIST     reduzir usando a regra 31 (returnStmt)
    TAILLIST     reduzir usando a regra 31 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 31 (returnStmt)
    NOT          reduzir usando a regra 31 (returnStmt)
    ELSE         reduzir usando a regra 31 (returnStmt)
    IF           reduzir usando a regra 31 (returnStmt)
    FOR          reduzir usando a regra 31 (returnStmt)
    READ         reduzir usando a regra 31 (returnStmt)
    WRITE        reduzir usando a regra 31 (returnStmt)
    WRITELN      reduzir usando a regra 31 (returnStmt)
    RETURN       reduzir usando a regra 31 (returnStmt)
    STFUNC       reduzir usando a regra 31 (returnStmt)
    ENDFUNC      reduzir usando a regra 31 (returnStmt)
    PARENL       reduzir usando a regra 31 (returnStmt)


Estado 289

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    LIST         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    NOT          reduzir usando a regra 14 (compoundStmt)
    ELSE         reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 290

   41 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 299


Estado 291

   84 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 84 (fCall)
    SUB        reduzir usando a regra 84 (fCall)
    MULT       reduzir usando a regra 84 (fCall)
    DIV        reduzir usando a regra 84 (fCall)
    OR         reduzir usando a regra 84 (fCall)
    AND        reduzir usando a regra 84 (fCall)
    SMALLER    reduzir usando a regra 84 (fCall)
    GREATER    reduzir usando a regra 84 (fCall)
    SMALLEQ    reduzir usando a regra 84 (fCall)
    GREATEQ    reduzir usando a regra 84 (fCall)
    EQUALS     reduzir usando a regra 84 (fCall)
    DIFFERENT  reduzir usando a regra 84 (fCall)
    NEG        reduzir usando a regra 84 (fCall)
    COMMA      reduzir usando a regra 84 (fCall)
    PARENR     reduzir usando a regra 84 (fCall)


Estado 292

   36 appendOps: ID APPEND ID SEMIC •

    ID           reduzir usando a regra 36 (appendOps)
    TYPE         reduzir usando a regra 36 (appendOps)
    LIST         reduzir usando a regra 36 (appendOps)
    NIL          reduzir usando a regra 36 (appendOps)
    INTEGER      reduzir usando a regra 36 (appendOps)
    DECIMAL      reduzir usando a regra 36 (appendOps)
    ADD          reduzir usando a regra 36 (appendOps)
    SUB          reduzir usando a regra 36 (appendOps)
    HEADLIST     reduzir usando a regra 36 (appendOps)
    TAILLIST     reduzir usando a regra 36 (appendOps)
    DESTROYHEAD  reduzir usando a regra 36 (appendOps)
    NOT          reduzir usando a regra 36 (appendOps)
    ELSE         reduzir usando a regra 36 (appendOps)
    IF           reduzir usando a regra 36 (appendOps)
    FOR          reduzir usando a regra 36 (appendOps)
    READ         reduzir usando a regra 36 (appendOps)
    WRITE        reduzir usando a regra 36 (appendOps)
    WRITELN      reduzir usando a regra 36 (appendOps)
    RETURN       reduzir usando a regra 36 (appendOps)
    STFUNC       reduzir usando a regra 36 (appendOps)
    ENDFUNC      reduzir usando a regra 36 (appendOps)
    PARENL       reduzir usando a regra 36 (appendOps)


Estado 293

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 197
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 198
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 199
    FOR          deslocar, e ir ao estado 200
    READ         deslocar, e ir ao estado 201
    WRITE        deslocar, e ir ao estado 202
    WRITELN      deslocar, e ir ao estado 203
    RETURN       deslocar, e ir ao estado 204
    STFUNC       deslocar, e ir ao estado 205
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 206
    simpleVarDeclaration  ir ao estado 207
    compoundStmt          ir ao estado 208
    primitiveStmt         ir ao estado 300
    exprStmt              ir ao estado 209
    condStmt              ir ao estado 210
    iterStmt              ir ao estado 211
    returnStmt            ir ao estado 212
    listStmt              ir ao estado 213
    appendOps             ir ao estado 214
    returnListOps         ir ao estado 215
    returnListOp          ir ao estado 216
    destroyHeadOps        ir ao estado 217
    mapFilterOps          ir ao estado 218
    expression            ir ao estado 219
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 220
    outOp                 ir ao estado 221
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 222


Estado 294

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    simpleExp      ir ao estado 301
    constOp        ir ao estado 59
    binLogicalExp  ir ao estado 62
    unLogicalExp   ir ao estado 63
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 295

   30 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 175
    LIST     deslocar, e ir ao estado 25
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    NOT      deslocar, e ir ao estado 34
    PARENL   deslocar, e ir ao estado 41

    simpleExp      ir ao estado 302
    constOp        ir ao estado 59
    binLogicalExp  ir ao estado 62
    unLogicalExp   ir ao estado 63
    unLogicalOp    ir ao estado 64
    relationalExp  ir ao estado 65
    sumExp         ir ao estado 66
    sumOp          ir ao estado 67
    mulExp         ir ao estado 68
    factor         ir ao estado 69
    fCall          ir ao estado 83


Estado 296

   50 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 303


Estado 297

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 304


Estado 298

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 305


Estado 299

   41 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 41 (mapFilterOps)
    TYPE         reduzir usando a regra 41 (mapFilterOps)
    LIST         reduzir usando a regra 41 (mapFilterOps)
    NIL          reduzir usando a regra 41 (mapFilterOps)
    INTEGER      reduzir usando a regra 41 (mapFilterOps)
    DECIMAL      reduzir usando a regra 41 (mapFilterOps)
    ADD          reduzir usando a regra 41 (mapFilterOps)
    SUB          reduzir usando a regra 41 (mapFilterOps)
    HEADLIST     reduzir usando a regra 41 (mapFilterOps)
    TAILLIST     reduzir usando a regra 41 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 41 (mapFilterOps)
    NOT          reduzir usando a regra 41 (mapFilterOps)
    ELSE         reduzir usando a regra 41 (mapFilterOps)
    IF           reduzir usando a regra 41 (mapFilterOps)
    FOR          reduzir usando a regra 41 (mapFilterOps)
    READ         reduzir usando a regra 41 (mapFilterOps)
    WRITE        reduzir usando a regra 41 (mapFilterOps)
    WRITELN      reduzir usando a regra 41 (mapFilterOps)
    RETURN       reduzir usando a regra 41 (mapFilterOps)
    STFUNC       reduzir usando a regra 41 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 41 (mapFilterOps)
    PARENL       reduzir usando a regra 41 (mapFilterOps)


Estado 300

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 306

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    LIST         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    NOT          reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 301

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 307


Estado 302

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 308


Estado 303

   50 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 50 (inOp)
    TYPE         reduzir usando a regra 50 (inOp)
    LIST         reduzir usando a regra 50 (inOp)
    NIL          reduzir usando a regra 50 (inOp)
    INTEGER      reduzir usando a regra 50 (inOp)
    DECIMAL      reduzir usando a regra 50 (inOp)
    ADD          reduzir usando a regra 50 (inOp)
    SUB          reduzir usando a regra 50 (inOp)
    HEADLIST     reduzir usando a regra 50 (inOp)
    TAILLIST     reduzir usando a regra 50 (inOp)
    DESTROYHEAD  reduzir usando a regra 50 (inOp)
    NOT          reduzir usando a regra 50 (inOp)
    ELSE         reduzir usando a regra 50 (inOp)
    IF           reduzir usando a regra 50 (inOp)
    FOR          reduzir usando a regra 50 (inOp)
    READ         reduzir usando a regra 50 (inOp)
    WRITE        reduzir usando a regra 50 (inOp)
    WRITELN      reduzir usando a regra 50 (inOp)
    RETURN       reduzir usando a regra 50 (inOp)
    STFUNC       reduzir usando a regra 50 (inOp)
    ENDFUNC      reduzir usando a regra 50 (inOp)
    PARENL       reduzir usando a regra 50 (inOp)


Estado 304

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    LIST         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    NOT          reduzir usando a regra 51 (outOp)
    ELSE         reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 305

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 52 (outOp)
    TYPE         reduzir usando a regra 52 (outOp)
    LIST         reduzir usando a regra 52 (outOp)
    NIL          reduzir usando a regra 52 (outOp)
    INTEGER      reduzir usando a regra 52 (outOp)
    DECIMAL      reduzir usando a regra 52 (outOp)
    ADD          reduzir usando a regra 52 (outOp)
    SUB          reduzir usando a regra 52 (outOp)
    HEADLIST     reduzir usando a regra 52 (outOp)
    TAILLIST     reduzir usando a regra 52 (outOp)
    DESTROYHEAD  reduzir usando a regra 52 (outOp)
    NOT          reduzir usando a regra 52 (outOp)
    ELSE         reduzir usando a regra 52 (outOp)
    IF           reduzir usando a regra 52 (outOp)
    FOR          reduzir usando a regra 52 (outOp)
    READ         reduzir usando a regra 52 (outOp)
    WRITE        reduzir usando a regra 52 (outOp)
    WRITELN      reduzir usando a regra 52 (outOp)
    RETURN       reduzir usando a regra 52 (outOp)
    STFUNC       reduzir usando a regra 52 (outOp)
    ENDFUNC      reduzir usando a regra 52 (outOp)
    PARENL       reduzir usando a regra 52 (outOp)


Estado 306

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 197
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 198
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 199
    FOR          deslocar, e ir ao estado 200
    READ         deslocar, e ir ao estado 201
    WRITE        deslocar, e ir ao estado 202
    WRITELN      deslocar, e ir ao estado 203
    RETURN       deslocar, e ir ao estado 204
    STFUNC       deslocar, e ir ao estado 205
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 206
    simpleVarDeclaration  ir ao estado 207
    compoundStmt          ir ao estado 208
    primitiveStmt         ir ao estado 309
    exprStmt              ir ao estado 209
    condStmt              ir ao estado 210
    iterStmt              ir ao estado 211
    returnStmt            ir ao estado 212
    listStmt              ir ao estado 213
    appendOps             ir ao estado 214
    returnListOps         ir ao estado 215
    returnListOp          ir ao estado 216
    destroyHeadOps        ir ao estado 217
    mapFilterOps          ir ao estado 218
    expression            ir ao estado 219
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 220
    outOp                 ir ao estado 221
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 222


Estado 307

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 150

    assignExp  ir ao estado 310


Estado 308

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 150

    assignExp  ir ao estado 311


Estado 309

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    LIST         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    NOT          reduzir usando a regra 28 (condStmt)
    ELSE         reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 310

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 312


Estado 311

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 313


Estado 312

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 197
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 198
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 199
    FOR          deslocar, e ir ao estado 200
    READ         deslocar, e ir ao estado 201
    WRITE        deslocar, e ir ao estado 202
    WRITELN      deslocar, e ir ao estado 203
    RETURN       deslocar, e ir ao estado 204
    STFUNC       deslocar, e ir ao estado 205
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 206
    simpleVarDeclaration  ir ao estado 207
    compoundStmt          ir ao estado 208
    primitiveStmt         ir ao estado 314
    exprStmt              ir ao estado 209
    condStmt              ir ao estado 210
    iterStmt              ir ao estado 211
    returnStmt            ir ao estado 212
    listStmt              ir ao estado 213
    appendOps             ir ao estado 214
    returnListOps         ir ao estado 215
    returnListOp          ir ao estado 216
    destroyHeadOps        ir ao estado 217
    mapFilterOps          ir ao estado 218
    expression            ir ao estado 219
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 220
    outOp                 ir ao estado 221
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 222


Estado 313

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 197
    TYPE         deslocar, e ir ao estado 157
    LIST         deslocar, e ir ao estado 25
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 198
    NOT          deslocar, e ir ao estado 34
    IF           deslocar, e ir ao estado 199
    FOR          deslocar, e ir ao estado 200
    READ         deslocar, e ir ao estado 201
    WRITE        deslocar, e ir ao estado 202
    WRITELN      deslocar, e ir ao estado 203
    RETURN       deslocar, e ir ao estado 204
    STFUNC       deslocar, e ir ao estado 205
    PARENL       deslocar, e ir ao estado 41

    varDeclaration        ir ao estado 206
    simpleVarDeclaration  ir ao estado 207
    compoundStmt          ir ao estado 208
    primitiveStmt         ir ao estado 315
    exprStmt              ir ao estado 209
    condStmt              ir ao estado 210
    iterStmt              ir ao estado 211
    returnStmt            ir ao estado 212
    listStmt              ir ao estado 213
    appendOps             ir ao estado 214
    returnListOps         ir ao estado 215
    returnListOp          ir ao estado 216
    destroyHeadOps        ir ao estado 217
    mapFilterOps          ir ao estado 218
    expression            ir ao estado 219
    assignExp             ir ao estado 57
    simpleExp             ir ao estado 58
    constOp               ir ao estado 59
    inOp                  ir ao estado 220
    outOp                 ir ao estado 221
    binLogicalExp         ir ao estado 62
    unLogicalExp          ir ao estado 63
    unLogicalOp           ir ao estado 64
    relationalExp         ir ao estado 65
    sumExp                ir ao estado 66
    sumOp                 ir ao estado 67
    mulExp                ir ao estado 68
    factor                ir ao estado 69
    fCall                 ir ao estado 222


Estado 314

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    LIST         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    NOT          reduzir usando a regra 29 (iterStmt)
    ELSE         reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)


Estado 315

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    LIST         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    NOT          reduzir usando a regra 30 (iterStmt)
    ELSE         reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)
