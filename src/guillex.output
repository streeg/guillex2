Gramática

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funcDeclaration

    6 varDeclaration: simpleVarDeclaration SEMIC

    7 funcDeclaration: TYPE ID PARENL params PARENR compoundStmt
    8                | TYPE ID PARENL PARENR compoundStmt

    9 simpleVarDeclaration: TYPE ID
   10                     | TYPE LISTTYPE ID

   11 params: params param
   12       | param

   13 param: simpleVarDeclaration

   14 compoundStmt: STFUNC stmtList ENDFUNC

   15 stmtList: stmtList primitiveStmt
   16         | primitiveStmt

   17 primitiveStmt: exprStmt
   18              | compoundStmt
   19              | condStmt
   20              | iterStmt
   21              | returnStmt
   22              | listStmt
   23              | inOp
   24              | outOp
   25              | varDeclaration

   26 exprStmt: expression SEMIC

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt
   28         | IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   31 returnStmt: RETURN expression SEMIC

   32 listStmt: appendOps
   33         | returnListOps
   34         | destroyHeadOps
   35         | mapFilterOps

   36 appendOps: ID APPEND ID SEMIC

   37 returnListOps: returnListOp ID

   38 returnListOp: HEADLIST
   39             | TAILLIST

   40 destroyHeadOps: DESTROYHEAD ID SEMIC

   41 mapFilterOps: fCall MAP ID SEMIC
   42             | fCall FILTER ID SEMIC

   43 expression: assignExp
   44           | simpleExp

   45 assignExp: ID ASSIGN expression

   46 simpleExp: binLogicalExp

   47 constOp: INTEGER
   48        | DECIMAL
   49        | NIL

   50 inOp: READ PARENL ID PARENR SEMIC

   51 outOp: WRITE PARENL outConst PARENR SEMIC
   52      | WRITELN PARENL outConst PARENR SEMIC

   53 outConst: STRING
   54         | simpleExp

   55 binLogicalExp: binLogicalExp binLogicalOp relationalOp
   56              | relationalExp

   57 binLogicalOp: OR
   58             | AND

   59 relationalExp: relationalExp relationalOp sumExp
   60              | sumExp

   61 relationalOp: SMALLER
   62             | GREATER
   63             | SMALLEQ
   64             | GREATEQ
   65             | EQUALS
   66             | DIFFERENT

   67 sumExp: sumExp sumOp mulExp
   68       | mulExp

   69 sumOp: ADD
   70      | SUB

   71 mulExp: mulExp mulOp factor
   72       | factor
   73       | sumOp factor

   74 mulOp: MULT
   75      | DIV

   76 factor: ID
   77       | fCall
   78       | PARENL simpleExp PARENR
   79       | constOp

   80 fCall: ID PARENL callParams PARENR
   81      | ID PARENL PARENR

   82 callParams: callParams COMMA simpleExp
   83           | simpleExp


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    ID <str> (258) 7 8 9 10 36 37 40 41 42 45 50 76 80 81
    TYPE <str> (259) 7 8 9 10
    LISTTYPE <str> (260) 10
    STRING <str> (261) 53
    NIL <str> (262) 49
    INTEGER <integer> (263) 47
    DECIMAL <dec> (264) 48
    ADD <str> (265) 69
    SUB <str> (266) 70
    MULT <str> (267) 74
    DIV <str> (268) 75
    OR <str> (269) 57
    AND <str> (270) 58
    SMALLER <str> (271) 61
    GREATER <str> (272) 62
    SMALLEQ <str> (273) 63
    GREATEQ <str> (274) 64
    EQUALS <str> (275) 65
    DIFFERENT <str> (276) 66
    APPEND <str> (277) 36
    HEADLIST <str> (278) 38
    TAILLIST <str> (279) 39
    DESTROYHEAD <str> (280) 40
    FILTER <str> (281) 42
    ASSIGN <str> (282) 45
    MAP <str> (283) 41
    ELSE <str> (284) 28
    THEN <str> (285)
    IF <str> (286) 27 28
    FOR <str> (287) 29 30
    READ <str> (288) 50
    WRITE <str> (289) 51
    WRITELN <str> (290) 52
    RETURN <str> (291) 31
    SEMIC <str> (292) 6 26 29 30 31 36 40 41 42 50 51 52
    COMMA <str> (293) 82
    STFUNC <str> (294) 14
    ENDFUNC <str> (295) 14
    PARENL <str> (296) 7 8 27 28 29 30 50 51 52 78 80 81
    PARENR <str> (297) 7 8 27 28 29 30 50 51 52 78 80 81


Não terminais com as regras onde eles aparecem

    $accept (43)
        à esquerda: 0
    program <treeNode> (44)
        à esquerda: 1
        à direita: 0
    declarationList <treeNode> (45)
        à esquerda: 2 3
        à direita: 1 2
    declaration <treeNode> (46)
        à esquerda: 4 5
        à direita: 2 3
    varDeclaration <treeNode> (47)
        à esquerda: 6
        à direita: 4 25
    funcDeclaration <treeNode> (48)
        à esquerda: 7 8
        à direita: 5
    simpleVarDeclaration <treeNode> (49)
        à esquerda: 9 10
        à direita: 6 13
    params <treeNode> (50)
        à esquerda: 11 12
        à direita: 7 11
    param <treeNode> (51)
        à esquerda: 13
        à direita: 11 12
    compoundStmt <treeNode> (52)
        à esquerda: 14
        à direita: 7 8 18
    stmtList <treeNode> (53)
        à esquerda: 15 16
        à direita: 14 15
    primitiveStmt <treeNode> (54)
        à esquerda: 17 18 19 20 21 22 23 24 25
        à direita: 15 16 27 28 29 30
    exprStmt <treeNode> (55)
        à esquerda: 26
        à direita: 17
    condStmt <treeNode> (56)
        à esquerda: 27 28
        à direita: 19
    iterStmt <treeNode> (57)
        à esquerda: 29 30
        à direita: 20
    returnStmt <treeNode> (58)
        à esquerda: 31
        à direita: 21
    listStmt <treeNode> (59)
        à esquerda: 32 33 34 35
        à direita: 22
    appendOps <treeNode> (60)
        à esquerda: 36
        à direita: 32
    returnListOps <treeNode> (61)
        à esquerda: 37
        à direita: 33
    returnListOp <treeNode> (62)
        à esquerda: 38 39
        à direita: 37
    destroyHeadOps <treeNode> (63)
        à esquerda: 40
        à direita: 34
    mapFilterOps <treeNode> (64)
        à esquerda: 41 42
        à direita: 35
    expression <treeNode> (65)
        à esquerda: 43 44
        à direita: 26 31 45
    assignExp <treeNode> (66)
        à esquerda: 45
        à direita: 29 30 43
    simpleExp <treeNode> (67)
        à esquerda: 46
        à direita: 27 28 29 30 44 54 78 82 83
    constOp <treeNode> (68)
        à esquerda: 47 48 49
        à direita: 79
    inOp <treeNode> (69)
        à esquerda: 50
        à direita: 23
    outOp <treeNode> (70)
        à esquerda: 51 52
        à direita: 24
    outConst <treeNode> (71)
        à esquerda: 53 54
        à direita: 51 52
    binLogicalExp <treeNode> (72)
        à esquerda: 55 56
        à direita: 46 55
    binLogicalOp <treeNode> (73)
        à esquerda: 57 58
        à direita: 55
    relationalExp <treeNode> (74)
        à esquerda: 59 60
        à direita: 56 59
    relationalOp <treeNode> (75)
        à esquerda: 61 62 63 64 65 66
        à direita: 55 59
    sumExp <treeNode> (76)
        à esquerda: 67 68
        à direita: 59 60 67
    sumOp <treeNode> (77)
        à esquerda: 69 70
        à direita: 67 73
    mulExp <treeNode> (78)
        à esquerda: 71 72 73
        à direita: 67 68 71
    mulOp <treeNode> (79)
        à esquerda: 74 75
        à direita: 71
    factor <treeNode> (80)
        à esquerda: 76 77 78 79
        à direita: 71 72 73
    fCall <treeNode> (81)
        à esquerda: 80 81
        à direita: 41 42 77
    callParams <treeNode> (82)
        à esquerda: 82 83
        à direita: 80 82


Estado 0

    0 $accept: • program $end

    TYPE  deslocar, e ir ao estado 1

    program               ir ao estado 2
    declarationList       ir ao estado 3
    declaration           ir ao estado 4
    varDeclaration        ir ao estado 5
    funcDeclaration       ir ao estado 6
    simpleVarDeclaration  ir ao estado 7


Estado 1

    7 funcDeclaration: TYPE • ID PARENL params PARENR compoundStmt
    8                | TYPE • ID PARENL PARENR compoundStmt
    9 simpleVarDeclaration: TYPE • ID
   10                     | TYPE • LISTTYPE ID

    ID        deslocar, e ir ao estado 8
    LISTTYPE  deslocar, e ir ao estado 9


Estado 2

    0 $accept: program • $end

    $end  deslocar, e ir ao estado 10


Estado 3

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  deslocar, e ir ao estado 1

    $end  reduzir usando a regra 1 (program)

    declaration           ir ao estado 11
    varDeclaration        ir ao estado 5
    funcDeclaration       ir ao estado 6
    simpleVarDeclaration  ir ao estado 7


Estado 4

    3 declarationList: declaration •

    $end  reduzir usando a regra 3 (declarationList)
    TYPE  reduzir usando a regra 3 (declarationList)


Estado 5

    4 declaration: varDeclaration •

    $end  reduzir usando a regra 4 (declaration)
    TYPE  reduzir usando a regra 4 (declaration)


Estado 6

    5 declaration: funcDeclaration •

    $end  reduzir usando a regra 5 (declaration)
    TYPE  reduzir usando a regra 5 (declaration)


Estado 7

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 12


Estado 8

    7 funcDeclaration: TYPE ID • PARENL params PARENR compoundStmt
    8                | TYPE ID • PARENL PARENR compoundStmt
    9 simpleVarDeclaration: TYPE ID •

    PARENL  deslocar, e ir ao estado 13

    SEMIC  reduzir usando a regra 9 (simpleVarDeclaration)


Estado 9

   10 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  deslocar, e ir ao estado 14


Estado 10

    0 $accept: program $end •

    $padrão  aceitar


Estado 11

    2 declarationList: declarationList declaration •

    $end  reduzir usando a regra 2 (declarationList)
    TYPE  reduzir usando a regra 2 (declarationList)


Estado 12

    6 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduzir usando a regra 6 (varDeclaration)
    TYPE  reduzir usando a regra 6 (varDeclaration)


Estado 13

    7 funcDeclaration: TYPE ID PARENL • params PARENR compoundStmt
    8                | TYPE ID PARENL • PARENR compoundStmt

    TYPE    deslocar, e ir ao estado 15
    PARENR  deslocar, e ir ao estado 16

    simpleVarDeclaration  ir ao estado 17
    params                ir ao estado 18
    param                 ir ao estado 19


Estado 14

   10 simpleVarDeclaration: TYPE LISTTYPE ID •

    SEMIC  reduzir usando a regra 10 (simpleVarDeclaration)


Estado 15

    9 simpleVarDeclaration: TYPE • ID
   10                     | TYPE • LISTTYPE ID

    ID        deslocar, e ir ao estado 20
    LISTTYPE  deslocar, e ir ao estado 155


Estado 16

    8 funcDeclaration: TYPE ID PARENL PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 21

    compoundStmt  ir ao estado 22


Estado 17

   13 param: simpleVarDeclaration •

    TYPE    reduzir usando a regra 13 (param)
    PARENR  reduzir usando a regra 13 (param)


Estado 18

    7 funcDeclaration: TYPE ID PARENL params • PARENR compoundStmt
   11 params: params • param

    TYPE    deslocar, e ir ao estado 15
    PARENR  deslocar, e ir ao estado 23

    simpleVarDeclaration  ir ao estado 17
    param                 ir ao estado 24


Estado 19

   12 params: param •

    TYPE    reduzir usando a regra 12 (params)
    PARENR  reduzir usando a regra 12 (params)


Estado 20

    9 simpleVarDeclaration: TYPE ID •

    TYPE    reduzir usando a regra 9 (simpleVarDeclaration)
    PARENR  reduzir usando a regra 9 (simpleVarDeclaration)


Estado 21

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 25
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 42
    stmtList              ir ao estado 43
    primitiveStmt         ir ao estado 44
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 22

    8 funcDeclaration: TYPE ID PARENL PARENR compoundStmt •

    $end  reduzir usando a regra 8 (funcDeclaration)
    TYPE  reduzir usando a regra 8 (funcDeclaration)


Estado 23

    7 funcDeclaration: TYPE ID PARENL params PARENR • compoundStmt

    STFUNC  deslocar, e ir ao estado 21

    compoundStmt  ir ao estado 68


Estado 24

   11 params: params param •

    TYPE    reduzir usando a regra 11 (params)
    PARENR  reduzir usando a regra 11 (params)


Estado 25

   36 appendOps: ID • APPEND ID SEMIC
   45 assignExp: ID • ASSIGN expression
   76 factor: ID •
   80 fCall: ID • PARENL callParams PARENR
   81      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 69
    ASSIGN  deslocar, e ir ao estado 70
    PARENL  deslocar, e ir ao estado 71

    ADD        reduzir usando a regra 76 (factor)
    SUB        reduzir usando a regra 76 (factor)
    MULT       reduzir usando a regra 76 (factor)
    DIV        reduzir usando a regra 76 (factor)
    OR         reduzir usando a regra 76 (factor)
    AND        reduzir usando a regra 76 (factor)
    SMALLER    reduzir usando a regra 76 (factor)
    GREATER    reduzir usando a regra 76 (factor)
    SMALLEQ    reduzir usando a regra 76 (factor)
    GREATEQ    reduzir usando a regra 76 (factor)
    EQUALS     reduzir usando a regra 76 (factor)
    DIFFERENT  reduzir usando a regra 76 (factor)
    SEMIC      reduzir usando a regra 76 (factor)


Estado 26

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    SEMIC      reduzir usando a regra 49 (constOp)


Estado 27

   47 constOp: INTEGER •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    SEMIC      reduzir usando a regra 47 (constOp)


Estado 28

   48 constOp: DECIMAL •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    SEMIC      reduzir usando a regra 48 (constOp)


Estado 29

   69 sumOp: ADD •

    ID       reduzir usando a regra 69 (sumOp)
    NIL      reduzir usando a regra 69 (sumOp)
    INTEGER  reduzir usando a regra 69 (sumOp)
    DECIMAL  reduzir usando a regra 69 (sumOp)
    PARENL   reduzir usando a regra 69 (sumOp)


Estado 30

   70 sumOp: SUB •

    ID       reduzir usando a regra 70 (sumOp)
    NIL      reduzir usando a regra 70 (sumOp)
    INTEGER  reduzir usando a regra 70 (sumOp)
    DECIMAL  reduzir usando a regra 70 (sumOp)
    PARENL   reduzir usando a regra 70 (sumOp)


Estado 31

   38 returnListOp: HEADLIST •

    ID  reduzir usando a regra 38 (returnListOp)


Estado 32

   39 returnListOp: TAILLIST •

    ID  reduzir usando a regra 39 (returnListOp)


Estado 33

   40 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 72


Estado 34

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 73


Estado 35

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 74


Estado 36

   50 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 75


Estado 37

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 76


Estado 38

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 77


Estado 39

   31 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 78
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    expression     ir ao estado 79
    assignExp      ir ao estado 56
    simpleExp      ir ao estado 57
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 40

   78 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 81
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    simpleExp      ir ao estado 82
    constOp        ir ao estado 163
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 41

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 42

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 43

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 25
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 157
    ENDFUNC      deslocar, e ir ao estado 83
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 84
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 44

   16 stmtList: primitiveStmt •

    ID           reduzir usando a regra 16 (stmtList)
    TYPE         reduzir usando a regra 16 (stmtList)
    NIL          reduzir usando a regra 16 (stmtList)
    INTEGER      reduzir usando a regra 16 (stmtList)
    DECIMAL      reduzir usando a regra 16 (stmtList)
    ADD          reduzir usando a regra 16 (stmtList)
    SUB          reduzir usando a regra 16 (stmtList)
    HEADLIST     reduzir usando a regra 16 (stmtList)
    TAILLIST     reduzir usando a regra 16 (stmtList)
    DESTROYHEAD  reduzir usando a regra 16 (stmtList)
    IF           reduzir usando a regra 16 (stmtList)
    FOR          reduzir usando a regra 16 (stmtList)
    READ         reduzir usando a regra 16 (stmtList)
    WRITE        reduzir usando a regra 16 (stmtList)
    WRITELN      reduzir usando a regra 16 (stmtList)
    RETURN       reduzir usando a regra 16 (stmtList)
    STFUNC       reduzir usando a regra 16 (stmtList)
    ENDFUNC      reduzir usando a regra 16 (stmtList)
    PARENL       reduzir usando a regra 16 (stmtList)


Estado 45

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 46

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 47

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 48

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 49

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 50

   32 listStmt: appendOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 51

   33 listStmt: returnListOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 52

   37 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 85


Estado 53

   34 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 54

   35 listStmt: mapFilterOps •

    ID           reduzir usando a regra 35 (listStmt)
    TYPE         reduzir usando a regra 35 (listStmt)
    NIL          reduzir usando a regra 35 (listStmt)
    INTEGER      reduzir usando a regra 35 (listStmt)
    DECIMAL      reduzir usando a regra 35 (listStmt)
    ADD          reduzir usando a regra 35 (listStmt)
    SUB          reduzir usando a regra 35 (listStmt)
    HEADLIST     reduzir usando a regra 35 (listStmt)
    TAILLIST     reduzir usando a regra 35 (listStmt)
    DESTROYHEAD  reduzir usando a regra 35 (listStmt)
    IF           reduzir usando a regra 35 (listStmt)
    FOR          reduzir usando a regra 35 (listStmt)
    READ         reduzir usando a regra 35 (listStmt)
    WRITE        reduzir usando a regra 35 (listStmt)
    WRITELN      reduzir usando a regra 35 (listStmt)
    RETURN       reduzir usando a regra 35 (listStmt)
    STFUNC       reduzir usando a regra 35 (listStmt)
    ENDFUNC      reduzir usando a regra 35 (listStmt)
    PARENL       reduzir usando a regra 35 (listStmt)


Estado 55

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 86


Estado 56

   43 expression: assignExp •

    SEMIC  reduzir usando a regra 43 (expression)


Estado 57

   44 expression: simpleExp •

    SEMIC  reduzir usando a regra 44 (expression)


Estado 58

   79 factor: constOp •

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    SEMIC      reduzir usando a regra 79 (factor)


Estado 59

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 60

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 61

   46 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   deslocar, e ir ao estado 87
    AND  deslocar, e ir ao estado 88

    SEMIC  reduzir usando a regra 46 (simpleExp)

    binLogicalOp  ir ao estado 89


Estado 62

   56 binLogicalExp: relationalExp •
   59 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 90
    GREATER    deslocar, e ir ao estado 91
    SMALLEQ    deslocar, e ir ao estado 92
    GREATEQ    deslocar, e ir ao estado 93
    EQUALS     deslocar, e ir ao estado 94
    DIFFERENT  deslocar, e ir ao estado 95

    OR     reduzir usando a regra 56 (binLogicalExp)
    AND    reduzir usando a regra 56 (binLogicalExp)
    SEMIC  reduzir usando a regra 56 (binLogicalExp)

    relationalOp  ir ao estado 96


Estado 63

   60 relationalExp: sumExp •
   67 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 171
    SUB  deslocar, e ir ao estado 172

    OR         reduzir usando a regra 60 (relationalExp)
    AND        reduzir usando a regra 60 (relationalExp)
    SMALLER    reduzir usando a regra 60 (relationalExp)
    GREATER    reduzir usando a regra 60 (relationalExp)
    SMALLEQ    reduzir usando a regra 60 (relationalExp)
    GREATEQ    reduzir usando a regra 60 (relationalExp)
    EQUALS     reduzir usando a regra 60 (relationalExp)
    DIFFERENT  reduzir usando a regra 60 (relationalExp)
    SEMIC      reduzir usando a regra 60 (relationalExp)

    sumOp  ir ao estado 97


Estado 64

   73 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 173
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    factor   ir ao estado 98
    fCall    ir ao estado 80


Estado 65

   68 sumExp: mulExp •
   71 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 99
    DIV   deslocar, e ir ao estado 100

    ADD        reduzir usando a regra 68 (sumExp)
    SUB        reduzir usando a regra 68 (sumExp)
    OR         reduzir usando a regra 68 (sumExp)
    AND        reduzir usando a regra 68 (sumExp)
    SMALLER    reduzir usando a regra 68 (sumExp)
    GREATER    reduzir usando a regra 68 (sumExp)
    SMALLEQ    reduzir usando a regra 68 (sumExp)
    GREATEQ    reduzir usando a regra 68 (sumExp)
    EQUALS     reduzir usando a regra 68 (sumExp)
    DIFFERENT  reduzir usando a regra 68 (sumExp)
    SEMIC      reduzir usando a regra 68 (sumExp)

    mulOp  ir ao estado 101


Estado 66

   72 mulExp: factor •

    ADD        reduzir usando a regra 72 (mulExp)
    SUB        reduzir usando a regra 72 (mulExp)
    MULT       reduzir usando a regra 72 (mulExp)
    DIV        reduzir usando a regra 72 (mulExp)
    OR         reduzir usando a regra 72 (mulExp)
    AND        reduzir usando a regra 72 (mulExp)
    SMALLER    reduzir usando a regra 72 (mulExp)
    GREATER    reduzir usando a regra 72 (mulExp)
    SMALLEQ    reduzir usando a regra 72 (mulExp)
    GREATEQ    reduzir usando a regra 72 (mulExp)
    EQUALS     reduzir usando a regra 72 (mulExp)
    DIFFERENT  reduzir usando a regra 72 (mulExp)
    SEMIC      reduzir usando a regra 72 (mulExp)


Estado 67

   41 mapFilterOps: fCall • MAP ID SEMIC
   42             | fCall • FILTER ID SEMIC
   77 factor: fCall •

    FILTER  deslocar, e ir ao estado 102
    MAP     deslocar, e ir ao estado 103

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    SEMIC      reduzir usando a regra 77 (factor)


Estado 68

    7 funcDeclaration: TYPE ID PARENL params PARENR compoundStmt •

    $end  reduzir usando a regra 7 (funcDeclaration)
    TYPE  reduzir usando a regra 7 (funcDeclaration)


Estado 69

   36 appendOps: ID APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 104


Estado 70

   45 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 78
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    expression     ir ao estado 105
    assignExp      ir ao estado 56
    simpleExp      ir ao estado 57
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 71

   80 fCall: ID PARENL • callParams PARENR
   81      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 174
    NIL      deslocar, e ir ao estado 175
    INTEGER  deslocar, e ir ao estado 176
    DECIMAL  deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 178
    PARENR   deslocar, e ir ao estado 106

    simpleExp      ir ao estado 107
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    relationalExp  ir ao estado 181
    sumExp         ir ao estado 182
    sumOp          ir ao estado 183
    mulExp         ir ao estado 184
    factor         ir ao estado 185
    fCall          ir ao estado 186
    callParams     ir ao estado 108


Estado 72

   40 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 109


Estado 73

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 81
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    simpleExp      ir ao estado 110
    constOp        ir ao estado 163
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 74

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 78
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    assignExp      ir ao estado 111
    simpleExp      ir ao estado 112
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 75

   50 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 113


Estado 76

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 81
    STRING   deslocar, e ir ao estado 114
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    simpleExp      ir ao estado 115
    constOp        ir ao estado 163
    outConst       ir ao estado 116
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 77

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 81
    STRING   deslocar, e ir ao estado 114
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    simpleExp      ir ao estado 115
    constOp        ir ao estado 163
    outConst       ir ao estado 117
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 78

   45 assignExp: ID • ASSIGN expression
   76 factor: ID •
   80 fCall: ID • PARENL callParams PARENR
   81      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 70
    PARENL  deslocar, e ir ao estado 187

    ADD        reduzir usando a regra 76 (factor)
    SUB        reduzir usando a regra 76 (factor)
    MULT       reduzir usando a regra 76 (factor)
    DIV        reduzir usando a regra 76 (factor)
    OR         reduzir usando a regra 76 (factor)
    AND        reduzir usando a regra 76 (factor)
    SMALLER    reduzir usando a regra 76 (factor)
    GREATER    reduzir usando a regra 76 (factor)
    SMALLEQ    reduzir usando a regra 76 (factor)
    GREATEQ    reduzir usando a regra 76 (factor)
    EQUALS     reduzir usando a regra 76 (factor)
    DIFFERENT  reduzir usando a regra 76 (factor)
    SEMIC      reduzir usando a regra 76 (factor)


Estado 79

   31 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 118


Estado 80

   77 factor: fCall •

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    SEMIC      reduzir usando a regra 77 (factor)


Estado 81

   76 factor: ID •
   80 fCall: ID • PARENL callParams PARENR
   81      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 188

    ADD        reduzir usando a regra 76 (factor)
    SUB        reduzir usando a regra 76 (factor)
    MULT       reduzir usando a regra 76 (factor)
    DIV        reduzir usando a regra 76 (factor)
    OR         reduzir usando a regra 76 (factor)
    AND        reduzir usando a regra 76 (factor)
    SMALLER    reduzir usando a regra 76 (factor)
    GREATER    reduzir usando a regra 76 (factor)
    SMALLEQ    reduzir usando a regra 76 (factor)
    GREATEQ    reduzir usando a regra 76 (factor)
    EQUALS     reduzir usando a regra 76 (factor)
    DIFFERENT  reduzir usando a regra 76 (factor)
    PARENR     reduzir usando a regra 76 (factor)


Estado 82

   78 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 119


Estado 83

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    $end  reduzir usando a regra 14 (compoundStmt)
    TYPE  reduzir usando a regra 14 (compoundStmt)


Estado 84

   15 stmtList: stmtList primitiveStmt •

    ID           reduzir usando a regra 15 (stmtList)
    TYPE         reduzir usando a regra 15 (stmtList)
    NIL          reduzir usando a regra 15 (stmtList)
    INTEGER      reduzir usando a regra 15 (stmtList)
    DECIMAL      reduzir usando a regra 15 (stmtList)
    ADD          reduzir usando a regra 15 (stmtList)
    SUB          reduzir usando a regra 15 (stmtList)
    HEADLIST     reduzir usando a regra 15 (stmtList)
    TAILLIST     reduzir usando a regra 15 (stmtList)
    DESTROYHEAD  reduzir usando a regra 15 (stmtList)
    IF           reduzir usando a regra 15 (stmtList)
    FOR          reduzir usando a regra 15 (stmtList)
    READ         reduzir usando a regra 15 (stmtList)
    WRITE        reduzir usando a regra 15 (stmtList)
    WRITELN      reduzir usando a regra 15 (stmtList)
    RETURN       reduzir usando a regra 15 (stmtList)
    STFUNC       reduzir usando a regra 15 (stmtList)
    ENDFUNC      reduzir usando a regra 15 (stmtList)
    PARENL       reduzir usando a regra 15 (stmtList)


Estado 85

   37 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 37 (returnListOps)
    TYPE         reduzir usando a regra 37 (returnListOps)
    NIL          reduzir usando a regra 37 (returnListOps)
    INTEGER      reduzir usando a regra 37 (returnListOps)
    DECIMAL      reduzir usando a regra 37 (returnListOps)
    ADD          reduzir usando a regra 37 (returnListOps)
    SUB          reduzir usando a regra 37 (returnListOps)
    HEADLIST     reduzir usando a regra 37 (returnListOps)
    TAILLIST     reduzir usando a regra 37 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 37 (returnListOps)
    IF           reduzir usando a regra 37 (returnListOps)
    FOR          reduzir usando a regra 37 (returnListOps)
    READ         reduzir usando a regra 37 (returnListOps)
    WRITE        reduzir usando a regra 37 (returnListOps)
    WRITELN      reduzir usando a regra 37 (returnListOps)
    RETURN       reduzir usando a regra 37 (returnListOps)
    STFUNC       reduzir usando a regra 37 (returnListOps)
    ENDFUNC      reduzir usando a regra 37 (returnListOps)
    PARENL       reduzir usando a regra 37 (returnListOps)


Estado 86

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 87

   57 binLogicalOp: OR •

    SMALLER    reduzir usando a regra 57 (binLogicalOp)
    GREATER    reduzir usando a regra 57 (binLogicalOp)
    SMALLEQ    reduzir usando a regra 57 (binLogicalOp)
    GREATEQ    reduzir usando a regra 57 (binLogicalOp)
    EQUALS     reduzir usando a regra 57 (binLogicalOp)
    DIFFERENT  reduzir usando a regra 57 (binLogicalOp)


Estado 88

   58 binLogicalOp: AND •

    SMALLER    reduzir usando a regra 58 (binLogicalOp)
    GREATER    reduzir usando a regra 58 (binLogicalOp)
    SMALLEQ    reduzir usando a regra 58 (binLogicalOp)
    GREATEQ    reduzir usando a regra 58 (binLogicalOp)
    EQUALS     reduzir usando a regra 58 (binLogicalOp)
    DIFFERENT  reduzir usando a regra 58 (binLogicalOp)


Estado 89

   55 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    deslocar, e ir ao estado 189
    GREATER    deslocar, e ir ao estado 190
    SMALLEQ    deslocar, e ir ao estado 191
    GREATEQ    deslocar, e ir ao estado 192
    EQUALS     deslocar, e ir ao estado 193
    DIFFERENT  deslocar, e ir ao estado 194

    relationalOp  ir ao estado 120


Estado 90

   61 relationalOp: SMALLER •

    ID       reduzir usando a regra 61 (relationalOp)
    NIL      reduzir usando a regra 61 (relationalOp)
    INTEGER  reduzir usando a regra 61 (relationalOp)
    DECIMAL  reduzir usando a regra 61 (relationalOp)
    ADD      reduzir usando a regra 61 (relationalOp)
    SUB      reduzir usando a regra 61 (relationalOp)
    PARENL   reduzir usando a regra 61 (relationalOp)


Estado 91

   62 relationalOp: GREATER •

    ID       reduzir usando a regra 62 (relationalOp)
    NIL      reduzir usando a regra 62 (relationalOp)
    INTEGER  reduzir usando a regra 62 (relationalOp)
    DECIMAL  reduzir usando a regra 62 (relationalOp)
    ADD      reduzir usando a regra 62 (relationalOp)
    SUB      reduzir usando a regra 62 (relationalOp)
    PARENL   reduzir usando a regra 62 (relationalOp)


Estado 92

   63 relationalOp: SMALLEQ •

    ID       reduzir usando a regra 63 (relationalOp)
    NIL      reduzir usando a regra 63 (relationalOp)
    INTEGER  reduzir usando a regra 63 (relationalOp)
    DECIMAL  reduzir usando a regra 63 (relationalOp)
    ADD      reduzir usando a regra 63 (relationalOp)
    SUB      reduzir usando a regra 63 (relationalOp)
    PARENL   reduzir usando a regra 63 (relationalOp)


Estado 93

   64 relationalOp: GREATEQ •

    ID       reduzir usando a regra 64 (relationalOp)
    NIL      reduzir usando a regra 64 (relationalOp)
    INTEGER  reduzir usando a regra 64 (relationalOp)
    DECIMAL  reduzir usando a regra 64 (relationalOp)
    ADD      reduzir usando a regra 64 (relationalOp)
    SUB      reduzir usando a regra 64 (relationalOp)
    PARENL   reduzir usando a regra 64 (relationalOp)


Estado 94

   65 relationalOp: EQUALS •

    ID       reduzir usando a regra 65 (relationalOp)
    NIL      reduzir usando a regra 65 (relationalOp)
    INTEGER  reduzir usando a regra 65 (relationalOp)
    DECIMAL  reduzir usando a regra 65 (relationalOp)
    ADD      reduzir usando a regra 65 (relationalOp)
    SUB      reduzir usando a regra 65 (relationalOp)
    PARENL   reduzir usando a regra 65 (relationalOp)


Estado 95

   66 relationalOp: DIFFERENT •

    ID       reduzir usando a regra 66 (relationalOp)
    NIL      reduzir usando a regra 66 (relationalOp)
    INTEGER  reduzir usando a regra 66 (relationalOp)
    DECIMAL  reduzir usando a regra 66 (relationalOp)
    ADD      reduzir usando a regra 66 (relationalOp)
    SUB      reduzir usando a regra 66 (relationalOp)
    PARENL   reduzir usando a regra 66 (relationalOp)


Estado 96

   59 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 173
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    sumExp   ir ao estado 121
    sumOp    ir ao estado 64
    mulExp   ir ao estado 65
    factor   ir ao estado 66
    fCall    ir ao estado 80


Estado 97

   67 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 173
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    sumOp    ir ao estado 64
    mulExp   ir ao estado 122
    factor   ir ao estado 66
    fCall    ir ao estado 80


Estado 98

   73 mulExp: sumOp factor •

    ADD        reduzir usando a regra 73 (mulExp)
    SUB        reduzir usando a regra 73 (mulExp)
    MULT       reduzir usando a regra 73 (mulExp)
    DIV        reduzir usando a regra 73 (mulExp)
    OR         reduzir usando a regra 73 (mulExp)
    AND        reduzir usando a regra 73 (mulExp)
    SMALLER    reduzir usando a regra 73 (mulExp)
    GREATER    reduzir usando a regra 73 (mulExp)
    SMALLEQ    reduzir usando a regra 73 (mulExp)
    GREATEQ    reduzir usando a regra 73 (mulExp)
    EQUALS     reduzir usando a regra 73 (mulExp)
    DIFFERENT  reduzir usando a regra 73 (mulExp)
    SEMIC      reduzir usando a regra 73 (mulExp)


Estado 99

   74 mulOp: MULT •

    ID       reduzir usando a regra 74 (mulOp)
    NIL      reduzir usando a regra 74 (mulOp)
    INTEGER  reduzir usando a regra 74 (mulOp)
    DECIMAL  reduzir usando a regra 74 (mulOp)
    PARENL   reduzir usando a regra 74 (mulOp)


Estado 100

   75 mulOp: DIV •

    ID       reduzir usando a regra 75 (mulOp)
    NIL      reduzir usando a regra 75 (mulOp)
    INTEGER  reduzir usando a regra 75 (mulOp)
    DECIMAL  reduzir usando a regra 75 (mulOp)
    PARENL   reduzir usando a regra 75 (mulOp)


Estado 101

   71 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 173
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    PARENL   deslocar, e ir ao estado 40

    constOp  ir ao estado 58
    factor   ir ao estado 123
    fCall    ir ao estado 80


Estado 102

   42 mapFilterOps: fCall FILTER • ID SEMIC

    ID  deslocar, e ir ao estado 124


Estado 103

   41 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 125


Estado 104

   36 appendOps: ID APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 126


Estado 105

   45 assignExp: ID ASSIGN expression •

    SEMIC  reduzir usando a regra 45 (assignExp)


Estado 106

   81 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 81 (fCall)
    SUB        reduzir usando a regra 81 (fCall)
    MULT       reduzir usando a regra 81 (fCall)
    DIV        reduzir usando a regra 81 (fCall)
    OR         reduzir usando a regra 81 (fCall)
    AND        reduzir usando a regra 81 (fCall)
    SMALLER    reduzir usando a regra 81 (fCall)
    GREATER    reduzir usando a regra 81 (fCall)
    SMALLEQ    reduzir usando a regra 81 (fCall)
    GREATEQ    reduzir usando a regra 81 (fCall)
    EQUALS     reduzir usando a regra 81 (fCall)
    DIFFERENT  reduzir usando a regra 81 (fCall)
    FILTER     reduzir usando a regra 81 (fCall)
    MAP        reduzir usando a regra 81 (fCall)
    SEMIC      reduzir usando a regra 81 (fCall)


Estado 107

   83 callParams: simpleExp •

    COMMA   reduzir usando a regra 83 (callParams)
    PARENR  reduzir usando a regra 83 (callParams)


Estado 108

   80 fCall: ID PARENL callParams • PARENR
   82 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 127
    PARENR  deslocar, e ir ao estado 128


Estado 109

   40 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 40 (destroyHeadOps)
    TYPE         reduzir usando a regra 40 (destroyHeadOps)
    NIL          reduzir usando a regra 40 (destroyHeadOps)
    INTEGER      reduzir usando a regra 40 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 40 (destroyHeadOps)
    ADD          reduzir usando a regra 40 (destroyHeadOps)
    SUB          reduzir usando a regra 40 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 40 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 40 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 40 (destroyHeadOps)
    IF           reduzir usando a regra 40 (destroyHeadOps)
    FOR          reduzir usando a regra 40 (destroyHeadOps)
    READ         reduzir usando a regra 40 (destroyHeadOps)
    WRITE        reduzir usando a regra 40 (destroyHeadOps)
    WRITELN      reduzir usando a regra 40 (destroyHeadOps)
    RETURN       reduzir usando a regra 40 (destroyHeadOps)
    STFUNC       reduzir usando a regra 40 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 40 (destroyHeadOps)
    PARENL       reduzir usando a regra 40 (destroyHeadOps)


Estado 110

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 129


Estado 111

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 130


Estado 112

   30 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 131


Estado 113

   50 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 132


Estado 114

   53 outConst: STRING •

    PARENR  reduzir usando a regra 53 (outConst)


Estado 115

   54 outConst: simpleExp •

    PARENR  reduzir usando a regra 54 (outConst)


Estado 116

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 133


Estado 117

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 134


Estado 118

   31 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 31 (returnStmt)
    TYPE         reduzir usando a regra 31 (returnStmt)
    NIL          reduzir usando a regra 31 (returnStmt)
    INTEGER      reduzir usando a regra 31 (returnStmt)
    DECIMAL      reduzir usando a regra 31 (returnStmt)
    ADD          reduzir usando a regra 31 (returnStmt)
    SUB          reduzir usando a regra 31 (returnStmt)
    HEADLIST     reduzir usando a regra 31 (returnStmt)
    TAILLIST     reduzir usando a regra 31 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 31 (returnStmt)
    IF           reduzir usando a regra 31 (returnStmt)
    FOR          reduzir usando a regra 31 (returnStmt)
    READ         reduzir usando a regra 31 (returnStmt)
    WRITE        reduzir usando a regra 31 (returnStmt)
    WRITELN      reduzir usando a regra 31 (returnStmt)
    RETURN       reduzir usando a regra 31 (returnStmt)
    STFUNC       reduzir usando a regra 31 (returnStmt)
    ENDFUNC      reduzir usando a regra 31 (returnStmt)
    PARENL       reduzir usando a regra 31 (returnStmt)


Estado 119

   78 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 78 (factor)
    SUB        reduzir usando a regra 78 (factor)
    MULT       reduzir usando a regra 78 (factor)
    DIV        reduzir usando a regra 78 (factor)
    OR         reduzir usando a regra 78 (factor)
    AND        reduzir usando a regra 78 (factor)
    SMALLER    reduzir usando a regra 78 (factor)
    GREATER    reduzir usando a regra 78 (factor)
    SMALLEQ    reduzir usando a regra 78 (factor)
    GREATEQ    reduzir usando a regra 78 (factor)
    EQUALS     reduzir usando a regra 78 (factor)
    DIFFERENT  reduzir usando a regra 78 (factor)
    SEMIC      reduzir usando a regra 78 (factor)


Estado 120

   55 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR     reduzir usando a regra 55 (binLogicalExp)
    AND    reduzir usando a regra 55 (binLogicalExp)
    SEMIC  reduzir usando a regra 55 (binLogicalExp)


Estado 121

   59 relationalExp: relationalExp relationalOp sumExp •
   67 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 171
    SUB  deslocar, e ir ao estado 172

    OR         reduzir usando a regra 59 (relationalExp)
    AND        reduzir usando a regra 59 (relationalExp)
    SMALLER    reduzir usando a regra 59 (relationalExp)
    GREATER    reduzir usando a regra 59 (relationalExp)
    SMALLEQ    reduzir usando a regra 59 (relationalExp)
    GREATEQ    reduzir usando a regra 59 (relationalExp)
    EQUALS     reduzir usando a regra 59 (relationalExp)
    DIFFERENT  reduzir usando a regra 59 (relationalExp)
    SEMIC      reduzir usando a regra 59 (relationalExp)

    sumOp  ir ao estado 97


Estado 122

   67 sumExp: sumExp sumOp mulExp •
   71 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 99
    DIV   deslocar, e ir ao estado 100

    ADD        reduzir usando a regra 67 (sumExp)
    SUB        reduzir usando a regra 67 (sumExp)
    OR         reduzir usando a regra 67 (sumExp)
    AND        reduzir usando a regra 67 (sumExp)
    SMALLER    reduzir usando a regra 67 (sumExp)
    GREATER    reduzir usando a regra 67 (sumExp)
    SMALLEQ    reduzir usando a regra 67 (sumExp)
    GREATEQ    reduzir usando a regra 67 (sumExp)
    EQUALS     reduzir usando a regra 67 (sumExp)
    DIFFERENT  reduzir usando a regra 67 (sumExp)
    SEMIC      reduzir usando a regra 67 (sumExp)

    mulOp  ir ao estado 101


Estado 123

   71 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 71 (mulExp)
    SUB        reduzir usando a regra 71 (mulExp)
    MULT       reduzir usando a regra 71 (mulExp)
    DIV        reduzir usando a regra 71 (mulExp)
    OR         reduzir usando a regra 71 (mulExp)
    AND        reduzir usando a regra 71 (mulExp)
    SMALLER    reduzir usando a regra 71 (mulExp)
    GREATER    reduzir usando a regra 71 (mulExp)
    SMALLEQ    reduzir usando a regra 71 (mulExp)
    GREATEQ    reduzir usando a regra 71 (mulExp)
    EQUALS     reduzir usando a regra 71 (mulExp)
    DIFFERENT  reduzir usando a regra 71 (mulExp)
    SEMIC      reduzir usando a regra 71 (mulExp)


Estado 124

   42 mapFilterOps: fCall FILTER ID • SEMIC

    SEMIC  deslocar, e ir ao estado 135


Estado 125

   41 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 136


Estado 126

   36 appendOps: ID APPEND ID SEMIC •

    ID           reduzir usando a regra 36 (appendOps)
    TYPE         reduzir usando a regra 36 (appendOps)
    NIL          reduzir usando a regra 36 (appendOps)
    INTEGER      reduzir usando a regra 36 (appendOps)
    DECIMAL      reduzir usando a regra 36 (appendOps)
    ADD          reduzir usando a regra 36 (appendOps)
    SUB          reduzir usando a regra 36 (appendOps)
    HEADLIST     reduzir usando a regra 36 (appendOps)
    TAILLIST     reduzir usando a regra 36 (appendOps)
    DESTROYHEAD  reduzir usando a regra 36 (appendOps)
    IF           reduzir usando a regra 36 (appendOps)
    FOR          reduzir usando a regra 36 (appendOps)
    READ         reduzir usando a regra 36 (appendOps)
    WRITE        reduzir usando a regra 36 (appendOps)
    WRITELN      reduzir usando a regra 36 (appendOps)
    RETURN       reduzir usando a regra 36 (appendOps)
    STFUNC       reduzir usando a regra 36 (appendOps)
    ENDFUNC      reduzir usando a regra 36 (appendOps)
    PARENL       reduzir usando a regra 36 (appendOps)


Estado 127

   82 callParams: callParams COMMA • simpleExp

    ID       deslocar, e ir ao estado 174
    NIL      deslocar, e ir ao estado 175
    INTEGER  deslocar, e ir ao estado 176
    DECIMAL  deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 178

    simpleExp      ir ao estado 137
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    relationalExp  ir ao estado 181
    sumExp         ir ao estado 182
    sumOp          ir ao estado 183
    mulExp         ir ao estado 184
    factor         ir ao estado 185
    fCall          ir ao estado 186


Estado 128

   80 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 80 (fCall)
    SUB        reduzir usando a regra 80 (fCall)
    MULT       reduzir usando a regra 80 (fCall)
    DIV        reduzir usando a regra 80 (fCall)
    OR         reduzir usando a regra 80 (fCall)
    AND        reduzir usando a regra 80 (fCall)
    SMALLER    reduzir usando a regra 80 (fCall)
    GREATER    reduzir usando a regra 80 (fCall)
    SMALLEQ    reduzir usando a regra 80 (fCall)
    GREATEQ    reduzir usando a regra 80 (fCall)
    EQUALS     reduzir usando a regra 80 (fCall)
    DIFFERENT  reduzir usando a regra 80 (fCall)
    FILTER     reduzir usando a regra 80 (fCall)
    MAP        reduzir usando a regra 80 (fCall)
    SEMIC      reduzir usando a regra 80 (fCall)


Estado 129

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 195
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 196
    IF           deslocar, e ir ao estado 197
    FOR          deslocar, e ir ao estado 198
    READ         deslocar, e ir ao estado 199
    WRITE        deslocar, e ir ao estado 200
    WRITELN      deslocar, e ir ao estado 201
    RETURN       deslocar, e ir ao estado 202
    STFUNC       deslocar, e ir ao estado 203
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 204
    simpleVarDeclaration  ir ao estado 205
    compoundStmt          ir ao estado 206
    primitiveStmt         ir ao estado 138
    exprStmt              ir ao estado 207
    condStmt              ir ao estado 208
    iterStmt              ir ao estado 209
    returnStmt            ir ao estado 210
    listStmt              ir ao estado 211
    appendOps             ir ao estado 212
    returnListOps         ir ao estado 213
    returnListOp          ir ao estado 214
    destroyHeadOps        ir ao estado 215
    mapFilterOps          ir ao estado 216
    expression            ir ao estado 217
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 218
    outOp                 ir ao estado 219
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 220


Estado 130

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 173
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    simpleExp      ir ao estado 139
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 131

   30 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 173
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    simpleExp      ir ao estado 140
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 132

   50 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 141


Estado 133

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 142


Estado 134

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 143


Estado 135

   42 mapFilterOps: fCall FILTER ID SEMIC •

    ID           reduzir usando a regra 42 (mapFilterOps)
    TYPE         reduzir usando a regra 42 (mapFilterOps)
    NIL          reduzir usando a regra 42 (mapFilterOps)
    INTEGER      reduzir usando a regra 42 (mapFilterOps)
    DECIMAL      reduzir usando a regra 42 (mapFilterOps)
    ADD          reduzir usando a regra 42 (mapFilterOps)
    SUB          reduzir usando a regra 42 (mapFilterOps)
    HEADLIST     reduzir usando a regra 42 (mapFilterOps)
    TAILLIST     reduzir usando a regra 42 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 42 (mapFilterOps)
    IF           reduzir usando a regra 42 (mapFilterOps)
    FOR          reduzir usando a regra 42 (mapFilterOps)
    READ         reduzir usando a regra 42 (mapFilterOps)
    WRITE        reduzir usando a regra 42 (mapFilterOps)
    WRITELN      reduzir usando a regra 42 (mapFilterOps)
    RETURN       reduzir usando a regra 42 (mapFilterOps)
    STFUNC       reduzir usando a regra 42 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 42 (mapFilterOps)
    PARENL       reduzir usando a regra 42 (mapFilterOps)


Estado 136

   41 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 41 (mapFilterOps)
    TYPE         reduzir usando a regra 41 (mapFilterOps)
    NIL          reduzir usando a regra 41 (mapFilterOps)
    INTEGER      reduzir usando a regra 41 (mapFilterOps)
    DECIMAL      reduzir usando a regra 41 (mapFilterOps)
    ADD          reduzir usando a regra 41 (mapFilterOps)
    SUB          reduzir usando a regra 41 (mapFilterOps)
    HEADLIST     reduzir usando a regra 41 (mapFilterOps)
    TAILLIST     reduzir usando a regra 41 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 41 (mapFilterOps)
    IF           reduzir usando a regra 41 (mapFilterOps)
    FOR          reduzir usando a regra 41 (mapFilterOps)
    READ         reduzir usando a regra 41 (mapFilterOps)
    WRITE        reduzir usando a regra 41 (mapFilterOps)
    WRITELN      reduzir usando a regra 41 (mapFilterOps)
    RETURN       reduzir usando a regra 41 (mapFilterOps)
    STFUNC       reduzir usando a regra 41 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 41 (mapFilterOps)
    PARENL       reduzir usando a regra 41 (mapFilterOps)


Estado 137

   82 callParams: callParams COMMA simpleExp •

    COMMA   reduzir usando a regra 82 (callParams)
    PARENR  reduzir usando a regra 82 (callParams)


Estado 138

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 144

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 139

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 145


Estado 140

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 146


Estado 141

   50 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 50 (inOp)
    TYPE         reduzir usando a regra 50 (inOp)
    NIL          reduzir usando a regra 50 (inOp)
    INTEGER      reduzir usando a regra 50 (inOp)
    DECIMAL      reduzir usando a regra 50 (inOp)
    ADD          reduzir usando a regra 50 (inOp)
    SUB          reduzir usando a regra 50 (inOp)
    HEADLIST     reduzir usando a regra 50 (inOp)
    TAILLIST     reduzir usando a regra 50 (inOp)
    DESTROYHEAD  reduzir usando a regra 50 (inOp)
    IF           reduzir usando a regra 50 (inOp)
    FOR          reduzir usando a regra 50 (inOp)
    READ         reduzir usando a regra 50 (inOp)
    WRITE        reduzir usando a regra 50 (inOp)
    WRITELN      reduzir usando a regra 50 (inOp)
    RETURN       reduzir usando a regra 50 (inOp)
    STFUNC       reduzir usando a regra 50 (inOp)
    ENDFUNC      reduzir usando a regra 50 (inOp)
    PARENL       reduzir usando a regra 50 (inOp)


Estado 142

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 143

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 52 (outOp)
    TYPE         reduzir usando a regra 52 (outOp)
    NIL          reduzir usando a regra 52 (outOp)
    INTEGER      reduzir usando a regra 52 (outOp)
    DECIMAL      reduzir usando a regra 52 (outOp)
    ADD          reduzir usando a regra 52 (outOp)
    SUB          reduzir usando a regra 52 (outOp)
    HEADLIST     reduzir usando a regra 52 (outOp)
    TAILLIST     reduzir usando a regra 52 (outOp)
    DESTROYHEAD  reduzir usando a regra 52 (outOp)
    IF           reduzir usando a regra 52 (outOp)
    FOR          reduzir usando a regra 52 (outOp)
    READ         reduzir usando a regra 52 (outOp)
    WRITE        reduzir usando a regra 52 (outOp)
    WRITELN      reduzir usando a regra 52 (outOp)
    RETURN       reduzir usando a regra 52 (outOp)
    STFUNC       reduzir usando a regra 52 (outOp)
    ENDFUNC      reduzir usando a regra 52 (outOp)
    PARENL       reduzir usando a regra 52 (outOp)


Estado 144

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 25
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 147
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 145

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 148

    assignExp  ir ao estado 149


Estado 146

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 148

    assignExp  ir ao estado 150


Estado 147

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 148

   45 assignExp: ID • ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 221


Estado 149

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 151


Estado 150

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 152


Estado 151

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 25
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 153
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 152

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 25
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 154
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 153

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)


Estado 154

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)


Estado 155

   10 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  deslocar, e ir ao estado 222


Estado 156

    9 simpleVarDeclaration: TYPE • ID
   10                     | TYPE • LISTTYPE ID

    ID        deslocar, e ir ao estado 223
    LISTTYPE  deslocar, e ir ao estado 9


Estado 157

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 25
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 42
    stmtList              ir ao estado 224
    primitiveStmt         ir ao estado 44
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 158

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 225


Estado 159

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 160

   47 constOp: INTEGER •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 161

   48 constOp: DECIMAL •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 162

   78 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 81
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    simpleExp      ir ao estado 226
    constOp        ir ao estado 163
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 163

   79 factor: constOp •

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 164

   46 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   deslocar, e ir ao estado 87
    AND  deslocar, e ir ao estado 88

    PARENR  reduzir usando a regra 46 (simpleExp)

    binLogicalOp  ir ao estado 227


Estado 165

   56 binLogicalExp: relationalExp •
   59 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 90
    GREATER    deslocar, e ir ao estado 91
    SMALLEQ    deslocar, e ir ao estado 92
    GREATEQ    deslocar, e ir ao estado 93
    EQUALS     deslocar, e ir ao estado 94
    DIFFERENT  deslocar, e ir ao estado 95

    OR      reduzir usando a regra 56 (binLogicalExp)
    AND     reduzir usando a regra 56 (binLogicalExp)
    PARENR  reduzir usando a regra 56 (binLogicalExp)

    relationalOp  ir ao estado 228


Estado 166

   60 relationalExp: sumExp •
   67 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 171
    SUB  deslocar, e ir ao estado 172

    OR         reduzir usando a regra 60 (relationalExp)
    AND        reduzir usando a regra 60 (relationalExp)
    SMALLER    reduzir usando a regra 60 (relationalExp)
    GREATER    reduzir usando a regra 60 (relationalExp)
    SMALLEQ    reduzir usando a regra 60 (relationalExp)
    GREATEQ    reduzir usando a regra 60 (relationalExp)
    EQUALS     reduzir usando a regra 60 (relationalExp)
    DIFFERENT  reduzir usando a regra 60 (relationalExp)
    PARENR     reduzir usando a regra 60 (relationalExp)

    sumOp  ir ao estado 229


Estado 167

   73 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 81
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    PARENL   deslocar, e ir ao estado 162

    constOp  ir ao estado 163
    factor   ir ao estado 230
    fCall    ir ao estado 170


Estado 168

   68 sumExp: mulExp •
   71 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 99
    DIV   deslocar, e ir ao estado 100

    ADD        reduzir usando a regra 68 (sumExp)
    SUB        reduzir usando a regra 68 (sumExp)
    OR         reduzir usando a regra 68 (sumExp)
    AND        reduzir usando a regra 68 (sumExp)
    SMALLER    reduzir usando a regra 68 (sumExp)
    GREATER    reduzir usando a regra 68 (sumExp)
    SMALLEQ    reduzir usando a regra 68 (sumExp)
    GREATEQ    reduzir usando a regra 68 (sumExp)
    EQUALS     reduzir usando a regra 68 (sumExp)
    DIFFERENT  reduzir usando a regra 68 (sumExp)
    PARENR     reduzir usando a regra 68 (sumExp)

    mulOp  ir ao estado 231


Estado 169

   72 mulExp: factor •

    ADD        reduzir usando a regra 72 (mulExp)
    SUB        reduzir usando a regra 72 (mulExp)
    MULT       reduzir usando a regra 72 (mulExp)
    DIV        reduzir usando a regra 72 (mulExp)
    OR         reduzir usando a regra 72 (mulExp)
    AND        reduzir usando a regra 72 (mulExp)
    SMALLER    reduzir usando a regra 72 (mulExp)
    GREATER    reduzir usando a regra 72 (mulExp)
    SMALLEQ    reduzir usando a regra 72 (mulExp)
    GREATEQ    reduzir usando a regra 72 (mulExp)
    EQUALS     reduzir usando a regra 72 (mulExp)
    DIFFERENT  reduzir usando a regra 72 (mulExp)
    PARENR     reduzir usando a regra 72 (mulExp)


Estado 170

   77 factor: fCall •

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    PARENR     reduzir usando a regra 77 (factor)


Estado 171

   69 sumOp: ADD •

    ID       reduzir usando a regra 69 (sumOp)
    NIL      reduzir usando a regra 69 (sumOp)
    INTEGER  reduzir usando a regra 69 (sumOp)
    DECIMAL  reduzir usando a regra 69 (sumOp)
    ADD      reduzir usando a regra 69 (sumOp)
    SUB      reduzir usando a regra 69 (sumOp)
    PARENL   reduzir usando a regra 69 (sumOp)


Estado 172

   70 sumOp: SUB •

    ID       reduzir usando a regra 70 (sumOp)
    NIL      reduzir usando a regra 70 (sumOp)
    INTEGER  reduzir usando a regra 70 (sumOp)
    DECIMAL  reduzir usando a regra 70 (sumOp)
    ADD      reduzir usando a regra 70 (sumOp)
    SUB      reduzir usando a regra 70 (sumOp)
    PARENL   reduzir usando a regra 70 (sumOp)


Estado 173

   76 factor: ID •
   80 fCall: ID • PARENL callParams PARENR
   81      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 187

    ADD        reduzir usando a regra 76 (factor)
    SUB        reduzir usando a regra 76 (factor)
    MULT       reduzir usando a regra 76 (factor)
    DIV        reduzir usando a regra 76 (factor)
    OR         reduzir usando a regra 76 (factor)
    AND        reduzir usando a regra 76 (factor)
    SMALLER    reduzir usando a regra 76 (factor)
    GREATER    reduzir usando a regra 76 (factor)
    SMALLEQ    reduzir usando a regra 76 (factor)
    GREATEQ    reduzir usando a regra 76 (factor)
    EQUALS     reduzir usando a regra 76 (factor)
    DIFFERENT  reduzir usando a regra 76 (factor)
    SEMIC      reduzir usando a regra 76 (factor)


Estado 174

   76 factor: ID •
   80 fCall: ID • PARENL callParams PARENR
   81      | ID • PARENL PARENR

    PARENL  deslocar, e ir ao estado 232

    ADD        reduzir usando a regra 76 (factor)
    SUB        reduzir usando a regra 76 (factor)
    MULT       reduzir usando a regra 76 (factor)
    DIV        reduzir usando a regra 76 (factor)
    OR         reduzir usando a regra 76 (factor)
    AND        reduzir usando a regra 76 (factor)
    SMALLER    reduzir usando a regra 76 (factor)
    GREATER    reduzir usando a regra 76 (factor)
    SMALLEQ    reduzir usando a regra 76 (factor)
    GREATEQ    reduzir usando a regra 76 (factor)
    EQUALS     reduzir usando a regra 76 (factor)
    DIFFERENT  reduzir usando a regra 76 (factor)
    COMMA      reduzir usando a regra 76 (factor)
    PARENR     reduzir usando a regra 76 (factor)


Estado 175

   49 constOp: NIL •

    ADD        reduzir usando a regra 49 (constOp)
    SUB        reduzir usando a regra 49 (constOp)
    MULT       reduzir usando a regra 49 (constOp)
    DIV        reduzir usando a regra 49 (constOp)
    OR         reduzir usando a regra 49 (constOp)
    AND        reduzir usando a regra 49 (constOp)
    SMALLER    reduzir usando a regra 49 (constOp)
    GREATER    reduzir usando a regra 49 (constOp)
    SMALLEQ    reduzir usando a regra 49 (constOp)
    GREATEQ    reduzir usando a regra 49 (constOp)
    EQUALS     reduzir usando a regra 49 (constOp)
    DIFFERENT  reduzir usando a regra 49 (constOp)
    COMMA      reduzir usando a regra 49 (constOp)
    PARENR     reduzir usando a regra 49 (constOp)


Estado 176

   47 constOp: INTEGER •

    ADD        reduzir usando a regra 47 (constOp)
    SUB        reduzir usando a regra 47 (constOp)
    MULT       reduzir usando a regra 47 (constOp)
    DIV        reduzir usando a regra 47 (constOp)
    OR         reduzir usando a regra 47 (constOp)
    AND        reduzir usando a regra 47 (constOp)
    SMALLER    reduzir usando a regra 47 (constOp)
    GREATER    reduzir usando a regra 47 (constOp)
    SMALLEQ    reduzir usando a regra 47 (constOp)
    GREATEQ    reduzir usando a regra 47 (constOp)
    EQUALS     reduzir usando a regra 47 (constOp)
    DIFFERENT  reduzir usando a regra 47 (constOp)
    COMMA      reduzir usando a regra 47 (constOp)
    PARENR     reduzir usando a regra 47 (constOp)


Estado 177

   48 constOp: DECIMAL •

    ADD        reduzir usando a regra 48 (constOp)
    SUB        reduzir usando a regra 48 (constOp)
    MULT       reduzir usando a regra 48 (constOp)
    DIV        reduzir usando a regra 48 (constOp)
    OR         reduzir usando a regra 48 (constOp)
    AND        reduzir usando a regra 48 (constOp)
    SMALLER    reduzir usando a regra 48 (constOp)
    GREATER    reduzir usando a regra 48 (constOp)
    SMALLEQ    reduzir usando a regra 48 (constOp)
    GREATEQ    reduzir usando a regra 48 (constOp)
    EQUALS     reduzir usando a regra 48 (constOp)
    DIFFERENT  reduzir usando a regra 48 (constOp)
    COMMA      reduzir usando a regra 48 (constOp)
    PARENR     reduzir usando a regra 48 (constOp)


Estado 178

   78 factor: PARENL • simpleExp PARENR

    ID       deslocar, e ir ao estado 81
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    simpleExp      ir ao estado 233
    constOp        ir ao estado 163
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 179

   79 factor: constOp •

    ADD        reduzir usando a regra 79 (factor)
    SUB        reduzir usando a regra 79 (factor)
    MULT       reduzir usando a regra 79 (factor)
    DIV        reduzir usando a regra 79 (factor)
    OR         reduzir usando a regra 79 (factor)
    AND        reduzir usando a regra 79 (factor)
    SMALLER    reduzir usando a regra 79 (factor)
    GREATER    reduzir usando a regra 79 (factor)
    SMALLEQ    reduzir usando a regra 79 (factor)
    GREATEQ    reduzir usando a regra 79 (factor)
    EQUALS     reduzir usando a regra 79 (factor)
    DIFFERENT  reduzir usando a regra 79 (factor)
    COMMA      reduzir usando a regra 79 (factor)
    PARENR     reduzir usando a regra 79 (factor)


Estado 180

   46 simpleExp: binLogicalExp •
   55 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   deslocar, e ir ao estado 87
    AND  deslocar, e ir ao estado 88

    COMMA   reduzir usando a regra 46 (simpleExp)
    PARENR  reduzir usando a regra 46 (simpleExp)

    binLogicalOp  ir ao estado 234


Estado 181

   56 binLogicalExp: relationalExp •
   59 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    deslocar, e ir ao estado 90
    GREATER    deslocar, e ir ao estado 91
    SMALLEQ    deslocar, e ir ao estado 92
    GREATEQ    deslocar, e ir ao estado 93
    EQUALS     deslocar, e ir ao estado 94
    DIFFERENT  deslocar, e ir ao estado 95

    OR      reduzir usando a regra 56 (binLogicalExp)
    AND     reduzir usando a regra 56 (binLogicalExp)
    COMMA   reduzir usando a regra 56 (binLogicalExp)
    PARENR  reduzir usando a regra 56 (binLogicalExp)

    relationalOp  ir ao estado 235


Estado 182

   60 relationalExp: sumExp •
   67 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 171
    SUB  deslocar, e ir ao estado 172

    OR         reduzir usando a regra 60 (relationalExp)
    AND        reduzir usando a regra 60 (relationalExp)
    SMALLER    reduzir usando a regra 60 (relationalExp)
    GREATER    reduzir usando a regra 60 (relationalExp)
    SMALLEQ    reduzir usando a regra 60 (relationalExp)
    GREATEQ    reduzir usando a regra 60 (relationalExp)
    EQUALS     reduzir usando a regra 60 (relationalExp)
    DIFFERENT  reduzir usando a regra 60 (relationalExp)
    COMMA      reduzir usando a regra 60 (relationalExp)
    PARENR     reduzir usando a regra 60 (relationalExp)

    sumOp  ir ao estado 236


Estado 183

   73 mulExp: sumOp • factor

    ID       deslocar, e ir ao estado 174
    NIL      deslocar, e ir ao estado 175
    INTEGER  deslocar, e ir ao estado 176
    DECIMAL  deslocar, e ir ao estado 177
    PARENL   deslocar, e ir ao estado 178

    constOp  ir ao estado 179
    factor   ir ao estado 237
    fCall    ir ao estado 186


Estado 184

   68 sumExp: mulExp •
   71 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 99
    DIV   deslocar, e ir ao estado 100

    ADD        reduzir usando a regra 68 (sumExp)
    SUB        reduzir usando a regra 68 (sumExp)
    OR         reduzir usando a regra 68 (sumExp)
    AND        reduzir usando a regra 68 (sumExp)
    SMALLER    reduzir usando a regra 68 (sumExp)
    GREATER    reduzir usando a regra 68 (sumExp)
    SMALLEQ    reduzir usando a regra 68 (sumExp)
    GREATEQ    reduzir usando a regra 68 (sumExp)
    EQUALS     reduzir usando a regra 68 (sumExp)
    DIFFERENT  reduzir usando a regra 68 (sumExp)
    COMMA      reduzir usando a regra 68 (sumExp)
    PARENR     reduzir usando a regra 68 (sumExp)

    mulOp  ir ao estado 238


Estado 185

   72 mulExp: factor •

    ADD        reduzir usando a regra 72 (mulExp)
    SUB        reduzir usando a regra 72 (mulExp)
    MULT       reduzir usando a regra 72 (mulExp)
    DIV        reduzir usando a regra 72 (mulExp)
    OR         reduzir usando a regra 72 (mulExp)
    AND        reduzir usando a regra 72 (mulExp)
    SMALLER    reduzir usando a regra 72 (mulExp)
    GREATER    reduzir usando a regra 72 (mulExp)
    SMALLEQ    reduzir usando a regra 72 (mulExp)
    GREATEQ    reduzir usando a regra 72 (mulExp)
    EQUALS     reduzir usando a regra 72 (mulExp)
    DIFFERENT  reduzir usando a regra 72 (mulExp)
    COMMA      reduzir usando a regra 72 (mulExp)
    PARENR     reduzir usando a regra 72 (mulExp)


Estado 186

   77 factor: fCall •

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    COMMA      reduzir usando a regra 77 (factor)
    PARENR     reduzir usando a regra 77 (factor)


Estado 187

   80 fCall: ID PARENL • callParams PARENR
   81      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 174
    NIL      deslocar, e ir ao estado 175
    INTEGER  deslocar, e ir ao estado 176
    DECIMAL  deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 178
    PARENR   deslocar, e ir ao estado 239

    simpleExp      ir ao estado 107
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    relationalExp  ir ao estado 181
    sumExp         ir ao estado 182
    sumOp          ir ao estado 183
    mulExp         ir ao estado 184
    factor         ir ao estado 185
    fCall          ir ao estado 186
    callParams     ir ao estado 240


Estado 188

   80 fCall: ID PARENL • callParams PARENR
   81      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 174
    NIL      deslocar, e ir ao estado 175
    INTEGER  deslocar, e ir ao estado 176
    DECIMAL  deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 178
    PARENR   deslocar, e ir ao estado 241

    simpleExp      ir ao estado 107
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    relationalExp  ir ao estado 181
    sumExp         ir ao estado 182
    sumOp          ir ao estado 183
    mulExp         ir ao estado 184
    factor         ir ao estado 185
    fCall          ir ao estado 186
    callParams     ir ao estado 242


Estado 189

   61 relationalOp: SMALLER •

    OR     reduzir usando a regra 61 (relationalOp)
    AND    reduzir usando a regra 61 (relationalOp)
    SEMIC  reduzir usando a regra 61 (relationalOp)


Estado 190

   62 relationalOp: GREATER •

    OR     reduzir usando a regra 62 (relationalOp)
    AND    reduzir usando a regra 62 (relationalOp)
    SEMIC  reduzir usando a regra 62 (relationalOp)


Estado 191

   63 relationalOp: SMALLEQ •

    OR     reduzir usando a regra 63 (relationalOp)
    AND    reduzir usando a regra 63 (relationalOp)
    SEMIC  reduzir usando a regra 63 (relationalOp)


Estado 192

   64 relationalOp: GREATEQ •

    OR     reduzir usando a regra 64 (relationalOp)
    AND    reduzir usando a regra 64 (relationalOp)
    SEMIC  reduzir usando a regra 64 (relationalOp)


Estado 193

   65 relationalOp: EQUALS •

    OR     reduzir usando a regra 65 (relationalOp)
    AND    reduzir usando a regra 65 (relationalOp)
    SEMIC  reduzir usando a regra 65 (relationalOp)


Estado 194

   66 relationalOp: DIFFERENT •

    OR     reduzir usando a regra 66 (relationalOp)
    AND    reduzir usando a regra 66 (relationalOp)
    SEMIC  reduzir usando a regra 66 (relationalOp)


Estado 195

   36 appendOps: ID • APPEND ID SEMIC
   45 assignExp: ID • ASSIGN expression
   76 factor: ID •
   80 fCall: ID • PARENL callParams PARENR
   81      | ID • PARENL PARENR

    APPEND  deslocar, e ir ao estado 243
    ASSIGN  deslocar, e ir ao estado 70
    PARENL  deslocar, e ir ao estado 71

    ADD        reduzir usando a regra 76 (factor)
    SUB        reduzir usando a regra 76 (factor)
    MULT       reduzir usando a regra 76 (factor)
    DIV        reduzir usando a regra 76 (factor)
    OR         reduzir usando a regra 76 (factor)
    AND        reduzir usando a regra 76 (factor)
    SMALLER    reduzir usando a regra 76 (factor)
    GREATER    reduzir usando a regra 76 (factor)
    SMALLEQ    reduzir usando a regra 76 (factor)
    GREATEQ    reduzir usando a regra 76 (factor)
    EQUALS     reduzir usando a regra 76 (factor)
    DIFFERENT  reduzir usando a regra 76 (factor)
    SEMIC      reduzir usando a regra 76 (factor)


Estado 196

   40 destroyHeadOps: DESTROYHEAD • ID SEMIC

    ID  deslocar, e ir ao estado 244


Estado 197

   27 condStmt: IF • PARENL simpleExp PARENR primitiveStmt
   28         | IF • PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt

    PARENL  deslocar, e ir ao estado 245


Estado 198

   29 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  deslocar, e ir ao estado 246


Estado 199

   50 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  deslocar, e ir ao estado 247


Estado 200

   51 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 248


Estado 201

   52 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  deslocar, e ir ao estado 249


Estado 202

   31 returnStmt: RETURN • expression SEMIC

    ID       deslocar, e ir ao estado 78
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    expression     ir ao estado 250
    assignExp      ir ao estado 56
    simpleExp      ir ao estado 57
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 203

   14 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           deslocar, e ir ao estado 25
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 157
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 42
    stmtList              ir ao estado 251
    primitiveStmt         ir ao estado 44
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 204

   25 primitiveStmt: varDeclaration •

    ID           reduzir usando a regra 25 (primitiveStmt)
    TYPE         reduzir usando a regra 25 (primitiveStmt)
    NIL          reduzir usando a regra 25 (primitiveStmt)
    INTEGER      reduzir usando a regra 25 (primitiveStmt)
    DECIMAL      reduzir usando a regra 25 (primitiveStmt)
    ADD          reduzir usando a regra 25 (primitiveStmt)
    SUB          reduzir usando a regra 25 (primitiveStmt)
    HEADLIST     reduzir usando a regra 25 (primitiveStmt)
    TAILLIST     reduzir usando a regra 25 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 25 (primitiveStmt)
    ELSE         reduzir usando a regra 25 (primitiveStmt)
    IF           reduzir usando a regra 25 (primitiveStmt)
    FOR          reduzir usando a regra 25 (primitiveStmt)
    READ         reduzir usando a regra 25 (primitiveStmt)
    WRITE        reduzir usando a regra 25 (primitiveStmt)
    WRITELN      reduzir usando a regra 25 (primitiveStmt)
    RETURN       reduzir usando a regra 25 (primitiveStmt)
    STFUNC       reduzir usando a regra 25 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 25 (primitiveStmt)
    PARENL       reduzir usando a regra 25 (primitiveStmt)


Estado 205

    6 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  deslocar, e ir ao estado 252


Estado 206

   18 primitiveStmt: compoundStmt •

    ID           reduzir usando a regra 18 (primitiveStmt)
    TYPE         reduzir usando a regra 18 (primitiveStmt)
    NIL          reduzir usando a regra 18 (primitiveStmt)
    INTEGER      reduzir usando a regra 18 (primitiveStmt)
    DECIMAL      reduzir usando a regra 18 (primitiveStmt)
    ADD          reduzir usando a regra 18 (primitiveStmt)
    SUB          reduzir usando a regra 18 (primitiveStmt)
    HEADLIST     reduzir usando a regra 18 (primitiveStmt)
    TAILLIST     reduzir usando a regra 18 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 18 (primitiveStmt)
    ELSE         reduzir usando a regra 18 (primitiveStmt)
    IF           reduzir usando a regra 18 (primitiveStmt)
    FOR          reduzir usando a regra 18 (primitiveStmt)
    READ         reduzir usando a regra 18 (primitiveStmt)
    WRITE        reduzir usando a regra 18 (primitiveStmt)
    WRITELN      reduzir usando a regra 18 (primitiveStmt)
    RETURN       reduzir usando a regra 18 (primitiveStmt)
    STFUNC       reduzir usando a regra 18 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 18 (primitiveStmt)
    PARENL       reduzir usando a regra 18 (primitiveStmt)


Estado 207

   17 primitiveStmt: exprStmt •

    ID           reduzir usando a regra 17 (primitiveStmt)
    TYPE         reduzir usando a regra 17 (primitiveStmt)
    NIL          reduzir usando a regra 17 (primitiveStmt)
    INTEGER      reduzir usando a regra 17 (primitiveStmt)
    DECIMAL      reduzir usando a regra 17 (primitiveStmt)
    ADD          reduzir usando a regra 17 (primitiveStmt)
    SUB          reduzir usando a regra 17 (primitiveStmt)
    HEADLIST     reduzir usando a regra 17 (primitiveStmt)
    TAILLIST     reduzir usando a regra 17 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 17 (primitiveStmt)
    ELSE         reduzir usando a regra 17 (primitiveStmt)
    IF           reduzir usando a regra 17 (primitiveStmt)
    FOR          reduzir usando a regra 17 (primitiveStmt)
    READ         reduzir usando a regra 17 (primitiveStmt)
    WRITE        reduzir usando a regra 17 (primitiveStmt)
    WRITELN      reduzir usando a regra 17 (primitiveStmt)
    RETURN       reduzir usando a regra 17 (primitiveStmt)
    STFUNC       reduzir usando a regra 17 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 17 (primitiveStmt)
    PARENL       reduzir usando a regra 17 (primitiveStmt)


Estado 208

   19 primitiveStmt: condStmt •

    ID           reduzir usando a regra 19 (primitiveStmt)
    TYPE         reduzir usando a regra 19 (primitiveStmt)
    NIL          reduzir usando a regra 19 (primitiveStmt)
    INTEGER      reduzir usando a regra 19 (primitiveStmt)
    DECIMAL      reduzir usando a regra 19 (primitiveStmt)
    ADD          reduzir usando a regra 19 (primitiveStmt)
    SUB          reduzir usando a regra 19 (primitiveStmt)
    HEADLIST     reduzir usando a regra 19 (primitiveStmt)
    TAILLIST     reduzir usando a regra 19 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 19 (primitiveStmt)
    ELSE         reduzir usando a regra 19 (primitiveStmt)
    IF           reduzir usando a regra 19 (primitiveStmt)
    FOR          reduzir usando a regra 19 (primitiveStmt)
    READ         reduzir usando a regra 19 (primitiveStmt)
    WRITE        reduzir usando a regra 19 (primitiveStmt)
    WRITELN      reduzir usando a regra 19 (primitiveStmt)
    RETURN       reduzir usando a regra 19 (primitiveStmt)
    STFUNC       reduzir usando a regra 19 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 19 (primitiveStmt)
    PARENL       reduzir usando a regra 19 (primitiveStmt)


Estado 209

   20 primitiveStmt: iterStmt •

    ID           reduzir usando a regra 20 (primitiveStmt)
    TYPE         reduzir usando a regra 20 (primitiveStmt)
    NIL          reduzir usando a regra 20 (primitiveStmt)
    INTEGER      reduzir usando a regra 20 (primitiveStmt)
    DECIMAL      reduzir usando a regra 20 (primitiveStmt)
    ADD          reduzir usando a regra 20 (primitiveStmt)
    SUB          reduzir usando a regra 20 (primitiveStmt)
    HEADLIST     reduzir usando a regra 20 (primitiveStmt)
    TAILLIST     reduzir usando a regra 20 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 20 (primitiveStmt)
    ELSE         reduzir usando a regra 20 (primitiveStmt)
    IF           reduzir usando a regra 20 (primitiveStmt)
    FOR          reduzir usando a regra 20 (primitiveStmt)
    READ         reduzir usando a regra 20 (primitiveStmt)
    WRITE        reduzir usando a regra 20 (primitiveStmt)
    WRITELN      reduzir usando a regra 20 (primitiveStmt)
    RETURN       reduzir usando a regra 20 (primitiveStmt)
    STFUNC       reduzir usando a regra 20 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 20 (primitiveStmt)
    PARENL       reduzir usando a regra 20 (primitiveStmt)


Estado 210

   21 primitiveStmt: returnStmt •

    ID           reduzir usando a regra 21 (primitiveStmt)
    TYPE         reduzir usando a regra 21 (primitiveStmt)
    NIL          reduzir usando a regra 21 (primitiveStmt)
    INTEGER      reduzir usando a regra 21 (primitiveStmt)
    DECIMAL      reduzir usando a regra 21 (primitiveStmt)
    ADD          reduzir usando a regra 21 (primitiveStmt)
    SUB          reduzir usando a regra 21 (primitiveStmt)
    HEADLIST     reduzir usando a regra 21 (primitiveStmt)
    TAILLIST     reduzir usando a regra 21 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 21 (primitiveStmt)
    ELSE         reduzir usando a regra 21 (primitiveStmt)
    IF           reduzir usando a regra 21 (primitiveStmt)
    FOR          reduzir usando a regra 21 (primitiveStmt)
    READ         reduzir usando a regra 21 (primitiveStmt)
    WRITE        reduzir usando a regra 21 (primitiveStmt)
    WRITELN      reduzir usando a regra 21 (primitiveStmt)
    RETURN       reduzir usando a regra 21 (primitiveStmt)
    STFUNC       reduzir usando a regra 21 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 21 (primitiveStmt)
    PARENL       reduzir usando a regra 21 (primitiveStmt)


Estado 211

   22 primitiveStmt: listStmt •

    ID           reduzir usando a regra 22 (primitiveStmt)
    TYPE         reduzir usando a regra 22 (primitiveStmt)
    NIL          reduzir usando a regra 22 (primitiveStmt)
    INTEGER      reduzir usando a regra 22 (primitiveStmt)
    DECIMAL      reduzir usando a regra 22 (primitiveStmt)
    ADD          reduzir usando a regra 22 (primitiveStmt)
    SUB          reduzir usando a regra 22 (primitiveStmt)
    HEADLIST     reduzir usando a regra 22 (primitiveStmt)
    TAILLIST     reduzir usando a regra 22 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 22 (primitiveStmt)
    ELSE         reduzir usando a regra 22 (primitiveStmt)
    IF           reduzir usando a regra 22 (primitiveStmt)
    FOR          reduzir usando a regra 22 (primitiveStmt)
    READ         reduzir usando a regra 22 (primitiveStmt)
    WRITE        reduzir usando a regra 22 (primitiveStmt)
    WRITELN      reduzir usando a regra 22 (primitiveStmt)
    RETURN       reduzir usando a regra 22 (primitiveStmt)
    STFUNC       reduzir usando a regra 22 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 22 (primitiveStmt)
    PARENL       reduzir usando a regra 22 (primitiveStmt)


Estado 212

   32 listStmt: appendOps •

    ID           reduzir usando a regra 32 (listStmt)
    TYPE         reduzir usando a regra 32 (listStmt)
    NIL          reduzir usando a regra 32 (listStmt)
    INTEGER      reduzir usando a regra 32 (listStmt)
    DECIMAL      reduzir usando a regra 32 (listStmt)
    ADD          reduzir usando a regra 32 (listStmt)
    SUB          reduzir usando a regra 32 (listStmt)
    HEADLIST     reduzir usando a regra 32 (listStmt)
    TAILLIST     reduzir usando a regra 32 (listStmt)
    DESTROYHEAD  reduzir usando a regra 32 (listStmt)
    ELSE         reduzir usando a regra 32 (listStmt)
    IF           reduzir usando a regra 32 (listStmt)
    FOR          reduzir usando a regra 32 (listStmt)
    READ         reduzir usando a regra 32 (listStmt)
    WRITE        reduzir usando a regra 32 (listStmt)
    WRITELN      reduzir usando a regra 32 (listStmt)
    RETURN       reduzir usando a regra 32 (listStmt)
    STFUNC       reduzir usando a regra 32 (listStmt)
    ENDFUNC      reduzir usando a regra 32 (listStmt)
    PARENL       reduzir usando a regra 32 (listStmt)


Estado 213

   33 listStmt: returnListOps •

    ID           reduzir usando a regra 33 (listStmt)
    TYPE         reduzir usando a regra 33 (listStmt)
    NIL          reduzir usando a regra 33 (listStmt)
    INTEGER      reduzir usando a regra 33 (listStmt)
    DECIMAL      reduzir usando a regra 33 (listStmt)
    ADD          reduzir usando a regra 33 (listStmt)
    SUB          reduzir usando a regra 33 (listStmt)
    HEADLIST     reduzir usando a regra 33 (listStmt)
    TAILLIST     reduzir usando a regra 33 (listStmt)
    DESTROYHEAD  reduzir usando a regra 33 (listStmt)
    ELSE         reduzir usando a regra 33 (listStmt)
    IF           reduzir usando a regra 33 (listStmt)
    FOR          reduzir usando a regra 33 (listStmt)
    READ         reduzir usando a regra 33 (listStmt)
    WRITE        reduzir usando a regra 33 (listStmt)
    WRITELN      reduzir usando a regra 33 (listStmt)
    RETURN       reduzir usando a regra 33 (listStmt)
    STFUNC       reduzir usando a regra 33 (listStmt)
    ENDFUNC      reduzir usando a regra 33 (listStmt)
    PARENL       reduzir usando a regra 33 (listStmt)


Estado 214

   37 returnListOps: returnListOp • ID

    ID  deslocar, e ir ao estado 253


Estado 215

   34 listStmt: destroyHeadOps •

    ID           reduzir usando a regra 34 (listStmt)
    TYPE         reduzir usando a regra 34 (listStmt)
    NIL          reduzir usando a regra 34 (listStmt)
    INTEGER      reduzir usando a regra 34 (listStmt)
    DECIMAL      reduzir usando a regra 34 (listStmt)
    ADD          reduzir usando a regra 34 (listStmt)
    SUB          reduzir usando a regra 34 (listStmt)
    HEADLIST     reduzir usando a regra 34 (listStmt)
    TAILLIST     reduzir usando a regra 34 (listStmt)
    DESTROYHEAD  reduzir usando a regra 34 (listStmt)
    ELSE         reduzir usando a regra 34 (listStmt)
    IF           reduzir usando a regra 34 (listStmt)
    FOR          reduzir usando a regra 34 (listStmt)
    READ         reduzir usando a regra 34 (listStmt)
    WRITE        reduzir usando a regra 34 (listStmt)
    WRITELN      reduzir usando a regra 34 (listStmt)
    RETURN       reduzir usando a regra 34 (listStmt)
    STFUNC       reduzir usando a regra 34 (listStmt)
    ENDFUNC      reduzir usando a regra 34 (listStmt)
    PARENL       reduzir usando a regra 34 (listStmt)


Estado 216

   35 listStmt: mapFilterOps •

    ID           reduzir usando a regra 35 (listStmt)
    TYPE         reduzir usando a regra 35 (listStmt)
    NIL          reduzir usando a regra 35 (listStmt)
    INTEGER      reduzir usando a regra 35 (listStmt)
    DECIMAL      reduzir usando a regra 35 (listStmt)
    ADD          reduzir usando a regra 35 (listStmt)
    SUB          reduzir usando a regra 35 (listStmt)
    HEADLIST     reduzir usando a regra 35 (listStmt)
    TAILLIST     reduzir usando a regra 35 (listStmt)
    DESTROYHEAD  reduzir usando a regra 35 (listStmt)
    ELSE         reduzir usando a regra 35 (listStmt)
    IF           reduzir usando a regra 35 (listStmt)
    FOR          reduzir usando a regra 35 (listStmt)
    READ         reduzir usando a regra 35 (listStmt)
    WRITE        reduzir usando a regra 35 (listStmt)
    WRITELN      reduzir usando a regra 35 (listStmt)
    RETURN       reduzir usando a regra 35 (listStmt)
    STFUNC       reduzir usando a regra 35 (listStmt)
    ENDFUNC      reduzir usando a regra 35 (listStmt)
    PARENL       reduzir usando a regra 35 (listStmt)


Estado 217

   26 exprStmt: expression • SEMIC

    SEMIC  deslocar, e ir ao estado 254


Estado 218

   23 primitiveStmt: inOp •

    ID           reduzir usando a regra 23 (primitiveStmt)
    TYPE         reduzir usando a regra 23 (primitiveStmt)
    NIL          reduzir usando a regra 23 (primitiveStmt)
    INTEGER      reduzir usando a regra 23 (primitiveStmt)
    DECIMAL      reduzir usando a regra 23 (primitiveStmt)
    ADD          reduzir usando a regra 23 (primitiveStmt)
    SUB          reduzir usando a regra 23 (primitiveStmt)
    HEADLIST     reduzir usando a regra 23 (primitiveStmt)
    TAILLIST     reduzir usando a regra 23 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 23 (primitiveStmt)
    ELSE         reduzir usando a regra 23 (primitiveStmt)
    IF           reduzir usando a regra 23 (primitiveStmt)
    FOR          reduzir usando a regra 23 (primitiveStmt)
    READ         reduzir usando a regra 23 (primitiveStmt)
    WRITE        reduzir usando a regra 23 (primitiveStmt)
    WRITELN      reduzir usando a regra 23 (primitiveStmt)
    RETURN       reduzir usando a regra 23 (primitiveStmt)
    STFUNC       reduzir usando a regra 23 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 23 (primitiveStmt)
    PARENL       reduzir usando a regra 23 (primitiveStmt)


Estado 219

   24 primitiveStmt: outOp •

    ID           reduzir usando a regra 24 (primitiveStmt)
    TYPE         reduzir usando a regra 24 (primitiveStmt)
    NIL          reduzir usando a regra 24 (primitiveStmt)
    INTEGER      reduzir usando a regra 24 (primitiveStmt)
    DECIMAL      reduzir usando a regra 24 (primitiveStmt)
    ADD          reduzir usando a regra 24 (primitiveStmt)
    SUB          reduzir usando a regra 24 (primitiveStmt)
    HEADLIST     reduzir usando a regra 24 (primitiveStmt)
    TAILLIST     reduzir usando a regra 24 (primitiveStmt)
    DESTROYHEAD  reduzir usando a regra 24 (primitiveStmt)
    ELSE         reduzir usando a regra 24 (primitiveStmt)
    IF           reduzir usando a regra 24 (primitiveStmt)
    FOR          reduzir usando a regra 24 (primitiveStmt)
    READ         reduzir usando a regra 24 (primitiveStmt)
    WRITE        reduzir usando a regra 24 (primitiveStmt)
    WRITELN      reduzir usando a regra 24 (primitiveStmt)
    RETURN       reduzir usando a regra 24 (primitiveStmt)
    STFUNC       reduzir usando a regra 24 (primitiveStmt)
    ENDFUNC      reduzir usando a regra 24 (primitiveStmt)
    PARENL       reduzir usando a regra 24 (primitiveStmt)


Estado 220

   41 mapFilterOps: fCall • MAP ID SEMIC
   42             | fCall • FILTER ID SEMIC
   77 factor: fCall •

    FILTER  deslocar, e ir ao estado 255
    MAP     deslocar, e ir ao estado 256

    ADD        reduzir usando a regra 77 (factor)
    SUB        reduzir usando a regra 77 (factor)
    MULT       reduzir usando a regra 77 (factor)
    DIV        reduzir usando a regra 77 (factor)
    OR         reduzir usando a regra 77 (factor)
    AND        reduzir usando a regra 77 (factor)
    SMALLER    reduzir usando a regra 77 (factor)
    GREATER    reduzir usando a regra 77 (factor)
    SMALLEQ    reduzir usando a regra 77 (factor)
    GREATEQ    reduzir usando a regra 77 (factor)
    EQUALS     reduzir usando a regra 77 (factor)
    DIFFERENT  reduzir usando a regra 77 (factor)
    SEMIC      reduzir usando a regra 77 (factor)


Estado 221

   45 assignExp: ID ASSIGN • expression

    ID       deslocar, e ir ao estado 257
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    expression     ir ao estado 258
    assignExp      ir ao estado 259
    simpleExp      ir ao estado 260
    constOp        ir ao estado 163
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 222

   10 simpleVarDeclaration: TYPE LISTTYPE ID •

    TYPE    reduzir usando a regra 10 (simpleVarDeclaration)
    PARENR  reduzir usando a regra 10 (simpleVarDeclaration)


Estado 223

    9 simpleVarDeclaration: TYPE ID •

    SEMIC  reduzir usando a regra 9 (simpleVarDeclaration)


Estado 224

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 25
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 157
    ENDFUNC      deslocar, e ir ao estado 261
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 84
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 225

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 226

   78 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 262


Estado 227

   55 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    deslocar, e ir ao estado 263
    GREATER    deslocar, e ir ao estado 264
    SMALLEQ    deslocar, e ir ao estado 265
    GREATEQ    deslocar, e ir ao estado 266
    EQUALS     deslocar, e ir ao estado 267
    DIFFERENT  deslocar, e ir ao estado 268

    relationalOp  ir ao estado 269


Estado 228

   59 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 81
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    constOp  ir ao estado 163
    sumExp   ir ao estado 270
    sumOp    ir ao estado 167
    mulExp   ir ao estado 168
    factor   ir ao estado 169
    fCall    ir ao estado 170


Estado 229

   67 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 81
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    constOp  ir ao estado 163
    sumOp    ir ao estado 167
    mulExp   ir ao estado 271
    factor   ir ao estado 169
    fCall    ir ao estado 170


Estado 230

   73 mulExp: sumOp factor •

    ADD        reduzir usando a regra 73 (mulExp)
    SUB        reduzir usando a regra 73 (mulExp)
    MULT       reduzir usando a regra 73 (mulExp)
    DIV        reduzir usando a regra 73 (mulExp)
    OR         reduzir usando a regra 73 (mulExp)
    AND        reduzir usando a regra 73 (mulExp)
    SMALLER    reduzir usando a regra 73 (mulExp)
    GREATER    reduzir usando a regra 73 (mulExp)
    SMALLEQ    reduzir usando a regra 73 (mulExp)
    GREATEQ    reduzir usando a regra 73 (mulExp)
    EQUALS     reduzir usando a regra 73 (mulExp)
    DIFFERENT  reduzir usando a regra 73 (mulExp)
    PARENR     reduzir usando a regra 73 (mulExp)


Estado 231

   71 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 81
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    PARENL   deslocar, e ir ao estado 162

    constOp  ir ao estado 163
    factor   ir ao estado 272
    fCall    ir ao estado 170


Estado 232

   80 fCall: ID PARENL • callParams PARENR
   81      | ID PARENL • PARENR

    ID       deslocar, e ir ao estado 174
    NIL      deslocar, e ir ao estado 175
    INTEGER  deslocar, e ir ao estado 176
    DECIMAL  deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 178
    PARENR   deslocar, e ir ao estado 273

    simpleExp      ir ao estado 107
    constOp        ir ao estado 179
    binLogicalExp  ir ao estado 180
    relationalExp  ir ao estado 181
    sumExp         ir ao estado 182
    sumOp          ir ao estado 183
    mulExp         ir ao estado 184
    factor         ir ao estado 185
    fCall          ir ao estado 186
    callParams     ir ao estado 274


Estado 233

   78 factor: PARENL simpleExp • PARENR

    PARENR  deslocar, e ir ao estado 275


Estado 234

   55 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    deslocar, e ir ao estado 276
    GREATER    deslocar, e ir ao estado 277
    SMALLEQ    deslocar, e ir ao estado 278
    GREATEQ    deslocar, e ir ao estado 279
    EQUALS     deslocar, e ir ao estado 280
    DIFFERENT  deslocar, e ir ao estado 281

    relationalOp  ir ao estado 282


Estado 235

   59 relationalExp: relationalExp relationalOp • sumExp

    ID       deslocar, e ir ao estado 174
    NIL      deslocar, e ir ao estado 175
    INTEGER  deslocar, e ir ao estado 176
    DECIMAL  deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 178

    constOp  ir ao estado 179
    sumExp   ir ao estado 283
    sumOp    ir ao estado 183
    mulExp   ir ao estado 184
    factor   ir ao estado 185
    fCall    ir ao estado 186


Estado 236

   67 sumExp: sumExp sumOp • mulExp

    ID       deslocar, e ir ao estado 174
    NIL      deslocar, e ir ao estado 175
    INTEGER  deslocar, e ir ao estado 176
    DECIMAL  deslocar, e ir ao estado 177
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 178

    constOp  ir ao estado 179
    sumOp    ir ao estado 183
    mulExp   ir ao estado 284
    factor   ir ao estado 185
    fCall    ir ao estado 186


Estado 237

   73 mulExp: sumOp factor •

    ADD        reduzir usando a regra 73 (mulExp)
    SUB        reduzir usando a regra 73 (mulExp)
    MULT       reduzir usando a regra 73 (mulExp)
    DIV        reduzir usando a regra 73 (mulExp)
    OR         reduzir usando a regra 73 (mulExp)
    AND        reduzir usando a regra 73 (mulExp)
    SMALLER    reduzir usando a regra 73 (mulExp)
    GREATER    reduzir usando a regra 73 (mulExp)
    SMALLEQ    reduzir usando a regra 73 (mulExp)
    GREATEQ    reduzir usando a regra 73 (mulExp)
    EQUALS     reduzir usando a regra 73 (mulExp)
    DIFFERENT  reduzir usando a regra 73 (mulExp)
    COMMA      reduzir usando a regra 73 (mulExp)
    PARENR     reduzir usando a regra 73 (mulExp)


Estado 238

   71 mulExp: mulExp mulOp • factor

    ID       deslocar, e ir ao estado 174
    NIL      deslocar, e ir ao estado 175
    INTEGER  deslocar, e ir ao estado 176
    DECIMAL  deslocar, e ir ao estado 177
    PARENL   deslocar, e ir ao estado 178

    constOp  ir ao estado 179
    factor   ir ao estado 285
    fCall    ir ao estado 186


Estado 239

   81 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 81 (fCall)
    SUB        reduzir usando a regra 81 (fCall)
    MULT       reduzir usando a regra 81 (fCall)
    DIV        reduzir usando a regra 81 (fCall)
    OR         reduzir usando a regra 81 (fCall)
    AND        reduzir usando a regra 81 (fCall)
    SMALLER    reduzir usando a regra 81 (fCall)
    GREATER    reduzir usando a regra 81 (fCall)
    SMALLEQ    reduzir usando a regra 81 (fCall)
    GREATEQ    reduzir usando a regra 81 (fCall)
    EQUALS     reduzir usando a regra 81 (fCall)
    DIFFERENT  reduzir usando a regra 81 (fCall)
    SEMIC      reduzir usando a regra 81 (fCall)


Estado 240

   80 fCall: ID PARENL callParams • PARENR
   82 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 127
    PARENR  deslocar, e ir ao estado 286


Estado 241

   81 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 81 (fCall)
    SUB        reduzir usando a regra 81 (fCall)
    MULT       reduzir usando a regra 81 (fCall)
    DIV        reduzir usando a regra 81 (fCall)
    OR         reduzir usando a regra 81 (fCall)
    AND        reduzir usando a regra 81 (fCall)
    SMALLER    reduzir usando a regra 81 (fCall)
    GREATER    reduzir usando a regra 81 (fCall)
    SMALLEQ    reduzir usando a regra 81 (fCall)
    GREATEQ    reduzir usando a regra 81 (fCall)
    EQUALS     reduzir usando a regra 81 (fCall)
    DIFFERENT  reduzir usando a regra 81 (fCall)
    PARENR     reduzir usando a regra 81 (fCall)


Estado 242

   80 fCall: ID PARENL callParams • PARENR
   82 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 127
    PARENR  deslocar, e ir ao estado 287


Estado 243

   36 appendOps: ID APPEND • ID SEMIC

    ID  deslocar, e ir ao estado 288


Estado 244

   40 destroyHeadOps: DESTROYHEAD ID • SEMIC

    SEMIC  deslocar, e ir ao estado 289


Estado 245

   27 condStmt: IF PARENL • simpleExp PARENR primitiveStmt
   28         | IF PARENL • simpleExp PARENR primitiveStmt ELSE primitiveStmt

    ID       deslocar, e ir ao estado 81
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    simpleExp      ir ao estado 290
    constOp        ir ao estado 163
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 246

   29 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   30         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 78
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    assignExp      ir ao estado 291
    simpleExp      ir ao estado 292
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 247

   50 inOp: READ PARENL • ID PARENR SEMIC

    ID  deslocar, e ir ao estado 293


Estado 248

   51 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 81
    STRING   deslocar, e ir ao estado 114
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    simpleExp      ir ao estado 115
    constOp        ir ao estado 163
    outConst       ir ao estado 294
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 249

   52 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID       deslocar, e ir ao estado 81
    STRING   deslocar, e ir ao estado 114
    NIL      deslocar, e ir ao estado 159
    INTEGER  deslocar, e ir ao estado 160
    DECIMAL  deslocar, e ir ao estado 161
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 162

    simpleExp      ir ao estado 115
    constOp        ir ao estado 163
    outConst       ir ao estado 295
    binLogicalExp  ir ao estado 164
    relationalExp  ir ao estado 165
    sumExp         ir ao estado 166
    sumOp          ir ao estado 167
    mulExp         ir ao estado 168
    factor         ir ao estado 169
    fCall          ir ao estado 170


Estado 250

   31 returnStmt: RETURN expression • SEMIC

    SEMIC  deslocar, e ir ao estado 296


Estado 251

   14 compoundStmt: STFUNC stmtList • ENDFUNC
   15 stmtList: stmtList • primitiveStmt

    ID           deslocar, e ir ao estado 25
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 33
    IF           deslocar, e ir ao estado 34
    FOR          deslocar, e ir ao estado 35
    READ         deslocar, e ir ao estado 36
    WRITE        deslocar, e ir ao estado 37
    WRITELN      deslocar, e ir ao estado 38
    RETURN       deslocar, e ir ao estado 39
    STFUNC       deslocar, e ir ao estado 157
    ENDFUNC      deslocar, e ir ao estado 297
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 41
    simpleVarDeclaration  ir ao estado 158
    compoundStmt          ir ao estado 42
    primitiveStmt         ir ao estado 84
    exprStmt              ir ao estado 45
    condStmt              ir ao estado 46
    iterStmt              ir ao estado 47
    returnStmt            ir ao estado 48
    listStmt              ir ao estado 49
    appendOps             ir ao estado 50
    returnListOps         ir ao estado 51
    returnListOp          ir ao estado 52
    destroyHeadOps        ir ao estado 53
    mapFilterOps          ir ao estado 54
    expression            ir ao estado 55
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 59
    outOp                 ir ao estado 60
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 67


Estado 252

    6 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduzir usando a regra 6 (varDeclaration)
    TYPE         reduzir usando a regra 6 (varDeclaration)
    NIL          reduzir usando a regra 6 (varDeclaration)
    INTEGER      reduzir usando a regra 6 (varDeclaration)
    DECIMAL      reduzir usando a regra 6 (varDeclaration)
    ADD          reduzir usando a regra 6 (varDeclaration)
    SUB          reduzir usando a regra 6 (varDeclaration)
    HEADLIST     reduzir usando a regra 6 (varDeclaration)
    TAILLIST     reduzir usando a regra 6 (varDeclaration)
    DESTROYHEAD  reduzir usando a regra 6 (varDeclaration)
    ELSE         reduzir usando a regra 6 (varDeclaration)
    IF           reduzir usando a regra 6 (varDeclaration)
    FOR          reduzir usando a regra 6 (varDeclaration)
    READ         reduzir usando a regra 6 (varDeclaration)
    WRITE        reduzir usando a regra 6 (varDeclaration)
    WRITELN      reduzir usando a regra 6 (varDeclaration)
    RETURN       reduzir usando a regra 6 (varDeclaration)
    STFUNC       reduzir usando a regra 6 (varDeclaration)
    ENDFUNC      reduzir usando a regra 6 (varDeclaration)
    PARENL       reduzir usando a regra 6 (varDeclaration)


Estado 253

   37 returnListOps: returnListOp ID •

    ID           reduzir usando a regra 37 (returnListOps)
    TYPE         reduzir usando a regra 37 (returnListOps)
    NIL          reduzir usando a regra 37 (returnListOps)
    INTEGER      reduzir usando a regra 37 (returnListOps)
    DECIMAL      reduzir usando a regra 37 (returnListOps)
    ADD          reduzir usando a regra 37 (returnListOps)
    SUB          reduzir usando a regra 37 (returnListOps)
    HEADLIST     reduzir usando a regra 37 (returnListOps)
    TAILLIST     reduzir usando a regra 37 (returnListOps)
    DESTROYHEAD  reduzir usando a regra 37 (returnListOps)
    ELSE         reduzir usando a regra 37 (returnListOps)
    IF           reduzir usando a regra 37 (returnListOps)
    FOR          reduzir usando a regra 37 (returnListOps)
    READ         reduzir usando a regra 37 (returnListOps)
    WRITE        reduzir usando a regra 37 (returnListOps)
    WRITELN      reduzir usando a regra 37 (returnListOps)
    RETURN       reduzir usando a regra 37 (returnListOps)
    STFUNC       reduzir usando a regra 37 (returnListOps)
    ENDFUNC      reduzir usando a regra 37 (returnListOps)
    PARENL       reduzir usando a regra 37 (returnListOps)


Estado 254

   26 exprStmt: expression SEMIC •

    ID           reduzir usando a regra 26 (exprStmt)
    TYPE         reduzir usando a regra 26 (exprStmt)
    NIL          reduzir usando a regra 26 (exprStmt)
    INTEGER      reduzir usando a regra 26 (exprStmt)
    DECIMAL      reduzir usando a regra 26 (exprStmt)
    ADD          reduzir usando a regra 26 (exprStmt)
    SUB          reduzir usando a regra 26 (exprStmt)
    HEADLIST     reduzir usando a regra 26 (exprStmt)
    TAILLIST     reduzir usando a regra 26 (exprStmt)
    DESTROYHEAD  reduzir usando a regra 26 (exprStmt)
    ELSE         reduzir usando a regra 26 (exprStmt)
    IF           reduzir usando a regra 26 (exprStmt)
    FOR          reduzir usando a regra 26 (exprStmt)
    READ         reduzir usando a regra 26 (exprStmt)
    WRITE        reduzir usando a regra 26 (exprStmt)
    WRITELN      reduzir usando a regra 26 (exprStmt)
    RETURN       reduzir usando a regra 26 (exprStmt)
    STFUNC       reduzir usando a regra 26 (exprStmt)
    ENDFUNC      reduzir usando a regra 26 (exprStmt)
    PARENL       reduzir usando a regra 26 (exprStmt)


Estado 255

   42 mapFilterOps: fCall FILTER • ID SEMIC

    ID  deslocar, e ir ao estado 298


Estado 256

   41 mapFilterOps: fCall MAP • ID SEMIC

    ID  deslocar, e ir ao estado 299


Estado 257

   45 assignExp: ID • ASSIGN expression
   76 factor: ID •
   80 fCall: ID • PARENL callParams PARENR
   81      | ID • PARENL PARENR

    ASSIGN  deslocar, e ir ao estado 221
    PARENL  deslocar, e ir ao estado 188

    ADD        reduzir usando a regra 76 (factor)
    SUB        reduzir usando a regra 76 (factor)
    MULT       reduzir usando a regra 76 (factor)
    DIV        reduzir usando a regra 76 (factor)
    OR         reduzir usando a regra 76 (factor)
    AND        reduzir usando a regra 76 (factor)
    SMALLER    reduzir usando a regra 76 (factor)
    GREATER    reduzir usando a regra 76 (factor)
    SMALLEQ    reduzir usando a regra 76 (factor)
    GREATEQ    reduzir usando a regra 76 (factor)
    EQUALS     reduzir usando a regra 76 (factor)
    DIFFERENT  reduzir usando a regra 76 (factor)
    PARENR     reduzir usando a regra 76 (factor)


Estado 258

   45 assignExp: ID ASSIGN expression •

    PARENR  reduzir usando a regra 45 (assignExp)


Estado 259

   43 expression: assignExp •

    PARENR  reduzir usando a regra 43 (expression)


Estado 260

   44 expression: simpleExp •

    PARENR  reduzir usando a regra 44 (expression)


Estado 261

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 262

   78 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 78 (factor)
    SUB        reduzir usando a regra 78 (factor)
    MULT       reduzir usando a regra 78 (factor)
    DIV        reduzir usando a regra 78 (factor)
    OR         reduzir usando a regra 78 (factor)
    AND        reduzir usando a regra 78 (factor)
    SMALLER    reduzir usando a regra 78 (factor)
    GREATER    reduzir usando a regra 78 (factor)
    SMALLEQ    reduzir usando a regra 78 (factor)
    GREATEQ    reduzir usando a regra 78 (factor)
    EQUALS     reduzir usando a regra 78 (factor)
    DIFFERENT  reduzir usando a regra 78 (factor)
    PARENR     reduzir usando a regra 78 (factor)


Estado 263

   61 relationalOp: SMALLER •

    OR      reduzir usando a regra 61 (relationalOp)
    AND     reduzir usando a regra 61 (relationalOp)
    PARENR  reduzir usando a regra 61 (relationalOp)


Estado 264

   62 relationalOp: GREATER •

    OR      reduzir usando a regra 62 (relationalOp)
    AND     reduzir usando a regra 62 (relationalOp)
    PARENR  reduzir usando a regra 62 (relationalOp)


Estado 265

   63 relationalOp: SMALLEQ •

    OR      reduzir usando a regra 63 (relationalOp)
    AND     reduzir usando a regra 63 (relationalOp)
    PARENR  reduzir usando a regra 63 (relationalOp)


Estado 266

   64 relationalOp: GREATEQ •

    OR      reduzir usando a regra 64 (relationalOp)
    AND     reduzir usando a regra 64 (relationalOp)
    PARENR  reduzir usando a regra 64 (relationalOp)


Estado 267

   65 relationalOp: EQUALS •

    OR      reduzir usando a regra 65 (relationalOp)
    AND     reduzir usando a regra 65 (relationalOp)
    PARENR  reduzir usando a regra 65 (relationalOp)


Estado 268

   66 relationalOp: DIFFERENT •

    OR      reduzir usando a regra 66 (relationalOp)
    AND     reduzir usando a regra 66 (relationalOp)
    PARENR  reduzir usando a regra 66 (relationalOp)


Estado 269

   55 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 270

   59 relationalExp: relationalExp relationalOp sumExp •
   67 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 171
    SUB  deslocar, e ir ao estado 172

    OR         reduzir usando a regra 59 (relationalExp)
    AND        reduzir usando a regra 59 (relationalExp)
    SMALLER    reduzir usando a regra 59 (relationalExp)
    GREATER    reduzir usando a regra 59 (relationalExp)
    SMALLEQ    reduzir usando a regra 59 (relationalExp)
    GREATEQ    reduzir usando a regra 59 (relationalExp)
    EQUALS     reduzir usando a regra 59 (relationalExp)
    DIFFERENT  reduzir usando a regra 59 (relationalExp)
    PARENR     reduzir usando a regra 59 (relationalExp)

    sumOp  ir ao estado 229


Estado 271

   67 sumExp: sumExp sumOp mulExp •
   71 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 99
    DIV   deslocar, e ir ao estado 100

    ADD        reduzir usando a regra 67 (sumExp)
    SUB        reduzir usando a regra 67 (sumExp)
    OR         reduzir usando a regra 67 (sumExp)
    AND        reduzir usando a regra 67 (sumExp)
    SMALLER    reduzir usando a regra 67 (sumExp)
    GREATER    reduzir usando a regra 67 (sumExp)
    SMALLEQ    reduzir usando a regra 67 (sumExp)
    GREATEQ    reduzir usando a regra 67 (sumExp)
    EQUALS     reduzir usando a regra 67 (sumExp)
    DIFFERENT  reduzir usando a regra 67 (sumExp)
    PARENR     reduzir usando a regra 67 (sumExp)

    mulOp  ir ao estado 231


Estado 272

   71 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 71 (mulExp)
    SUB        reduzir usando a regra 71 (mulExp)
    MULT       reduzir usando a regra 71 (mulExp)
    DIV        reduzir usando a regra 71 (mulExp)
    OR         reduzir usando a regra 71 (mulExp)
    AND        reduzir usando a regra 71 (mulExp)
    SMALLER    reduzir usando a regra 71 (mulExp)
    GREATER    reduzir usando a regra 71 (mulExp)
    SMALLEQ    reduzir usando a regra 71 (mulExp)
    GREATEQ    reduzir usando a regra 71 (mulExp)
    EQUALS     reduzir usando a regra 71 (mulExp)
    DIFFERENT  reduzir usando a regra 71 (mulExp)
    PARENR     reduzir usando a regra 71 (mulExp)


Estado 273

   81 fCall: ID PARENL PARENR •

    ADD        reduzir usando a regra 81 (fCall)
    SUB        reduzir usando a regra 81 (fCall)
    MULT       reduzir usando a regra 81 (fCall)
    DIV        reduzir usando a regra 81 (fCall)
    OR         reduzir usando a regra 81 (fCall)
    AND        reduzir usando a regra 81 (fCall)
    SMALLER    reduzir usando a regra 81 (fCall)
    GREATER    reduzir usando a regra 81 (fCall)
    SMALLEQ    reduzir usando a regra 81 (fCall)
    GREATEQ    reduzir usando a regra 81 (fCall)
    EQUALS     reduzir usando a regra 81 (fCall)
    DIFFERENT  reduzir usando a regra 81 (fCall)
    COMMA      reduzir usando a regra 81 (fCall)
    PARENR     reduzir usando a regra 81 (fCall)


Estado 274

   80 fCall: ID PARENL callParams • PARENR
   82 callParams: callParams • COMMA simpleExp

    COMMA   deslocar, e ir ao estado 127
    PARENR  deslocar, e ir ao estado 300


Estado 275

   78 factor: PARENL simpleExp PARENR •

    ADD        reduzir usando a regra 78 (factor)
    SUB        reduzir usando a regra 78 (factor)
    MULT       reduzir usando a regra 78 (factor)
    DIV        reduzir usando a regra 78 (factor)
    OR         reduzir usando a regra 78 (factor)
    AND        reduzir usando a regra 78 (factor)
    SMALLER    reduzir usando a regra 78 (factor)
    GREATER    reduzir usando a regra 78 (factor)
    SMALLEQ    reduzir usando a regra 78 (factor)
    GREATEQ    reduzir usando a regra 78 (factor)
    EQUALS     reduzir usando a regra 78 (factor)
    DIFFERENT  reduzir usando a regra 78 (factor)
    COMMA      reduzir usando a regra 78 (factor)
    PARENR     reduzir usando a regra 78 (factor)


Estado 276

   61 relationalOp: SMALLER •

    OR      reduzir usando a regra 61 (relationalOp)
    AND     reduzir usando a regra 61 (relationalOp)
    COMMA   reduzir usando a regra 61 (relationalOp)
    PARENR  reduzir usando a regra 61 (relationalOp)


Estado 277

   62 relationalOp: GREATER •

    OR      reduzir usando a regra 62 (relationalOp)
    AND     reduzir usando a regra 62 (relationalOp)
    COMMA   reduzir usando a regra 62 (relationalOp)
    PARENR  reduzir usando a regra 62 (relationalOp)


Estado 278

   63 relationalOp: SMALLEQ •

    OR      reduzir usando a regra 63 (relationalOp)
    AND     reduzir usando a regra 63 (relationalOp)
    COMMA   reduzir usando a regra 63 (relationalOp)
    PARENR  reduzir usando a regra 63 (relationalOp)


Estado 279

   64 relationalOp: GREATEQ •

    OR      reduzir usando a regra 64 (relationalOp)
    AND     reduzir usando a regra 64 (relationalOp)
    COMMA   reduzir usando a regra 64 (relationalOp)
    PARENR  reduzir usando a regra 64 (relationalOp)


Estado 280

   65 relationalOp: EQUALS •

    OR      reduzir usando a regra 65 (relationalOp)
    AND     reduzir usando a regra 65 (relationalOp)
    COMMA   reduzir usando a regra 65 (relationalOp)
    PARENR  reduzir usando a regra 65 (relationalOp)


Estado 281

   66 relationalOp: DIFFERENT •

    OR      reduzir usando a regra 66 (relationalOp)
    AND     reduzir usando a regra 66 (relationalOp)
    COMMA   reduzir usando a regra 66 (relationalOp)
    PARENR  reduzir usando a regra 66 (relationalOp)


Estado 282

   55 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduzir usando a regra 55 (binLogicalExp)
    AND     reduzir usando a regra 55 (binLogicalExp)
    COMMA   reduzir usando a regra 55 (binLogicalExp)
    PARENR  reduzir usando a regra 55 (binLogicalExp)


Estado 283

   59 relationalExp: relationalExp relationalOp sumExp •
   67 sumExp: sumExp • sumOp mulExp

    ADD  deslocar, e ir ao estado 171
    SUB  deslocar, e ir ao estado 172

    OR         reduzir usando a regra 59 (relationalExp)
    AND        reduzir usando a regra 59 (relationalExp)
    SMALLER    reduzir usando a regra 59 (relationalExp)
    GREATER    reduzir usando a regra 59 (relationalExp)
    SMALLEQ    reduzir usando a regra 59 (relationalExp)
    GREATEQ    reduzir usando a regra 59 (relationalExp)
    EQUALS     reduzir usando a regra 59 (relationalExp)
    DIFFERENT  reduzir usando a regra 59 (relationalExp)
    COMMA      reduzir usando a regra 59 (relationalExp)
    PARENR     reduzir usando a regra 59 (relationalExp)

    sumOp  ir ao estado 236


Estado 284

   67 sumExp: sumExp sumOp mulExp •
   71 mulExp: mulExp • mulOp factor

    MULT  deslocar, e ir ao estado 99
    DIV   deslocar, e ir ao estado 100

    ADD        reduzir usando a regra 67 (sumExp)
    SUB        reduzir usando a regra 67 (sumExp)
    OR         reduzir usando a regra 67 (sumExp)
    AND        reduzir usando a regra 67 (sumExp)
    SMALLER    reduzir usando a regra 67 (sumExp)
    GREATER    reduzir usando a regra 67 (sumExp)
    SMALLEQ    reduzir usando a regra 67 (sumExp)
    GREATEQ    reduzir usando a regra 67 (sumExp)
    EQUALS     reduzir usando a regra 67 (sumExp)
    DIFFERENT  reduzir usando a regra 67 (sumExp)
    COMMA      reduzir usando a regra 67 (sumExp)
    PARENR     reduzir usando a regra 67 (sumExp)

    mulOp  ir ao estado 238


Estado 285

   71 mulExp: mulExp mulOp factor •

    ADD        reduzir usando a regra 71 (mulExp)
    SUB        reduzir usando a regra 71 (mulExp)
    MULT       reduzir usando a regra 71 (mulExp)
    DIV        reduzir usando a regra 71 (mulExp)
    OR         reduzir usando a regra 71 (mulExp)
    AND        reduzir usando a regra 71 (mulExp)
    SMALLER    reduzir usando a regra 71 (mulExp)
    GREATER    reduzir usando a regra 71 (mulExp)
    SMALLEQ    reduzir usando a regra 71 (mulExp)
    GREATEQ    reduzir usando a regra 71 (mulExp)
    EQUALS     reduzir usando a regra 71 (mulExp)
    DIFFERENT  reduzir usando a regra 71 (mulExp)
    COMMA      reduzir usando a regra 71 (mulExp)
    PARENR     reduzir usando a regra 71 (mulExp)


Estado 286

   80 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 80 (fCall)
    SUB        reduzir usando a regra 80 (fCall)
    MULT       reduzir usando a regra 80 (fCall)
    DIV        reduzir usando a regra 80 (fCall)
    OR         reduzir usando a regra 80 (fCall)
    AND        reduzir usando a regra 80 (fCall)
    SMALLER    reduzir usando a regra 80 (fCall)
    GREATER    reduzir usando a regra 80 (fCall)
    SMALLEQ    reduzir usando a regra 80 (fCall)
    GREATEQ    reduzir usando a regra 80 (fCall)
    EQUALS     reduzir usando a regra 80 (fCall)
    DIFFERENT  reduzir usando a regra 80 (fCall)
    SEMIC      reduzir usando a regra 80 (fCall)


Estado 287

   80 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 80 (fCall)
    SUB        reduzir usando a regra 80 (fCall)
    MULT       reduzir usando a regra 80 (fCall)
    DIV        reduzir usando a regra 80 (fCall)
    OR         reduzir usando a regra 80 (fCall)
    AND        reduzir usando a regra 80 (fCall)
    SMALLER    reduzir usando a regra 80 (fCall)
    GREATER    reduzir usando a regra 80 (fCall)
    SMALLEQ    reduzir usando a regra 80 (fCall)
    GREATEQ    reduzir usando a regra 80 (fCall)
    EQUALS     reduzir usando a regra 80 (fCall)
    DIFFERENT  reduzir usando a regra 80 (fCall)
    PARENR     reduzir usando a regra 80 (fCall)


Estado 288

   36 appendOps: ID APPEND ID • SEMIC

    SEMIC  deslocar, e ir ao estado 301


Estado 289

   40 destroyHeadOps: DESTROYHEAD ID SEMIC •

    ID           reduzir usando a regra 40 (destroyHeadOps)
    TYPE         reduzir usando a regra 40 (destroyHeadOps)
    NIL          reduzir usando a regra 40 (destroyHeadOps)
    INTEGER      reduzir usando a regra 40 (destroyHeadOps)
    DECIMAL      reduzir usando a regra 40 (destroyHeadOps)
    ADD          reduzir usando a regra 40 (destroyHeadOps)
    SUB          reduzir usando a regra 40 (destroyHeadOps)
    HEADLIST     reduzir usando a regra 40 (destroyHeadOps)
    TAILLIST     reduzir usando a regra 40 (destroyHeadOps)
    DESTROYHEAD  reduzir usando a regra 40 (destroyHeadOps)
    ELSE         reduzir usando a regra 40 (destroyHeadOps)
    IF           reduzir usando a regra 40 (destroyHeadOps)
    FOR          reduzir usando a regra 40 (destroyHeadOps)
    READ         reduzir usando a regra 40 (destroyHeadOps)
    WRITE        reduzir usando a regra 40 (destroyHeadOps)
    WRITELN      reduzir usando a regra 40 (destroyHeadOps)
    RETURN       reduzir usando a regra 40 (destroyHeadOps)
    STFUNC       reduzir usando a regra 40 (destroyHeadOps)
    ENDFUNC      reduzir usando a regra 40 (destroyHeadOps)
    PARENL       reduzir usando a regra 40 (destroyHeadOps)


Estado 290

   27 condStmt: IF PARENL simpleExp • PARENR primitiveStmt
   28         | IF PARENL simpleExp • PARENR primitiveStmt ELSE primitiveStmt

    PARENR  deslocar, e ir ao estado 302


Estado 291

   29 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 303


Estado 292

   30 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 304


Estado 293

   50 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 305


Estado 294

   51 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 306


Estado 295

   52 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  deslocar, e ir ao estado 307


Estado 296

   31 returnStmt: RETURN expression SEMIC •

    ID           reduzir usando a regra 31 (returnStmt)
    TYPE         reduzir usando a regra 31 (returnStmt)
    NIL          reduzir usando a regra 31 (returnStmt)
    INTEGER      reduzir usando a regra 31 (returnStmt)
    DECIMAL      reduzir usando a regra 31 (returnStmt)
    ADD          reduzir usando a regra 31 (returnStmt)
    SUB          reduzir usando a regra 31 (returnStmt)
    HEADLIST     reduzir usando a regra 31 (returnStmt)
    TAILLIST     reduzir usando a regra 31 (returnStmt)
    DESTROYHEAD  reduzir usando a regra 31 (returnStmt)
    ELSE         reduzir usando a regra 31 (returnStmt)
    IF           reduzir usando a regra 31 (returnStmt)
    FOR          reduzir usando a regra 31 (returnStmt)
    READ         reduzir usando a regra 31 (returnStmt)
    WRITE        reduzir usando a regra 31 (returnStmt)
    WRITELN      reduzir usando a regra 31 (returnStmt)
    RETURN       reduzir usando a regra 31 (returnStmt)
    STFUNC       reduzir usando a regra 31 (returnStmt)
    ENDFUNC      reduzir usando a regra 31 (returnStmt)
    PARENL       reduzir usando a regra 31 (returnStmt)


Estado 297

   14 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduzir usando a regra 14 (compoundStmt)
    TYPE         reduzir usando a regra 14 (compoundStmt)
    NIL          reduzir usando a regra 14 (compoundStmt)
    INTEGER      reduzir usando a regra 14 (compoundStmt)
    DECIMAL      reduzir usando a regra 14 (compoundStmt)
    ADD          reduzir usando a regra 14 (compoundStmt)
    SUB          reduzir usando a regra 14 (compoundStmt)
    HEADLIST     reduzir usando a regra 14 (compoundStmt)
    TAILLIST     reduzir usando a regra 14 (compoundStmt)
    DESTROYHEAD  reduzir usando a regra 14 (compoundStmt)
    ELSE         reduzir usando a regra 14 (compoundStmt)
    IF           reduzir usando a regra 14 (compoundStmt)
    FOR          reduzir usando a regra 14 (compoundStmt)
    READ         reduzir usando a regra 14 (compoundStmt)
    WRITE        reduzir usando a regra 14 (compoundStmt)
    WRITELN      reduzir usando a regra 14 (compoundStmt)
    RETURN       reduzir usando a regra 14 (compoundStmt)
    STFUNC       reduzir usando a regra 14 (compoundStmt)
    ENDFUNC      reduzir usando a regra 14 (compoundStmt)
    PARENL       reduzir usando a regra 14 (compoundStmt)


Estado 298

   42 mapFilterOps: fCall FILTER ID • SEMIC

    SEMIC  deslocar, e ir ao estado 308


Estado 299

   41 mapFilterOps: fCall MAP ID • SEMIC

    SEMIC  deslocar, e ir ao estado 309


Estado 300

   80 fCall: ID PARENL callParams PARENR •

    ADD        reduzir usando a regra 80 (fCall)
    SUB        reduzir usando a regra 80 (fCall)
    MULT       reduzir usando a regra 80 (fCall)
    DIV        reduzir usando a regra 80 (fCall)
    OR         reduzir usando a regra 80 (fCall)
    AND        reduzir usando a regra 80 (fCall)
    SMALLER    reduzir usando a regra 80 (fCall)
    GREATER    reduzir usando a regra 80 (fCall)
    SMALLEQ    reduzir usando a regra 80 (fCall)
    GREATEQ    reduzir usando a regra 80 (fCall)
    EQUALS     reduzir usando a regra 80 (fCall)
    DIFFERENT  reduzir usando a regra 80 (fCall)
    COMMA      reduzir usando a regra 80 (fCall)
    PARENR     reduzir usando a regra 80 (fCall)


Estado 301

   36 appendOps: ID APPEND ID SEMIC •

    ID           reduzir usando a regra 36 (appendOps)
    TYPE         reduzir usando a regra 36 (appendOps)
    NIL          reduzir usando a regra 36 (appendOps)
    INTEGER      reduzir usando a regra 36 (appendOps)
    DECIMAL      reduzir usando a regra 36 (appendOps)
    ADD          reduzir usando a regra 36 (appendOps)
    SUB          reduzir usando a regra 36 (appendOps)
    HEADLIST     reduzir usando a regra 36 (appendOps)
    TAILLIST     reduzir usando a regra 36 (appendOps)
    DESTROYHEAD  reduzir usando a regra 36 (appendOps)
    ELSE         reduzir usando a regra 36 (appendOps)
    IF           reduzir usando a regra 36 (appendOps)
    FOR          reduzir usando a regra 36 (appendOps)
    READ         reduzir usando a regra 36 (appendOps)
    WRITE        reduzir usando a regra 36 (appendOps)
    WRITELN      reduzir usando a regra 36 (appendOps)
    RETURN       reduzir usando a regra 36 (appendOps)
    STFUNC       reduzir usando a regra 36 (appendOps)
    ENDFUNC      reduzir usando a regra 36 (appendOps)
    PARENL       reduzir usando a regra 36 (appendOps)


Estado 302

   27 condStmt: IF PARENL simpleExp PARENR • primitiveStmt
   28         | IF PARENL simpleExp PARENR • primitiveStmt ELSE primitiveStmt

    ID           deslocar, e ir ao estado 195
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 196
    IF           deslocar, e ir ao estado 197
    FOR          deslocar, e ir ao estado 198
    READ         deslocar, e ir ao estado 199
    WRITE        deslocar, e ir ao estado 200
    WRITELN      deslocar, e ir ao estado 201
    RETURN       deslocar, e ir ao estado 202
    STFUNC       deslocar, e ir ao estado 203
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 204
    simpleVarDeclaration  ir ao estado 205
    compoundStmt          ir ao estado 206
    primitiveStmt         ir ao estado 310
    exprStmt              ir ao estado 207
    condStmt              ir ao estado 208
    iterStmt              ir ao estado 209
    returnStmt            ir ao estado 210
    listStmt              ir ao estado 211
    appendOps             ir ao estado 212
    returnListOps         ir ao estado 213
    returnListOp          ir ao estado 214
    destroyHeadOps        ir ao estado 215
    mapFilterOps          ir ao estado 216
    expression            ir ao estado 217
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 218
    outOp                 ir ao estado 219
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 220


Estado 303

   29 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 173
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    simpleExp      ir ao estado 311
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 304

   30 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID       deslocar, e ir ao estado 173
    NIL      deslocar, e ir ao estado 26
    INTEGER  deslocar, e ir ao estado 27
    DECIMAL  deslocar, e ir ao estado 28
    ADD      deslocar, e ir ao estado 29
    SUB      deslocar, e ir ao estado 30
    PARENL   deslocar, e ir ao estado 40

    simpleExp      ir ao estado 312
    constOp        ir ao estado 58
    binLogicalExp  ir ao estado 61
    relationalExp  ir ao estado 62
    sumExp         ir ao estado 63
    sumOp          ir ao estado 64
    mulExp         ir ao estado 65
    factor         ir ao estado 66
    fCall          ir ao estado 80


Estado 305

   50 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 313


Estado 306

   51 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 314


Estado 307

   52 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  deslocar, e ir ao estado 315


Estado 308

   42 mapFilterOps: fCall FILTER ID SEMIC •

    ID           reduzir usando a regra 42 (mapFilterOps)
    TYPE         reduzir usando a regra 42 (mapFilterOps)
    NIL          reduzir usando a regra 42 (mapFilterOps)
    INTEGER      reduzir usando a regra 42 (mapFilterOps)
    DECIMAL      reduzir usando a regra 42 (mapFilterOps)
    ADD          reduzir usando a regra 42 (mapFilterOps)
    SUB          reduzir usando a regra 42 (mapFilterOps)
    HEADLIST     reduzir usando a regra 42 (mapFilterOps)
    TAILLIST     reduzir usando a regra 42 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 42 (mapFilterOps)
    ELSE         reduzir usando a regra 42 (mapFilterOps)
    IF           reduzir usando a regra 42 (mapFilterOps)
    FOR          reduzir usando a regra 42 (mapFilterOps)
    READ         reduzir usando a regra 42 (mapFilterOps)
    WRITE        reduzir usando a regra 42 (mapFilterOps)
    WRITELN      reduzir usando a regra 42 (mapFilterOps)
    RETURN       reduzir usando a regra 42 (mapFilterOps)
    STFUNC       reduzir usando a regra 42 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 42 (mapFilterOps)
    PARENL       reduzir usando a regra 42 (mapFilterOps)


Estado 309

   41 mapFilterOps: fCall MAP ID SEMIC •

    ID           reduzir usando a regra 41 (mapFilterOps)
    TYPE         reduzir usando a regra 41 (mapFilterOps)
    NIL          reduzir usando a regra 41 (mapFilterOps)
    INTEGER      reduzir usando a regra 41 (mapFilterOps)
    DECIMAL      reduzir usando a regra 41 (mapFilterOps)
    ADD          reduzir usando a regra 41 (mapFilterOps)
    SUB          reduzir usando a regra 41 (mapFilterOps)
    HEADLIST     reduzir usando a regra 41 (mapFilterOps)
    TAILLIST     reduzir usando a regra 41 (mapFilterOps)
    DESTROYHEAD  reduzir usando a regra 41 (mapFilterOps)
    ELSE         reduzir usando a regra 41 (mapFilterOps)
    IF           reduzir usando a regra 41 (mapFilterOps)
    FOR          reduzir usando a regra 41 (mapFilterOps)
    READ         reduzir usando a regra 41 (mapFilterOps)
    WRITE        reduzir usando a regra 41 (mapFilterOps)
    WRITELN      reduzir usando a regra 41 (mapFilterOps)
    RETURN       reduzir usando a regra 41 (mapFilterOps)
    STFUNC       reduzir usando a regra 41 (mapFilterOps)
    ENDFUNC      reduzir usando a regra 41 (mapFilterOps)
    PARENL       reduzir usando a regra 41 (mapFilterOps)


Estado 310

   27 condStmt: IF PARENL simpleExp PARENR primitiveStmt •
   28         | IF PARENL simpleExp PARENR primitiveStmt • ELSE primitiveStmt

    ELSE  deslocar, e ir ao estado 316

    ID           reduzir usando a regra 27 (condStmt)
    TYPE         reduzir usando a regra 27 (condStmt)
    NIL          reduzir usando a regra 27 (condStmt)
    INTEGER      reduzir usando a regra 27 (condStmt)
    DECIMAL      reduzir usando a regra 27 (condStmt)
    ADD          reduzir usando a regra 27 (condStmt)
    SUB          reduzir usando a regra 27 (condStmt)
    HEADLIST     reduzir usando a regra 27 (condStmt)
    TAILLIST     reduzir usando a regra 27 (condStmt)
    DESTROYHEAD  reduzir usando a regra 27 (condStmt)
    IF           reduzir usando a regra 27 (condStmt)
    FOR          reduzir usando a regra 27 (condStmt)
    READ         reduzir usando a regra 27 (condStmt)
    WRITE        reduzir usando a regra 27 (condStmt)
    WRITELN      reduzir usando a regra 27 (condStmt)
    RETURN       reduzir usando a regra 27 (condStmt)
    STFUNC       reduzir usando a regra 27 (condStmt)
    ENDFUNC      reduzir usando a regra 27 (condStmt)
    PARENL       reduzir usando a regra 27 (condStmt)


Estado 311

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 317


Estado 312

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  deslocar, e ir ao estado 318


Estado 313

   50 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduzir usando a regra 50 (inOp)
    TYPE         reduzir usando a regra 50 (inOp)
    NIL          reduzir usando a regra 50 (inOp)
    INTEGER      reduzir usando a regra 50 (inOp)
    DECIMAL      reduzir usando a regra 50 (inOp)
    ADD          reduzir usando a regra 50 (inOp)
    SUB          reduzir usando a regra 50 (inOp)
    HEADLIST     reduzir usando a regra 50 (inOp)
    TAILLIST     reduzir usando a regra 50 (inOp)
    DESTROYHEAD  reduzir usando a regra 50 (inOp)
    ELSE         reduzir usando a regra 50 (inOp)
    IF           reduzir usando a regra 50 (inOp)
    FOR          reduzir usando a regra 50 (inOp)
    READ         reduzir usando a regra 50 (inOp)
    WRITE        reduzir usando a regra 50 (inOp)
    WRITELN      reduzir usando a regra 50 (inOp)
    RETURN       reduzir usando a regra 50 (inOp)
    STFUNC       reduzir usando a regra 50 (inOp)
    ENDFUNC      reduzir usando a regra 50 (inOp)
    PARENL       reduzir usando a regra 50 (inOp)


Estado 314

   51 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 51 (outOp)
    TYPE         reduzir usando a regra 51 (outOp)
    NIL          reduzir usando a regra 51 (outOp)
    INTEGER      reduzir usando a regra 51 (outOp)
    DECIMAL      reduzir usando a regra 51 (outOp)
    ADD          reduzir usando a regra 51 (outOp)
    SUB          reduzir usando a regra 51 (outOp)
    HEADLIST     reduzir usando a regra 51 (outOp)
    TAILLIST     reduzir usando a regra 51 (outOp)
    DESTROYHEAD  reduzir usando a regra 51 (outOp)
    ELSE         reduzir usando a regra 51 (outOp)
    IF           reduzir usando a regra 51 (outOp)
    FOR          reduzir usando a regra 51 (outOp)
    READ         reduzir usando a regra 51 (outOp)
    WRITE        reduzir usando a regra 51 (outOp)
    WRITELN      reduzir usando a regra 51 (outOp)
    RETURN       reduzir usando a regra 51 (outOp)
    STFUNC       reduzir usando a regra 51 (outOp)
    ENDFUNC      reduzir usando a regra 51 (outOp)
    PARENL       reduzir usando a regra 51 (outOp)


Estado 315

   52 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduzir usando a regra 52 (outOp)
    TYPE         reduzir usando a regra 52 (outOp)
    NIL          reduzir usando a regra 52 (outOp)
    INTEGER      reduzir usando a regra 52 (outOp)
    DECIMAL      reduzir usando a regra 52 (outOp)
    ADD          reduzir usando a regra 52 (outOp)
    SUB          reduzir usando a regra 52 (outOp)
    HEADLIST     reduzir usando a regra 52 (outOp)
    TAILLIST     reduzir usando a regra 52 (outOp)
    DESTROYHEAD  reduzir usando a regra 52 (outOp)
    ELSE         reduzir usando a regra 52 (outOp)
    IF           reduzir usando a regra 52 (outOp)
    FOR          reduzir usando a regra 52 (outOp)
    READ         reduzir usando a regra 52 (outOp)
    WRITE        reduzir usando a regra 52 (outOp)
    WRITELN      reduzir usando a regra 52 (outOp)
    RETURN       reduzir usando a regra 52 (outOp)
    STFUNC       reduzir usando a regra 52 (outOp)
    ENDFUNC      reduzir usando a regra 52 (outOp)
    PARENL       reduzir usando a regra 52 (outOp)


Estado 316

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE • primitiveStmt

    ID           deslocar, e ir ao estado 195
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 196
    IF           deslocar, e ir ao estado 197
    FOR          deslocar, e ir ao estado 198
    READ         deslocar, e ir ao estado 199
    WRITE        deslocar, e ir ao estado 200
    WRITELN      deslocar, e ir ao estado 201
    RETURN       deslocar, e ir ao estado 202
    STFUNC       deslocar, e ir ao estado 203
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 204
    simpleVarDeclaration  ir ao estado 205
    compoundStmt          ir ao estado 206
    primitiveStmt         ir ao estado 319
    exprStmt              ir ao estado 207
    condStmt              ir ao estado 208
    iterStmt              ir ao estado 209
    returnStmt            ir ao estado 210
    listStmt              ir ao estado 211
    appendOps             ir ao estado 212
    returnListOps         ir ao estado 213
    returnListOp          ir ao estado 214
    destroyHeadOps        ir ao estado 215
    mapFilterOps          ir ao estado 216
    expression            ir ao estado 217
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 218
    outOp                 ir ao estado 219
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 220


Estado 317

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 148

    assignExp  ir ao estado 320


Estado 318

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  deslocar, e ir ao estado 148

    assignExp  ir ao estado 321


Estado 319

   28 condStmt: IF PARENL simpleExp PARENR primitiveStmt ELSE primitiveStmt •

    ID           reduzir usando a regra 28 (condStmt)
    TYPE         reduzir usando a regra 28 (condStmt)
    NIL          reduzir usando a regra 28 (condStmt)
    INTEGER      reduzir usando a regra 28 (condStmt)
    DECIMAL      reduzir usando a regra 28 (condStmt)
    ADD          reduzir usando a regra 28 (condStmt)
    SUB          reduzir usando a regra 28 (condStmt)
    HEADLIST     reduzir usando a regra 28 (condStmt)
    TAILLIST     reduzir usando a regra 28 (condStmt)
    DESTROYHEAD  reduzir usando a regra 28 (condStmt)
    ELSE         reduzir usando a regra 28 (condStmt)
    IF           reduzir usando a regra 28 (condStmt)
    FOR          reduzir usando a regra 28 (condStmt)
    READ         reduzir usando a regra 28 (condStmt)
    WRITE        reduzir usando a regra 28 (condStmt)
    WRITELN      reduzir usando a regra 28 (condStmt)
    RETURN       reduzir usando a regra 28 (condStmt)
    STFUNC       reduzir usando a regra 28 (condStmt)
    ENDFUNC      reduzir usando a regra 28 (condStmt)
    PARENL       reduzir usando a regra 28 (condStmt)


Estado 320

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 322


Estado 321

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  deslocar, e ir ao estado 323


Estado 322

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 195
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 196
    IF           deslocar, e ir ao estado 197
    FOR          deslocar, e ir ao estado 198
    READ         deslocar, e ir ao estado 199
    WRITE        deslocar, e ir ao estado 200
    WRITELN      deslocar, e ir ao estado 201
    RETURN       deslocar, e ir ao estado 202
    STFUNC       deslocar, e ir ao estado 203
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 204
    simpleVarDeclaration  ir ao estado 205
    compoundStmt          ir ao estado 206
    primitiveStmt         ir ao estado 324
    exprStmt              ir ao estado 207
    condStmt              ir ao estado 208
    iterStmt              ir ao estado 209
    returnStmt            ir ao estado 210
    listStmt              ir ao estado 211
    appendOps             ir ao estado 212
    returnListOps         ir ao estado 213
    returnListOp          ir ao estado 214
    destroyHeadOps        ir ao estado 215
    mapFilterOps          ir ao estado 216
    expression            ir ao estado 217
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 218
    outOp                 ir ao estado 219
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 220


Estado 323

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           deslocar, e ir ao estado 195
    TYPE         deslocar, e ir ao estado 156
    NIL          deslocar, e ir ao estado 26
    INTEGER      deslocar, e ir ao estado 27
    DECIMAL      deslocar, e ir ao estado 28
    ADD          deslocar, e ir ao estado 29
    SUB          deslocar, e ir ao estado 30
    HEADLIST     deslocar, e ir ao estado 31
    TAILLIST     deslocar, e ir ao estado 32
    DESTROYHEAD  deslocar, e ir ao estado 196
    IF           deslocar, e ir ao estado 197
    FOR          deslocar, e ir ao estado 198
    READ         deslocar, e ir ao estado 199
    WRITE        deslocar, e ir ao estado 200
    WRITELN      deslocar, e ir ao estado 201
    RETURN       deslocar, e ir ao estado 202
    STFUNC       deslocar, e ir ao estado 203
    PARENL       deslocar, e ir ao estado 40

    varDeclaration        ir ao estado 204
    simpleVarDeclaration  ir ao estado 205
    compoundStmt          ir ao estado 206
    primitiveStmt         ir ao estado 325
    exprStmt              ir ao estado 207
    condStmt              ir ao estado 208
    iterStmt              ir ao estado 209
    returnStmt            ir ao estado 210
    listStmt              ir ao estado 211
    appendOps             ir ao estado 212
    returnListOps         ir ao estado 213
    returnListOp          ir ao estado 214
    destroyHeadOps        ir ao estado 215
    mapFilterOps          ir ao estado 216
    expression            ir ao estado 217
    assignExp             ir ao estado 56
    simpleExp             ir ao estado 57
    constOp               ir ao estado 58
    inOp                  ir ao estado 218
    outOp                 ir ao estado 219
    binLogicalExp         ir ao estado 61
    relationalExp         ir ao estado 62
    sumExp                ir ao estado 63
    sumOp                 ir ao estado 64
    mulExp                ir ao estado 65
    factor                ir ao estado 66
    fCall                 ir ao estado 220


Estado 324

   29 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 29 (iterStmt)
    TYPE         reduzir usando a regra 29 (iterStmt)
    NIL          reduzir usando a regra 29 (iterStmt)
    INTEGER      reduzir usando a regra 29 (iterStmt)
    DECIMAL      reduzir usando a regra 29 (iterStmt)
    ADD          reduzir usando a regra 29 (iterStmt)
    SUB          reduzir usando a regra 29 (iterStmt)
    HEADLIST     reduzir usando a regra 29 (iterStmt)
    TAILLIST     reduzir usando a regra 29 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 29 (iterStmt)
    ELSE         reduzir usando a regra 29 (iterStmt)
    IF           reduzir usando a regra 29 (iterStmt)
    FOR          reduzir usando a regra 29 (iterStmt)
    READ         reduzir usando a regra 29 (iterStmt)
    WRITE        reduzir usando a regra 29 (iterStmt)
    WRITELN      reduzir usando a regra 29 (iterStmt)
    RETURN       reduzir usando a regra 29 (iterStmt)
    STFUNC       reduzir usando a regra 29 (iterStmt)
    ENDFUNC      reduzir usando a regra 29 (iterStmt)
    PARENL       reduzir usando a regra 29 (iterStmt)


Estado 325

   30 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduzir usando a regra 30 (iterStmt)
    TYPE         reduzir usando a regra 30 (iterStmt)
    NIL          reduzir usando a regra 30 (iterStmt)
    INTEGER      reduzir usando a regra 30 (iterStmt)
    DECIMAL      reduzir usando a regra 30 (iterStmt)
    ADD          reduzir usando a regra 30 (iterStmt)
    SUB          reduzir usando a regra 30 (iterStmt)
    HEADLIST     reduzir usando a regra 30 (iterStmt)
    TAILLIST     reduzir usando a regra 30 (iterStmt)
    DESTROYHEAD  reduzir usando a regra 30 (iterStmt)
    ELSE         reduzir usando a regra 30 (iterStmt)
    IF           reduzir usando a regra 30 (iterStmt)
    FOR          reduzir usando a regra 30 (iterStmt)
    READ         reduzir usando a regra 30 (iterStmt)
    WRITE        reduzir usando a regra 30 (iterStmt)
    WRITELN      reduzir usando a regra 30 (iterStmt)
    RETURN       reduzir usando a regra 30 (iterStmt)
    STFUNC       reduzir usando a regra 30 (iterStmt)
    ENDFUNC      reduzir usando a regra 30 (iterStmt)
    PARENL       reduzir usando a regra 30 (iterStmt)
