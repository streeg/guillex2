Terminals unused in grammar

    DESTROYHEAD


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration
    4                | error

    5 declaration: varDeclaration
    6            | funcDeclaration

    7 varDeclaration: simpleVarDeclaration SEMIC

    8 $@1: %empty

    9 $@2: %empty

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC

   11 $@3: %empty

   12 $@4: %empty

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC

   14 simpleVarDeclaration: TYPE ID

   15 params: params COMMA param
   16       | param
   17       | error

   18 param: TYPE ID

   19 compoundStmt: STFUNC stmtList ENDFUNC

   20 stmtList: stmtList primitiveStmt
   21         | primitiveStmt

   22 primitiveStmt: exprStmt
   23              | compoundStmt
   24              | condStmt
   25              | iterStmt
   26              | returnStmt
   27              | inOp
   28              | outOp
   29              | varDeclaration

   30 exprStmt: expression SEMIC

   31 condStmt: ifStmt primitiveStmt
   32         | ifStmt primitiveStmt elseStmt
   33         | ifStmt STFUNC ENDFUNC
   34         | ifStmt STFUNC ENDFUNC elseStmt

   35 ifStmt: IF PARENL simpleExp PARENR

   36 $@5: %empty

   37 elseStmt: ELSE $@5 primitiveStmt

   38 $@6: %empty

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

   40 $@7: %empty

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

   42 returnStmt: RETURN expression SEMIC

   43 expression: assignExp
   44           | simpleExp

   45 assignExp: ID ASSIGN expression

   46 simpleExp: binLogicalExp
   47          | binListExp

   48 inOp: READ PARENL ID PARENR SEMIC

   49 outOp: WRITE PARENL outConst PARENR SEMIC
   50      | WRITELN PARENL outConst PARENR SEMIC

   51 outConst: STRING
   52         | simpleExp

   53 binListExp: factor APPEND factor
   54           | factor MAP factor
   55           | factor FILTER factor

   56 unaryListExp: HEADLIST factor
   57             | TAILLIST factor

   58 binLogicalExp: binLogicalExp binLogicalOp relationalExp
   59              | relationalExp

   60 binLogicalOp: OR
   61             | AND

   62 relationalExp: relationalExp relationalOp sumExp
   63              | sumExp

   64 relationalOp: SMALLER
   65             | GREATER
   66             | SMALLEQ
   67             | GREATEQ
   68             | EQUALS
   69             | DIFFERENT

   70 sumExp: sumExp ADD mulExp
   71       | sumExp SUB mulExp
   72       | mulExp

   73 mulExp: mulExp MULT factor
   74       | mulExp DIV factor
   75       | factor
   76       | ADD factor
   77       | SUB factor
   78       | unaryListExp

   79 factor: ID
   80       | fCall
   81       | PARENL simpleExp PARENR
   82       | INTEGER
   83       | DECIMAL
   84       | NIL
   85       | ERRORTOKEN

   86 fCall: ID PARENL callParams PARENR
   87      | ID PARENL PARENR

   88 callParams: callParams COMMA simpleExp
   89           | simpleExp


Terminals, with rules where they appear

    $end (0) 0
    error <treeNode> (256) 4 17
    ID <str> (258) 10 13 14 18 45 48 79 86 87
    TYPE <str> (259) 10 13 14 18
    STRING <str> (260) 51
    NIL <str> (261) 84
    INTEGER <integer> (262) 82
    DECIMAL <dec> (263) 83
    ERRORTOKEN <str> (264) 85
    THEN <str> (265)
    ELSE <str> (266) 37
    ADD <str> (267) 70 76
    SUB <str> (268) 71 77
    MULT <str> (269) 73
    DIV <str> (270) 74
    OR <str> (271) 60
    AND <str> (272) 61
    SMALLER <str> (273) 64
    GREATER <str> (274) 65
    SMALLEQ <str> (275) 66
    GREATEQ <str> (276) 67
    EQUALS <str> (277) 68
    DIFFERENT <str> (278) 69
    APPEND <str> (279) 53
    HEADLIST <str> (280) 56
    TAILLIST <str> (281) 57
    DESTROYHEAD <str> (282)
    FILTER <str> (283) 55
    ASSIGN <str> (284) 45
    MAP <str> (285) 54
    IF <str> (286) 35
    FOR <str> (287) 39 41
    READ <str> (288) 48
    WRITE <str> (289) 49
    WRITELN <str> (290) 50
    RETURN <str> (291) 42
    SEMIC <str> (292) 7 30 39 41 42 48 49 50
    COMMA <str> (293) 15 88
    STFUNC <str> (294) 10 13 19 33 34
    ENDFUNC <str> (295) 10 13 19 33 34
    PARENL <str> (296) 10 13 35 39 41 48 49 50 81 86 87
    PARENR <str> (297) 10 13 35 39 41 48 49 50 81 86 87


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <treeNode> (44)
        on left: 1
        on right: 0
    declarationList <treeNode> (45)
        on left: 2 3 4
        on right: 1 2
    declaration <treeNode> (46)
        on left: 5 6
        on right: 2 3
    varDeclaration <treeNode> (47)
        on left: 7
        on right: 5 29
    funcDeclaration <treeNode> (48)
        on left: 10 13
        on right: 6
    $@1 (49)
        on left: 8
        on right: 10
    $@2 (50)
        on left: 9
        on right: 10
    $@3 (51)
        on left: 11
        on right: 13
    $@4 (52)
        on left: 12
        on right: 13
    simpleVarDeclaration <treeNode> (53)
        on left: 14
        on right: 7
    params <treeNode> (54)
        on left: 15 16 17
        on right: 10 15
    param <treeNode> (55)
        on left: 18
        on right: 15 16
    compoundStmt <treeNode> (56)
        on left: 19
        on right: 23
    stmtList <treeNode> (57)
        on left: 20 21
        on right: 10 13 19 20
    primitiveStmt <treeNode> (58)
        on left: 22 23 24 25 26 27 28 29
        on right: 20 21 31 32 37 39 41
    exprStmt <treeNode> (59)
        on left: 30
        on right: 22
    condStmt <treeNode> (60)
        on left: 31 32 33 34
        on right: 24
    ifStmt <treeNode> (61)
        on left: 35
        on right: 31 32 33 34
    elseStmt <treeNode> (62)
        on left: 37
        on right: 32 34
    $@5 (63)
        on left: 36
        on right: 37
    iterStmt <treeNode> (64)
        on left: 39 41
        on right: 25
    $@6 (65)
        on left: 38
        on right: 39
    $@7 (66)
        on left: 40
        on right: 41
    returnStmt <treeNode> (67)
        on left: 42
        on right: 26
    expression <treeNode> (68)
        on left: 43 44
        on right: 30 42 45
    assignExp <treeNode> (69)
        on left: 45
        on right: 39 41 43
    simpleExp <treeNode> (70)
        on left: 46 47
        on right: 35 39 41 44 52 81 88 89
    inOp <treeNode> (71)
        on left: 48
        on right: 27
    outOp <treeNode> (72)
        on left: 49 50
        on right: 28
    outConst <treeNode> (73)
        on left: 51 52
        on right: 49 50
    binListExp <treeNode> (74)
        on left: 53 54 55
        on right: 47
    unaryListExp <treeNode> (75)
        on left: 56 57
        on right: 78
    binLogicalExp <treeNode> (76)
        on left: 58 59
        on right: 46 58
    binLogicalOp <treeNode> (77)
        on left: 60 61
        on right: 58
    relationalExp <treeNode> (78)
        on left: 62 63
        on right: 58 59 62
    relationalOp <treeNode> (79)
        on left: 64 65 66 67 68 69
        on right: 62
    sumExp <treeNode> (80)
        on left: 70 71 72
        on right: 62 63 70 71
    mulExp <treeNode> (81)
        on left: 73 74 75 76 77 78
        on right: 70 71 72 73 74
    factor <treeNode> (82)
        on left: 79 80 81 82 83 84 85
        on right: 53 54 55 56 57 73 74 75 76 77
    fCall <treeNode> (83)
        on left: 86 87
        on right: 80
    callParams <treeNode> (84)
        on left: 88 89
        on right: 86 88


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program               go to state 3
    declarationList       go to state 4
    declaration           go to state 5
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 1

    4 declarationList: error •

    $end  reduce using rule 4 (declarationList)
    TYPE  reduce using rule 4 (declarationList)


State 2

   10 funcDeclaration: TYPE • ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE • ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   14 simpleVarDeclaration: TYPE • ID

    ID  shift, and go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration           go to state 11
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 5

    3 declarationList: declaration •

    $end  reduce using rule 3 (declarationList)
    TYPE  reduce using rule 3 (declarationList)


State 6

    5 declaration: varDeclaration •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 7

    6 declaration: funcDeclaration •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 8

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 12


State 9

   10 funcDeclaration: TYPE ID • PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID • PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   14 simpleVarDeclaration: TYPE ID •

    PARENL  shift, and go to state 13

    SEMIC  reduce using rule 14 (simpleVarDeclaration)


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declarationList: declarationList declaration •

    $end  reduce using rule 2 (declarationList)
    TYPE  reduce using rule 2 (declarationList)


State 12

    7 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduce using rule 7 (varDeclaration)
    TYPE  reduce using rule 7 (varDeclaration)


State 13

   10 funcDeclaration: TYPE ID PARENL • $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID PARENL • $@3 PARENR STFUNC $@4 stmtList ENDFUNC

    error   reduce using rule 8 ($@1)
    TYPE    reduce using rule 8 ($@1)
    PARENR  reduce using rule 11 ($@3)

    $@1  go to state 14
    $@3  go to state 15


State 14

   10 funcDeclaration: TYPE ID PARENL $@1 • params PARENR STFUNC $@2 stmtList ENDFUNC

    error  shift, and go to state 16
    TYPE   shift, and go to state 17

    params  go to state 18
    param   go to state 19


State 15

   13 funcDeclaration: TYPE ID PARENL $@3 • PARENR STFUNC $@4 stmtList ENDFUNC

    PARENR  shift, and go to state 20


State 16

   17 params: error •

    COMMA   reduce using rule 17 (params)
    PARENR  reduce using rule 17 (params)


State 17

   18 param: TYPE • ID

    ID  shift, and go to state 21


State 18

   10 funcDeclaration: TYPE ID PARENL $@1 params • PARENR STFUNC $@2 stmtList ENDFUNC
   15 params: params • COMMA param

    COMMA   shift, and go to state 22
    PARENR  shift, and go to state 23


State 19

   16 params: param •

    COMMA   reduce using rule 16 (params)
    PARENR  reduce using rule 16 (params)


State 20

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR • STFUNC $@4 stmtList ENDFUNC

    STFUNC  shift, and go to state 24


State 21

   18 param: TYPE ID •

    COMMA   reduce using rule 18 (param)
    PARENR  reduce using rule 18 (param)


State 22

   15 params: params COMMA • param

    TYPE  shift, and go to state 17

    param  go to state 25


State 23

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR • STFUNC $@2 stmtList ENDFUNC

    STFUNC  shift, and go to state 26


State 24

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC • $@4 stmtList ENDFUNC

    ID          reduce using rule 12 ($@4)
    TYPE        reduce using rule 12 ($@4)
    NIL         reduce using rule 12 ($@4)
    INTEGER     reduce using rule 12 ($@4)
    DECIMAL     reduce using rule 12 ($@4)
    ERRORTOKEN  reduce using rule 12 ($@4)
    ADD         reduce using rule 12 ($@4)
    SUB         reduce using rule 12 ($@4)
    HEADLIST    reduce using rule 12 ($@4)
    TAILLIST    reduce using rule 12 ($@4)
    IF          reduce using rule 12 ($@4)
    FOR         reduce using rule 12 ($@4)
    READ        reduce using rule 12 ($@4)
    WRITE       reduce using rule 12 ($@4)
    WRITELN     reduce using rule 12 ($@4)
    RETURN      reduce using rule 12 ($@4)
    STFUNC      reduce using rule 12 ($@4)
    PARENL      reduce using rule 12 ($@4)

    $@4  go to state 27


State 25

   15 params: params COMMA param •

    COMMA   reduce using rule 15 (params)
    PARENR  reduce using rule 15 (params)


State 26

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC • $@2 stmtList ENDFUNC

    ID          reduce using rule 9 ($@2)
    TYPE        reduce using rule 9 ($@2)
    NIL         reduce using rule 9 ($@2)
    INTEGER     reduce using rule 9 ($@2)
    DECIMAL     reduce using rule 9 ($@2)
    ERRORTOKEN  reduce using rule 9 ($@2)
    ADD         reduce using rule 9 ($@2)
    SUB         reduce using rule 9 ($@2)
    HEADLIST    reduce using rule 9 ($@2)
    TAILLIST    reduce using rule 9 ($@2)
    IF          reduce using rule 9 ($@2)
    FOR         reduce using rule 9 ($@2)
    READ        reduce using rule 9 ($@2)
    WRITE       reduce using rule 9 ($@2)
    WRITELN     reduce using rule 9 ($@2)
    RETURN      reduce using rule 9 ($@2)
    STFUNC      reduce using rule 9 ($@2)
    PARENL      reduce using rule 9 ($@2)

    $@2  go to state 28


State 27

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 • stmtList ENDFUNC

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    stmtList              go to state 49
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 28

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 • stmtList ENDFUNC

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    stmtList              go to state 69
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 29

   45 assignExp: ID • ASSIGN expression
   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    ASSIGN  shift, and go to state 70
    PARENL  shift, and go to state 71

    ADD        reduce using rule 79 (factor)
    SUB        reduce using rule 79 (factor)
    MULT       reduce using rule 79 (factor)
    DIV        reduce using rule 79 (factor)
    OR         reduce using rule 79 (factor)
    AND        reduce using rule 79 (factor)
    SMALLER    reduce using rule 79 (factor)
    GREATER    reduce using rule 79 (factor)
    SMALLEQ    reduce using rule 79 (factor)
    GREATEQ    reduce using rule 79 (factor)
    EQUALS     reduce using rule 79 (factor)
    DIFFERENT  reduce using rule 79 (factor)
    APPEND     reduce using rule 79 (factor)
    FILTER     reduce using rule 79 (factor)
    MAP        reduce using rule 79 (factor)
    SEMIC      reduce using rule 79 (factor)


State 30

   14 simpleVarDeclaration: TYPE • ID

    ID  shift, and go to state 72


State 31

   84 factor: NIL •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    APPEND     reduce using rule 84 (factor)
    FILTER     reduce using rule 84 (factor)
    MAP        reduce using rule 84 (factor)
    SEMIC      reduce using rule 84 (factor)


State 32

   82 factor: INTEGER •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    APPEND     reduce using rule 82 (factor)
    FILTER     reduce using rule 82 (factor)
    MAP        reduce using rule 82 (factor)
    SEMIC      reduce using rule 82 (factor)


State 33

   83 factor: DECIMAL •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    APPEND     reduce using rule 83 (factor)
    FILTER     reduce using rule 83 (factor)
    MAP        reduce using rule 83 (factor)
    SEMIC      reduce using rule 83 (factor)


State 34

   85 factor: ERRORTOKEN •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    APPEND     reduce using rule 85 (factor)
    FILTER     reduce using rule 85 (factor)
    MAP        reduce using rule 85 (factor)
    SEMIC      reduce using rule 85 (factor)


State 35

   76 mulExp: ADD • factor

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    PARENL      shift, and go to state 170

    factor  go to state 74
    fCall   go to state 171


State 36

   77 mulExp: SUB • factor

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    PARENL      shift, and go to state 170

    factor  go to state 75
    fCall   go to state 171


State 37

   56 unaryListExp: HEADLIST • factor

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    PARENL      shift, and go to state 170

    factor  go to state 76
    fCall   go to state 171


State 38

   57 unaryListExp: TAILLIST • factor

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    PARENL      shift, and go to state 170

    factor  go to state 77
    fCall   go to state 171


State 39

   35 ifStmt: IF • PARENL simpleExp PARENR

    PARENL  shift, and go to state 78


State 40

   39 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt
   41         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    PARENL  shift, and go to state 79


State 41

   48 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 80


State 42

   49 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 81


State 43

   50 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 82


State 44

   42 returnStmt: RETURN • expression SEMIC

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    expression     go to state 83
    assignExp      go to state 57
    simpleExp      go to state 58
    binListExp     go to state 61
    unaryListExp   go to state 62
    binLogicalExp  go to state 63
    relationalExp  go to state 64
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 67
    fCall          go to state 68


State 45

   19 compoundStmt: STFUNC • stmtList ENDFUNC

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    stmtList              go to state 84
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 46

   81 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 85
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 47

   29 primitiveStmt: varDeclaration •

    ID          reduce using rule 29 (primitiveStmt)
    TYPE        reduce using rule 29 (primitiveStmt)
    NIL         reduce using rule 29 (primitiveStmt)
    INTEGER     reduce using rule 29 (primitiveStmt)
    DECIMAL     reduce using rule 29 (primitiveStmt)
    ERRORTOKEN  reduce using rule 29 (primitiveStmt)
    ADD         reduce using rule 29 (primitiveStmt)
    SUB         reduce using rule 29 (primitiveStmt)
    HEADLIST    reduce using rule 29 (primitiveStmt)
    TAILLIST    reduce using rule 29 (primitiveStmt)
    IF          reduce using rule 29 (primitiveStmt)
    FOR         reduce using rule 29 (primitiveStmt)
    READ        reduce using rule 29 (primitiveStmt)
    WRITE       reduce using rule 29 (primitiveStmt)
    WRITELN     reduce using rule 29 (primitiveStmt)
    RETURN      reduce using rule 29 (primitiveStmt)
    STFUNC      reduce using rule 29 (primitiveStmt)
    ENDFUNC     reduce using rule 29 (primitiveStmt)
    PARENL      reduce using rule 29 (primitiveStmt)


State 48

   23 primitiveStmt: compoundStmt •

    ID          reduce using rule 23 (primitiveStmt)
    TYPE        reduce using rule 23 (primitiveStmt)
    NIL         reduce using rule 23 (primitiveStmt)
    INTEGER     reduce using rule 23 (primitiveStmt)
    DECIMAL     reduce using rule 23 (primitiveStmt)
    ERRORTOKEN  reduce using rule 23 (primitiveStmt)
    ADD         reduce using rule 23 (primitiveStmt)
    SUB         reduce using rule 23 (primitiveStmt)
    HEADLIST    reduce using rule 23 (primitiveStmt)
    TAILLIST    reduce using rule 23 (primitiveStmt)
    IF          reduce using rule 23 (primitiveStmt)
    FOR         reduce using rule 23 (primitiveStmt)
    READ        reduce using rule 23 (primitiveStmt)
    WRITE       reduce using rule 23 (primitiveStmt)
    WRITELN     reduce using rule 23 (primitiveStmt)
    RETURN      reduce using rule 23 (primitiveStmt)
    STFUNC      reduce using rule 23 (primitiveStmt)
    ENDFUNC     reduce using rule 23 (primitiveStmt)
    PARENL      reduce using rule 23 (primitiveStmt)


State 49

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 86
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    primitiveStmt         go to state 87
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 50

   21 stmtList: primitiveStmt •

    ID          reduce using rule 21 (stmtList)
    TYPE        reduce using rule 21 (stmtList)
    NIL         reduce using rule 21 (stmtList)
    INTEGER     reduce using rule 21 (stmtList)
    DECIMAL     reduce using rule 21 (stmtList)
    ERRORTOKEN  reduce using rule 21 (stmtList)
    ADD         reduce using rule 21 (stmtList)
    SUB         reduce using rule 21 (stmtList)
    HEADLIST    reduce using rule 21 (stmtList)
    TAILLIST    reduce using rule 21 (stmtList)
    IF          reduce using rule 21 (stmtList)
    FOR         reduce using rule 21 (stmtList)
    READ        reduce using rule 21 (stmtList)
    WRITE       reduce using rule 21 (stmtList)
    WRITELN     reduce using rule 21 (stmtList)
    RETURN      reduce using rule 21 (stmtList)
    STFUNC      reduce using rule 21 (stmtList)
    ENDFUNC     reduce using rule 21 (stmtList)
    PARENL      reduce using rule 21 (stmtList)


State 51

   22 primitiveStmt: exprStmt •

    ID          reduce using rule 22 (primitiveStmt)
    TYPE        reduce using rule 22 (primitiveStmt)
    NIL         reduce using rule 22 (primitiveStmt)
    INTEGER     reduce using rule 22 (primitiveStmt)
    DECIMAL     reduce using rule 22 (primitiveStmt)
    ERRORTOKEN  reduce using rule 22 (primitiveStmt)
    ADD         reduce using rule 22 (primitiveStmt)
    SUB         reduce using rule 22 (primitiveStmt)
    HEADLIST    reduce using rule 22 (primitiveStmt)
    TAILLIST    reduce using rule 22 (primitiveStmt)
    IF          reduce using rule 22 (primitiveStmt)
    FOR         reduce using rule 22 (primitiveStmt)
    READ        reduce using rule 22 (primitiveStmt)
    WRITE       reduce using rule 22 (primitiveStmt)
    WRITELN     reduce using rule 22 (primitiveStmt)
    RETURN      reduce using rule 22 (primitiveStmt)
    STFUNC      reduce using rule 22 (primitiveStmt)
    ENDFUNC     reduce using rule 22 (primitiveStmt)
    PARENL      reduce using rule 22 (primitiveStmt)


State 52

   24 primitiveStmt: condStmt •

    ID          reduce using rule 24 (primitiveStmt)
    TYPE        reduce using rule 24 (primitiveStmt)
    NIL         reduce using rule 24 (primitiveStmt)
    INTEGER     reduce using rule 24 (primitiveStmt)
    DECIMAL     reduce using rule 24 (primitiveStmt)
    ERRORTOKEN  reduce using rule 24 (primitiveStmt)
    ADD         reduce using rule 24 (primitiveStmt)
    SUB         reduce using rule 24 (primitiveStmt)
    HEADLIST    reduce using rule 24 (primitiveStmt)
    TAILLIST    reduce using rule 24 (primitiveStmt)
    IF          reduce using rule 24 (primitiveStmt)
    FOR         reduce using rule 24 (primitiveStmt)
    READ        reduce using rule 24 (primitiveStmt)
    WRITE       reduce using rule 24 (primitiveStmt)
    WRITELN     reduce using rule 24 (primitiveStmt)
    RETURN      reduce using rule 24 (primitiveStmt)
    STFUNC      reduce using rule 24 (primitiveStmt)
    ENDFUNC     reduce using rule 24 (primitiveStmt)
    PARENL      reduce using rule 24 (primitiveStmt)


State 53

   31 condStmt: ifStmt • primitiveStmt
   32         | ifStmt • primitiveStmt elseStmt
   33         | ifStmt • STFUNC ENDFUNC
   34         | ifStmt • STFUNC ENDFUNC elseStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 190
    READ        shift, and go to state 191
    WRITE       shift, and go to state 192
    WRITELN     shift, and go to state 193
    RETURN      shift, and go to state 194
    STFUNC      shift, and go to state 88
    PARENL      shift, and go to state 46

    varDeclaration        go to state 195
    simpleVarDeclaration  go to state 196
    compoundStmt          go to state 197
    primitiveStmt         go to state 89
    exprStmt              go to state 198
    condStmt              go to state 199
    ifStmt                go to state 200
    iterStmt              go to state 201
    returnStmt            go to state 202
    expression            go to state 203
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 204
    outOp                 go to state 205
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 54

   25 primitiveStmt: iterStmt •

    ID          reduce using rule 25 (primitiveStmt)
    TYPE        reduce using rule 25 (primitiveStmt)
    NIL         reduce using rule 25 (primitiveStmt)
    INTEGER     reduce using rule 25 (primitiveStmt)
    DECIMAL     reduce using rule 25 (primitiveStmt)
    ERRORTOKEN  reduce using rule 25 (primitiveStmt)
    ADD         reduce using rule 25 (primitiveStmt)
    SUB         reduce using rule 25 (primitiveStmt)
    HEADLIST    reduce using rule 25 (primitiveStmt)
    TAILLIST    reduce using rule 25 (primitiveStmt)
    IF          reduce using rule 25 (primitiveStmt)
    FOR         reduce using rule 25 (primitiveStmt)
    READ        reduce using rule 25 (primitiveStmt)
    WRITE       reduce using rule 25 (primitiveStmt)
    WRITELN     reduce using rule 25 (primitiveStmt)
    RETURN      reduce using rule 25 (primitiveStmt)
    STFUNC      reduce using rule 25 (primitiveStmt)
    ENDFUNC     reduce using rule 25 (primitiveStmt)
    PARENL      reduce using rule 25 (primitiveStmt)


State 55

   26 primitiveStmt: returnStmt •

    ID          reduce using rule 26 (primitiveStmt)
    TYPE        reduce using rule 26 (primitiveStmt)
    NIL         reduce using rule 26 (primitiveStmt)
    INTEGER     reduce using rule 26 (primitiveStmt)
    DECIMAL     reduce using rule 26 (primitiveStmt)
    ERRORTOKEN  reduce using rule 26 (primitiveStmt)
    ADD         reduce using rule 26 (primitiveStmt)
    SUB         reduce using rule 26 (primitiveStmt)
    HEADLIST    reduce using rule 26 (primitiveStmt)
    TAILLIST    reduce using rule 26 (primitiveStmt)
    IF          reduce using rule 26 (primitiveStmt)
    FOR         reduce using rule 26 (primitiveStmt)
    READ        reduce using rule 26 (primitiveStmt)
    WRITE       reduce using rule 26 (primitiveStmt)
    WRITELN     reduce using rule 26 (primitiveStmt)
    RETURN      reduce using rule 26 (primitiveStmt)
    STFUNC      reduce using rule 26 (primitiveStmt)
    ENDFUNC     reduce using rule 26 (primitiveStmt)
    PARENL      reduce using rule 26 (primitiveStmt)


State 56

   30 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 90


State 57

   43 expression: assignExp •

    SEMIC  reduce using rule 43 (expression)


State 58

   44 expression: simpleExp •

    SEMIC  reduce using rule 44 (expression)


State 59

   27 primitiveStmt: inOp •

    ID          reduce using rule 27 (primitiveStmt)
    TYPE        reduce using rule 27 (primitiveStmt)
    NIL         reduce using rule 27 (primitiveStmt)
    INTEGER     reduce using rule 27 (primitiveStmt)
    DECIMAL     reduce using rule 27 (primitiveStmt)
    ERRORTOKEN  reduce using rule 27 (primitiveStmt)
    ADD         reduce using rule 27 (primitiveStmt)
    SUB         reduce using rule 27 (primitiveStmt)
    HEADLIST    reduce using rule 27 (primitiveStmt)
    TAILLIST    reduce using rule 27 (primitiveStmt)
    IF          reduce using rule 27 (primitiveStmt)
    FOR         reduce using rule 27 (primitiveStmt)
    READ        reduce using rule 27 (primitiveStmt)
    WRITE       reduce using rule 27 (primitiveStmt)
    WRITELN     reduce using rule 27 (primitiveStmt)
    RETURN      reduce using rule 27 (primitiveStmt)
    STFUNC      reduce using rule 27 (primitiveStmt)
    ENDFUNC     reduce using rule 27 (primitiveStmt)
    PARENL      reduce using rule 27 (primitiveStmt)


State 60

   28 primitiveStmt: outOp •

    ID          reduce using rule 28 (primitiveStmt)
    TYPE        reduce using rule 28 (primitiveStmt)
    NIL         reduce using rule 28 (primitiveStmt)
    INTEGER     reduce using rule 28 (primitiveStmt)
    DECIMAL     reduce using rule 28 (primitiveStmt)
    ERRORTOKEN  reduce using rule 28 (primitiveStmt)
    ADD         reduce using rule 28 (primitiveStmt)
    SUB         reduce using rule 28 (primitiveStmt)
    HEADLIST    reduce using rule 28 (primitiveStmt)
    TAILLIST    reduce using rule 28 (primitiveStmt)
    IF          reduce using rule 28 (primitiveStmt)
    FOR         reduce using rule 28 (primitiveStmt)
    READ        reduce using rule 28 (primitiveStmt)
    WRITE       reduce using rule 28 (primitiveStmt)
    WRITELN     reduce using rule 28 (primitiveStmt)
    RETURN      reduce using rule 28 (primitiveStmt)
    STFUNC      reduce using rule 28 (primitiveStmt)
    ENDFUNC     reduce using rule 28 (primitiveStmt)
    PARENL      reduce using rule 28 (primitiveStmt)


State 61

   47 simpleExp: binListExp •

    SEMIC  reduce using rule 47 (simpleExp)


State 62

   78 mulExp: unaryListExp •

    ADD        reduce using rule 78 (mulExp)
    SUB        reduce using rule 78 (mulExp)
    MULT       reduce using rule 78 (mulExp)
    DIV        reduce using rule 78 (mulExp)
    OR         reduce using rule 78 (mulExp)
    AND        reduce using rule 78 (mulExp)
    SMALLER    reduce using rule 78 (mulExp)
    GREATER    reduce using rule 78 (mulExp)
    SMALLEQ    reduce using rule 78 (mulExp)
    GREATEQ    reduce using rule 78 (mulExp)
    EQUALS     reduce using rule 78 (mulExp)
    DIFFERENT  reduce using rule 78 (mulExp)
    SEMIC      reduce using rule 78 (mulExp)


State 63

   46 simpleExp: binLogicalExp •
   58 binLogicalExp: binLogicalExp • binLogicalOp relationalExp

    OR   shift, and go to state 91
    AND  shift, and go to state 92

    SEMIC  reduce using rule 46 (simpleExp)

    binLogicalOp  go to state 93


State 64

   59 binLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 94
    GREATER    shift, and go to state 95
    SMALLEQ    shift, and go to state 96
    GREATEQ    shift, and go to state 97
    EQUALS     shift, and go to state 98
    DIFFERENT  shift, and go to state 99

    OR     reduce using rule 59 (binLogicalExp)
    AND    reduce using rule 59 (binLogicalExp)
    SEMIC  reduce using rule 59 (binLogicalExp)

    relationalOp  go to state 100


State 65

   63 relationalExp: sumExp •
   70 sumExp: sumExp • ADD mulExp
   71       | sumExp • SUB mulExp

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    OR         reduce using rule 63 (relationalExp)
    AND        reduce using rule 63 (relationalExp)
    SMALLER    reduce using rule 63 (relationalExp)
    GREATER    reduce using rule 63 (relationalExp)
    SMALLEQ    reduce using rule 63 (relationalExp)
    GREATEQ    reduce using rule 63 (relationalExp)
    EQUALS     reduce using rule 63 (relationalExp)
    DIFFERENT  reduce using rule 63 (relationalExp)
    SEMIC      reduce using rule 63 (relationalExp)


State 66

   72 sumExp: mulExp •
   73 mulExp: mulExp • MULT factor
   74       | mulExp • DIV factor

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104

    ADD        reduce using rule 72 (sumExp)
    SUB        reduce using rule 72 (sumExp)
    OR         reduce using rule 72 (sumExp)
    AND        reduce using rule 72 (sumExp)
    SMALLER    reduce using rule 72 (sumExp)
    GREATER    reduce using rule 72 (sumExp)
    SMALLEQ    reduce using rule 72 (sumExp)
    GREATEQ    reduce using rule 72 (sumExp)
    EQUALS     reduce using rule 72 (sumExp)
    DIFFERENT  reduce using rule 72 (sumExp)
    SEMIC      reduce using rule 72 (sumExp)


State 67

   53 binListExp: factor • APPEND factor
   54           | factor • MAP factor
   55           | factor • FILTER factor
   75 mulExp: factor •

    APPEND  shift, and go to state 105
    FILTER  shift, and go to state 106
    MAP     shift, and go to state 107

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    SEMIC      reduce using rule 75 (mulExp)


State 68

   80 factor: fCall •

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    APPEND     reduce using rule 80 (factor)
    FILTER     reduce using rule 80 (factor)
    MAP        reduce using rule 80 (factor)
    SEMIC      reduce using rule 80 (factor)


State 69

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 108
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    primitiveStmt         go to state 87
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 70

   45 assignExp: ID ASSIGN • expression

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    expression     go to state 109
    assignExp      go to state 57
    simpleExp      go to state 58
    binListExp     go to state 61
    unaryListExp   go to state 62
    binLogicalExp  go to state 63
    relationalExp  go to state 64
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 67
    fCall          go to state 68


State 71

   86 fCall: ID PARENL • callParams PARENR
   87      | ID PARENL • PARENR

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215
    PARENR      shift, and go to state 110

    simpleExp      go to state 111
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223
    callParams     go to state 112


State 72

   14 simpleVarDeclaration: TYPE ID •

    SEMIC  reduce using rule 14 (simpleVarDeclaration)


State 73

   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    PARENL  shift, and go to state 224

    ADD        reduce using rule 79 (factor)
    SUB        reduce using rule 79 (factor)
    MULT       reduce using rule 79 (factor)
    DIV        reduce using rule 79 (factor)
    OR         reduce using rule 79 (factor)
    AND        reduce using rule 79 (factor)
    SMALLER    reduce using rule 79 (factor)
    GREATER    reduce using rule 79 (factor)
    SMALLEQ    reduce using rule 79 (factor)
    GREATEQ    reduce using rule 79 (factor)
    EQUALS     reduce using rule 79 (factor)
    DIFFERENT  reduce using rule 79 (factor)
    SEMIC      reduce using rule 79 (factor)


State 74

   76 mulExp: ADD factor •

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    SEMIC      reduce using rule 76 (mulExp)


State 75

   77 mulExp: SUB factor •

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    SEMIC      reduce using rule 77 (mulExp)


State 76

   56 unaryListExp: HEADLIST factor •

    ADD        reduce using rule 56 (unaryListExp)
    SUB        reduce using rule 56 (unaryListExp)
    MULT       reduce using rule 56 (unaryListExp)
    DIV        reduce using rule 56 (unaryListExp)
    OR         reduce using rule 56 (unaryListExp)
    AND        reduce using rule 56 (unaryListExp)
    SMALLER    reduce using rule 56 (unaryListExp)
    GREATER    reduce using rule 56 (unaryListExp)
    SMALLEQ    reduce using rule 56 (unaryListExp)
    GREATEQ    reduce using rule 56 (unaryListExp)
    EQUALS     reduce using rule 56 (unaryListExp)
    DIFFERENT  reduce using rule 56 (unaryListExp)
    SEMIC      reduce using rule 56 (unaryListExp)


State 77

   57 unaryListExp: TAILLIST factor •

    ADD        reduce using rule 57 (unaryListExp)
    SUB        reduce using rule 57 (unaryListExp)
    MULT       reduce using rule 57 (unaryListExp)
    DIV        reduce using rule 57 (unaryListExp)
    OR         reduce using rule 57 (unaryListExp)
    AND        reduce using rule 57 (unaryListExp)
    SMALLER    reduce using rule 57 (unaryListExp)
    GREATER    reduce using rule 57 (unaryListExp)
    SMALLEQ    reduce using rule 57 (unaryListExp)
    GREATEQ    reduce using rule 57 (unaryListExp)
    EQUALS     reduce using rule 57 (unaryListExp)
    DIFFERENT  reduce using rule 57 (unaryListExp)
    SEMIC      reduce using rule 57 (unaryListExp)


State 78

   35 ifStmt: IF PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 113
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 79

   39 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt
   41         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    assignExp      go to state 114
    simpleExp      go to state 115
    binListExp     go to state 61
    unaryListExp   go to state 62
    binLogicalExp  go to state 63
    relationalExp  go to state 64
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 67
    fCall          go to state 68


State 80

   48 inOp: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 116


State 81

   49 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 172
    STRING      shift, and go to state 117
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 118
    outConst       go to state 119
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 82

   50 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 172
    STRING      shift, and go to state 117
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 118
    outConst       go to state 120
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 83

   42 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 121


State 84

   19 compoundStmt: STFUNC stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 122
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    primitiveStmt         go to state 87
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 85

   81 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 123


State 86

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC •

    $end  reduce using rule 13 (funcDeclaration)
    TYPE  reduce using rule 13 (funcDeclaration)


State 87

   20 stmtList: stmtList primitiveStmt •

    ID          reduce using rule 20 (stmtList)
    TYPE        reduce using rule 20 (stmtList)
    NIL         reduce using rule 20 (stmtList)
    INTEGER     reduce using rule 20 (stmtList)
    DECIMAL     reduce using rule 20 (stmtList)
    ERRORTOKEN  reduce using rule 20 (stmtList)
    ADD         reduce using rule 20 (stmtList)
    SUB         reduce using rule 20 (stmtList)
    HEADLIST    reduce using rule 20 (stmtList)
    TAILLIST    reduce using rule 20 (stmtList)
    IF          reduce using rule 20 (stmtList)
    FOR         reduce using rule 20 (stmtList)
    READ        reduce using rule 20 (stmtList)
    WRITE       reduce using rule 20 (stmtList)
    WRITELN     reduce using rule 20 (stmtList)
    RETURN      reduce using rule 20 (stmtList)
    STFUNC      reduce using rule 20 (stmtList)
    ENDFUNC     reduce using rule 20 (stmtList)
    PARENL      reduce using rule 20 (stmtList)


State 88

   19 compoundStmt: STFUNC • stmtList ENDFUNC
   33 condStmt: ifStmt STFUNC • ENDFUNC
   34         | ifStmt STFUNC • ENDFUNC elseStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 124
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    stmtList              go to state 225
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 89

   31 condStmt: ifStmt primitiveStmt •
   32         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 125

    ID          reduce using rule 31 (condStmt)
    TYPE        reduce using rule 31 (condStmt)
    NIL         reduce using rule 31 (condStmt)
    INTEGER     reduce using rule 31 (condStmt)
    DECIMAL     reduce using rule 31 (condStmt)
    ERRORTOKEN  reduce using rule 31 (condStmt)
    ADD         reduce using rule 31 (condStmt)
    SUB         reduce using rule 31 (condStmt)
    HEADLIST    reduce using rule 31 (condStmt)
    TAILLIST    reduce using rule 31 (condStmt)
    IF          reduce using rule 31 (condStmt)
    FOR         reduce using rule 31 (condStmt)
    READ        reduce using rule 31 (condStmt)
    WRITE       reduce using rule 31 (condStmt)
    WRITELN     reduce using rule 31 (condStmt)
    RETURN      reduce using rule 31 (condStmt)
    STFUNC      reduce using rule 31 (condStmt)
    ENDFUNC     reduce using rule 31 (condStmt)
    PARENL      reduce using rule 31 (condStmt)

    elseStmt  go to state 126


State 90

   30 exprStmt: expression SEMIC •

    ID          reduce using rule 30 (exprStmt)
    TYPE        reduce using rule 30 (exprStmt)
    NIL         reduce using rule 30 (exprStmt)
    INTEGER     reduce using rule 30 (exprStmt)
    DECIMAL     reduce using rule 30 (exprStmt)
    ERRORTOKEN  reduce using rule 30 (exprStmt)
    ADD         reduce using rule 30 (exprStmt)
    SUB         reduce using rule 30 (exprStmt)
    HEADLIST    reduce using rule 30 (exprStmt)
    TAILLIST    reduce using rule 30 (exprStmt)
    IF          reduce using rule 30 (exprStmt)
    FOR         reduce using rule 30 (exprStmt)
    READ        reduce using rule 30 (exprStmt)
    WRITE       reduce using rule 30 (exprStmt)
    WRITELN     reduce using rule 30 (exprStmt)
    RETURN      reduce using rule 30 (exprStmt)
    STFUNC      reduce using rule 30 (exprStmt)
    ENDFUNC     reduce using rule 30 (exprStmt)
    PARENL      reduce using rule 30 (exprStmt)


State 91

   60 binLogicalOp: OR •

    ID          reduce using rule 60 (binLogicalOp)
    NIL         reduce using rule 60 (binLogicalOp)
    INTEGER     reduce using rule 60 (binLogicalOp)
    DECIMAL     reduce using rule 60 (binLogicalOp)
    ERRORTOKEN  reduce using rule 60 (binLogicalOp)
    ADD         reduce using rule 60 (binLogicalOp)
    SUB         reduce using rule 60 (binLogicalOp)
    HEADLIST    reduce using rule 60 (binLogicalOp)
    TAILLIST    reduce using rule 60 (binLogicalOp)
    PARENL      reduce using rule 60 (binLogicalOp)


State 92

   61 binLogicalOp: AND •

    ID          reduce using rule 61 (binLogicalOp)
    NIL         reduce using rule 61 (binLogicalOp)
    INTEGER     reduce using rule 61 (binLogicalOp)
    DECIMAL     reduce using rule 61 (binLogicalOp)
    ERRORTOKEN  reduce using rule 61 (binLogicalOp)
    ADD         reduce using rule 61 (binLogicalOp)
    SUB         reduce using rule 61 (binLogicalOp)
    HEADLIST    reduce using rule 61 (binLogicalOp)
    TAILLIST    reduce using rule 61 (binLogicalOp)
    PARENL      reduce using rule 61 (binLogicalOp)


State 93

   58 binLogicalExp: binLogicalExp binLogicalOp • relationalExp

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 170

    unaryListExp   go to state 62
    relationalExp  go to state 127
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 128
    fCall          go to state 171


State 94

   64 relationalOp: SMALLER •

    ID          reduce using rule 64 (relationalOp)
    NIL         reduce using rule 64 (relationalOp)
    INTEGER     reduce using rule 64 (relationalOp)
    DECIMAL     reduce using rule 64 (relationalOp)
    ERRORTOKEN  reduce using rule 64 (relationalOp)
    ADD         reduce using rule 64 (relationalOp)
    SUB         reduce using rule 64 (relationalOp)
    HEADLIST    reduce using rule 64 (relationalOp)
    TAILLIST    reduce using rule 64 (relationalOp)
    PARENL      reduce using rule 64 (relationalOp)


State 95

   65 relationalOp: GREATER •

    ID          reduce using rule 65 (relationalOp)
    NIL         reduce using rule 65 (relationalOp)
    INTEGER     reduce using rule 65 (relationalOp)
    DECIMAL     reduce using rule 65 (relationalOp)
    ERRORTOKEN  reduce using rule 65 (relationalOp)
    ADD         reduce using rule 65 (relationalOp)
    SUB         reduce using rule 65 (relationalOp)
    HEADLIST    reduce using rule 65 (relationalOp)
    TAILLIST    reduce using rule 65 (relationalOp)
    PARENL      reduce using rule 65 (relationalOp)


State 96

   66 relationalOp: SMALLEQ •

    ID          reduce using rule 66 (relationalOp)
    NIL         reduce using rule 66 (relationalOp)
    INTEGER     reduce using rule 66 (relationalOp)
    DECIMAL     reduce using rule 66 (relationalOp)
    ERRORTOKEN  reduce using rule 66 (relationalOp)
    ADD         reduce using rule 66 (relationalOp)
    SUB         reduce using rule 66 (relationalOp)
    HEADLIST    reduce using rule 66 (relationalOp)
    TAILLIST    reduce using rule 66 (relationalOp)
    PARENL      reduce using rule 66 (relationalOp)


State 97

   67 relationalOp: GREATEQ •

    ID          reduce using rule 67 (relationalOp)
    NIL         reduce using rule 67 (relationalOp)
    INTEGER     reduce using rule 67 (relationalOp)
    DECIMAL     reduce using rule 67 (relationalOp)
    ERRORTOKEN  reduce using rule 67 (relationalOp)
    ADD         reduce using rule 67 (relationalOp)
    SUB         reduce using rule 67 (relationalOp)
    HEADLIST    reduce using rule 67 (relationalOp)
    TAILLIST    reduce using rule 67 (relationalOp)
    PARENL      reduce using rule 67 (relationalOp)


State 98

   68 relationalOp: EQUALS •

    ID          reduce using rule 68 (relationalOp)
    NIL         reduce using rule 68 (relationalOp)
    INTEGER     reduce using rule 68 (relationalOp)
    DECIMAL     reduce using rule 68 (relationalOp)
    ERRORTOKEN  reduce using rule 68 (relationalOp)
    ADD         reduce using rule 68 (relationalOp)
    SUB         reduce using rule 68 (relationalOp)
    HEADLIST    reduce using rule 68 (relationalOp)
    TAILLIST    reduce using rule 68 (relationalOp)
    PARENL      reduce using rule 68 (relationalOp)


State 99

   69 relationalOp: DIFFERENT •

    ID          reduce using rule 69 (relationalOp)
    NIL         reduce using rule 69 (relationalOp)
    INTEGER     reduce using rule 69 (relationalOp)
    DECIMAL     reduce using rule 69 (relationalOp)
    ERRORTOKEN  reduce using rule 69 (relationalOp)
    ADD         reduce using rule 69 (relationalOp)
    SUB         reduce using rule 69 (relationalOp)
    HEADLIST    reduce using rule 69 (relationalOp)
    TAILLIST    reduce using rule 69 (relationalOp)
    PARENL      reduce using rule 69 (relationalOp)


State 100

   62 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 170

    unaryListExp  go to state 62
    sumExp        go to state 129
    mulExp        go to state 66
    factor        go to state 128
    fCall         go to state 171


State 101

   70 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 170

    unaryListExp  go to state 62
    mulExp        go to state 130
    factor        go to state 128
    fCall         go to state 171


State 102

   71 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 170

    unaryListExp  go to state 62
    mulExp        go to state 131
    factor        go to state 128
    fCall         go to state 171


State 103

   73 mulExp: mulExp MULT • factor

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    PARENL      shift, and go to state 170

    factor  go to state 132
    fCall   go to state 171


State 104

   74 mulExp: mulExp DIV • factor

    ID          shift, and go to state 73
    NIL         shift, and go to state 166
    INTEGER     shift, and go to state 167
    DECIMAL     shift, and go to state 168
    ERRORTOKEN  shift, and go to state 169
    PARENL      shift, and go to state 170

    factor  go to state 133
    fCall   go to state 171


State 105

   53 binListExp: factor APPEND • factor

    ID          shift, and go to state 226
    NIL         shift, and go to state 227
    INTEGER     shift, and go to state 228
    DECIMAL     shift, and go to state 229
    ERRORTOKEN  shift, and go to state 230
    PARENL      shift, and go to state 231

    factor  go to state 134
    fCall   go to state 232


State 106

   55 binListExp: factor FILTER • factor

    ID          shift, and go to state 226
    NIL         shift, and go to state 227
    INTEGER     shift, and go to state 228
    DECIMAL     shift, and go to state 229
    ERRORTOKEN  shift, and go to state 230
    PARENL      shift, and go to state 231

    factor  go to state 135
    fCall   go to state 232


State 107

   54 binListExp: factor MAP • factor

    ID          shift, and go to state 226
    NIL         shift, and go to state 227
    INTEGER     shift, and go to state 228
    DECIMAL     shift, and go to state 229
    ERRORTOKEN  shift, and go to state 230
    PARENL      shift, and go to state 231

    factor  go to state 136
    fCall   go to state 232


State 108

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC •

    $end  reduce using rule 10 (funcDeclaration)
    TYPE  reduce using rule 10 (funcDeclaration)


State 109

   45 assignExp: ID ASSIGN expression •

    SEMIC  reduce using rule 45 (assignExp)


State 110

   87 fCall: ID PARENL PARENR •

    ADD        reduce using rule 87 (fCall)
    SUB        reduce using rule 87 (fCall)
    MULT       reduce using rule 87 (fCall)
    DIV        reduce using rule 87 (fCall)
    OR         reduce using rule 87 (fCall)
    AND        reduce using rule 87 (fCall)
    SMALLER    reduce using rule 87 (fCall)
    GREATER    reduce using rule 87 (fCall)
    SMALLEQ    reduce using rule 87 (fCall)
    GREATEQ    reduce using rule 87 (fCall)
    EQUALS     reduce using rule 87 (fCall)
    DIFFERENT  reduce using rule 87 (fCall)
    APPEND     reduce using rule 87 (fCall)
    FILTER     reduce using rule 87 (fCall)
    MAP        reduce using rule 87 (fCall)
    SEMIC      reduce using rule 87 (fCall)


State 111

   89 callParams: simpleExp •

    COMMA   reduce using rule 89 (callParams)
    PARENR  reduce using rule 89 (callParams)


State 112

   86 fCall: ID PARENL callParams • PARENR
   88 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 137
    PARENR  shift, and go to state 138


State 113

   35 ifStmt: IF PARENL simpleExp • PARENR

    PARENR  shift, and go to state 139


State 114

   39 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

    SEMIC  shift, and go to state 140


State 115

   41 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    SEMIC  shift, and go to state 141


State 116

   48 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 142


State 117

   51 outConst: STRING •

    PARENR  reduce using rule 51 (outConst)


State 118

   52 outConst: simpleExp •

    PARENR  reduce using rule 52 (outConst)


State 119

   49 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 143


State 120

   50 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 144


State 121

   42 returnStmt: RETURN expression SEMIC •

    ID          reduce using rule 42 (returnStmt)
    TYPE        reduce using rule 42 (returnStmt)
    NIL         reduce using rule 42 (returnStmt)
    INTEGER     reduce using rule 42 (returnStmt)
    DECIMAL     reduce using rule 42 (returnStmt)
    ERRORTOKEN  reduce using rule 42 (returnStmt)
    ADD         reduce using rule 42 (returnStmt)
    SUB         reduce using rule 42 (returnStmt)
    HEADLIST    reduce using rule 42 (returnStmt)
    TAILLIST    reduce using rule 42 (returnStmt)
    IF          reduce using rule 42 (returnStmt)
    FOR         reduce using rule 42 (returnStmt)
    READ        reduce using rule 42 (returnStmt)
    WRITE       reduce using rule 42 (returnStmt)
    WRITELN     reduce using rule 42 (returnStmt)
    RETURN      reduce using rule 42 (returnStmt)
    STFUNC      reduce using rule 42 (returnStmt)
    ENDFUNC     reduce using rule 42 (returnStmt)
    PARENL      reduce using rule 42 (returnStmt)


State 122

   19 compoundStmt: STFUNC stmtList ENDFUNC •

    ID          reduce using rule 19 (compoundStmt)
    TYPE        reduce using rule 19 (compoundStmt)
    NIL         reduce using rule 19 (compoundStmt)
    INTEGER     reduce using rule 19 (compoundStmt)
    DECIMAL     reduce using rule 19 (compoundStmt)
    ERRORTOKEN  reduce using rule 19 (compoundStmt)
    ADD         reduce using rule 19 (compoundStmt)
    SUB         reduce using rule 19 (compoundStmt)
    HEADLIST    reduce using rule 19 (compoundStmt)
    TAILLIST    reduce using rule 19 (compoundStmt)
    IF          reduce using rule 19 (compoundStmt)
    FOR         reduce using rule 19 (compoundStmt)
    READ        reduce using rule 19 (compoundStmt)
    WRITE       reduce using rule 19 (compoundStmt)
    WRITELN     reduce using rule 19 (compoundStmt)
    RETURN      reduce using rule 19 (compoundStmt)
    STFUNC      reduce using rule 19 (compoundStmt)
    ENDFUNC     reduce using rule 19 (compoundStmt)
    PARENL      reduce using rule 19 (compoundStmt)


State 123

   81 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    SEMIC      reduce using rule 81 (factor)


State 124

   33 condStmt: ifStmt STFUNC ENDFUNC •
   34         | ifStmt STFUNC ENDFUNC • elseStmt

    ELSE  shift, and go to state 125

    ID          reduce using rule 33 (condStmt)
    TYPE        reduce using rule 33 (condStmt)
    NIL         reduce using rule 33 (condStmt)
    INTEGER     reduce using rule 33 (condStmt)
    DECIMAL     reduce using rule 33 (condStmt)
    ERRORTOKEN  reduce using rule 33 (condStmt)
    ADD         reduce using rule 33 (condStmt)
    SUB         reduce using rule 33 (condStmt)
    HEADLIST    reduce using rule 33 (condStmt)
    TAILLIST    reduce using rule 33 (condStmt)
    IF          reduce using rule 33 (condStmt)
    FOR         reduce using rule 33 (condStmt)
    READ        reduce using rule 33 (condStmt)
    WRITE       reduce using rule 33 (condStmt)
    WRITELN     reduce using rule 33 (condStmt)
    RETURN      reduce using rule 33 (condStmt)
    STFUNC      reduce using rule 33 (condStmt)
    ENDFUNC     reduce using rule 33 (condStmt)
    PARENL      reduce using rule 33 (condStmt)

    elseStmt  go to state 145


State 125

   37 elseStmt: ELSE • $@5 primitiveStmt

    ID          reduce using rule 36 ($@5)
    TYPE        reduce using rule 36 ($@5)
    NIL         reduce using rule 36 ($@5)
    INTEGER     reduce using rule 36 ($@5)
    DECIMAL     reduce using rule 36 ($@5)
    ERRORTOKEN  reduce using rule 36 ($@5)
    ADD         reduce using rule 36 ($@5)
    SUB         reduce using rule 36 ($@5)
    HEADLIST    reduce using rule 36 ($@5)
    TAILLIST    reduce using rule 36 ($@5)
    IF          reduce using rule 36 ($@5)
    FOR         reduce using rule 36 ($@5)
    READ        reduce using rule 36 ($@5)
    WRITE       reduce using rule 36 ($@5)
    WRITELN     reduce using rule 36 ($@5)
    RETURN      reduce using rule 36 ($@5)
    STFUNC      reduce using rule 36 ($@5)
    PARENL      reduce using rule 36 ($@5)

    $@5  go to state 146


State 126

   32 condStmt: ifStmt primitiveStmt elseStmt •

    ID          reduce using rule 32 (condStmt)
    TYPE        reduce using rule 32 (condStmt)
    NIL         reduce using rule 32 (condStmt)
    INTEGER     reduce using rule 32 (condStmt)
    DECIMAL     reduce using rule 32 (condStmt)
    ERRORTOKEN  reduce using rule 32 (condStmt)
    ADD         reduce using rule 32 (condStmt)
    SUB         reduce using rule 32 (condStmt)
    HEADLIST    reduce using rule 32 (condStmt)
    TAILLIST    reduce using rule 32 (condStmt)
    IF          reduce using rule 32 (condStmt)
    FOR         reduce using rule 32 (condStmt)
    READ        reduce using rule 32 (condStmt)
    WRITE       reduce using rule 32 (condStmt)
    WRITELN     reduce using rule 32 (condStmt)
    RETURN      reduce using rule 32 (condStmt)
    STFUNC      reduce using rule 32 (condStmt)
    ENDFUNC     reduce using rule 32 (condStmt)
    PARENL      reduce using rule 32 (condStmt)


State 127

   58 binLogicalExp: binLogicalExp binLogicalOp relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 94
    GREATER    shift, and go to state 95
    SMALLEQ    shift, and go to state 96
    GREATEQ    shift, and go to state 97
    EQUALS     shift, and go to state 98
    DIFFERENT  shift, and go to state 99

    OR     reduce using rule 58 (binLogicalExp)
    AND    reduce using rule 58 (binLogicalExp)
    SEMIC  reduce using rule 58 (binLogicalExp)

    relationalOp  go to state 100


State 128

   75 mulExp: factor •

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    SEMIC      reduce using rule 75 (mulExp)


State 129

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • ADD mulExp
   71       | sumExp • SUB mulExp

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    OR         reduce using rule 62 (relationalExp)
    AND        reduce using rule 62 (relationalExp)
    SMALLER    reduce using rule 62 (relationalExp)
    GREATER    reduce using rule 62 (relationalExp)
    SMALLEQ    reduce using rule 62 (relationalExp)
    GREATEQ    reduce using rule 62 (relationalExp)
    EQUALS     reduce using rule 62 (relationalExp)
    DIFFERENT  reduce using rule 62 (relationalExp)
    SEMIC      reduce using rule 62 (relationalExp)


State 130

   70 sumExp: sumExp ADD mulExp •
   73 mulExp: mulExp • MULT factor
   74       | mulExp • DIV factor

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104

    ADD        reduce using rule 70 (sumExp)
    SUB        reduce using rule 70 (sumExp)
    OR         reduce using rule 70 (sumExp)
    AND        reduce using rule 70 (sumExp)
    SMALLER    reduce using rule 70 (sumExp)
    GREATER    reduce using rule 70 (sumExp)
    SMALLEQ    reduce using rule 70 (sumExp)
    GREATEQ    reduce using rule 70 (sumExp)
    EQUALS     reduce using rule 70 (sumExp)
    DIFFERENT  reduce using rule 70 (sumExp)
    SEMIC      reduce using rule 70 (sumExp)


State 131

   71 sumExp: sumExp SUB mulExp •
   73 mulExp: mulExp • MULT factor
   74       | mulExp • DIV factor

    MULT  shift, and go to state 103
    DIV   shift, and go to state 104

    ADD        reduce using rule 71 (sumExp)
    SUB        reduce using rule 71 (sumExp)
    OR         reduce using rule 71 (sumExp)
    AND        reduce using rule 71 (sumExp)
    SMALLER    reduce using rule 71 (sumExp)
    GREATER    reduce using rule 71 (sumExp)
    SMALLEQ    reduce using rule 71 (sumExp)
    GREATEQ    reduce using rule 71 (sumExp)
    EQUALS     reduce using rule 71 (sumExp)
    DIFFERENT  reduce using rule 71 (sumExp)
    SEMIC      reduce using rule 71 (sumExp)


State 132

   73 mulExp: mulExp MULT factor •

    ADD        reduce using rule 73 (mulExp)
    SUB        reduce using rule 73 (mulExp)
    MULT       reduce using rule 73 (mulExp)
    DIV        reduce using rule 73 (mulExp)
    OR         reduce using rule 73 (mulExp)
    AND        reduce using rule 73 (mulExp)
    SMALLER    reduce using rule 73 (mulExp)
    GREATER    reduce using rule 73 (mulExp)
    SMALLEQ    reduce using rule 73 (mulExp)
    GREATEQ    reduce using rule 73 (mulExp)
    EQUALS     reduce using rule 73 (mulExp)
    DIFFERENT  reduce using rule 73 (mulExp)
    SEMIC      reduce using rule 73 (mulExp)


State 133

   74 mulExp: mulExp DIV factor •

    ADD        reduce using rule 74 (mulExp)
    SUB        reduce using rule 74 (mulExp)
    MULT       reduce using rule 74 (mulExp)
    DIV        reduce using rule 74 (mulExp)
    OR         reduce using rule 74 (mulExp)
    AND        reduce using rule 74 (mulExp)
    SMALLER    reduce using rule 74 (mulExp)
    GREATER    reduce using rule 74 (mulExp)
    SMALLEQ    reduce using rule 74 (mulExp)
    GREATEQ    reduce using rule 74 (mulExp)
    EQUALS     reduce using rule 74 (mulExp)
    DIFFERENT  reduce using rule 74 (mulExp)
    SEMIC      reduce using rule 74 (mulExp)


State 134

   53 binListExp: factor APPEND factor •

    SEMIC  reduce using rule 53 (binListExp)


State 135

   55 binListExp: factor FILTER factor •

    SEMIC  reduce using rule 55 (binListExp)


State 136

   54 binListExp: factor MAP factor •

    SEMIC  reduce using rule 54 (binListExp)


State 137

   88 callParams: callParams COMMA • simpleExp

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215

    simpleExp      go to state 147
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223


State 138

   86 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    APPEND     reduce using rule 86 (fCall)
    FILTER     reduce using rule 86 (fCall)
    MAP        reduce using rule 86 (fCall)
    SEMIC      reduce using rule 86 (fCall)


State 139

   35 ifStmt: IF PARENL simpleExp PARENR •

    ID          reduce using rule 35 (ifStmt)
    TYPE        reduce using rule 35 (ifStmt)
    NIL         reduce using rule 35 (ifStmt)
    INTEGER     reduce using rule 35 (ifStmt)
    DECIMAL     reduce using rule 35 (ifStmt)
    ERRORTOKEN  reduce using rule 35 (ifStmt)
    ADD         reduce using rule 35 (ifStmt)
    SUB         reduce using rule 35 (ifStmt)
    HEADLIST    reduce using rule 35 (ifStmt)
    TAILLIST    reduce using rule 35 (ifStmt)
    IF          reduce using rule 35 (ifStmt)
    FOR         reduce using rule 35 (ifStmt)
    READ        reduce using rule 35 (ifStmt)
    WRITE       reduce using rule 35 (ifStmt)
    WRITELN     reduce using rule 35 (ifStmt)
    RETURN      reduce using rule 35 (ifStmt)
    STFUNC      reduce using rule 35 (ifStmt)
    PARENL      reduce using rule 35 (ifStmt)


State 140

   39 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

    ID          shift, and go to state 233
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    simpleExp      go to state 148
    binListExp     go to state 61
    unaryListExp   go to state 62
    binLogicalExp  go to state 63
    relationalExp  go to state 64
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 67
    fCall          go to state 68


State 141

   41 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    ID          shift, and go to state 233
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    simpleExp      go to state 149
    binListExp     go to state 61
    unaryListExp   go to state 62
    binLogicalExp  go to state 63
    relationalExp  go to state 64
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 67
    fCall          go to state 68


State 142

   48 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 150


State 143

   49 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 151


State 144

   50 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 152


State 145

   34 condStmt: ifStmt STFUNC ENDFUNC elseStmt •

    ID          reduce using rule 34 (condStmt)
    TYPE        reduce using rule 34 (condStmt)
    NIL         reduce using rule 34 (condStmt)
    INTEGER     reduce using rule 34 (condStmt)
    DECIMAL     reduce using rule 34 (condStmt)
    ERRORTOKEN  reduce using rule 34 (condStmt)
    ADD         reduce using rule 34 (condStmt)
    SUB         reduce using rule 34 (condStmt)
    HEADLIST    reduce using rule 34 (condStmt)
    TAILLIST    reduce using rule 34 (condStmt)
    IF          reduce using rule 34 (condStmt)
    FOR         reduce using rule 34 (condStmt)
    READ        reduce using rule 34 (condStmt)
    WRITE       reduce using rule 34 (condStmt)
    WRITELN     reduce using rule 34 (condStmt)
    RETURN      reduce using rule 34 (condStmt)
    STFUNC      reduce using rule 34 (condStmt)
    ENDFUNC     reduce using rule 34 (condStmt)
    PARENL      reduce using rule 34 (condStmt)


State 146

   37 elseStmt: ELSE $@5 • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    primitiveStmt         go to state 153
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 147

   88 callParams: callParams COMMA simpleExp •

    COMMA   reduce using rule 88 (callParams)
    PARENR  reduce using rule 88 (callParams)


State 148

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR $@6 primitiveStmt

    SEMIC  shift, and go to state 154


State 149

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR $@7 primitiveStmt

    SEMIC  shift, and go to state 155


State 150

   48 inOp: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 48 (inOp)
    TYPE        reduce using rule 48 (inOp)
    NIL         reduce using rule 48 (inOp)
    INTEGER     reduce using rule 48 (inOp)
    DECIMAL     reduce using rule 48 (inOp)
    ERRORTOKEN  reduce using rule 48 (inOp)
    ADD         reduce using rule 48 (inOp)
    SUB         reduce using rule 48 (inOp)
    HEADLIST    reduce using rule 48 (inOp)
    TAILLIST    reduce using rule 48 (inOp)
    IF          reduce using rule 48 (inOp)
    FOR         reduce using rule 48 (inOp)
    READ        reduce using rule 48 (inOp)
    WRITE       reduce using rule 48 (inOp)
    WRITELN     reduce using rule 48 (inOp)
    RETURN      reduce using rule 48 (inOp)
    STFUNC      reduce using rule 48 (inOp)
    ENDFUNC     reduce using rule 48 (inOp)
    PARENL      reduce using rule 48 (inOp)


State 151

   49 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID          reduce using rule 49 (outOp)
    TYPE        reduce using rule 49 (outOp)
    NIL         reduce using rule 49 (outOp)
    INTEGER     reduce using rule 49 (outOp)
    DECIMAL     reduce using rule 49 (outOp)
    ERRORTOKEN  reduce using rule 49 (outOp)
    ADD         reduce using rule 49 (outOp)
    SUB         reduce using rule 49 (outOp)
    HEADLIST    reduce using rule 49 (outOp)
    TAILLIST    reduce using rule 49 (outOp)
    IF          reduce using rule 49 (outOp)
    FOR         reduce using rule 49 (outOp)
    READ        reduce using rule 49 (outOp)
    WRITE       reduce using rule 49 (outOp)
    WRITELN     reduce using rule 49 (outOp)
    RETURN      reduce using rule 49 (outOp)
    STFUNC      reduce using rule 49 (outOp)
    ENDFUNC     reduce using rule 49 (outOp)
    PARENL      reduce using rule 49 (outOp)


State 152

   50 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID          reduce using rule 50 (outOp)
    TYPE        reduce using rule 50 (outOp)
    NIL         reduce using rule 50 (outOp)
    INTEGER     reduce using rule 50 (outOp)
    DECIMAL     reduce using rule 50 (outOp)
    ERRORTOKEN  reduce using rule 50 (outOp)
    ADD         reduce using rule 50 (outOp)
    SUB         reduce using rule 50 (outOp)
    HEADLIST    reduce using rule 50 (outOp)
    TAILLIST    reduce using rule 50 (outOp)
    IF          reduce using rule 50 (outOp)
    FOR         reduce using rule 50 (outOp)
    READ        reduce using rule 50 (outOp)
    WRITE       reduce using rule 50 (outOp)
    WRITELN     reduce using rule 50 (outOp)
    RETURN      reduce using rule 50 (outOp)
    STFUNC      reduce using rule 50 (outOp)
    ENDFUNC     reduce using rule 50 (outOp)
    PARENL      reduce using rule 50 (outOp)


State 153

   37 elseStmt: ELSE $@5 primitiveStmt •

    ID          reduce using rule 37 (elseStmt)
    TYPE        reduce using rule 37 (elseStmt)
    NIL         reduce using rule 37 (elseStmt)
    INTEGER     reduce using rule 37 (elseStmt)
    DECIMAL     reduce using rule 37 (elseStmt)
    ERRORTOKEN  reduce using rule 37 (elseStmt)
    ADD         reduce using rule 37 (elseStmt)
    SUB         reduce using rule 37 (elseStmt)
    HEADLIST    reduce using rule 37 (elseStmt)
    TAILLIST    reduce using rule 37 (elseStmt)
    IF          reduce using rule 37 (elseStmt)
    FOR         reduce using rule 37 (elseStmt)
    READ        reduce using rule 37 (elseStmt)
    WRITE       reduce using rule 37 (elseStmt)
    WRITELN     reduce using rule 37 (elseStmt)
    RETURN      reduce using rule 37 (elseStmt)
    STFUNC      reduce using rule 37 (elseStmt)
    ENDFUNC     reduce using rule 37 (elseStmt)
    PARENL      reduce using rule 37 (elseStmt)


State 154

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR $@6 primitiveStmt

    ID  shift, and go to state 156

    assignExp  go to state 157


State 155

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR $@7 primitiveStmt

    ID  shift, and go to state 156

    assignExp  go to state 158


State 156

   45 assignExp: ID • ASSIGN expression

    ASSIGN  shift, and go to state 234


State 157

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR $@6 primitiveStmt

    PARENR  shift, and go to state 159


State 158

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR $@7 primitiveStmt

    PARENR  shift, and go to state 160


State 159

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • $@6 primitiveStmt

    ID          reduce using rule 38 ($@6)
    TYPE        reduce using rule 38 ($@6)
    NIL         reduce using rule 38 ($@6)
    INTEGER     reduce using rule 38 ($@6)
    DECIMAL     reduce using rule 38 ($@6)
    ERRORTOKEN  reduce using rule 38 ($@6)
    ADD         reduce using rule 38 ($@6)
    SUB         reduce using rule 38 ($@6)
    HEADLIST    reduce using rule 38 ($@6)
    TAILLIST    reduce using rule 38 ($@6)
    IF          reduce using rule 38 ($@6)
    FOR         reduce using rule 38 ($@6)
    READ        reduce using rule 38 ($@6)
    WRITE       reduce using rule 38 ($@6)
    WRITELN     reduce using rule 38 ($@6)
    RETURN      reduce using rule 38 ($@6)
    STFUNC      reduce using rule 38 ($@6)
    PARENL      reduce using rule 38 ($@6)

    $@6  go to state 161


State 160

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • $@7 primitiveStmt

    ID          reduce using rule 40 ($@7)
    TYPE        reduce using rule 40 ($@7)
    NIL         reduce using rule 40 ($@7)
    INTEGER     reduce using rule 40 ($@7)
    DECIMAL     reduce using rule 40 ($@7)
    ERRORTOKEN  reduce using rule 40 ($@7)
    ADD         reduce using rule 40 ($@7)
    SUB         reduce using rule 40 ($@7)
    HEADLIST    reduce using rule 40 ($@7)
    TAILLIST    reduce using rule 40 ($@7)
    IF          reduce using rule 40 ($@7)
    FOR         reduce using rule 40 ($@7)
    READ        reduce using rule 40 ($@7)
    WRITE       reduce using rule 40 ($@7)
    WRITELN     reduce using rule 40 ($@7)
    RETURN      reduce using rule 40 ($@7)
    STFUNC      reduce using rule 40 ($@7)
    PARENL      reduce using rule 40 ($@7)

    $@7  go to state 162


State 161

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    primitiveStmt         go to state 163
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 162

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    primitiveStmt         go to state 164
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 163

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt •

    ID          reduce using rule 39 (iterStmt)
    TYPE        reduce using rule 39 (iterStmt)
    NIL         reduce using rule 39 (iterStmt)
    INTEGER     reduce using rule 39 (iterStmt)
    DECIMAL     reduce using rule 39 (iterStmt)
    ERRORTOKEN  reduce using rule 39 (iterStmt)
    ADD         reduce using rule 39 (iterStmt)
    SUB         reduce using rule 39 (iterStmt)
    HEADLIST    reduce using rule 39 (iterStmt)
    TAILLIST    reduce using rule 39 (iterStmt)
    IF          reduce using rule 39 (iterStmt)
    FOR         reduce using rule 39 (iterStmt)
    READ        reduce using rule 39 (iterStmt)
    WRITE       reduce using rule 39 (iterStmt)
    WRITELN     reduce using rule 39 (iterStmt)
    RETURN      reduce using rule 39 (iterStmt)
    STFUNC      reduce using rule 39 (iterStmt)
    ENDFUNC     reduce using rule 39 (iterStmt)
    PARENL      reduce using rule 39 (iterStmt)


State 164

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt •

    ID          reduce using rule 41 (iterStmt)
    TYPE        reduce using rule 41 (iterStmt)
    NIL         reduce using rule 41 (iterStmt)
    INTEGER     reduce using rule 41 (iterStmt)
    DECIMAL     reduce using rule 41 (iterStmt)
    ERRORTOKEN  reduce using rule 41 (iterStmt)
    ADD         reduce using rule 41 (iterStmt)
    SUB         reduce using rule 41 (iterStmt)
    HEADLIST    reduce using rule 41 (iterStmt)
    TAILLIST    reduce using rule 41 (iterStmt)
    IF          reduce using rule 41 (iterStmt)
    FOR         reduce using rule 41 (iterStmt)
    READ        reduce using rule 41 (iterStmt)
    WRITE       reduce using rule 41 (iterStmt)
    WRITELN     reduce using rule 41 (iterStmt)
    RETURN      reduce using rule 41 (iterStmt)
    STFUNC      reduce using rule 41 (iterStmt)
    ENDFUNC     reduce using rule 41 (iterStmt)
    PARENL      reduce using rule 41 (iterStmt)


State 165

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 235


State 166

   84 factor: NIL •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    SEMIC      reduce using rule 84 (factor)


State 167

   82 factor: INTEGER •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    SEMIC      reduce using rule 82 (factor)


State 168

   83 factor: DECIMAL •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    SEMIC      reduce using rule 83 (factor)


State 169

   85 factor: ERRORTOKEN •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    SEMIC      reduce using rule 85 (factor)


State 170

   81 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 236
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 171

   80 factor: fCall •

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    SEMIC      reduce using rule 80 (factor)


State 172

   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    PARENL  shift, and go to state 237

    ADD        reduce using rule 79 (factor)
    SUB        reduce using rule 79 (factor)
    MULT       reduce using rule 79 (factor)
    DIV        reduce using rule 79 (factor)
    OR         reduce using rule 79 (factor)
    AND        reduce using rule 79 (factor)
    SMALLER    reduce using rule 79 (factor)
    GREATER    reduce using rule 79 (factor)
    SMALLEQ    reduce using rule 79 (factor)
    GREATEQ    reduce using rule 79 (factor)
    EQUALS     reduce using rule 79 (factor)
    DIFFERENT  reduce using rule 79 (factor)
    APPEND     reduce using rule 79 (factor)
    FILTER     reduce using rule 79 (factor)
    MAP        reduce using rule 79 (factor)
    PARENR     reduce using rule 79 (factor)


State 173

   84 factor: NIL •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    APPEND     reduce using rule 84 (factor)
    FILTER     reduce using rule 84 (factor)
    MAP        reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 174

   82 factor: INTEGER •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    APPEND     reduce using rule 82 (factor)
    FILTER     reduce using rule 82 (factor)
    MAP        reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 175

   83 factor: DECIMAL •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    APPEND     reduce using rule 83 (factor)
    FILTER     reduce using rule 83 (factor)
    MAP        reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 176

   85 factor: ERRORTOKEN •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    APPEND     reduce using rule 85 (factor)
    FILTER     reduce using rule 85 (factor)
    MAP        reduce using rule 85 (factor)
    PARENR     reduce using rule 85 (factor)


State 177

   76 mulExp: ADD • factor

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    PARENL      shift, and go to state 243

    factor  go to state 244
    fCall   go to state 245


State 178

   77 mulExp: SUB • factor

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    PARENL      shift, and go to state 243

    factor  go to state 246
    fCall   go to state 245


State 179

   56 unaryListExp: HEADLIST • factor

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    PARENL      shift, and go to state 243

    factor  go to state 247
    fCall   go to state 245


State 180

   57 unaryListExp: TAILLIST • factor

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    PARENL      shift, and go to state 243

    factor  go to state 248
    fCall   go to state 245


State 181

   81 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 249
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 182

   47 simpleExp: binListExp •

    PARENR  reduce using rule 47 (simpleExp)


State 183

   78 mulExp: unaryListExp •

    ADD        reduce using rule 78 (mulExp)
    SUB        reduce using rule 78 (mulExp)
    MULT       reduce using rule 78 (mulExp)
    DIV        reduce using rule 78 (mulExp)
    OR         reduce using rule 78 (mulExp)
    AND        reduce using rule 78 (mulExp)
    SMALLER    reduce using rule 78 (mulExp)
    GREATER    reduce using rule 78 (mulExp)
    SMALLEQ    reduce using rule 78 (mulExp)
    GREATEQ    reduce using rule 78 (mulExp)
    EQUALS     reduce using rule 78 (mulExp)
    DIFFERENT  reduce using rule 78 (mulExp)
    PARENR     reduce using rule 78 (mulExp)


State 184

   46 simpleExp: binLogicalExp •
   58 binLogicalExp: binLogicalExp • binLogicalOp relationalExp

    OR   shift, and go to state 91
    AND  shift, and go to state 92

    PARENR  reduce using rule 46 (simpleExp)

    binLogicalOp  go to state 250


State 185

   59 binLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 94
    GREATER    shift, and go to state 95
    SMALLEQ    shift, and go to state 96
    GREATEQ    shift, and go to state 97
    EQUALS     shift, and go to state 98
    DIFFERENT  shift, and go to state 99

    OR      reduce using rule 59 (binLogicalExp)
    AND     reduce using rule 59 (binLogicalExp)
    PARENR  reduce using rule 59 (binLogicalExp)

    relationalOp  go to state 251


State 186

   63 relationalExp: sumExp •
   70 sumExp: sumExp • ADD mulExp
   71       | sumExp • SUB mulExp

    ADD  shift, and go to state 252
    SUB  shift, and go to state 253

    OR         reduce using rule 63 (relationalExp)
    AND        reduce using rule 63 (relationalExp)
    SMALLER    reduce using rule 63 (relationalExp)
    GREATER    reduce using rule 63 (relationalExp)
    SMALLEQ    reduce using rule 63 (relationalExp)
    GREATEQ    reduce using rule 63 (relationalExp)
    EQUALS     reduce using rule 63 (relationalExp)
    DIFFERENT  reduce using rule 63 (relationalExp)
    PARENR     reduce using rule 63 (relationalExp)


State 187

   72 sumExp: mulExp •
   73 mulExp: mulExp • MULT factor
   74       | mulExp • DIV factor

    MULT  shift, and go to state 254
    DIV   shift, and go to state 255

    ADD        reduce using rule 72 (sumExp)
    SUB        reduce using rule 72 (sumExp)
    OR         reduce using rule 72 (sumExp)
    AND        reduce using rule 72 (sumExp)
    SMALLER    reduce using rule 72 (sumExp)
    GREATER    reduce using rule 72 (sumExp)
    SMALLEQ    reduce using rule 72 (sumExp)
    GREATEQ    reduce using rule 72 (sumExp)
    EQUALS     reduce using rule 72 (sumExp)
    DIFFERENT  reduce using rule 72 (sumExp)
    PARENR     reduce using rule 72 (sumExp)


State 188

   53 binListExp: factor • APPEND factor
   54           | factor • MAP factor
   55           | factor • FILTER factor
   75 mulExp: factor •

    APPEND  shift, and go to state 256
    FILTER  shift, and go to state 257
    MAP     shift, and go to state 258

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    PARENR     reduce using rule 75 (mulExp)


State 189

   80 factor: fCall •

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    APPEND     reduce using rule 80 (factor)
    FILTER     reduce using rule 80 (factor)
    MAP        reduce using rule 80 (factor)
    PARENR     reduce using rule 80 (factor)


State 190

   39 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt
   41         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    PARENL  shift, and go to state 259


State 191

   48 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 260


State 192

   49 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 261


State 193

   50 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 262


State 194

   42 returnStmt: RETURN • expression SEMIC

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    expression     go to state 263
    assignExp      go to state 57
    simpleExp      go to state 58
    binListExp     go to state 61
    unaryListExp   go to state 62
    binLogicalExp  go to state 63
    relationalExp  go to state 64
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 67
    fCall          go to state 68


State 195

   29 primitiveStmt: varDeclaration •

    ID          reduce using rule 29 (primitiveStmt)
    TYPE        reduce using rule 29 (primitiveStmt)
    NIL         reduce using rule 29 (primitiveStmt)
    INTEGER     reduce using rule 29 (primitiveStmt)
    DECIMAL     reduce using rule 29 (primitiveStmt)
    ERRORTOKEN  reduce using rule 29 (primitiveStmt)
    ELSE        reduce using rule 29 (primitiveStmt)
    ADD         reduce using rule 29 (primitiveStmt)
    SUB         reduce using rule 29 (primitiveStmt)
    HEADLIST    reduce using rule 29 (primitiveStmt)
    TAILLIST    reduce using rule 29 (primitiveStmt)
    IF          reduce using rule 29 (primitiveStmt)
    FOR         reduce using rule 29 (primitiveStmt)
    READ        reduce using rule 29 (primitiveStmt)
    WRITE       reduce using rule 29 (primitiveStmt)
    WRITELN     reduce using rule 29 (primitiveStmt)
    RETURN      reduce using rule 29 (primitiveStmt)
    STFUNC      reduce using rule 29 (primitiveStmt)
    ENDFUNC     reduce using rule 29 (primitiveStmt)
    PARENL      reduce using rule 29 (primitiveStmt)


State 196

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 264


State 197

   23 primitiveStmt: compoundStmt •

    ID          reduce using rule 23 (primitiveStmt)
    TYPE        reduce using rule 23 (primitiveStmt)
    NIL         reduce using rule 23 (primitiveStmt)
    INTEGER     reduce using rule 23 (primitiveStmt)
    DECIMAL     reduce using rule 23 (primitiveStmt)
    ERRORTOKEN  reduce using rule 23 (primitiveStmt)
    ELSE        reduce using rule 23 (primitiveStmt)
    ADD         reduce using rule 23 (primitiveStmt)
    SUB         reduce using rule 23 (primitiveStmt)
    HEADLIST    reduce using rule 23 (primitiveStmt)
    TAILLIST    reduce using rule 23 (primitiveStmt)
    IF          reduce using rule 23 (primitiveStmt)
    FOR         reduce using rule 23 (primitiveStmt)
    READ        reduce using rule 23 (primitiveStmt)
    WRITE       reduce using rule 23 (primitiveStmt)
    WRITELN     reduce using rule 23 (primitiveStmt)
    RETURN      reduce using rule 23 (primitiveStmt)
    STFUNC      reduce using rule 23 (primitiveStmt)
    ENDFUNC     reduce using rule 23 (primitiveStmt)
    PARENL      reduce using rule 23 (primitiveStmt)


State 198

   22 primitiveStmt: exprStmt •

    ID          reduce using rule 22 (primitiveStmt)
    TYPE        reduce using rule 22 (primitiveStmt)
    NIL         reduce using rule 22 (primitiveStmt)
    INTEGER     reduce using rule 22 (primitiveStmt)
    DECIMAL     reduce using rule 22 (primitiveStmt)
    ERRORTOKEN  reduce using rule 22 (primitiveStmt)
    ELSE        reduce using rule 22 (primitiveStmt)
    ADD         reduce using rule 22 (primitiveStmt)
    SUB         reduce using rule 22 (primitiveStmt)
    HEADLIST    reduce using rule 22 (primitiveStmt)
    TAILLIST    reduce using rule 22 (primitiveStmt)
    IF          reduce using rule 22 (primitiveStmt)
    FOR         reduce using rule 22 (primitiveStmt)
    READ        reduce using rule 22 (primitiveStmt)
    WRITE       reduce using rule 22 (primitiveStmt)
    WRITELN     reduce using rule 22 (primitiveStmt)
    RETURN      reduce using rule 22 (primitiveStmt)
    STFUNC      reduce using rule 22 (primitiveStmt)
    ENDFUNC     reduce using rule 22 (primitiveStmt)
    PARENL      reduce using rule 22 (primitiveStmt)


State 199

   24 primitiveStmt: condStmt •

    ID          reduce using rule 24 (primitiveStmt)
    TYPE        reduce using rule 24 (primitiveStmt)
    NIL         reduce using rule 24 (primitiveStmt)
    INTEGER     reduce using rule 24 (primitiveStmt)
    DECIMAL     reduce using rule 24 (primitiveStmt)
    ERRORTOKEN  reduce using rule 24 (primitiveStmt)
    ELSE        reduce using rule 24 (primitiveStmt)
    ADD         reduce using rule 24 (primitiveStmt)
    SUB         reduce using rule 24 (primitiveStmt)
    HEADLIST    reduce using rule 24 (primitiveStmt)
    TAILLIST    reduce using rule 24 (primitiveStmt)
    IF          reduce using rule 24 (primitiveStmt)
    FOR         reduce using rule 24 (primitiveStmt)
    READ        reduce using rule 24 (primitiveStmt)
    WRITE       reduce using rule 24 (primitiveStmt)
    WRITELN     reduce using rule 24 (primitiveStmt)
    RETURN      reduce using rule 24 (primitiveStmt)
    STFUNC      reduce using rule 24 (primitiveStmt)
    ENDFUNC     reduce using rule 24 (primitiveStmt)
    PARENL      reduce using rule 24 (primitiveStmt)


State 200

   31 condStmt: ifStmt • primitiveStmt
   32         | ifStmt • primitiveStmt elseStmt
   33         | ifStmt • STFUNC ENDFUNC
   34         | ifStmt • STFUNC ENDFUNC elseStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 190
    READ        shift, and go to state 191
    WRITE       shift, and go to state 192
    WRITELN     shift, and go to state 193
    RETURN      shift, and go to state 194
    STFUNC      shift, and go to state 265
    PARENL      shift, and go to state 46

    varDeclaration        go to state 195
    simpleVarDeclaration  go to state 196
    compoundStmt          go to state 197
    primitiveStmt         go to state 266
    exprStmt              go to state 198
    condStmt              go to state 199
    ifStmt                go to state 200
    iterStmt              go to state 201
    returnStmt            go to state 202
    expression            go to state 203
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 204
    outOp                 go to state 205
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 201

   25 primitiveStmt: iterStmt •

    ID          reduce using rule 25 (primitiveStmt)
    TYPE        reduce using rule 25 (primitiveStmt)
    NIL         reduce using rule 25 (primitiveStmt)
    INTEGER     reduce using rule 25 (primitiveStmt)
    DECIMAL     reduce using rule 25 (primitiveStmt)
    ERRORTOKEN  reduce using rule 25 (primitiveStmt)
    ELSE        reduce using rule 25 (primitiveStmt)
    ADD         reduce using rule 25 (primitiveStmt)
    SUB         reduce using rule 25 (primitiveStmt)
    HEADLIST    reduce using rule 25 (primitiveStmt)
    TAILLIST    reduce using rule 25 (primitiveStmt)
    IF          reduce using rule 25 (primitiveStmt)
    FOR         reduce using rule 25 (primitiveStmt)
    READ        reduce using rule 25 (primitiveStmt)
    WRITE       reduce using rule 25 (primitiveStmt)
    WRITELN     reduce using rule 25 (primitiveStmt)
    RETURN      reduce using rule 25 (primitiveStmt)
    STFUNC      reduce using rule 25 (primitiveStmt)
    ENDFUNC     reduce using rule 25 (primitiveStmt)
    PARENL      reduce using rule 25 (primitiveStmt)


State 202

   26 primitiveStmt: returnStmt •

    ID          reduce using rule 26 (primitiveStmt)
    TYPE        reduce using rule 26 (primitiveStmt)
    NIL         reduce using rule 26 (primitiveStmt)
    INTEGER     reduce using rule 26 (primitiveStmt)
    DECIMAL     reduce using rule 26 (primitiveStmt)
    ERRORTOKEN  reduce using rule 26 (primitiveStmt)
    ELSE        reduce using rule 26 (primitiveStmt)
    ADD         reduce using rule 26 (primitiveStmt)
    SUB         reduce using rule 26 (primitiveStmt)
    HEADLIST    reduce using rule 26 (primitiveStmt)
    TAILLIST    reduce using rule 26 (primitiveStmt)
    IF          reduce using rule 26 (primitiveStmt)
    FOR         reduce using rule 26 (primitiveStmt)
    READ        reduce using rule 26 (primitiveStmt)
    WRITE       reduce using rule 26 (primitiveStmt)
    WRITELN     reduce using rule 26 (primitiveStmt)
    RETURN      reduce using rule 26 (primitiveStmt)
    STFUNC      reduce using rule 26 (primitiveStmt)
    ENDFUNC     reduce using rule 26 (primitiveStmt)
    PARENL      reduce using rule 26 (primitiveStmt)


State 203

   30 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 267


State 204

   27 primitiveStmt: inOp •

    ID          reduce using rule 27 (primitiveStmt)
    TYPE        reduce using rule 27 (primitiveStmt)
    NIL         reduce using rule 27 (primitiveStmt)
    INTEGER     reduce using rule 27 (primitiveStmt)
    DECIMAL     reduce using rule 27 (primitiveStmt)
    ERRORTOKEN  reduce using rule 27 (primitiveStmt)
    ELSE        reduce using rule 27 (primitiveStmt)
    ADD         reduce using rule 27 (primitiveStmt)
    SUB         reduce using rule 27 (primitiveStmt)
    HEADLIST    reduce using rule 27 (primitiveStmt)
    TAILLIST    reduce using rule 27 (primitiveStmt)
    IF          reduce using rule 27 (primitiveStmt)
    FOR         reduce using rule 27 (primitiveStmt)
    READ        reduce using rule 27 (primitiveStmt)
    WRITE       reduce using rule 27 (primitiveStmt)
    WRITELN     reduce using rule 27 (primitiveStmt)
    RETURN      reduce using rule 27 (primitiveStmt)
    STFUNC      reduce using rule 27 (primitiveStmt)
    ENDFUNC     reduce using rule 27 (primitiveStmt)
    PARENL      reduce using rule 27 (primitiveStmt)


State 205

   28 primitiveStmt: outOp •

    ID          reduce using rule 28 (primitiveStmt)
    TYPE        reduce using rule 28 (primitiveStmt)
    NIL         reduce using rule 28 (primitiveStmt)
    INTEGER     reduce using rule 28 (primitiveStmt)
    DECIMAL     reduce using rule 28 (primitiveStmt)
    ERRORTOKEN  reduce using rule 28 (primitiveStmt)
    ELSE        reduce using rule 28 (primitiveStmt)
    ADD         reduce using rule 28 (primitiveStmt)
    SUB         reduce using rule 28 (primitiveStmt)
    HEADLIST    reduce using rule 28 (primitiveStmt)
    TAILLIST    reduce using rule 28 (primitiveStmt)
    IF          reduce using rule 28 (primitiveStmt)
    FOR         reduce using rule 28 (primitiveStmt)
    READ        reduce using rule 28 (primitiveStmt)
    WRITE       reduce using rule 28 (primitiveStmt)
    WRITELN     reduce using rule 28 (primitiveStmt)
    RETURN      reduce using rule 28 (primitiveStmt)
    STFUNC      reduce using rule 28 (primitiveStmt)
    ENDFUNC     reduce using rule 28 (primitiveStmt)
    PARENL      reduce using rule 28 (primitiveStmt)


State 206

   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    PARENL  shift, and go to state 268

    ADD        reduce using rule 79 (factor)
    SUB        reduce using rule 79 (factor)
    MULT       reduce using rule 79 (factor)
    DIV        reduce using rule 79 (factor)
    OR         reduce using rule 79 (factor)
    AND        reduce using rule 79 (factor)
    SMALLER    reduce using rule 79 (factor)
    GREATER    reduce using rule 79 (factor)
    SMALLEQ    reduce using rule 79 (factor)
    GREATEQ    reduce using rule 79 (factor)
    EQUALS     reduce using rule 79 (factor)
    DIFFERENT  reduce using rule 79 (factor)
    APPEND     reduce using rule 79 (factor)
    FILTER     reduce using rule 79 (factor)
    MAP        reduce using rule 79 (factor)
    COMMA      reduce using rule 79 (factor)
    PARENR     reduce using rule 79 (factor)


State 207

   84 factor: NIL •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    APPEND     reduce using rule 84 (factor)
    FILTER     reduce using rule 84 (factor)
    MAP        reduce using rule 84 (factor)
    COMMA      reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 208

   82 factor: INTEGER •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    APPEND     reduce using rule 82 (factor)
    FILTER     reduce using rule 82 (factor)
    MAP        reduce using rule 82 (factor)
    COMMA      reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 209

   83 factor: DECIMAL •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    APPEND     reduce using rule 83 (factor)
    FILTER     reduce using rule 83 (factor)
    MAP        reduce using rule 83 (factor)
    COMMA      reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 210

   85 factor: ERRORTOKEN •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    APPEND     reduce using rule 85 (factor)
    FILTER     reduce using rule 85 (factor)
    MAP        reduce using rule 85 (factor)
    COMMA      reduce using rule 85 (factor)
    PARENR     reduce using rule 85 (factor)


State 211

   76 mulExp: ADD • factor

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    PARENL      shift, and go to state 274

    factor  go to state 275
    fCall   go to state 276


State 212

   77 mulExp: SUB • factor

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    PARENL      shift, and go to state 274

    factor  go to state 277
    fCall   go to state 276


State 213

   56 unaryListExp: HEADLIST • factor

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    PARENL      shift, and go to state 274

    factor  go to state 278
    fCall   go to state 276


State 214

   57 unaryListExp: TAILLIST • factor

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    PARENL      shift, and go to state 274

    factor  go to state 279
    fCall   go to state 276


State 215

   81 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 280
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 216

   47 simpleExp: binListExp •

    COMMA   reduce using rule 47 (simpleExp)
    PARENR  reduce using rule 47 (simpleExp)


State 217

   78 mulExp: unaryListExp •

    ADD        reduce using rule 78 (mulExp)
    SUB        reduce using rule 78 (mulExp)
    MULT       reduce using rule 78 (mulExp)
    DIV        reduce using rule 78 (mulExp)
    OR         reduce using rule 78 (mulExp)
    AND        reduce using rule 78 (mulExp)
    SMALLER    reduce using rule 78 (mulExp)
    GREATER    reduce using rule 78 (mulExp)
    SMALLEQ    reduce using rule 78 (mulExp)
    GREATEQ    reduce using rule 78 (mulExp)
    EQUALS     reduce using rule 78 (mulExp)
    DIFFERENT  reduce using rule 78 (mulExp)
    COMMA      reduce using rule 78 (mulExp)
    PARENR     reduce using rule 78 (mulExp)


State 218

   46 simpleExp: binLogicalExp •
   58 binLogicalExp: binLogicalExp • binLogicalOp relationalExp

    OR   shift, and go to state 91
    AND  shift, and go to state 92

    COMMA   reduce using rule 46 (simpleExp)
    PARENR  reduce using rule 46 (simpleExp)

    binLogicalOp  go to state 281


State 219

   59 binLogicalExp: relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 94
    GREATER    shift, and go to state 95
    SMALLEQ    shift, and go to state 96
    GREATEQ    shift, and go to state 97
    EQUALS     shift, and go to state 98
    DIFFERENT  shift, and go to state 99

    OR      reduce using rule 59 (binLogicalExp)
    AND     reduce using rule 59 (binLogicalExp)
    COMMA   reduce using rule 59 (binLogicalExp)
    PARENR  reduce using rule 59 (binLogicalExp)

    relationalOp  go to state 282


State 220

   63 relationalExp: sumExp •
   70 sumExp: sumExp • ADD mulExp
   71       | sumExp • SUB mulExp

    ADD  shift, and go to state 283
    SUB  shift, and go to state 284

    OR         reduce using rule 63 (relationalExp)
    AND        reduce using rule 63 (relationalExp)
    SMALLER    reduce using rule 63 (relationalExp)
    GREATER    reduce using rule 63 (relationalExp)
    SMALLEQ    reduce using rule 63 (relationalExp)
    GREATEQ    reduce using rule 63 (relationalExp)
    EQUALS     reduce using rule 63 (relationalExp)
    DIFFERENT  reduce using rule 63 (relationalExp)
    COMMA      reduce using rule 63 (relationalExp)
    PARENR     reduce using rule 63 (relationalExp)


State 221

   72 sumExp: mulExp •
   73 mulExp: mulExp • MULT factor
   74       | mulExp • DIV factor

    MULT  shift, and go to state 285
    DIV   shift, and go to state 286

    ADD        reduce using rule 72 (sumExp)
    SUB        reduce using rule 72 (sumExp)
    OR         reduce using rule 72 (sumExp)
    AND        reduce using rule 72 (sumExp)
    SMALLER    reduce using rule 72 (sumExp)
    GREATER    reduce using rule 72 (sumExp)
    SMALLEQ    reduce using rule 72 (sumExp)
    GREATEQ    reduce using rule 72 (sumExp)
    EQUALS     reduce using rule 72 (sumExp)
    DIFFERENT  reduce using rule 72 (sumExp)
    COMMA      reduce using rule 72 (sumExp)
    PARENR     reduce using rule 72 (sumExp)


State 222

   53 binListExp: factor • APPEND factor
   54           | factor • MAP factor
   55           | factor • FILTER factor
   75 mulExp: factor •

    APPEND  shift, and go to state 287
    FILTER  shift, and go to state 288
    MAP     shift, and go to state 289

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    COMMA      reduce using rule 75 (mulExp)
    PARENR     reduce using rule 75 (mulExp)


State 223

   80 factor: fCall •

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    APPEND     reduce using rule 80 (factor)
    FILTER     reduce using rule 80 (factor)
    MAP        reduce using rule 80 (factor)
    COMMA      reduce using rule 80 (factor)
    PARENR     reduce using rule 80 (factor)


State 224

   86 fCall: ID PARENL • callParams PARENR
   87      | ID PARENL • PARENR

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215
    PARENR      shift, and go to state 290

    simpleExp      go to state 111
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223
    callParams     go to state 291


State 225

   19 compoundStmt: STFUNC stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 292
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    primitiveStmt         go to state 87
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 226

   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    PARENL  shift, and go to state 293

    SEMIC  reduce using rule 79 (factor)


State 227

   84 factor: NIL •

    SEMIC  reduce using rule 84 (factor)


State 228

   82 factor: INTEGER •

    SEMIC  reduce using rule 82 (factor)


State 229

   83 factor: DECIMAL •

    SEMIC  reduce using rule 83 (factor)


State 230

   85 factor: ERRORTOKEN •

    SEMIC  reduce using rule 85 (factor)


State 231

   81 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 294
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 232

   80 factor: fCall •

    SEMIC  reduce using rule 80 (factor)


State 233

   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    PARENL  shift, and go to state 71

    ADD        reduce using rule 79 (factor)
    SUB        reduce using rule 79 (factor)
    MULT       reduce using rule 79 (factor)
    DIV        reduce using rule 79 (factor)
    OR         reduce using rule 79 (factor)
    AND        reduce using rule 79 (factor)
    SMALLER    reduce using rule 79 (factor)
    GREATER    reduce using rule 79 (factor)
    SMALLEQ    reduce using rule 79 (factor)
    GREATEQ    reduce using rule 79 (factor)
    EQUALS     reduce using rule 79 (factor)
    DIFFERENT  reduce using rule 79 (factor)
    APPEND     reduce using rule 79 (factor)
    FILTER     reduce using rule 79 (factor)
    MAP        reduce using rule 79 (factor)
    SEMIC      reduce using rule 79 (factor)


State 234

   45 assignExp: ID ASSIGN • expression

    ID          shift, and go to state 295
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    expression     go to state 296
    assignExp      go to state 297
    simpleExp      go to state 298
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 235

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID          reduce using rule 7 (varDeclaration)
    TYPE        reduce using rule 7 (varDeclaration)
    NIL         reduce using rule 7 (varDeclaration)
    INTEGER     reduce using rule 7 (varDeclaration)
    DECIMAL     reduce using rule 7 (varDeclaration)
    ERRORTOKEN  reduce using rule 7 (varDeclaration)
    ADD         reduce using rule 7 (varDeclaration)
    SUB         reduce using rule 7 (varDeclaration)
    HEADLIST    reduce using rule 7 (varDeclaration)
    TAILLIST    reduce using rule 7 (varDeclaration)
    IF          reduce using rule 7 (varDeclaration)
    FOR         reduce using rule 7 (varDeclaration)
    READ        reduce using rule 7 (varDeclaration)
    WRITE       reduce using rule 7 (varDeclaration)
    WRITELN     reduce using rule 7 (varDeclaration)
    RETURN      reduce using rule 7 (varDeclaration)
    STFUNC      reduce using rule 7 (varDeclaration)
    ENDFUNC     reduce using rule 7 (varDeclaration)
    PARENL      reduce using rule 7 (varDeclaration)


State 236

   81 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 299


State 237

   86 fCall: ID PARENL • callParams PARENR
   87      | ID PARENL • PARENR

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215
    PARENR      shift, and go to state 300

    simpleExp      go to state 111
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223
    callParams     go to state 301


State 238

   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    PARENL  shift, and go to state 302

    ADD        reduce using rule 79 (factor)
    SUB        reduce using rule 79 (factor)
    MULT       reduce using rule 79 (factor)
    DIV        reduce using rule 79 (factor)
    OR         reduce using rule 79 (factor)
    AND        reduce using rule 79 (factor)
    SMALLER    reduce using rule 79 (factor)
    GREATER    reduce using rule 79 (factor)
    SMALLEQ    reduce using rule 79 (factor)
    GREATEQ    reduce using rule 79 (factor)
    EQUALS     reduce using rule 79 (factor)
    DIFFERENT  reduce using rule 79 (factor)
    PARENR     reduce using rule 79 (factor)


State 239

   84 factor: NIL •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 240

   82 factor: INTEGER •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 241

   83 factor: DECIMAL •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 242

   85 factor: ERRORTOKEN •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    PARENR     reduce using rule 85 (factor)


State 243

   81 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 303
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 244

   76 mulExp: ADD factor •

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    PARENR     reduce using rule 76 (mulExp)


State 245

   80 factor: fCall •

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    PARENR     reduce using rule 80 (factor)


State 246

   77 mulExp: SUB factor •

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    PARENR     reduce using rule 77 (mulExp)


State 247

   56 unaryListExp: HEADLIST factor •

    ADD        reduce using rule 56 (unaryListExp)
    SUB        reduce using rule 56 (unaryListExp)
    MULT       reduce using rule 56 (unaryListExp)
    DIV        reduce using rule 56 (unaryListExp)
    OR         reduce using rule 56 (unaryListExp)
    AND        reduce using rule 56 (unaryListExp)
    SMALLER    reduce using rule 56 (unaryListExp)
    GREATER    reduce using rule 56 (unaryListExp)
    SMALLEQ    reduce using rule 56 (unaryListExp)
    GREATEQ    reduce using rule 56 (unaryListExp)
    EQUALS     reduce using rule 56 (unaryListExp)
    DIFFERENT  reduce using rule 56 (unaryListExp)
    PARENR     reduce using rule 56 (unaryListExp)


State 248

   57 unaryListExp: TAILLIST factor •

    ADD        reduce using rule 57 (unaryListExp)
    SUB        reduce using rule 57 (unaryListExp)
    MULT       reduce using rule 57 (unaryListExp)
    DIV        reduce using rule 57 (unaryListExp)
    OR         reduce using rule 57 (unaryListExp)
    AND        reduce using rule 57 (unaryListExp)
    SMALLER    reduce using rule 57 (unaryListExp)
    GREATER    reduce using rule 57 (unaryListExp)
    SMALLEQ    reduce using rule 57 (unaryListExp)
    GREATEQ    reduce using rule 57 (unaryListExp)
    EQUALS     reduce using rule 57 (unaryListExp)
    DIFFERENT  reduce using rule 57 (unaryListExp)
    PARENR     reduce using rule 57 (unaryListExp)


State 249

   81 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 304


State 250

   58 binLogicalExp: binLogicalExp binLogicalOp • relationalExp

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 243

    unaryListExp   go to state 183
    relationalExp  go to state 305
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 306
    fCall          go to state 245


State 251

   62 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 243

    unaryListExp  go to state 183
    sumExp        go to state 307
    mulExp        go to state 187
    factor        go to state 306
    fCall         go to state 245


State 252

   70 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 243

    unaryListExp  go to state 183
    mulExp        go to state 308
    factor        go to state 306
    fCall         go to state 245


State 253

   71 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 243

    unaryListExp  go to state 183
    mulExp        go to state 309
    factor        go to state 306
    fCall         go to state 245


State 254

   73 mulExp: mulExp MULT • factor

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    PARENL      shift, and go to state 243

    factor  go to state 310
    fCall   go to state 245


State 255

   74 mulExp: mulExp DIV • factor

    ID          shift, and go to state 238
    NIL         shift, and go to state 239
    INTEGER     shift, and go to state 240
    DECIMAL     shift, and go to state 241
    ERRORTOKEN  shift, and go to state 242
    PARENL      shift, and go to state 243

    factor  go to state 311
    fCall   go to state 245


State 256

   53 binListExp: factor APPEND • factor

    ID          shift, and go to state 312
    NIL         shift, and go to state 313
    INTEGER     shift, and go to state 314
    DECIMAL     shift, and go to state 315
    ERRORTOKEN  shift, and go to state 316
    PARENL      shift, and go to state 317

    factor  go to state 318
    fCall   go to state 319


State 257

   55 binListExp: factor FILTER • factor

    ID          shift, and go to state 312
    NIL         shift, and go to state 313
    INTEGER     shift, and go to state 314
    DECIMAL     shift, and go to state 315
    ERRORTOKEN  shift, and go to state 316
    PARENL      shift, and go to state 317

    factor  go to state 320
    fCall   go to state 319


State 258

   54 binListExp: factor MAP • factor

    ID          shift, and go to state 312
    NIL         shift, and go to state 313
    INTEGER     shift, and go to state 314
    DECIMAL     shift, and go to state 315
    ERRORTOKEN  shift, and go to state 316
    PARENL      shift, and go to state 317

    factor  go to state 321
    fCall   go to state 319


State 259

   39 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt
   41         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    assignExp      go to state 322
    simpleExp      go to state 323
    binListExp     go to state 61
    unaryListExp   go to state 62
    binLogicalExp  go to state 63
    relationalExp  go to state 64
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 67
    fCall          go to state 68


State 260

   48 inOp: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 324


State 261

   49 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 172
    STRING      shift, and go to state 117
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 118
    outConst       go to state 325
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 262

   50 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 172
    STRING      shift, and go to state 117
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 118
    outConst       go to state 326
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 263

   42 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 327


State 264

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID          reduce using rule 7 (varDeclaration)
    TYPE        reduce using rule 7 (varDeclaration)
    NIL         reduce using rule 7 (varDeclaration)
    INTEGER     reduce using rule 7 (varDeclaration)
    DECIMAL     reduce using rule 7 (varDeclaration)
    ERRORTOKEN  reduce using rule 7 (varDeclaration)
    ELSE        reduce using rule 7 (varDeclaration)
    ADD         reduce using rule 7 (varDeclaration)
    SUB         reduce using rule 7 (varDeclaration)
    HEADLIST    reduce using rule 7 (varDeclaration)
    TAILLIST    reduce using rule 7 (varDeclaration)
    IF          reduce using rule 7 (varDeclaration)
    FOR         reduce using rule 7 (varDeclaration)
    READ        reduce using rule 7 (varDeclaration)
    WRITE       reduce using rule 7 (varDeclaration)
    WRITELN     reduce using rule 7 (varDeclaration)
    RETURN      reduce using rule 7 (varDeclaration)
    STFUNC      reduce using rule 7 (varDeclaration)
    ENDFUNC     reduce using rule 7 (varDeclaration)
    PARENL      reduce using rule 7 (varDeclaration)


State 265

   19 compoundStmt: STFUNC • stmtList ENDFUNC
   33 condStmt: ifStmt STFUNC • ENDFUNC
   34         | ifStmt STFUNC • ENDFUNC elseStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 328
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    stmtList              go to state 225
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 266

   31 condStmt: ifStmt primitiveStmt •
   32         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 329

    ID          reduce using rule 31 (condStmt)
    TYPE        reduce using rule 31 (condStmt)
    NIL         reduce using rule 31 (condStmt)
    INTEGER     reduce using rule 31 (condStmt)
    DECIMAL     reduce using rule 31 (condStmt)
    ERRORTOKEN  reduce using rule 31 (condStmt)
    ADD         reduce using rule 31 (condStmt)
    SUB         reduce using rule 31 (condStmt)
    HEADLIST    reduce using rule 31 (condStmt)
    TAILLIST    reduce using rule 31 (condStmt)
    IF          reduce using rule 31 (condStmt)
    FOR         reduce using rule 31 (condStmt)
    READ        reduce using rule 31 (condStmt)
    WRITE       reduce using rule 31 (condStmt)
    WRITELN     reduce using rule 31 (condStmt)
    RETURN      reduce using rule 31 (condStmt)
    STFUNC      reduce using rule 31 (condStmt)
    ENDFUNC     reduce using rule 31 (condStmt)
    PARENL      reduce using rule 31 (condStmt)

    elseStmt  go to state 330


State 267

   30 exprStmt: expression SEMIC •

    ID          reduce using rule 30 (exprStmt)
    TYPE        reduce using rule 30 (exprStmt)
    NIL         reduce using rule 30 (exprStmt)
    INTEGER     reduce using rule 30 (exprStmt)
    DECIMAL     reduce using rule 30 (exprStmt)
    ERRORTOKEN  reduce using rule 30 (exprStmt)
    ELSE        reduce using rule 30 (exprStmt)
    ADD         reduce using rule 30 (exprStmt)
    SUB         reduce using rule 30 (exprStmt)
    HEADLIST    reduce using rule 30 (exprStmt)
    TAILLIST    reduce using rule 30 (exprStmt)
    IF          reduce using rule 30 (exprStmt)
    FOR         reduce using rule 30 (exprStmt)
    READ        reduce using rule 30 (exprStmt)
    WRITE       reduce using rule 30 (exprStmt)
    WRITELN     reduce using rule 30 (exprStmt)
    RETURN      reduce using rule 30 (exprStmt)
    STFUNC      reduce using rule 30 (exprStmt)
    ENDFUNC     reduce using rule 30 (exprStmt)
    PARENL      reduce using rule 30 (exprStmt)


State 268

   86 fCall: ID PARENL • callParams PARENR
   87      | ID PARENL • PARENR

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215
    PARENR      shift, and go to state 331

    simpleExp      go to state 111
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223
    callParams     go to state 332


State 269

   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    PARENL  shift, and go to state 333

    ADD        reduce using rule 79 (factor)
    SUB        reduce using rule 79 (factor)
    MULT       reduce using rule 79 (factor)
    DIV        reduce using rule 79 (factor)
    OR         reduce using rule 79 (factor)
    AND        reduce using rule 79 (factor)
    SMALLER    reduce using rule 79 (factor)
    GREATER    reduce using rule 79 (factor)
    SMALLEQ    reduce using rule 79 (factor)
    GREATEQ    reduce using rule 79 (factor)
    EQUALS     reduce using rule 79 (factor)
    DIFFERENT  reduce using rule 79 (factor)
    COMMA      reduce using rule 79 (factor)
    PARENR     reduce using rule 79 (factor)


State 270

   84 factor: NIL •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    COMMA      reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 271

   82 factor: INTEGER •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    COMMA      reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 272

   83 factor: DECIMAL •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    COMMA      reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 273

   85 factor: ERRORTOKEN •

    ADD        reduce using rule 85 (factor)
    SUB        reduce using rule 85 (factor)
    MULT       reduce using rule 85 (factor)
    DIV        reduce using rule 85 (factor)
    OR         reduce using rule 85 (factor)
    AND        reduce using rule 85 (factor)
    SMALLER    reduce using rule 85 (factor)
    GREATER    reduce using rule 85 (factor)
    SMALLEQ    reduce using rule 85 (factor)
    GREATEQ    reduce using rule 85 (factor)
    EQUALS     reduce using rule 85 (factor)
    DIFFERENT  reduce using rule 85 (factor)
    COMMA      reduce using rule 85 (factor)
    PARENR     reduce using rule 85 (factor)


State 274

   81 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 334
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 275

   76 mulExp: ADD factor •

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    COMMA      reduce using rule 76 (mulExp)
    PARENR     reduce using rule 76 (mulExp)


State 276

   80 factor: fCall •

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    COMMA      reduce using rule 80 (factor)
    PARENR     reduce using rule 80 (factor)


State 277

   77 mulExp: SUB factor •

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    COMMA      reduce using rule 77 (mulExp)
    PARENR     reduce using rule 77 (mulExp)


State 278

   56 unaryListExp: HEADLIST factor •

    ADD        reduce using rule 56 (unaryListExp)
    SUB        reduce using rule 56 (unaryListExp)
    MULT       reduce using rule 56 (unaryListExp)
    DIV        reduce using rule 56 (unaryListExp)
    OR         reduce using rule 56 (unaryListExp)
    AND        reduce using rule 56 (unaryListExp)
    SMALLER    reduce using rule 56 (unaryListExp)
    GREATER    reduce using rule 56 (unaryListExp)
    SMALLEQ    reduce using rule 56 (unaryListExp)
    GREATEQ    reduce using rule 56 (unaryListExp)
    EQUALS     reduce using rule 56 (unaryListExp)
    DIFFERENT  reduce using rule 56 (unaryListExp)
    COMMA      reduce using rule 56 (unaryListExp)
    PARENR     reduce using rule 56 (unaryListExp)


State 279

   57 unaryListExp: TAILLIST factor •

    ADD        reduce using rule 57 (unaryListExp)
    SUB        reduce using rule 57 (unaryListExp)
    MULT       reduce using rule 57 (unaryListExp)
    DIV        reduce using rule 57 (unaryListExp)
    OR         reduce using rule 57 (unaryListExp)
    AND        reduce using rule 57 (unaryListExp)
    SMALLER    reduce using rule 57 (unaryListExp)
    GREATER    reduce using rule 57 (unaryListExp)
    SMALLEQ    reduce using rule 57 (unaryListExp)
    GREATEQ    reduce using rule 57 (unaryListExp)
    EQUALS     reduce using rule 57 (unaryListExp)
    DIFFERENT  reduce using rule 57 (unaryListExp)
    COMMA      reduce using rule 57 (unaryListExp)
    PARENR     reduce using rule 57 (unaryListExp)


State 280

   81 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 335


State 281

   58 binLogicalExp: binLogicalExp binLogicalOp • relationalExp

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 274

    unaryListExp   go to state 217
    relationalExp  go to state 336
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 337
    fCall          go to state 276


State 282

   62 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 274

    unaryListExp  go to state 217
    sumExp        go to state 338
    mulExp        go to state 221
    factor        go to state 337
    fCall         go to state 276


State 283

   70 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 274

    unaryListExp  go to state 217
    mulExp        go to state 339
    factor        go to state 337
    fCall         go to state 276


State 284

   71 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 274

    unaryListExp  go to state 217
    mulExp        go to state 340
    factor        go to state 337
    fCall         go to state 276


State 285

   73 mulExp: mulExp MULT • factor

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    PARENL      shift, and go to state 274

    factor  go to state 341
    fCall   go to state 276


State 286

   74 mulExp: mulExp DIV • factor

    ID          shift, and go to state 269
    NIL         shift, and go to state 270
    INTEGER     shift, and go to state 271
    DECIMAL     shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    PARENL      shift, and go to state 274

    factor  go to state 342
    fCall   go to state 276


State 287

   53 binListExp: factor APPEND • factor

    ID          shift, and go to state 343
    NIL         shift, and go to state 344
    INTEGER     shift, and go to state 345
    DECIMAL     shift, and go to state 346
    ERRORTOKEN  shift, and go to state 347
    PARENL      shift, and go to state 348

    factor  go to state 349
    fCall   go to state 350


State 288

   55 binListExp: factor FILTER • factor

    ID          shift, and go to state 343
    NIL         shift, and go to state 344
    INTEGER     shift, and go to state 345
    DECIMAL     shift, and go to state 346
    ERRORTOKEN  shift, and go to state 347
    PARENL      shift, and go to state 348

    factor  go to state 351
    fCall   go to state 350


State 289

   54 binListExp: factor MAP • factor

    ID          shift, and go to state 343
    NIL         shift, and go to state 344
    INTEGER     shift, and go to state 345
    DECIMAL     shift, and go to state 346
    ERRORTOKEN  shift, and go to state 347
    PARENL      shift, and go to state 348

    factor  go to state 352
    fCall   go to state 350


State 290

   87 fCall: ID PARENL PARENR •

    ADD        reduce using rule 87 (fCall)
    SUB        reduce using rule 87 (fCall)
    MULT       reduce using rule 87 (fCall)
    DIV        reduce using rule 87 (fCall)
    OR         reduce using rule 87 (fCall)
    AND        reduce using rule 87 (fCall)
    SMALLER    reduce using rule 87 (fCall)
    GREATER    reduce using rule 87 (fCall)
    SMALLEQ    reduce using rule 87 (fCall)
    GREATEQ    reduce using rule 87 (fCall)
    EQUALS     reduce using rule 87 (fCall)
    DIFFERENT  reduce using rule 87 (fCall)
    SEMIC      reduce using rule 87 (fCall)


State 291

   86 fCall: ID PARENL callParams • PARENR
   88 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 137
    PARENR  shift, and go to state 353


State 292

   19 compoundStmt: STFUNC stmtList ENDFUNC •

    ID          reduce using rule 19 (compoundStmt)
    TYPE        reduce using rule 19 (compoundStmt)
    NIL         reduce using rule 19 (compoundStmt)
    INTEGER     reduce using rule 19 (compoundStmt)
    DECIMAL     reduce using rule 19 (compoundStmt)
    ERRORTOKEN  reduce using rule 19 (compoundStmt)
    ELSE        reduce using rule 19 (compoundStmt)
    ADD         reduce using rule 19 (compoundStmt)
    SUB         reduce using rule 19 (compoundStmt)
    HEADLIST    reduce using rule 19 (compoundStmt)
    TAILLIST    reduce using rule 19 (compoundStmt)
    IF          reduce using rule 19 (compoundStmt)
    FOR         reduce using rule 19 (compoundStmt)
    READ        reduce using rule 19 (compoundStmt)
    WRITE       reduce using rule 19 (compoundStmt)
    WRITELN     reduce using rule 19 (compoundStmt)
    RETURN      reduce using rule 19 (compoundStmt)
    STFUNC      reduce using rule 19 (compoundStmt)
    ENDFUNC     reduce using rule 19 (compoundStmt)
    PARENL      reduce using rule 19 (compoundStmt)


State 293

   86 fCall: ID PARENL • callParams PARENR
   87      | ID PARENL • PARENR

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215
    PARENR      shift, and go to state 354

    simpleExp      go to state 111
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223
    callParams     go to state 355


State 294

   81 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 356


State 295

   45 assignExp: ID • ASSIGN expression
   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    ASSIGN  shift, and go to state 234
    PARENL  shift, and go to state 237

    ADD        reduce using rule 79 (factor)
    SUB        reduce using rule 79 (factor)
    MULT       reduce using rule 79 (factor)
    DIV        reduce using rule 79 (factor)
    OR         reduce using rule 79 (factor)
    AND        reduce using rule 79 (factor)
    SMALLER    reduce using rule 79 (factor)
    GREATER    reduce using rule 79 (factor)
    SMALLEQ    reduce using rule 79 (factor)
    GREATEQ    reduce using rule 79 (factor)
    EQUALS     reduce using rule 79 (factor)
    DIFFERENT  reduce using rule 79 (factor)
    APPEND     reduce using rule 79 (factor)
    FILTER     reduce using rule 79 (factor)
    MAP        reduce using rule 79 (factor)
    PARENR     reduce using rule 79 (factor)


State 296

   45 assignExp: ID ASSIGN expression •

    PARENR  reduce using rule 45 (assignExp)


State 297

   43 expression: assignExp •

    PARENR  reduce using rule 43 (expression)


State 298

   44 expression: simpleExp •

    PARENR  reduce using rule 44 (expression)


State 299

   81 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    SEMIC      reduce using rule 81 (factor)


State 300

   87 fCall: ID PARENL PARENR •

    ADD        reduce using rule 87 (fCall)
    SUB        reduce using rule 87 (fCall)
    MULT       reduce using rule 87 (fCall)
    DIV        reduce using rule 87 (fCall)
    OR         reduce using rule 87 (fCall)
    AND        reduce using rule 87 (fCall)
    SMALLER    reduce using rule 87 (fCall)
    GREATER    reduce using rule 87 (fCall)
    SMALLEQ    reduce using rule 87 (fCall)
    GREATEQ    reduce using rule 87 (fCall)
    EQUALS     reduce using rule 87 (fCall)
    DIFFERENT  reduce using rule 87 (fCall)
    APPEND     reduce using rule 87 (fCall)
    FILTER     reduce using rule 87 (fCall)
    MAP        reduce using rule 87 (fCall)
    PARENR     reduce using rule 87 (fCall)


State 301

   86 fCall: ID PARENL callParams • PARENR
   88 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 137
    PARENR  shift, and go to state 357


State 302

   86 fCall: ID PARENL • callParams PARENR
   87      | ID PARENL • PARENR

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215
    PARENR      shift, and go to state 358

    simpleExp      go to state 111
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223
    callParams     go to state 359


State 303

   81 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 360


State 304

   81 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 305

   58 binLogicalExp: binLogicalExp binLogicalOp relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 94
    GREATER    shift, and go to state 95
    SMALLEQ    shift, and go to state 96
    GREATEQ    shift, and go to state 97
    EQUALS     shift, and go to state 98
    DIFFERENT  shift, and go to state 99

    OR      reduce using rule 58 (binLogicalExp)
    AND     reduce using rule 58 (binLogicalExp)
    PARENR  reduce using rule 58 (binLogicalExp)

    relationalOp  go to state 251


State 306

   75 mulExp: factor •

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    PARENR     reduce using rule 75 (mulExp)


State 307

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • ADD mulExp
   71       | sumExp • SUB mulExp

    ADD  shift, and go to state 252
    SUB  shift, and go to state 253

    OR         reduce using rule 62 (relationalExp)
    AND        reduce using rule 62 (relationalExp)
    SMALLER    reduce using rule 62 (relationalExp)
    GREATER    reduce using rule 62 (relationalExp)
    SMALLEQ    reduce using rule 62 (relationalExp)
    GREATEQ    reduce using rule 62 (relationalExp)
    EQUALS     reduce using rule 62 (relationalExp)
    DIFFERENT  reduce using rule 62 (relationalExp)
    PARENR     reduce using rule 62 (relationalExp)


State 308

   70 sumExp: sumExp ADD mulExp •
   73 mulExp: mulExp • MULT factor
   74       | mulExp • DIV factor

    MULT  shift, and go to state 254
    DIV   shift, and go to state 255

    ADD        reduce using rule 70 (sumExp)
    SUB        reduce using rule 70 (sumExp)
    OR         reduce using rule 70 (sumExp)
    AND        reduce using rule 70 (sumExp)
    SMALLER    reduce using rule 70 (sumExp)
    GREATER    reduce using rule 70 (sumExp)
    SMALLEQ    reduce using rule 70 (sumExp)
    GREATEQ    reduce using rule 70 (sumExp)
    EQUALS     reduce using rule 70 (sumExp)
    DIFFERENT  reduce using rule 70 (sumExp)
    PARENR     reduce using rule 70 (sumExp)


State 309

   71 sumExp: sumExp SUB mulExp •
   73 mulExp: mulExp • MULT factor
   74       | mulExp • DIV factor

    MULT  shift, and go to state 254
    DIV   shift, and go to state 255

    ADD        reduce using rule 71 (sumExp)
    SUB        reduce using rule 71 (sumExp)
    OR         reduce using rule 71 (sumExp)
    AND        reduce using rule 71 (sumExp)
    SMALLER    reduce using rule 71 (sumExp)
    GREATER    reduce using rule 71 (sumExp)
    SMALLEQ    reduce using rule 71 (sumExp)
    GREATEQ    reduce using rule 71 (sumExp)
    EQUALS     reduce using rule 71 (sumExp)
    DIFFERENT  reduce using rule 71 (sumExp)
    PARENR     reduce using rule 71 (sumExp)


State 310

   73 mulExp: mulExp MULT factor •

    ADD        reduce using rule 73 (mulExp)
    SUB        reduce using rule 73 (mulExp)
    MULT       reduce using rule 73 (mulExp)
    DIV        reduce using rule 73 (mulExp)
    OR         reduce using rule 73 (mulExp)
    AND        reduce using rule 73 (mulExp)
    SMALLER    reduce using rule 73 (mulExp)
    GREATER    reduce using rule 73 (mulExp)
    SMALLEQ    reduce using rule 73 (mulExp)
    GREATEQ    reduce using rule 73 (mulExp)
    EQUALS     reduce using rule 73 (mulExp)
    DIFFERENT  reduce using rule 73 (mulExp)
    PARENR     reduce using rule 73 (mulExp)


State 311

   74 mulExp: mulExp DIV factor •

    ADD        reduce using rule 74 (mulExp)
    SUB        reduce using rule 74 (mulExp)
    MULT       reduce using rule 74 (mulExp)
    DIV        reduce using rule 74 (mulExp)
    OR         reduce using rule 74 (mulExp)
    AND        reduce using rule 74 (mulExp)
    SMALLER    reduce using rule 74 (mulExp)
    GREATER    reduce using rule 74 (mulExp)
    SMALLEQ    reduce using rule 74 (mulExp)
    GREATEQ    reduce using rule 74 (mulExp)
    EQUALS     reduce using rule 74 (mulExp)
    DIFFERENT  reduce using rule 74 (mulExp)
    PARENR     reduce using rule 74 (mulExp)


State 312

   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    PARENL  shift, and go to state 361

    PARENR  reduce using rule 79 (factor)


State 313

   84 factor: NIL •

    PARENR  reduce using rule 84 (factor)


State 314

   82 factor: INTEGER •

    PARENR  reduce using rule 82 (factor)


State 315

   83 factor: DECIMAL •

    PARENR  reduce using rule 83 (factor)


State 316

   85 factor: ERRORTOKEN •

    PARENR  reduce using rule 85 (factor)


State 317

   81 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 362
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 318

   53 binListExp: factor APPEND factor •

    PARENR  reduce using rule 53 (binListExp)


State 319

   80 factor: fCall •

    PARENR  reduce using rule 80 (factor)


State 320

   55 binListExp: factor FILTER factor •

    PARENR  reduce using rule 55 (binListExp)


State 321

   54 binListExp: factor MAP factor •

    PARENR  reduce using rule 54 (binListExp)


State 322

   39 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

    SEMIC  shift, and go to state 363


State 323

   41 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    SEMIC  shift, and go to state 364


State 324

   48 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 365


State 325

   49 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 366


State 326

   50 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 367


State 327

   42 returnStmt: RETURN expression SEMIC •

    ID          reduce using rule 42 (returnStmt)
    TYPE        reduce using rule 42 (returnStmt)
    NIL         reduce using rule 42 (returnStmt)
    INTEGER     reduce using rule 42 (returnStmt)
    DECIMAL     reduce using rule 42 (returnStmt)
    ERRORTOKEN  reduce using rule 42 (returnStmt)
    ELSE        reduce using rule 42 (returnStmt)
    ADD         reduce using rule 42 (returnStmt)
    SUB         reduce using rule 42 (returnStmt)
    HEADLIST    reduce using rule 42 (returnStmt)
    TAILLIST    reduce using rule 42 (returnStmt)
    IF          reduce using rule 42 (returnStmt)
    FOR         reduce using rule 42 (returnStmt)
    READ        reduce using rule 42 (returnStmt)
    WRITE       reduce using rule 42 (returnStmt)
    WRITELN     reduce using rule 42 (returnStmt)
    RETURN      reduce using rule 42 (returnStmt)
    STFUNC      reduce using rule 42 (returnStmt)
    ENDFUNC     reduce using rule 42 (returnStmt)
    PARENL      reduce using rule 42 (returnStmt)


State 328

   33 condStmt: ifStmt STFUNC ENDFUNC •
   34         | ifStmt STFUNC ENDFUNC • elseStmt

    ELSE  shift, and go to state 329

    ID          reduce using rule 33 (condStmt)
    TYPE        reduce using rule 33 (condStmt)
    NIL         reduce using rule 33 (condStmt)
    INTEGER     reduce using rule 33 (condStmt)
    DECIMAL     reduce using rule 33 (condStmt)
    ERRORTOKEN  reduce using rule 33 (condStmt)
    ADD         reduce using rule 33 (condStmt)
    SUB         reduce using rule 33 (condStmt)
    HEADLIST    reduce using rule 33 (condStmt)
    TAILLIST    reduce using rule 33 (condStmt)
    IF          reduce using rule 33 (condStmt)
    FOR         reduce using rule 33 (condStmt)
    READ        reduce using rule 33 (condStmt)
    WRITE       reduce using rule 33 (condStmt)
    WRITELN     reduce using rule 33 (condStmt)
    RETURN      reduce using rule 33 (condStmt)
    STFUNC      reduce using rule 33 (condStmt)
    ENDFUNC     reduce using rule 33 (condStmt)
    PARENL      reduce using rule 33 (condStmt)

    elseStmt  go to state 368


State 329

   37 elseStmt: ELSE • $@5 primitiveStmt

    ID          reduce using rule 36 ($@5)
    TYPE        reduce using rule 36 ($@5)
    NIL         reduce using rule 36 ($@5)
    INTEGER     reduce using rule 36 ($@5)
    DECIMAL     reduce using rule 36 ($@5)
    ERRORTOKEN  reduce using rule 36 ($@5)
    ADD         reduce using rule 36 ($@5)
    SUB         reduce using rule 36 ($@5)
    HEADLIST    reduce using rule 36 ($@5)
    TAILLIST    reduce using rule 36 ($@5)
    IF          reduce using rule 36 ($@5)
    FOR         reduce using rule 36 ($@5)
    READ        reduce using rule 36 ($@5)
    WRITE       reduce using rule 36 ($@5)
    WRITELN     reduce using rule 36 ($@5)
    RETURN      reduce using rule 36 ($@5)
    STFUNC      reduce using rule 36 ($@5)
    PARENL      reduce using rule 36 ($@5)

    $@5  go to state 369


State 330

   32 condStmt: ifStmt primitiveStmt elseStmt •

    ID          reduce using rule 32 (condStmt)
    TYPE        reduce using rule 32 (condStmt)
    NIL         reduce using rule 32 (condStmt)
    INTEGER     reduce using rule 32 (condStmt)
    DECIMAL     reduce using rule 32 (condStmt)
    ERRORTOKEN  reduce using rule 32 (condStmt)
    ELSE        reduce using rule 32 (condStmt)
    ADD         reduce using rule 32 (condStmt)
    SUB         reduce using rule 32 (condStmt)
    HEADLIST    reduce using rule 32 (condStmt)
    TAILLIST    reduce using rule 32 (condStmt)
    IF          reduce using rule 32 (condStmt)
    FOR         reduce using rule 32 (condStmt)
    READ        reduce using rule 32 (condStmt)
    WRITE       reduce using rule 32 (condStmt)
    WRITELN     reduce using rule 32 (condStmt)
    RETURN      reduce using rule 32 (condStmt)
    STFUNC      reduce using rule 32 (condStmt)
    ENDFUNC     reduce using rule 32 (condStmt)
    PARENL      reduce using rule 32 (condStmt)


State 331

   87 fCall: ID PARENL PARENR •

    ADD        reduce using rule 87 (fCall)
    SUB        reduce using rule 87 (fCall)
    MULT       reduce using rule 87 (fCall)
    DIV        reduce using rule 87 (fCall)
    OR         reduce using rule 87 (fCall)
    AND        reduce using rule 87 (fCall)
    SMALLER    reduce using rule 87 (fCall)
    GREATER    reduce using rule 87 (fCall)
    SMALLEQ    reduce using rule 87 (fCall)
    GREATEQ    reduce using rule 87 (fCall)
    EQUALS     reduce using rule 87 (fCall)
    DIFFERENT  reduce using rule 87 (fCall)
    APPEND     reduce using rule 87 (fCall)
    FILTER     reduce using rule 87 (fCall)
    MAP        reduce using rule 87 (fCall)
    COMMA      reduce using rule 87 (fCall)
    PARENR     reduce using rule 87 (fCall)


State 332

   86 fCall: ID PARENL callParams • PARENR
   88 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 137
    PARENR  shift, and go to state 370


State 333

   86 fCall: ID PARENL • callParams PARENR
   87      | ID PARENL • PARENR

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215
    PARENR      shift, and go to state 371

    simpleExp      go to state 111
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223
    callParams     go to state 372


State 334

   81 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 373


State 335

   81 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    COMMA      reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 336

   58 binLogicalExp: binLogicalExp binLogicalOp relationalExp •
   62 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 94
    GREATER    shift, and go to state 95
    SMALLEQ    shift, and go to state 96
    GREATEQ    shift, and go to state 97
    EQUALS     shift, and go to state 98
    DIFFERENT  shift, and go to state 99

    OR      reduce using rule 58 (binLogicalExp)
    AND     reduce using rule 58 (binLogicalExp)
    COMMA   reduce using rule 58 (binLogicalExp)
    PARENR  reduce using rule 58 (binLogicalExp)

    relationalOp  go to state 282


State 337

   75 mulExp: factor •

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    COMMA      reduce using rule 75 (mulExp)
    PARENR     reduce using rule 75 (mulExp)


State 338

   62 relationalExp: relationalExp relationalOp sumExp •
   70 sumExp: sumExp • ADD mulExp
   71       | sumExp • SUB mulExp

    ADD  shift, and go to state 283
    SUB  shift, and go to state 284

    OR         reduce using rule 62 (relationalExp)
    AND        reduce using rule 62 (relationalExp)
    SMALLER    reduce using rule 62 (relationalExp)
    GREATER    reduce using rule 62 (relationalExp)
    SMALLEQ    reduce using rule 62 (relationalExp)
    GREATEQ    reduce using rule 62 (relationalExp)
    EQUALS     reduce using rule 62 (relationalExp)
    DIFFERENT  reduce using rule 62 (relationalExp)
    COMMA      reduce using rule 62 (relationalExp)
    PARENR     reduce using rule 62 (relationalExp)


State 339

   70 sumExp: sumExp ADD mulExp •
   73 mulExp: mulExp • MULT factor
   74       | mulExp • DIV factor

    MULT  shift, and go to state 285
    DIV   shift, and go to state 286

    ADD        reduce using rule 70 (sumExp)
    SUB        reduce using rule 70 (sumExp)
    OR         reduce using rule 70 (sumExp)
    AND        reduce using rule 70 (sumExp)
    SMALLER    reduce using rule 70 (sumExp)
    GREATER    reduce using rule 70 (sumExp)
    SMALLEQ    reduce using rule 70 (sumExp)
    GREATEQ    reduce using rule 70 (sumExp)
    EQUALS     reduce using rule 70 (sumExp)
    DIFFERENT  reduce using rule 70 (sumExp)
    COMMA      reduce using rule 70 (sumExp)
    PARENR     reduce using rule 70 (sumExp)


State 340

   71 sumExp: sumExp SUB mulExp •
   73 mulExp: mulExp • MULT factor
   74       | mulExp • DIV factor

    MULT  shift, and go to state 285
    DIV   shift, and go to state 286

    ADD        reduce using rule 71 (sumExp)
    SUB        reduce using rule 71 (sumExp)
    OR         reduce using rule 71 (sumExp)
    AND        reduce using rule 71 (sumExp)
    SMALLER    reduce using rule 71 (sumExp)
    GREATER    reduce using rule 71 (sumExp)
    SMALLEQ    reduce using rule 71 (sumExp)
    GREATEQ    reduce using rule 71 (sumExp)
    EQUALS     reduce using rule 71 (sumExp)
    DIFFERENT  reduce using rule 71 (sumExp)
    COMMA      reduce using rule 71 (sumExp)
    PARENR     reduce using rule 71 (sumExp)


State 341

   73 mulExp: mulExp MULT factor •

    ADD        reduce using rule 73 (mulExp)
    SUB        reduce using rule 73 (mulExp)
    MULT       reduce using rule 73 (mulExp)
    DIV        reduce using rule 73 (mulExp)
    OR         reduce using rule 73 (mulExp)
    AND        reduce using rule 73 (mulExp)
    SMALLER    reduce using rule 73 (mulExp)
    GREATER    reduce using rule 73 (mulExp)
    SMALLEQ    reduce using rule 73 (mulExp)
    GREATEQ    reduce using rule 73 (mulExp)
    EQUALS     reduce using rule 73 (mulExp)
    DIFFERENT  reduce using rule 73 (mulExp)
    COMMA      reduce using rule 73 (mulExp)
    PARENR     reduce using rule 73 (mulExp)


State 342

   74 mulExp: mulExp DIV factor •

    ADD        reduce using rule 74 (mulExp)
    SUB        reduce using rule 74 (mulExp)
    MULT       reduce using rule 74 (mulExp)
    DIV        reduce using rule 74 (mulExp)
    OR         reduce using rule 74 (mulExp)
    AND        reduce using rule 74 (mulExp)
    SMALLER    reduce using rule 74 (mulExp)
    GREATER    reduce using rule 74 (mulExp)
    SMALLEQ    reduce using rule 74 (mulExp)
    GREATEQ    reduce using rule 74 (mulExp)
    EQUALS     reduce using rule 74 (mulExp)
    DIFFERENT  reduce using rule 74 (mulExp)
    COMMA      reduce using rule 74 (mulExp)
    PARENR     reduce using rule 74 (mulExp)


State 343

   79 factor: ID •
   86 fCall: ID • PARENL callParams PARENR
   87      | ID • PARENL PARENR

    PARENL  shift, and go to state 374

    COMMA   reduce using rule 79 (factor)
    PARENR  reduce using rule 79 (factor)


State 344

   84 factor: NIL •

    COMMA   reduce using rule 84 (factor)
    PARENR  reduce using rule 84 (factor)


State 345

   82 factor: INTEGER •

    COMMA   reduce using rule 82 (factor)
    PARENR  reduce using rule 82 (factor)


State 346

   83 factor: DECIMAL •

    COMMA   reduce using rule 83 (factor)
    PARENR  reduce using rule 83 (factor)


State 347

   85 factor: ERRORTOKEN •

    COMMA   reduce using rule 85 (factor)
    PARENR  reduce using rule 85 (factor)


State 348

   81 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 375
    binListExp     go to state 182
    unaryListExp   go to state 183
    binLogicalExp  go to state 184
    relationalExp  go to state 185
    sumExp         go to state 186
    mulExp         go to state 187
    factor         go to state 188
    fCall          go to state 189


State 349

   53 binListExp: factor APPEND factor •

    COMMA   reduce using rule 53 (binListExp)
    PARENR  reduce using rule 53 (binListExp)


State 350

   80 factor: fCall •

    COMMA   reduce using rule 80 (factor)
    PARENR  reduce using rule 80 (factor)


State 351

   55 binListExp: factor FILTER factor •

    COMMA   reduce using rule 55 (binListExp)
    PARENR  reduce using rule 55 (binListExp)


State 352

   54 binListExp: factor MAP factor •

    COMMA   reduce using rule 54 (binListExp)
    PARENR  reduce using rule 54 (binListExp)


State 353

   86 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    SEMIC      reduce using rule 86 (fCall)


State 354

   87 fCall: ID PARENL PARENR •

    SEMIC  reduce using rule 87 (fCall)


State 355

   86 fCall: ID PARENL callParams • PARENR
   88 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 137
    PARENR  shift, and go to state 376


State 356

   81 factor: PARENL simpleExp PARENR •

    SEMIC  reduce using rule 81 (factor)


State 357

   86 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    APPEND     reduce using rule 86 (fCall)
    FILTER     reduce using rule 86 (fCall)
    MAP        reduce using rule 86 (fCall)
    PARENR     reduce using rule 86 (fCall)


State 358

   87 fCall: ID PARENL PARENR •

    ADD        reduce using rule 87 (fCall)
    SUB        reduce using rule 87 (fCall)
    MULT       reduce using rule 87 (fCall)
    DIV        reduce using rule 87 (fCall)
    OR         reduce using rule 87 (fCall)
    AND        reduce using rule 87 (fCall)
    SMALLER    reduce using rule 87 (fCall)
    GREATER    reduce using rule 87 (fCall)
    SMALLEQ    reduce using rule 87 (fCall)
    GREATEQ    reduce using rule 87 (fCall)
    EQUALS     reduce using rule 87 (fCall)
    DIFFERENT  reduce using rule 87 (fCall)
    PARENR     reduce using rule 87 (fCall)


State 359

   86 fCall: ID PARENL callParams • PARENR
   88 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 137
    PARENR  shift, and go to state 377


State 360

   81 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 361

   86 fCall: ID PARENL • callParams PARENR
   87      | ID PARENL • PARENR

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215
    PARENR      shift, and go to state 378

    simpleExp      go to state 111
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223
    callParams     go to state 379


State 362

   81 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 380


State 363

   39 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR $@6 primitiveStmt

    ID          shift, and go to state 233
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    simpleExp      go to state 381
    binListExp     go to state 61
    unaryListExp   go to state 62
    binLogicalExp  go to state 63
    relationalExp  go to state 64
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 67
    fCall          go to state 68


State 364

   41 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR $@7 primitiveStmt

    ID          shift, and go to state 233
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    simpleExp      go to state 382
    binListExp     go to state 61
    unaryListExp   go to state 62
    binLogicalExp  go to state 63
    relationalExp  go to state 64
    sumExp         go to state 65
    mulExp         go to state 66
    factor         go to state 67
    fCall          go to state 68


State 365

   48 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 383


State 366

   49 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 384


State 367

   50 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 385


State 368

   34 condStmt: ifStmt STFUNC ENDFUNC elseStmt •

    ID          reduce using rule 34 (condStmt)
    TYPE        reduce using rule 34 (condStmt)
    NIL         reduce using rule 34 (condStmt)
    INTEGER     reduce using rule 34 (condStmt)
    DECIMAL     reduce using rule 34 (condStmt)
    ERRORTOKEN  reduce using rule 34 (condStmt)
    ELSE        reduce using rule 34 (condStmt)
    ADD         reduce using rule 34 (condStmt)
    SUB         reduce using rule 34 (condStmt)
    HEADLIST    reduce using rule 34 (condStmt)
    TAILLIST    reduce using rule 34 (condStmt)
    IF          reduce using rule 34 (condStmt)
    FOR         reduce using rule 34 (condStmt)
    READ        reduce using rule 34 (condStmt)
    WRITE       reduce using rule 34 (condStmt)
    WRITELN     reduce using rule 34 (condStmt)
    RETURN      reduce using rule 34 (condStmt)
    STFUNC      reduce using rule 34 (condStmt)
    ENDFUNC     reduce using rule 34 (condStmt)
    PARENL      reduce using rule 34 (condStmt)


State 369

   37 elseStmt: ELSE $@5 • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 190
    READ        shift, and go to state 191
    WRITE       shift, and go to state 192
    WRITELN     shift, and go to state 193
    RETURN      shift, and go to state 194
    STFUNC      shift, and go to state 386
    PARENL      shift, and go to state 46

    varDeclaration        go to state 195
    simpleVarDeclaration  go to state 196
    compoundStmt          go to state 197
    primitiveStmt         go to state 387
    exprStmt              go to state 198
    condStmt              go to state 199
    ifStmt                go to state 200
    iterStmt              go to state 201
    returnStmt            go to state 202
    expression            go to state 203
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 204
    outOp                 go to state 205
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 370

   86 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    APPEND     reduce using rule 86 (fCall)
    FILTER     reduce using rule 86 (fCall)
    MAP        reduce using rule 86 (fCall)
    COMMA      reduce using rule 86 (fCall)
    PARENR     reduce using rule 86 (fCall)


State 371

   87 fCall: ID PARENL PARENR •

    ADD        reduce using rule 87 (fCall)
    SUB        reduce using rule 87 (fCall)
    MULT       reduce using rule 87 (fCall)
    DIV        reduce using rule 87 (fCall)
    OR         reduce using rule 87 (fCall)
    AND        reduce using rule 87 (fCall)
    SMALLER    reduce using rule 87 (fCall)
    GREATER    reduce using rule 87 (fCall)
    SMALLEQ    reduce using rule 87 (fCall)
    GREATEQ    reduce using rule 87 (fCall)
    EQUALS     reduce using rule 87 (fCall)
    DIFFERENT  reduce using rule 87 (fCall)
    COMMA      reduce using rule 87 (fCall)
    PARENR     reduce using rule 87 (fCall)


State 372

   86 fCall: ID PARENL callParams • PARENR
   88 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 137
    PARENR  shift, and go to state 388


State 373

   81 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    COMMA      reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 374

   86 fCall: ID PARENL • callParams PARENR
   87      | ID PARENL • PARENR

    ID          shift, and go to state 206
    NIL         shift, and go to state 207
    INTEGER     shift, and go to state 208
    DECIMAL     shift, and go to state 209
    ERRORTOKEN  shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    HEADLIST    shift, and go to state 213
    TAILLIST    shift, and go to state 214
    PARENL      shift, and go to state 215
    PARENR      shift, and go to state 389

    simpleExp      go to state 111
    binListExp     go to state 216
    unaryListExp   go to state 217
    binLogicalExp  go to state 218
    relationalExp  go to state 219
    sumExp         go to state 220
    mulExp         go to state 221
    factor         go to state 222
    fCall          go to state 223
    callParams     go to state 390


State 375

   81 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 391


State 376

   86 fCall: ID PARENL callParams PARENR •

    SEMIC  reduce using rule 86 (fCall)


State 377

   86 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    PARENR     reduce using rule 86 (fCall)


State 378

   87 fCall: ID PARENL PARENR •

    PARENR  reduce using rule 87 (fCall)


State 379

   86 fCall: ID PARENL callParams • PARENR
   88 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 137
    PARENR  shift, and go to state 392


State 380

   81 factor: PARENL simpleExp PARENR •

    PARENR  reduce using rule 81 (factor)


State 381

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR $@6 primitiveStmt

    SEMIC  shift, and go to state 393


State 382

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR $@7 primitiveStmt

    SEMIC  shift, and go to state 394


State 383

   48 inOp: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 48 (inOp)
    TYPE        reduce using rule 48 (inOp)
    NIL         reduce using rule 48 (inOp)
    INTEGER     reduce using rule 48 (inOp)
    DECIMAL     reduce using rule 48 (inOp)
    ERRORTOKEN  reduce using rule 48 (inOp)
    ELSE        reduce using rule 48 (inOp)
    ADD         reduce using rule 48 (inOp)
    SUB         reduce using rule 48 (inOp)
    HEADLIST    reduce using rule 48 (inOp)
    TAILLIST    reduce using rule 48 (inOp)
    IF          reduce using rule 48 (inOp)
    FOR         reduce using rule 48 (inOp)
    READ        reduce using rule 48 (inOp)
    WRITE       reduce using rule 48 (inOp)
    WRITELN     reduce using rule 48 (inOp)
    RETURN      reduce using rule 48 (inOp)
    STFUNC      reduce using rule 48 (inOp)
    ENDFUNC     reduce using rule 48 (inOp)
    PARENL      reduce using rule 48 (inOp)


State 384

   49 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID          reduce using rule 49 (outOp)
    TYPE        reduce using rule 49 (outOp)
    NIL         reduce using rule 49 (outOp)
    INTEGER     reduce using rule 49 (outOp)
    DECIMAL     reduce using rule 49 (outOp)
    ERRORTOKEN  reduce using rule 49 (outOp)
    ELSE        reduce using rule 49 (outOp)
    ADD         reduce using rule 49 (outOp)
    SUB         reduce using rule 49 (outOp)
    HEADLIST    reduce using rule 49 (outOp)
    TAILLIST    reduce using rule 49 (outOp)
    IF          reduce using rule 49 (outOp)
    FOR         reduce using rule 49 (outOp)
    READ        reduce using rule 49 (outOp)
    WRITE       reduce using rule 49 (outOp)
    WRITELN     reduce using rule 49 (outOp)
    RETURN      reduce using rule 49 (outOp)
    STFUNC      reduce using rule 49 (outOp)
    ENDFUNC     reduce using rule 49 (outOp)
    PARENL      reduce using rule 49 (outOp)


State 385

   50 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID          reduce using rule 50 (outOp)
    TYPE        reduce using rule 50 (outOp)
    NIL         reduce using rule 50 (outOp)
    INTEGER     reduce using rule 50 (outOp)
    DECIMAL     reduce using rule 50 (outOp)
    ERRORTOKEN  reduce using rule 50 (outOp)
    ELSE        reduce using rule 50 (outOp)
    ADD         reduce using rule 50 (outOp)
    SUB         reduce using rule 50 (outOp)
    HEADLIST    reduce using rule 50 (outOp)
    TAILLIST    reduce using rule 50 (outOp)
    IF          reduce using rule 50 (outOp)
    FOR         reduce using rule 50 (outOp)
    READ        reduce using rule 50 (outOp)
    WRITE       reduce using rule 50 (outOp)
    WRITELN     reduce using rule 50 (outOp)
    RETURN      reduce using rule 50 (outOp)
    STFUNC      reduce using rule 50 (outOp)
    ENDFUNC     reduce using rule 50 (outOp)
    PARENL      reduce using rule 50 (outOp)


State 386

   19 compoundStmt: STFUNC • stmtList ENDFUNC

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 165
    compoundStmt          go to state 48
    stmtList              go to state 225
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 59
    outOp                 go to state 60
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 387

   37 elseStmt: ELSE $@5 primitiveStmt •

    ID          reduce using rule 37 (elseStmt)
    TYPE        reduce using rule 37 (elseStmt)
    NIL         reduce using rule 37 (elseStmt)
    INTEGER     reduce using rule 37 (elseStmt)
    DECIMAL     reduce using rule 37 (elseStmt)
    ERRORTOKEN  reduce using rule 37 (elseStmt)
    ELSE        reduce using rule 37 (elseStmt)
    ADD         reduce using rule 37 (elseStmt)
    SUB         reduce using rule 37 (elseStmt)
    HEADLIST    reduce using rule 37 (elseStmt)
    TAILLIST    reduce using rule 37 (elseStmt)
    IF          reduce using rule 37 (elseStmt)
    FOR         reduce using rule 37 (elseStmt)
    READ        reduce using rule 37 (elseStmt)
    WRITE       reduce using rule 37 (elseStmt)
    WRITELN     reduce using rule 37 (elseStmt)
    RETURN      reduce using rule 37 (elseStmt)
    STFUNC      reduce using rule 37 (elseStmt)
    ENDFUNC     reduce using rule 37 (elseStmt)
    PARENL      reduce using rule 37 (elseStmt)


State 388

   86 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    COMMA      reduce using rule 86 (fCall)
    PARENR     reduce using rule 86 (fCall)


State 389

   87 fCall: ID PARENL PARENR •

    COMMA   reduce using rule 87 (fCall)
    PARENR  reduce using rule 87 (fCall)


State 390

   86 fCall: ID PARENL callParams • PARENR
   88 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 137
    PARENR  shift, and go to state 395


State 391

   81 factor: PARENL simpleExp PARENR •

    COMMA   reduce using rule 81 (factor)
    PARENR  reduce using rule 81 (factor)


State 392

   86 fCall: ID PARENL callParams PARENR •

    PARENR  reduce using rule 86 (fCall)


State 393

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR $@6 primitiveStmt

    ID  shift, and go to state 156

    assignExp  go to state 396


State 394

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR $@7 primitiveStmt

    ID  shift, and go to state 156

    assignExp  go to state 397


State 395

   86 fCall: ID PARENL callParams PARENR •

    COMMA   reduce using rule 86 (fCall)
    PARENR  reduce using rule 86 (fCall)


State 396

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR $@6 primitiveStmt

    PARENR  shift, and go to state 398


State 397

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR $@7 primitiveStmt

    PARENR  shift, and go to state 399


State 398

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • $@6 primitiveStmt

    ID          reduce using rule 38 ($@6)
    TYPE        reduce using rule 38 ($@6)
    NIL         reduce using rule 38 ($@6)
    INTEGER     reduce using rule 38 ($@6)
    DECIMAL     reduce using rule 38 ($@6)
    ERRORTOKEN  reduce using rule 38 ($@6)
    ADD         reduce using rule 38 ($@6)
    SUB         reduce using rule 38 ($@6)
    HEADLIST    reduce using rule 38 ($@6)
    TAILLIST    reduce using rule 38 ($@6)
    IF          reduce using rule 38 ($@6)
    FOR         reduce using rule 38 ($@6)
    READ        reduce using rule 38 ($@6)
    WRITE       reduce using rule 38 ($@6)
    WRITELN     reduce using rule 38 ($@6)
    RETURN      reduce using rule 38 ($@6)
    STFUNC      reduce using rule 38 ($@6)
    PARENL      reduce using rule 38 ($@6)

    $@6  go to state 400


State 399

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • $@7 primitiveStmt

    ID          reduce using rule 40 ($@7)
    TYPE        reduce using rule 40 ($@7)
    NIL         reduce using rule 40 ($@7)
    INTEGER     reduce using rule 40 ($@7)
    DECIMAL     reduce using rule 40 ($@7)
    ERRORTOKEN  reduce using rule 40 ($@7)
    ADD         reduce using rule 40 ($@7)
    SUB         reduce using rule 40 ($@7)
    HEADLIST    reduce using rule 40 ($@7)
    TAILLIST    reduce using rule 40 ($@7)
    IF          reduce using rule 40 ($@7)
    FOR         reduce using rule 40 ($@7)
    READ        reduce using rule 40 ($@7)
    WRITE       reduce using rule 40 ($@7)
    WRITELN     reduce using rule 40 ($@7)
    RETURN      reduce using rule 40 ($@7)
    STFUNC      reduce using rule 40 ($@7)
    PARENL      reduce using rule 40 ($@7)

    $@7  go to state 401


State 400

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 190
    READ        shift, and go to state 191
    WRITE       shift, and go to state 192
    WRITELN     shift, and go to state 193
    RETURN      shift, and go to state 194
    STFUNC      shift, and go to state 386
    PARENL      shift, and go to state 46

    varDeclaration        go to state 195
    simpleVarDeclaration  go to state 196
    compoundStmt          go to state 197
    primitiveStmt         go to state 402
    exprStmt              go to state 198
    condStmt              go to state 199
    ifStmt                go to state 200
    iterStmt              go to state 201
    returnStmt            go to state 202
    expression            go to state 203
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 204
    outOp                 go to state 205
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 401

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 190
    READ        shift, and go to state 191
    WRITE       shift, and go to state 192
    WRITELN     shift, and go to state 193
    RETURN      shift, and go to state 194
    STFUNC      shift, and go to state 386
    PARENL      shift, and go to state 46

    varDeclaration        go to state 195
    simpleVarDeclaration  go to state 196
    compoundStmt          go to state 197
    primitiveStmt         go to state 403
    exprStmt              go to state 198
    condStmt              go to state 199
    ifStmt                go to state 200
    iterStmt              go to state 201
    returnStmt            go to state 202
    expression            go to state 203
    assignExp             go to state 57
    simpleExp             go to state 58
    inOp                  go to state 204
    outOp                 go to state 205
    binListExp            go to state 61
    unaryListExp          go to state 62
    binLogicalExp         go to state 63
    relationalExp         go to state 64
    sumExp                go to state 65
    mulExp                go to state 66
    factor                go to state 67
    fCall                 go to state 68


State 402

   39 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR $@6 primitiveStmt •

    ID          reduce using rule 39 (iterStmt)
    TYPE        reduce using rule 39 (iterStmt)
    NIL         reduce using rule 39 (iterStmt)
    INTEGER     reduce using rule 39 (iterStmt)
    DECIMAL     reduce using rule 39 (iterStmt)
    ERRORTOKEN  reduce using rule 39 (iterStmt)
    ELSE        reduce using rule 39 (iterStmt)
    ADD         reduce using rule 39 (iterStmt)
    SUB         reduce using rule 39 (iterStmt)
    HEADLIST    reduce using rule 39 (iterStmt)
    TAILLIST    reduce using rule 39 (iterStmt)
    IF          reduce using rule 39 (iterStmt)
    FOR         reduce using rule 39 (iterStmt)
    READ        reduce using rule 39 (iterStmt)
    WRITE       reduce using rule 39 (iterStmt)
    WRITELN     reduce using rule 39 (iterStmt)
    RETURN      reduce using rule 39 (iterStmt)
    STFUNC      reduce using rule 39 (iterStmt)
    ENDFUNC     reduce using rule 39 (iterStmt)
    PARENL      reduce using rule 39 (iterStmt)


State 403

   41 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR $@7 primitiveStmt •

    ID          reduce using rule 41 (iterStmt)
    TYPE        reduce using rule 41 (iterStmt)
    NIL         reduce using rule 41 (iterStmt)
    INTEGER     reduce using rule 41 (iterStmt)
    DECIMAL     reduce using rule 41 (iterStmt)
    ERRORTOKEN  reduce using rule 41 (iterStmt)
    ELSE        reduce using rule 41 (iterStmt)
    ADD         reduce using rule 41 (iterStmt)
    SUB         reduce using rule 41 (iterStmt)
    HEADLIST    reduce using rule 41 (iterStmt)
    TAILLIST    reduce using rule 41 (iterStmt)
    IF          reduce using rule 41 (iterStmt)
    FOR         reduce using rule 41 (iterStmt)
    READ        reduce using rule 41 (iterStmt)
    WRITE       reduce using rule 41 (iterStmt)
    WRITELN     reduce using rule 41 (iterStmt)
    RETURN      reduce using rule 41 (iterStmt)
    STFUNC      reduce using rule 41 (iterStmt)
    ENDFUNC     reduce using rule 41 (iterStmt)
    PARENL      reduce using rule 41 (iterStmt)
