Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration
    4                | error

    5 declaration: varDeclaration
    6            | funcDeclaration

    7 varDeclaration: simpleVarDeclaration SEMIC

    8 $@1: %empty

    9 $@2: %empty

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC

   11 $@3: %empty

   12 $@4: %empty

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC

   14 $@5: %empty

   15 $@6: %empty

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC

   17 $@7: %empty

   18 $@8: %empty

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC

   20 simpleVarDeclaration: TYPE ID
   21                     | TYPE LISTTYPE ID

   22 params: params COMMA param
   23       | param
   24       | error

   25 param: TYPE ID
   26      | TYPE LISTTYPE ID

   27 compoundStmt: STFUNC stmtList ENDFUNC

   28 stmtList: stmtList primitiveStmt
   29         | primitiveStmt

   30 primitiveStmt: exprStmt
   31              | compoundStmt
   32              | condStmt
   33              | iterStmt
   34              | returnStmt
   35              | inOp
   36              | outOp
   37              | varDeclaration

   38 exprStmt: expression SEMIC

   39 condStmt: ifStmt primitiveStmt
   40         | ifStmt primitiveStmt elseStmt
   41         | ifStmt STFUNC ENDFUNC
   42         | ifStmt STFUNC ENDFUNC elseStmt

   43 ifStmt: IF PARENL simpleExp PARENR

   44 $@9: %empty

   45 elseStmt: ELSE $@9 primitiveStmt

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   47         | FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   48 returnStmt: RETURN expression SEMIC

   49 listExp: appendOps
   50        | returnListOps
   51        | destroyHeadOps
   52        | mapFilterOps

   53 appendOps: ID APPEND ID

   54 returnListOps: returnListOp ID

   55 returnListOp: HEADLIST
   56             | TAILLIST

   57 destroyHeadOps: DESTROYHEAD ID

   58 mapFilterOps: ID MAP ID
   59             | ID FILTER ID

   60 expression: assignExp
   61           | simpleExp
   62           | listExp

   63 assignExp: ID ASSIGN expression

   64 simpleExp: binLogicalExp

   65 constOp: INTEGER
   66        | DECIMAL
   67        | NIL

   68 inOp: READ PARENL ID PARENR SEMIC

   69 outOp: WRITE PARENL outConst PARENR SEMIC
   70      | WRITELN PARENL outConst PARENR SEMIC

   71 outConst: STRING
   72         | simpleExp
   73         | listExp

   74 binLogicalExp: binLogicalExp binLogicalOp relationalOp
   75              | relationalExp

   76 binLogicalOp: OR
   77             | AND

   78 relationalExp: relationalExp relationalOp sumExp
   79              | sumExp

   80 relationalOp: SMALLER
   81             | GREATER
   82             | SMALLEQ
   83             | GREATEQ
   84             | EQUALS
   85             | DIFFERENT

   86 sumExp: sumExp ADD mulExp
   87       | sumExp SUB mulExp
   88       | mulExp

   89 mulExp: mulExp MULT factor
   90       | mulExp DIV factor
   91       | factor
   92       | ADD factor
   93       | SUB factor

   94 factor: ID
   95       | fCall
   96       | PARENL simpleExp PARENR
   97       | constOp
   98       | ERRORTOKEN

   99 fCall: ID PARENL callParams PARENR
  100      | ID PARENL PARENR

  101 callParams: callParams COMMA simpleExp
  102           | simpleExp


Terminals, with rules where they appear

    $end (0) 0
    error <treeNode> (256) 4 24
    ID <str> (258) 10 13 16 19 20 21 25 26 53 54 57 58 59 63 68 94 99 100
    TYPE <str> (259) 10 13 16 19 20 21 25 26
    LISTTYPE <str> (260) 16 19 21 26
    STRING <str> (261) 71
    NIL <str> (262) 67
    INTEGER <integer> (263) 65
    DECIMAL <dec> (264) 66
    ERRORTOKEN <str> (265) 98
    ELSE <str> (266) 45
    THEN <str> (267)
    ADD <str> (268) 86 92
    SUB <str> (269) 87 93
    MULT <str> (270) 89
    DIV <str> (271) 90
    OR <str> (272) 76
    AND <str> (273) 77
    SMALLER <str> (274) 80
    GREATER <str> (275) 81
    SMALLEQ <str> (276) 82
    GREATEQ <str> (277) 83
    EQUALS <str> (278) 84
    DIFFERENT <str> (279) 85
    APPEND <str> (280) 53
    HEADLIST <str> (281) 55
    TAILLIST <str> (282) 56
    DESTROYHEAD <str> (283) 57
    FILTER <str> (284) 59
    ASSIGN <str> (285) 63
    MAP <str> (286) 58
    IF <str> (287) 43
    FOR <str> (288) 46 47
    READ <str> (289) 68
    WRITE <str> (290) 69
    WRITELN <str> (291) 70
    RETURN <str> (292) 48
    SEMIC <str> (293) 7 38 46 47 48 68 69 70
    COMMA <str> (294) 22 101
    STFUNC <str> (295) 10 13 16 19 27 41 42
    ENDFUNC <str> (296) 10 13 16 19 27 41 42
    PARENL <str> (297) 10 13 16 19 43 46 47 68 69 70 96 99 100
    PARENR <str> (298) 10 13 16 19 43 46 47 68 69 70 96 99 100


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <treeNode> (45)
        on left: 1
        on right: 0
    declarationList <treeNode> (46)
        on left: 2 3 4
        on right: 1 2
    declaration <treeNode> (47)
        on left: 5 6
        on right: 2 3
    varDeclaration <treeNode> (48)
        on left: 7
        on right: 5 37
    funcDeclaration <treeNode> (49)
        on left: 10 13 16 19
        on right: 6
    $@1 (50)
        on left: 8
        on right: 10
    $@2 (51)
        on left: 9
        on right: 10
    $@3 (52)
        on left: 11
        on right: 13
    $@4 (53)
        on left: 12
        on right: 13
    $@5 (54)
        on left: 14
        on right: 16
    $@6 (55)
        on left: 15
        on right: 16
    $@7 (56)
        on left: 17
        on right: 19
    $@8 (57)
        on left: 18
        on right: 19
    simpleVarDeclaration <treeNode> (58)
        on left: 20 21
        on right: 7
    params <treeNode> (59)
        on left: 22 23 24
        on right: 10 16 22
    param <treeNode> (60)
        on left: 25 26
        on right: 22 23
    compoundStmt <treeNode> (61)
        on left: 27
        on right: 31
    stmtList <treeNode> (62)
        on left: 28 29
        on right: 10 13 16 19 27 28
    primitiveStmt <treeNode> (63)
        on left: 30 31 32 33 34 35 36 37
        on right: 28 29 39 40 45 46 47
    exprStmt <treeNode> (64)
        on left: 38
        on right: 30
    condStmt <treeNode> (65)
        on left: 39 40 41 42
        on right: 32
    ifStmt <treeNode> (66)
        on left: 43
        on right: 39 40 41 42
    elseStmt <treeNode> (67)
        on left: 45
        on right: 40 42
    $@9 (68)
        on left: 44
        on right: 45
    iterStmt <treeNode> (69)
        on left: 46 47
        on right: 33
    returnStmt <treeNode> (70)
        on left: 48
        on right: 34
    listExp <treeNode> (71)
        on left: 49 50 51 52
        on right: 62 73
    appendOps <treeNode> (72)
        on left: 53
        on right: 49
    returnListOps <treeNode> (73)
        on left: 54
        on right: 50
    returnListOp <treeNode> (74)
        on left: 55 56
        on right: 54
    destroyHeadOps <treeNode> (75)
        on left: 57
        on right: 51
    mapFilterOps <treeNode> (76)
        on left: 58 59
        on right: 52
    expression <treeNode> (77)
        on left: 60 61 62
        on right: 38 48 63
    assignExp <treeNode> (78)
        on left: 63
        on right: 46 47 60
    simpleExp <treeNode> (79)
        on left: 64
        on right: 43 46 47 61 72 96 101 102
    constOp <treeNode> (80)
        on left: 65 66 67
        on right: 97
    inOp <treeNode> (81)
        on left: 68
        on right: 35
    outOp <treeNode> (82)
        on left: 69 70
        on right: 36
    outConst <treeNode> (83)
        on left: 71 72 73
        on right: 69 70
    binLogicalExp <treeNode> (84)
        on left: 74 75
        on right: 64 74
    binLogicalOp <treeNode> (85)
        on left: 76 77
        on right: 74
    relationalExp <treeNode> (86)
        on left: 78 79
        on right: 75 78
    relationalOp <treeNode> (87)
        on left: 80 81 82 83 84 85
        on right: 74 78
    sumExp <treeNode> (88)
        on left: 86 87 88
        on right: 78 79 86 87
    mulExp <treeNode> (89)
        on left: 89 90 91 92 93
        on right: 86 87 88 89 90
    factor <treeNode> (90)
        on left: 94 95 96 97 98
        on right: 89 90 91 92 93
    fCall <treeNode> (91)
        on left: 99 100
        on right: 95
    callParams <treeNode> (92)
        on left: 101 102
        on right: 99 101


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program               go to state 3
    declarationList       go to state 4
    declaration           go to state 5
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 1

    4 declarationList: error •

    $end  reduce using rule 4 (declarationList)
    TYPE  reduce using rule 4 (declarationList)


State 2

   10 funcDeclaration: TYPE • ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE • ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   16                | TYPE • LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC
   19                | TYPE • LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC
   20 simpleVarDeclaration: TYPE • ID
   21                     | TYPE • LISTTYPE ID

    ID        shift, and go to state 9
    LISTTYPE  shift, and go to state 10


State 3

    0 $accept: program • $end

    $end  shift, and go to state 11


State 4

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration           go to state 12
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 5

    3 declarationList: declaration •

    $end  reduce using rule 3 (declarationList)
    TYPE  reduce using rule 3 (declarationList)


State 6

    5 declaration: varDeclaration •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 7

    6 declaration: funcDeclaration •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 8

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 13


State 9

   10 funcDeclaration: TYPE ID • PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID • PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   20 simpleVarDeclaration: TYPE ID •

    PARENL  shift, and go to state 14

    SEMIC  reduce using rule 20 (simpleVarDeclaration)


State 10

   16 funcDeclaration: TYPE LISTTYPE • ID PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC
   19                | TYPE LISTTYPE • ID PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC
   21 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  shift, and go to state 15


State 11

    0 $accept: program $end •

    $default  accept


State 12

    2 declarationList: declarationList declaration •

    $end  reduce using rule 2 (declarationList)
    TYPE  reduce using rule 2 (declarationList)


State 13

    7 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduce using rule 7 (varDeclaration)
    TYPE  reduce using rule 7 (varDeclaration)


State 14

   10 funcDeclaration: TYPE ID PARENL • $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID PARENL • $@3 PARENR STFUNC $@4 stmtList ENDFUNC

    error   reduce using rule 8 ($@1)
    TYPE    reduce using rule 8 ($@1)
    PARENR  reduce using rule 11 ($@3)

    $@1  go to state 16
    $@3  go to state 17


State 15

   16 funcDeclaration: TYPE LISTTYPE ID • PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC
   19                | TYPE LISTTYPE ID • PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC
   21 simpleVarDeclaration: TYPE LISTTYPE ID •

    PARENL  shift, and go to state 18

    SEMIC  reduce using rule 21 (simpleVarDeclaration)


State 16

   10 funcDeclaration: TYPE ID PARENL $@1 • params PARENR STFUNC $@2 stmtList ENDFUNC

    error  shift, and go to state 19
    TYPE   shift, and go to state 20

    params  go to state 21
    param   go to state 22


State 17

   13 funcDeclaration: TYPE ID PARENL $@3 • PARENR STFUNC $@4 stmtList ENDFUNC

    PARENR  shift, and go to state 23


State 18

   16 funcDeclaration: TYPE LISTTYPE ID PARENL • $@5 params PARENR STFUNC $@6 stmtList ENDFUNC
   19                | TYPE LISTTYPE ID PARENL • $@7 PARENR STFUNC $@8 stmtList ENDFUNC

    error   reduce using rule 14 ($@5)
    TYPE    reduce using rule 14 ($@5)
    PARENR  reduce using rule 17 ($@7)

    $@5  go to state 24
    $@7  go to state 25


State 19

   24 params: error •

    COMMA   reduce using rule 24 (params)
    PARENR  reduce using rule 24 (params)


State 20

   25 param: TYPE • ID
   26      | TYPE • LISTTYPE ID

    ID        shift, and go to state 26
    LISTTYPE  shift, and go to state 27


State 21

   10 funcDeclaration: TYPE ID PARENL $@1 params • PARENR STFUNC $@2 stmtList ENDFUNC
   22 params: params • COMMA param

    COMMA   shift, and go to state 28
    PARENR  shift, and go to state 29


State 22

   23 params: param •

    COMMA   reduce using rule 23 (params)
    PARENR  reduce using rule 23 (params)


State 23

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR • STFUNC $@4 stmtList ENDFUNC

    STFUNC  shift, and go to state 30


State 24

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 • params PARENR STFUNC $@6 stmtList ENDFUNC

    error  shift, and go to state 19
    TYPE   shift, and go to state 20

    params  go to state 31
    param   go to state 22


State 25

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 • PARENR STFUNC $@8 stmtList ENDFUNC

    PARENR  shift, and go to state 32


State 26

   25 param: TYPE ID •

    COMMA   reduce using rule 25 (param)
    PARENR  reduce using rule 25 (param)


State 27

   26 param: TYPE LISTTYPE • ID

    ID  shift, and go to state 33


State 28

   22 params: params COMMA • param

    TYPE  shift, and go to state 20

    param  go to state 34


State 29

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR • STFUNC $@2 stmtList ENDFUNC

    STFUNC  shift, and go to state 35


State 30

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC • $@4 stmtList ENDFUNC

    ID           reduce using rule 12 ($@4)
    TYPE         reduce using rule 12 ($@4)
    NIL          reduce using rule 12 ($@4)
    INTEGER      reduce using rule 12 ($@4)
    DECIMAL      reduce using rule 12 ($@4)
    ERRORTOKEN   reduce using rule 12 ($@4)
    ADD          reduce using rule 12 ($@4)
    SUB          reduce using rule 12 ($@4)
    HEADLIST     reduce using rule 12 ($@4)
    TAILLIST     reduce using rule 12 ($@4)
    DESTROYHEAD  reduce using rule 12 ($@4)
    IF           reduce using rule 12 ($@4)
    FOR          reduce using rule 12 ($@4)
    READ         reduce using rule 12 ($@4)
    WRITE        reduce using rule 12 ($@4)
    WRITELN      reduce using rule 12 ($@4)
    RETURN       reduce using rule 12 ($@4)
    STFUNC       reduce using rule 12 ($@4)
    PARENL       reduce using rule 12 ($@4)

    $@4  go to state 36


State 31

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params • PARENR STFUNC $@6 stmtList ENDFUNC
   22 params: params • COMMA param

    COMMA   shift, and go to state 28
    PARENR  shift, and go to state 37


State 32

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR • STFUNC $@8 stmtList ENDFUNC

    STFUNC  shift, and go to state 38


State 33

   26 param: TYPE LISTTYPE ID •

    COMMA   reduce using rule 26 (param)
    PARENR  reduce using rule 26 (param)


State 34

   22 params: params COMMA param •

    COMMA   reduce using rule 22 (params)
    PARENR  reduce using rule 22 (params)


State 35

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC • $@2 stmtList ENDFUNC

    ID           reduce using rule 9 ($@2)
    TYPE         reduce using rule 9 ($@2)
    NIL          reduce using rule 9 ($@2)
    INTEGER      reduce using rule 9 ($@2)
    DECIMAL      reduce using rule 9 ($@2)
    ERRORTOKEN   reduce using rule 9 ($@2)
    ADD          reduce using rule 9 ($@2)
    SUB          reduce using rule 9 ($@2)
    HEADLIST     reduce using rule 9 ($@2)
    TAILLIST     reduce using rule 9 ($@2)
    DESTROYHEAD  reduce using rule 9 ($@2)
    IF           reduce using rule 9 ($@2)
    FOR          reduce using rule 9 ($@2)
    READ         reduce using rule 9 ($@2)
    WRITE        reduce using rule 9 ($@2)
    WRITELN      reduce using rule 9 ($@2)
    RETURN       reduce using rule 9 ($@2)
    STFUNC       reduce using rule 9 ($@2)
    PARENL       reduce using rule 9 ($@2)

    $@2  go to state 39


State 36

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 • stmtList ENDFUNC

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    stmtList              go to state 61
    primitiveStmt         go to state 62
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 37

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR • STFUNC $@6 stmtList ENDFUNC

    STFUNC  shift, and go to state 86


State 38

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC • $@8 stmtList ENDFUNC

    ID           reduce using rule 18 ($@8)
    TYPE         reduce using rule 18 ($@8)
    NIL          reduce using rule 18 ($@8)
    INTEGER      reduce using rule 18 ($@8)
    DECIMAL      reduce using rule 18 ($@8)
    ERRORTOKEN   reduce using rule 18 ($@8)
    ADD          reduce using rule 18 ($@8)
    SUB          reduce using rule 18 ($@8)
    HEADLIST     reduce using rule 18 ($@8)
    TAILLIST     reduce using rule 18 ($@8)
    DESTROYHEAD  reduce using rule 18 ($@8)
    IF           reduce using rule 18 ($@8)
    FOR          reduce using rule 18 ($@8)
    READ         reduce using rule 18 ($@8)
    WRITE        reduce using rule 18 ($@8)
    WRITELN      reduce using rule 18 ($@8)
    RETURN       reduce using rule 18 ($@8)
    STFUNC       reduce using rule 18 ($@8)
    PARENL       reduce using rule 18 ($@8)

    $@8  go to state 87


State 39

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 • stmtList ENDFUNC

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    stmtList              go to state 88
    primitiveStmt         go to state 62
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 40

   53 appendOps: ID • APPEND ID
   58 mapFilterOps: ID • MAP ID
   59             | ID • FILTER ID
   63 assignExp: ID • ASSIGN expression
   94 factor: ID •
   99 fCall: ID • PARENL callParams PARENR
  100      | ID • PARENL PARENR

    APPEND  shift, and go to state 89
    FILTER  shift, and go to state 90
    ASSIGN  shift, and go to state 91
    MAP     shift, and go to state 92
    PARENL  shift, and go to state 93

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    SEMIC      reduce using rule 94 (factor)


State 41

   20 simpleVarDeclaration: TYPE • ID
   21                     | TYPE • LISTTYPE ID

    ID        shift, and go to state 94
    LISTTYPE  shift, and go to state 95


State 42

   67 constOp: NIL •

    ADD        reduce using rule 67 (constOp)
    SUB        reduce using rule 67 (constOp)
    MULT       reduce using rule 67 (constOp)
    DIV        reduce using rule 67 (constOp)
    OR         reduce using rule 67 (constOp)
    AND        reduce using rule 67 (constOp)
    SMALLER    reduce using rule 67 (constOp)
    GREATER    reduce using rule 67 (constOp)
    SMALLEQ    reduce using rule 67 (constOp)
    GREATEQ    reduce using rule 67 (constOp)
    EQUALS     reduce using rule 67 (constOp)
    DIFFERENT  reduce using rule 67 (constOp)
    SEMIC      reduce using rule 67 (constOp)


State 43

   65 constOp: INTEGER •

    ADD        reduce using rule 65 (constOp)
    SUB        reduce using rule 65 (constOp)
    MULT       reduce using rule 65 (constOp)
    DIV        reduce using rule 65 (constOp)
    OR         reduce using rule 65 (constOp)
    AND        reduce using rule 65 (constOp)
    SMALLER    reduce using rule 65 (constOp)
    GREATER    reduce using rule 65 (constOp)
    SMALLEQ    reduce using rule 65 (constOp)
    GREATEQ    reduce using rule 65 (constOp)
    EQUALS     reduce using rule 65 (constOp)
    DIFFERENT  reduce using rule 65 (constOp)
    SEMIC      reduce using rule 65 (constOp)


State 44

   66 constOp: DECIMAL •

    ADD        reduce using rule 66 (constOp)
    SUB        reduce using rule 66 (constOp)
    MULT       reduce using rule 66 (constOp)
    DIV        reduce using rule 66 (constOp)
    OR         reduce using rule 66 (constOp)
    AND        reduce using rule 66 (constOp)
    SMALLER    reduce using rule 66 (constOp)
    GREATER    reduce using rule 66 (constOp)
    SMALLEQ    reduce using rule 66 (constOp)
    GREATEQ    reduce using rule 66 (constOp)
    EQUALS     reduce using rule 66 (constOp)
    DIFFERENT  reduce using rule 66 (constOp)
    SEMIC      reduce using rule 66 (constOp)


State 45

   98 factor: ERRORTOKEN •

    ADD        reduce using rule 98 (factor)
    SUB        reduce using rule 98 (factor)
    MULT       reduce using rule 98 (factor)
    DIV        reduce using rule 98 (factor)
    OR         reduce using rule 98 (factor)
    AND        reduce using rule 98 (factor)
    SMALLER    reduce using rule 98 (factor)
    GREATER    reduce using rule 98 (factor)
    SMALLEQ    reduce using rule 98 (factor)
    GREATEQ    reduce using rule 98 (factor)
    EQUALS     reduce using rule 98 (factor)
    DIFFERENT  reduce using rule 98 (factor)
    SEMIC      reduce using rule 98 (factor)


State 46

   92 mulExp: ADD • factor

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    PARENL      shift, and go to state 58

    constOp  go to state 77
    factor   go to state 97
    fCall    go to state 85


State 47

   93 mulExp: SUB • factor

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    PARENL      shift, and go to state 58

    constOp  go to state 77
    factor   go to state 98
    fCall    go to state 85


State 48

   55 returnListOp: HEADLIST •

    ID  reduce using rule 55 (returnListOp)


State 49

   56 returnListOp: TAILLIST •

    ID  reduce using rule 56 (returnListOp)


State 50

   57 destroyHeadOps: DESTROYHEAD • ID

    ID  shift, and go to state 99


State 51

   43 ifStmt: IF • PARENL simpleExp PARENR

    PARENL  shift, and go to state 100


State 52

   46 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   47         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  shift, and go to state 101


State 53

   68 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 102


State 54

   69 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 103


State 55

   70 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 104


State 56

   48 returnStmt: RETURN • expression SEMIC

    ID           shift, and go to state 40
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    PARENL       shift, and go to state 58

    listExp         go to state 68
    appendOps       go to state 69
    returnListOps   go to state 70
    returnListOp    go to state 71
    destroyHeadOps  go to state 72
    mapFilterOps    go to state 73
    expression      go to state 105
    assignExp       go to state 75
    simpleExp       go to state 76
    constOp         go to state 77
    binLogicalExp   go to state 80
    relationalExp   go to state 81
    sumExp          go to state 82
    mulExp          go to state 83
    factor          go to state 84
    fCall           go to state 85


State 57

   27 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    stmtList              go to state 106
    primitiveStmt         go to state 62
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 58

   96 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    ADD         shift, and go to state 197
    SUB         shift, and go to state 198
    PARENL      shift, and go to state 199

    simpleExp      go to state 107
    constOp        go to state 200
    binLogicalExp  go to state 201
    relationalExp  go to state 202
    sumExp         go to state 203
    mulExp         go to state 204
    factor         go to state 205
    fCall          go to state 206


State 59

   37 primitiveStmt: varDeclaration •

    ID           reduce using rule 37 (primitiveStmt)
    TYPE         reduce using rule 37 (primitiveStmt)
    NIL          reduce using rule 37 (primitiveStmt)
    INTEGER      reduce using rule 37 (primitiveStmt)
    DECIMAL      reduce using rule 37 (primitiveStmt)
    ERRORTOKEN   reduce using rule 37 (primitiveStmt)
    ADD          reduce using rule 37 (primitiveStmt)
    SUB          reduce using rule 37 (primitiveStmt)
    HEADLIST     reduce using rule 37 (primitiveStmt)
    TAILLIST     reduce using rule 37 (primitiveStmt)
    DESTROYHEAD  reduce using rule 37 (primitiveStmt)
    IF           reduce using rule 37 (primitiveStmt)
    FOR          reduce using rule 37 (primitiveStmt)
    READ         reduce using rule 37 (primitiveStmt)
    WRITE        reduce using rule 37 (primitiveStmt)
    WRITELN      reduce using rule 37 (primitiveStmt)
    RETURN       reduce using rule 37 (primitiveStmt)
    STFUNC       reduce using rule 37 (primitiveStmt)
    ENDFUNC      reduce using rule 37 (primitiveStmt)
    PARENL       reduce using rule 37 (primitiveStmt)


State 60

   31 primitiveStmt: compoundStmt •

    ID           reduce using rule 31 (primitiveStmt)
    TYPE         reduce using rule 31 (primitiveStmt)
    NIL          reduce using rule 31 (primitiveStmt)
    INTEGER      reduce using rule 31 (primitiveStmt)
    DECIMAL      reduce using rule 31 (primitiveStmt)
    ERRORTOKEN   reduce using rule 31 (primitiveStmt)
    ADD          reduce using rule 31 (primitiveStmt)
    SUB          reduce using rule 31 (primitiveStmt)
    HEADLIST     reduce using rule 31 (primitiveStmt)
    TAILLIST     reduce using rule 31 (primitiveStmt)
    DESTROYHEAD  reduce using rule 31 (primitiveStmt)
    IF           reduce using rule 31 (primitiveStmt)
    FOR          reduce using rule 31 (primitiveStmt)
    READ         reduce using rule 31 (primitiveStmt)
    WRITE        reduce using rule 31 (primitiveStmt)
    WRITELN      reduce using rule 31 (primitiveStmt)
    RETURN       reduce using rule 31 (primitiveStmt)
    STFUNC       reduce using rule 31 (primitiveStmt)
    ENDFUNC      reduce using rule 31 (primitiveStmt)
    PARENL       reduce using rule 31 (primitiveStmt)


State 61

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    ENDFUNC      shift, and go to state 108
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    primitiveStmt         go to state 109
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 62

   29 stmtList: primitiveStmt •

    ID           reduce using rule 29 (stmtList)
    TYPE         reduce using rule 29 (stmtList)
    NIL          reduce using rule 29 (stmtList)
    INTEGER      reduce using rule 29 (stmtList)
    DECIMAL      reduce using rule 29 (stmtList)
    ERRORTOKEN   reduce using rule 29 (stmtList)
    ADD          reduce using rule 29 (stmtList)
    SUB          reduce using rule 29 (stmtList)
    HEADLIST     reduce using rule 29 (stmtList)
    TAILLIST     reduce using rule 29 (stmtList)
    DESTROYHEAD  reduce using rule 29 (stmtList)
    IF           reduce using rule 29 (stmtList)
    FOR          reduce using rule 29 (stmtList)
    READ         reduce using rule 29 (stmtList)
    WRITE        reduce using rule 29 (stmtList)
    WRITELN      reduce using rule 29 (stmtList)
    RETURN       reduce using rule 29 (stmtList)
    STFUNC       reduce using rule 29 (stmtList)
    ENDFUNC      reduce using rule 29 (stmtList)
    PARENL       reduce using rule 29 (stmtList)


State 63

   30 primitiveStmt: exprStmt •

    ID           reduce using rule 30 (primitiveStmt)
    TYPE         reduce using rule 30 (primitiveStmt)
    NIL          reduce using rule 30 (primitiveStmt)
    INTEGER      reduce using rule 30 (primitiveStmt)
    DECIMAL      reduce using rule 30 (primitiveStmt)
    ERRORTOKEN   reduce using rule 30 (primitiveStmt)
    ADD          reduce using rule 30 (primitiveStmt)
    SUB          reduce using rule 30 (primitiveStmt)
    HEADLIST     reduce using rule 30 (primitiveStmt)
    TAILLIST     reduce using rule 30 (primitiveStmt)
    DESTROYHEAD  reduce using rule 30 (primitiveStmt)
    IF           reduce using rule 30 (primitiveStmt)
    FOR          reduce using rule 30 (primitiveStmt)
    READ         reduce using rule 30 (primitiveStmt)
    WRITE        reduce using rule 30 (primitiveStmt)
    WRITELN      reduce using rule 30 (primitiveStmt)
    RETURN       reduce using rule 30 (primitiveStmt)
    STFUNC       reduce using rule 30 (primitiveStmt)
    ENDFUNC      reduce using rule 30 (primitiveStmt)
    PARENL       reduce using rule 30 (primitiveStmt)


State 64

   32 primitiveStmt: condStmt •

    ID           reduce using rule 32 (primitiveStmt)
    TYPE         reduce using rule 32 (primitiveStmt)
    NIL          reduce using rule 32 (primitiveStmt)
    INTEGER      reduce using rule 32 (primitiveStmt)
    DECIMAL      reduce using rule 32 (primitiveStmt)
    ERRORTOKEN   reduce using rule 32 (primitiveStmt)
    ADD          reduce using rule 32 (primitiveStmt)
    SUB          reduce using rule 32 (primitiveStmt)
    HEADLIST     reduce using rule 32 (primitiveStmt)
    TAILLIST     reduce using rule 32 (primitiveStmt)
    DESTROYHEAD  reduce using rule 32 (primitiveStmt)
    IF           reduce using rule 32 (primitiveStmt)
    FOR          reduce using rule 32 (primitiveStmt)
    READ         reduce using rule 32 (primitiveStmt)
    WRITE        reduce using rule 32 (primitiveStmt)
    WRITELN      reduce using rule 32 (primitiveStmt)
    RETURN       reduce using rule 32 (primitiveStmt)
    STFUNC       reduce using rule 32 (primitiveStmt)
    ENDFUNC      reduce using rule 32 (primitiveStmt)
    PARENL       reduce using rule 32 (primitiveStmt)


State 65

   39 condStmt: ifStmt • primitiveStmt
   40         | ifStmt • primitiveStmt elseStmt
   41         | ifStmt • STFUNC ENDFUNC
   42         | ifStmt • STFUNC ENDFUNC elseStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 207
    READ         shift, and go to state 208
    WRITE        shift, and go to state 209
    WRITELN      shift, and go to state 210
    RETURN       shift, and go to state 211
    STFUNC       shift, and go to state 110
    PARENL       shift, and go to state 58

    varDeclaration        go to state 212
    simpleVarDeclaration  go to state 213
    compoundStmt          go to state 214
    primitiveStmt         go to state 111
    exprStmt              go to state 215
    condStmt              go to state 216
    ifStmt                go to state 217
    iterStmt              go to state 218
    returnStmt            go to state 219
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 220
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 221
    outOp                 go to state 222
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 66

   33 primitiveStmt: iterStmt •

    ID           reduce using rule 33 (primitiveStmt)
    TYPE         reduce using rule 33 (primitiveStmt)
    NIL          reduce using rule 33 (primitiveStmt)
    INTEGER      reduce using rule 33 (primitiveStmt)
    DECIMAL      reduce using rule 33 (primitiveStmt)
    ERRORTOKEN   reduce using rule 33 (primitiveStmt)
    ADD          reduce using rule 33 (primitiveStmt)
    SUB          reduce using rule 33 (primitiveStmt)
    HEADLIST     reduce using rule 33 (primitiveStmt)
    TAILLIST     reduce using rule 33 (primitiveStmt)
    DESTROYHEAD  reduce using rule 33 (primitiveStmt)
    IF           reduce using rule 33 (primitiveStmt)
    FOR          reduce using rule 33 (primitiveStmt)
    READ         reduce using rule 33 (primitiveStmt)
    WRITE        reduce using rule 33 (primitiveStmt)
    WRITELN      reduce using rule 33 (primitiveStmt)
    RETURN       reduce using rule 33 (primitiveStmt)
    STFUNC       reduce using rule 33 (primitiveStmt)
    ENDFUNC      reduce using rule 33 (primitiveStmt)
    PARENL       reduce using rule 33 (primitiveStmt)


State 67

   34 primitiveStmt: returnStmt •

    ID           reduce using rule 34 (primitiveStmt)
    TYPE         reduce using rule 34 (primitiveStmt)
    NIL          reduce using rule 34 (primitiveStmt)
    INTEGER      reduce using rule 34 (primitiveStmt)
    DECIMAL      reduce using rule 34 (primitiveStmt)
    ERRORTOKEN   reduce using rule 34 (primitiveStmt)
    ADD          reduce using rule 34 (primitiveStmt)
    SUB          reduce using rule 34 (primitiveStmt)
    HEADLIST     reduce using rule 34 (primitiveStmt)
    TAILLIST     reduce using rule 34 (primitiveStmt)
    DESTROYHEAD  reduce using rule 34 (primitiveStmt)
    IF           reduce using rule 34 (primitiveStmt)
    FOR          reduce using rule 34 (primitiveStmt)
    READ         reduce using rule 34 (primitiveStmt)
    WRITE        reduce using rule 34 (primitiveStmt)
    WRITELN      reduce using rule 34 (primitiveStmt)
    RETURN       reduce using rule 34 (primitiveStmt)
    STFUNC       reduce using rule 34 (primitiveStmt)
    ENDFUNC      reduce using rule 34 (primitiveStmt)
    PARENL       reduce using rule 34 (primitiveStmt)


State 68

   62 expression: listExp •

    SEMIC  reduce using rule 62 (expression)


State 69

   49 listExp: appendOps •

    SEMIC  reduce using rule 49 (listExp)


State 70

   50 listExp: returnListOps •

    SEMIC  reduce using rule 50 (listExp)


State 71

   54 returnListOps: returnListOp • ID

    ID  shift, and go to state 112


State 72

   51 listExp: destroyHeadOps •

    SEMIC  reduce using rule 51 (listExp)


State 73

   52 listExp: mapFilterOps •

    SEMIC  reduce using rule 52 (listExp)


State 74

   38 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 113


State 75

   60 expression: assignExp •

    SEMIC  reduce using rule 60 (expression)


State 76

   61 expression: simpleExp •

    SEMIC  reduce using rule 61 (expression)


State 77

   97 factor: constOp •

    ADD        reduce using rule 97 (factor)
    SUB        reduce using rule 97 (factor)
    MULT       reduce using rule 97 (factor)
    DIV        reduce using rule 97 (factor)
    OR         reduce using rule 97 (factor)
    AND        reduce using rule 97 (factor)
    SMALLER    reduce using rule 97 (factor)
    GREATER    reduce using rule 97 (factor)
    SMALLEQ    reduce using rule 97 (factor)
    GREATEQ    reduce using rule 97 (factor)
    EQUALS     reduce using rule 97 (factor)
    DIFFERENT  reduce using rule 97 (factor)
    SEMIC      reduce using rule 97 (factor)


State 78

   35 primitiveStmt: inOp •

    ID           reduce using rule 35 (primitiveStmt)
    TYPE         reduce using rule 35 (primitiveStmt)
    NIL          reduce using rule 35 (primitiveStmt)
    INTEGER      reduce using rule 35 (primitiveStmt)
    DECIMAL      reduce using rule 35 (primitiveStmt)
    ERRORTOKEN   reduce using rule 35 (primitiveStmt)
    ADD          reduce using rule 35 (primitiveStmt)
    SUB          reduce using rule 35 (primitiveStmt)
    HEADLIST     reduce using rule 35 (primitiveStmt)
    TAILLIST     reduce using rule 35 (primitiveStmt)
    DESTROYHEAD  reduce using rule 35 (primitiveStmt)
    IF           reduce using rule 35 (primitiveStmt)
    FOR          reduce using rule 35 (primitiveStmt)
    READ         reduce using rule 35 (primitiveStmt)
    WRITE        reduce using rule 35 (primitiveStmt)
    WRITELN      reduce using rule 35 (primitiveStmt)
    RETURN       reduce using rule 35 (primitiveStmt)
    STFUNC       reduce using rule 35 (primitiveStmt)
    ENDFUNC      reduce using rule 35 (primitiveStmt)
    PARENL       reduce using rule 35 (primitiveStmt)


State 79

   36 primitiveStmt: outOp •

    ID           reduce using rule 36 (primitiveStmt)
    TYPE         reduce using rule 36 (primitiveStmt)
    NIL          reduce using rule 36 (primitiveStmt)
    INTEGER      reduce using rule 36 (primitiveStmt)
    DECIMAL      reduce using rule 36 (primitiveStmt)
    ERRORTOKEN   reduce using rule 36 (primitiveStmt)
    ADD          reduce using rule 36 (primitiveStmt)
    SUB          reduce using rule 36 (primitiveStmt)
    HEADLIST     reduce using rule 36 (primitiveStmt)
    TAILLIST     reduce using rule 36 (primitiveStmt)
    DESTROYHEAD  reduce using rule 36 (primitiveStmt)
    IF           reduce using rule 36 (primitiveStmt)
    FOR          reduce using rule 36 (primitiveStmt)
    READ         reduce using rule 36 (primitiveStmt)
    WRITE        reduce using rule 36 (primitiveStmt)
    WRITELN      reduce using rule 36 (primitiveStmt)
    RETURN       reduce using rule 36 (primitiveStmt)
    STFUNC       reduce using rule 36 (primitiveStmt)
    ENDFUNC      reduce using rule 36 (primitiveStmt)
    PARENL       reduce using rule 36 (primitiveStmt)


State 80

   64 simpleExp: binLogicalExp •
   74 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   shift, and go to state 114
    AND  shift, and go to state 115

    SEMIC  reduce using rule 64 (simpleExp)

    binLogicalOp  go to state 116


State 81

   75 binLogicalExp: relationalExp •
   78 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 117
    GREATER    shift, and go to state 118
    SMALLEQ    shift, and go to state 119
    GREATEQ    shift, and go to state 120
    EQUALS     shift, and go to state 121
    DIFFERENT  shift, and go to state 122

    OR     reduce using rule 75 (binLogicalExp)
    AND    reduce using rule 75 (binLogicalExp)
    SEMIC  reduce using rule 75 (binLogicalExp)

    relationalOp  go to state 123


State 82

   79 relationalExp: sumExp •
   86 sumExp: sumExp • ADD mulExp
   87       | sumExp • SUB mulExp

    ADD  shift, and go to state 124
    SUB  shift, and go to state 125

    OR         reduce using rule 79 (relationalExp)
    AND        reduce using rule 79 (relationalExp)
    SMALLER    reduce using rule 79 (relationalExp)
    GREATER    reduce using rule 79 (relationalExp)
    SMALLEQ    reduce using rule 79 (relationalExp)
    GREATEQ    reduce using rule 79 (relationalExp)
    EQUALS     reduce using rule 79 (relationalExp)
    DIFFERENT  reduce using rule 79 (relationalExp)
    SEMIC      reduce using rule 79 (relationalExp)


State 83

   88 sumExp: mulExp •
   89 mulExp: mulExp • MULT factor
   90       | mulExp • DIV factor

    MULT  shift, and go to state 126
    DIV   shift, and go to state 127

    ADD        reduce using rule 88 (sumExp)
    SUB        reduce using rule 88 (sumExp)
    OR         reduce using rule 88 (sumExp)
    AND        reduce using rule 88 (sumExp)
    SMALLER    reduce using rule 88 (sumExp)
    GREATER    reduce using rule 88 (sumExp)
    SMALLEQ    reduce using rule 88 (sumExp)
    GREATEQ    reduce using rule 88 (sumExp)
    EQUALS     reduce using rule 88 (sumExp)
    DIFFERENT  reduce using rule 88 (sumExp)
    SEMIC      reduce using rule 88 (sumExp)


State 84

   91 mulExp: factor •

    ADD        reduce using rule 91 (mulExp)
    SUB        reduce using rule 91 (mulExp)
    MULT       reduce using rule 91 (mulExp)
    DIV        reduce using rule 91 (mulExp)
    OR         reduce using rule 91 (mulExp)
    AND        reduce using rule 91 (mulExp)
    SMALLER    reduce using rule 91 (mulExp)
    GREATER    reduce using rule 91 (mulExp)
    SMALLEQ    reduce using rule 91 (mulExp)
    GREATEQ    reduce using rule 91 (mulExp)
    EQUALS     reduce using rule 91 (mulExp)
    DIFFERENT  reduce using rule 91 (mulExp)
    SEMIC      reduce using rule 91 (mulExp)


State 85

   95 factor: fCall •

    ADD        reduce using rule 95 (factor)
    SUB        reduce using rule 95 (factor)
    MULT       reduce using rule 95 (factor)
    DIV        reduce using rule 95 (factor)
    OR         reduce using rule 95 (factor)
    AND        reduce using rule 95 (factor)
    SMALLER    reduce using rule 95 (factor)
    GREATER    reduce using rule 95 (factor)
    SMALLEQ    reduce using rule 95 (factor)
    GREATEQ    reduce using rule 95 (factor)
    EQUALS     reduce using rule 95 (factor)
    DIFFERENT  reduce using rule 95 (factor)
    SEMIC      reduce using rule 95 (factor)


State 86

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC • $@6 stmtList ENDFUNC

    ID           reduce using rule 15 ($@6)
    TYPE         reduce using rule 15 ($@6)
    NIL          reduce using rule 15 ($@6)
    INTEGER      reduce using rule 15 ($@6)
    DECIMAL      reduce using rule 15 ($@6)
    ERRORTOKEN   reduce using rule 15 ($@6)
    ADD          reduce using rule 15 ($@6)
    SUB          reduce using rule 15 ($@6)
    HEADLIST     reduce using rule 15 ($@6)
    TAILLIST     reduce using rule 15 ($@6)
    DESTROYHEAD  reduce using rule 15 ($@6)
    IF           reduce using rule 15 ($@6)
    FOR          reduce using rule 15 ($@6)
    READ         reduce using rule 15 ($@6)
    WRITE        reduce using rule 15 ($@6)
    WRITELN      reduce using rule 15 ($@6)
    RETURN       reduce using rule 15 ($@6)
    STFUNC       reduce using rule 15 ($@6)
    PARENL       reduce using rule 15 ($@6)

    $@6  go to state 128


State 87

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 • stmtList ENDFUNC

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    stmtList              go to state 129
    primitiveStmt         go to state 62
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 88

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    ENDFUNC      shift, and go to state 130
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    primitiveStmt         go to state 109
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 89

   53 appendOps: ID APPEND • ID

    ID  shift, and go to state 131


State 90

   59 mapFilterOps: ID FILTER • ID

    ID  shift, and go to state 132


State 91

   63 assignExp: ID ASSIGN • expression

    ID           shift, and go to state 40
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    PARENL       shift, and go to state 58

    listExp         go to state 68
    appendOps       go to state 69
    returnListOps   go to state 70
    returnListOp    go to state 71
    destroyHeadOps  go to state 72
    mapFilterOps    go to state 73
    expression      go to state 133
    assignExp       go to state 75
    simpleExp       go to state 76
    constOp         go to state 77
    binLogicalExp   go to state 80
    relationalExp   go to state 81
    sumExp          go to state 82
    mulExp          go to state 83
    factor          go to state 84
    fCall           go to state 85


State 92

   58 mapFilterOps: ID MAP • ID

    ID  shift, and go to state 134


State 93

   99 fCall: ID PARENL • callParams PARENR
  100      | ID PARENL • PARENR

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    ADD         shift, and go to state 228
    SUB         shift, and go to state 229
    PARENL      shift, and go to state 230
    PARENR      shift, and go to state 135

    simpleExp      go to state 136
    constOp        go to state 231
    binLogicalExp  go to state 232
    relationalExp  go to state 233
    sumExp         go to state 234
    mulExp         go to state 235
    factor         go to state 236
    fCall          go to state 237
    callParams     go to state 137


State 94

   20 simpleVarDeclaration: TYPE ID •

    SEMIC  reduce using rule 20 (simpleVarDeclaration)


State 95

   21 simpleVarDeclaration: TYPE LISTTYPE • ID

    ID  shift, and go to state 138


State 96

   94 factor: ID •
   99 fCall: ID • PARENL callParams PARENR
  100      | ID • PARENL PARENR

    PARENL  shift, and go to state 93

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    SEMIC      reduce using rule 94 (factor)


State 97

   92 mulExp: ADD factor •

    ADD        reduce using rule 92 (mulExp)
    SUB        reduce using rule 92 (mulExp)
    MULT       reduce using rule 92 (mulExp)
    DIV        reduce using rule 92 (mulExp)
    OR         reduce using rule 92 (mulExp)
    AND        reduce using rule 92 (mulExp)
    SMALLER    reduce using rule 92 (mulExp)
    GREATER    reduce using rule 92 (mulExp)
    SMALLEQ    reduce using rule 92 (mulExp)
    GREATEQ    reduce using rule 92 (mulExp)
    EQUALS     reduce using rule 92 (mulExp)
    DIFFERENT  reduce using rule 92 (mulExp)
    SEMIC      reduce using rule 92 (mulExp)


State 98

   93 mulExp: SUB factor •

    ADD        reduce using rule 93 (mulExp)
    SUB        reduce using rule 93 (mulExp)
    MULT       reduce using rule 93 (mulExp)
    DIV        reduce using rule 93 (mulExp)
    OR         reduce using rule 93 (mulExp)
    AND        reduce using rule 93 (mulExp)
    SMALLER    reduce using rule 93 (mulExp)
    GREATER    reduce using rule 93 (mulExp)
    SMALLEQ    reduce using rule 93 (mulExp)
    GREATEQ    reduce using rule 93 (mulExp)
    EQUALS     reduce using rule 93 (mulExp)
    DIFFERENT  reduce using rule 93 (mulExp)
    SEMIC      reduce using rule 93 (mulExp)


State 99

   57 destroyHeadOps: DESTROYHEAD ID •

    SEMIC  reduce using rule 57 (destroyHeadOps)


State 100

   43 ifStmt: IF PARENL • simpleExp PARENR

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    ADD         shift, and go to state 197
    SUB         shift, and go to state 198
    PARENL      shift, and go to state 199

    simpleExp      go to state 139
    constOp        go to state 200
    binLogicalExp  go to state 201
    relationalExp  go to state 202
    sumExp         go to state 203
    mulExp         go to state 204
    factor         go to state 205
    fCall          go to state 206


State 101

   46 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   47         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 140
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    ADD         shift, and go to state 46
    SUB         shift, and go to state 47
    PARENL      shift, and go to state 58

    assignExp      go to state 141
    simpleExp      go to state 142
    constOp        go to state 77
    binLogicalExp  go to state 80
    relationalExp  go to state 81
    sumExp         go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 102

   68 inOp: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 143


State 103

   69 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID           shift, and go to state 144
    STRING       shift, and go to state 145
    NIL          shift, and go to state 193
    INTEGER      shift, and go to state 194
    DECIMAL      shift, and go to state 195
    ERRORTOKEN   shift, and go to state 196
    ADD          shift, and go to state 197
    SUB          shift, and go to state 198
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 238
    PARENL       shift, and go to state 199

    listExp         go to state 146
    appendOps       go to state 239
    returnListOps   go to state 240
    returnListOp    go to state 241
    destroyHeadOps  go to state 242
    mapFilterOps    go to state 243
    simpleExp       go to state 147
    constOp         go to state 200
    outConst        go to state 148
    binLogicalExp   go to state 201
    relationalExp   go to state 202
    sumExp          go to state 203
    mulExp          go to state 204
    factor          go to state 205
    fCall           go to state 206


State 104

   70 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID           shift, and go to state 144
    STRING       shift, and go to state 145
    NIL          shift, and go to state 193
    INTEGER      shift, and go to state 194
    DECIMAL      shift, and go to state 195
    ERRORTOKEN   shift, and go to state 196
    ADD          shift, and go to state 197
    SUB          shift, and go to state 198
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 238
    PARENL       shift, and go to state 199

    listExp         go to state 146
    appendOps       go to state 239
    returnListOps   go to state 240
    returnListOp    go to state 241
    destroyHeadOps  go to state 242
    mapFilterOps    go to state 243
    simpleExp       go to state 147
    constOp         go to state 200
    outConst        go to state 149
    binLogicalExp   go to state 201
    relationalExp   go to state 202
    sumExp          go to state 203
    mulExp          go to state 204
    factor          go to state 205
    fCall           go to state 206


State 105

   48 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 150


State 106

   27 compoundStmt: STFUNC stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    ENDFUNC      shift, and go to state 151
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    primitiveStmt         go to state 109
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 107

   96 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 152


State 108

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC •

    $end  reduce using rule 13 (funcDeclaration)
    TYPE  reduce using rule 13 (funcDeclaration)


State 109

   28 stmtList: stmtList primitiveStmt •

    ID           reduce using rule 28 (stmtList)
    TYPE         reduce using rule 28 (stmtList)
    NIL          reduce using rule 28 (stmtList)
    INTEGER      reduce using rule 28 (stmtList)
    DECIMAL      reduce using rule 28 (stmtList)
    ERRORTOKEN   reduce using rule 28 (stmtList)
    ADD          reduce using rule 28 (stmtList)
    SUB          reduce using rule 28 (stmtList)
    HEADLIST     reduce using rule 28 (stmtList)
    TAILLIST     reduce using rule 28 (stmtList)
    DESTROYHEAD  reduce using rule 28 (stmtList)
    IF           reduce using rule 28 (stmtList)
    FOR          reduce using rule 28 (stmtList)
    READ         reduce using rule 28 (stmtList)
    WRITE        reduce using rule 28 (stmtList)
    WRITELN      reduce using rule 28 (stmtList)
    RETURN       reduce using rule 28 (stmtList)
    STFUNC       reduce using rule 28 (stmtList)
    ENDFUNC      reduce using rule 28 (stmtList)
    PARENL       reduce using rule 28 (stmtList)


State 110

   27 compoundStmt: STFUNC • stmtList ENDFUNC
   41 condStmt: ifStmt STFUNC • ENDFUNC
   42         | ifStmt STFUNC • ENDFUNC elseStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    ENDFUNC      shift, and go to state 153
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    stmtList              go to state 244
    primitiveStmt         go to state 62
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 111

   39 condStmt: ifStmt primitiveStmt •
   40         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 154

    ID           reduce using rule 39 (condStmt)
    TYPE         reduce using rule 39 (condStmt)
    NIL          reduce using rule 39 (condStmt)
    INTEGER      reduce using rule 39 (condStmt)
    DECIMAL      reduce using rule 39 (condStmt)
    ERRORTOKEN   reduce using rule 39 (condStmt)
    ADD          reduce using rule 39 (condStmt)
    SUB          reduce using rule 39 (condStmt)
    HEADLIST     reduce using rule 39 (condStmt)
    TAILLIST     reduce using rule 39 (condStmt)
    DESTROYHEAD  reduce using rule 39 (condStmt)
    IF           reduce using rule 39 (condStmt)
    FOR          reduce using rule 39 (condStmt)
    READ         reduce using rule 39 (condStmt)
    WRITE        reduce using rule 39 (condStmt)
    WRITELN      reduce using rule 39 (condStmt)
    RETURN       reduce using rule 39 (condStmt)
    STFUNC       reduce using rule 39 (condStmt)
    ENDFUNC      reduce using rule 39 (condStmt)
    PARENL       reduce using rule 39 (condStmt)

    elseStmt  go to state 155


State 112

   54 returnListOps: returnListOp ID •

    SEMIC  reduce using rule 54 (returnListOps)


State 113

   38 exprStmt: expression SEMIC •

    ID           reduce using rule 38 (exprStmt)
    TYPE         reduce using rule 38 (exprStmt)
    NIL          reduce using rule 38 (exprStmt)
    INTEGER      reduce using rule 38 (exprStmt)
    DECIMAL      reduce using rule 38 (exprStmt)
    ERRORTOKEN   reduce using rule 38 (exprStmt)
    ADD          reduce using rule 38 (exprStmt)
    SUB          reduce using rule 38 (exprStmt)
    HEADLIST     reduce using rule 38 (exprStmt)
    TAILLIST     reduce using rule 38 (exprStmt)
    DESTROYHEAD  reduce using rule 38 (exprStmt)
    IF           reduce using rule 38 (exprStmt)
    FOR          reduce using rule 38 (exprStmt)
    READ         reduce using rule 38 (exprStmt)
    WRITE        reduce using rule 38 (exprStmt)
    WRITELN      reduce using rule 38 (exprStmt)
    RETURN       reduce using rule 38 (exprStmt)
    STFUNC       reduce using rule 38 (exprStmt)
    ENDFUNC      reduce using rule 38 (exprStmt)
    PARENL       reduce using rule 38 (exprStmt)


State 114

   76 binLogicalOp: OR •

    SMALLER    reduce using rule 76 (binLogicalOp)
    GREATER    reduce using rule 76 (binLogicalOp)
    SMALLEQ    reduce using rule 76 (binLogicalOp)
    GREATEQ    reduce using rule 76 (binLogicalOp)
    EQUALS     reduce using rule 76 (binLogicalOp)
    DIFFERENT  reduce using rule 76 (binLogicalOp)


State 115

   77 binLogicalOp: AND •

    SMALLER    reduce using rule 77 (binLogicalOp)
    GREATER    reduce using rule 77 (binLogicalOp)
    SMALLEQ    reduce using rule 77 (binLogicalOp)
    GREATEQ    reduce using rule 77 (binLogicalOp)
    EQUALS     reduce using rule 77 (binLogicalOp)
    DIFFERENT  reduce using rule 77 (binLogicalOp)


State 116

   74 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    shift, and go to state 245
    GREATER    shift, and go to state 246
    SMALLEQ    shift, and go to state 247
    GREATEQ    shift, and go to state 248
    EQUALS     shift, and go to state 249
    DIFFERENT  shift, and go to state 250

    relationalOp  go to state 156


State 117

   80 relationalOp: SMALLER •

    ID          reduce using rule 80 (relationalOp)
    NIL         reduce using rule 80 (relationalOp)
    INTEGER     reduce using rule 80 (relationalOp)
    DECIMAL     reduce using rule 80 (relationalOp)
    ERRORTOKEN  reduce using rule 80 (relationalOp)
    ADD         reduce using rule 80 (relationalOp)
    SUB         reduce using rule 80 (relationalOp)
    PARENL      reduce using rule 80 (relationalOp)


State 118

   81 relationalOp: GREATER •

    ID          reduce using rule 81 (relationalOp)
    NIL         reduce using rule 81 (relationalOp)
    INTEGER     reduce using rule 81 (relationalOp)
    DECIMAL     reduce using rule 81 (relationalOp)
    ERRORTOKEN  reduce using rule 81 (relationalOp)
    ADD         reduce using rule 81 (relationalOp)
    SUB         reduce using rule 81 (relationalOp)
    PARENL      reduce using rule 81 (relationalOp)


State 119

   82 relationalOp: SMALLEQ •

    ID          reduce using rule 82 (relationalOp)
    NIL         reduce using rule 82 (relationalOp)
    INTEGER     reduce using rule 82 (relationalOp)
    DECIMAL     reduce using rule 82 (relationalOp)
    ERRORTOKEN  reduce using rule 82 (relationalOp)
    ADD         reduce using rule 82 (relationalOp)
    SUB         reduce using rule 82 (relationalOp)
    PARENL      reduce using rule 82 (relationalOp)


State 120

   83 relationalOp: GREATEQ •

    ID          reduce using rule 83 (relationalOp)
    NIL         reduce using rule 83 (relationalOp)
    INTEGER     reduce using rule 83 (relationalOp)
    DECIMAL     reduce using rule 83 (relationalOp)
    ERRORTOKEN  reduce using rule 83 (relationalOp)
    ADD         reduce using rule 83 (relationalOp)
    SUB         reduce using rule 83 (relationalOp)
    PARENL      reduce using rule 83 (relationalOp)


State 121

   84 relationalOp: EQUALS •

    ID          reduce using rule 84 (relationalOp)
    NIL         reduce using rule 84 (relationalOp)
    INTEGER     reduce using rule 84 (relationalOp)
    DECIMAL     reduce using rule 84 (relationalOp)
    ERRORTOKEN  reduce using rule 84 (relationalOp)
    ADD         reduce using rule 84 (relationalOp)
    SUB         reduce using rule 84 (relationalOp)
    PARENL      reduce using rule 84 (relationalOp)


State 122

   85 relationalOp: DIFFERENT •

    ID          reduce using rule 85 (relationalOp)
    NIL         reduce using rule 85 (relationalOp)
    INTEGER     reduce using rule 85 (relationalOp)
    DECIMAL     reduce using rule 85 (relationalOp)
    ERRORTOKEN  reduce using rule 85 (relationalOp)
    ADD         reduce using rule 85 (relationalOp)
    SUB         reduce using rule 85 (relationalOp)
    PARENL      reduce using rule 85 (relationalOp)


State 123

   78 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    ADD         shift, and go to state 46
    SUB         shift, and go to state 47
    PARENL      shift, and go to state 58

    constOp  go to state 77
    sumExp   go to state 157
    mulExp   go to state 83
    factor   go to state 84
    fCall    go to state 85


State 124

   86 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    ADD         shift, and go to state 46
    SUB         shift, and go to state 47
    PARENL      shift, and go to state 58

    constOp  go to state 77
    mulExp   go to state 158
    factor   go to state 84
    fCall    go to state 85


State 125

   87 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    ADD         shift, and go to state 46
    SUB         shift, and go to state 47
    PARENL      shift, and go to state 58

    constOp  go to state 77
    mulExp   go to state 159
    factor   go to state 84
    fCall    go to state 85


State 126

   89 mulExp: mulExp MULT • factor

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    PARENL      shift, and go to state 58

    constOp  go to state 77
    factor   go to state 160
    fCall    go to state 85


State 127

   90 mulExp: mulExp DIV • factor

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    PARENL      shift, and go to state 58

    constOp  go to state 77
    factor   go to state 161
    fCall    go to state 85


State 128

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 • stmtList ENDFUNC

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    stmtList              go to state 162
    primitiveStmt         go to state 62
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 129

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    ENDFUNC      shift, and go to state 163
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    primitiveStmt         go to state 109
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 130

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC •

    $end  reduce using rule 10 (funcDeclaration)
    TYPE  reduce using rule 10 (funcDeclaration)


State 131

   53 appendOps: ID APPEND ID •

    SEMIC  reduce using rule 53 (appendOps)


State 132

   59 mapFilterOps: ID FILTER ID •

    SEMIC  reduce using rule 59 (mapFilterOps)


State 133

   63 assignExp: ID ASSIGN expression •

    SEMIC  reduce using rule 63 (assignExp)


State 134

   58 mapFilterOps: ID MAP ID •

    SEMIC  reduce using rule 58 (mapFilterOps)


State 135

  100 fCall: ID PARENL PARENR •

    ADD        reduce using rule 100 (fCall)
    SUB        reduce using rule 100 (fCall)
    MULT       reduce using rule 100 (fCall)
    DIV        reduce using rule 100 (fCall)
    OR         reduce using rule 100 (fCall)
    AND        reduce using rule 100 (fCall)
    SMALLER    reduce using rule 100 (fCall)
    GREATER    reduce using rule 100 (fCall)
    SMALLEQ    reduce using rule 100 (fCall)
    GREATEQ    reduce using rule 100 (fCall)
    EQUALS     reduce using rule 100 (fCall)
    DIFFERENT  reduce using rule 100 (fCall)
    SEMIC      reduce using rule 100 (fCall)


State 136

  102 callParams: simpleExp •

    COMMA   reduce using rule 102 (callParams)
    PARENR  reduce using rule 102 (callParams)


State 137

   99 fCall: ID PARENL callParams • PARENR
  101 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 164
    PARENR  shift, and go to state 165


State 138

   21 simpleVarDeclaration: TYPE LISTTYPE ID •

    SEMIC  reduce using rule 21 (simpleVarDeclaration)


State 139

   43 ifStmt: IF PARENL simpleExp • PARENR

    PARENR  shift, and go to state 166


State 140

   63 assignExp: ID • ASSIGN expression
   94 factor: ID •
   99 fCall: ID • PARENL callParams PARENR
  100      | ID • PARENL PARENR

    ASSIGN  shift, and go to state 91
    PARENL  shift, and go to state 93

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    SEMIC      reduce using rule 94 (factor)


State 141

   46 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 167


State 142

   47 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 168


State 143

   68 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 169


State 144

   53 appendOps: ID • APPEND ID
   58 mapFilterOps: ID • MAP ID
   59             | ID • FILTER ID
   94 factor: ID •
   99 fCall: ID • PARENL callParams PARENR
  100      | ID • PARENL PARENR

    APPEND  shift, and go to state 251
    FILTER  shift, and go to state 252
    MAP     shift, and go to state 253
    PARENL  shift, and go to state 254

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    PARENR     reduce using rule 94 (factor)


State 145

   71 outConst: STRING •

    PARENR  reduce using rule 71 (outConst)


State 146

   73 outConst: listExp •

    PARENR  reduce using rule 73 (outConst)


State 147

   72 outConst: simpleExp •

    PARENR  reduce using rule 72 (outConst)


State 148

   69 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 170


State 149

   70 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 171


State 150

   48 returnStmt: RETURN expression SEMIC •

    ID           reduce using rule 48 (returnStmt)
    TYPE         reduce using rule 48 (returnStmt)
    NIL          reduce using rule 48 (returnStmt)
    INTEGER      reduce using rule 48 (returnStmt)
    DECIMAL      reduce using rule 48 (returnStmt)
    ERRORTOKEN   reduce using rule 48 (returnStmt)
    ADD          reduce using rule 48 (returnStmt)
    SUB          reduce using rule 48 (returnStmt)
    HEADLIST     reduce using rule 48 (returnStmt)
    TAILLIST     reduce using rule 48 (returnStmt)
    DESTROYHEAD  reduce using rule 48 (returnStmt)
    IF           reduce using rule 48 (returnStmt)
    FOR          reduce using rule 48 (returnStmt)
    READ         reduce using rule 48 (returnStmt)
    WRITE        reduce using rule 48 (returnStmt)
    WRITELN      reduce using rule 48 (returnStmt)
    RETURN       reduce using rule 48 (returnStmt)
    STFUNC       reduce using rule 48 (returnStmt)
    ENDFUNC      reduce using rule 48 (returnStmt)
    PARENL       reduce using rule 48 (returnStmt)


State 151

   27 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduce using rule 27 (compoundStmt)
    TYPE         reduce using rule 27 (compoundStmt)
    NIL          reduce using rule 27 (compoundStmt)
    INTEGER      reduce using rule 27 (compoundStmt)
    DECIMAL      reduce using rule 27 (compoundStmt)
    ERRORTOKEN   reduce using rule 27 (compoundStmt)
    ADD          reduce using rule 27 (compoundStmt)
    SUB          reduce using rule 27 (compoundStmt)
    HEADLIST     reduce using rule 27 (compoundStmt)
    TAILLIST     reduce using rule 27 (compoundStmt)
    DESTROYHEAD  reduce using rule 27 (compoundStmt)
    IF           reduce using rule 27 (compoundStmt)
    FOR          reduce using rule 27 (compoundStmt)
    READ         reduce using rule 27 (compoundStmt)
    WRITE        reduce using rule 27 (compoundStmt)
    WRITELN      reduce using rule 27 (compoundStmt)
    RETURN       reduce using rule 27 (compoundStmt)
    STFUNC       reduce using rule 27 (compoundStmt)
    ENDFUNC      reduce using rule 27 (compoundStmt)
    PARENL       reduce using rule 27 (compoundStmt)


State 152

   96 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 96 (factor)
    SUB        reduce using rule 96 (factor)
    MULT       reduce using rule 96 (factor)
    DIV        reduce using rule 96 (factor)
    OR         reduce using rule 96 (factor)
    AND        reduce using rule 96 (factor)
    SMALLER    reduce using rule 96 (factor)
    GREATER    reduce using rule 96 (factor)
    SMALLEQ    reduce using rule 96 (factor)
    GREATEQ    reduce using rule 96 (factor)
    EQUALS     reduce using rule 96 (factor)
    DIFFERENT  reduce using rule 96 (factor)
    SEMIC      reduce using rule 96 (factor)


State 153

   41 condStmt: ifStmt STFUNC ENDFUNC •
   42         | ifStmt STFUNC ENDFUNC • elseStmt

    ELSE  shift, and go to state 154

    ID           reduce using rule 41 (condStmt)
    TYPE         reduce using rule 41 (condStmt)
    NIL          reduce using rule 41 (condStmt)
    INTEGER      reduce using rule 41 (condStmt)
    DECIMAL      reduce using rule 41 (condStmt)
    ERRORTOKEN   reduce using rule 41 (condStmt)
    ADD          reduce using rule 41 (condStmt)
    SUB          reduce using rule 41 (condStmt)
    HEADLIST     reduce using rule 41 (condStmt)
    TAILLIST     reduce using rule 41 (condStmt)
    DESTROYHEAD  reduce using rule 41 (condStmt)
    IF           reduce using rule 41 (condStmt)
    FOR          reduce using rule 41 (condStmt)
    READ         reduce using rule 41 (condStmt)
    WRITE        reduce using rule 41 (condStmt)
    WRITELN      reduce using rule 41 (condStmt)
    RETURN       reduce using rule 41 (condStmt)
    STFUNC       reduce using rule 41 (condStmt)
    ENDFUNC      reduce using rule 41 (condStmt)
    PARENL       reduce using rule 41 (condStmt)

    elseStmt  go to state 172


State 154

   45 elseStmt: ELSE • $@9 primitiveStmt

    ID           reduce using rule 44 ($@9)
    TYPE         reduce using rule 44 ($@9)
    NIL          reduce using rule 44 ($@9)
    INTEGER      reduce using rule 44 ($@9)
    DECIMAL      reduce using rule 44 ($@9)
    ERRORTOKEN   reduce using rule 44 ($@9)
    ADD          reduce using rule 44 ($@9)
    SUB          reduce using rule 44 ($@9)
    HEADLIST     reduce using rule 44 ($@9)
    TAILLIST     reduce using rule 44 ($@9)
    DESTROYHEAD  reduce using rule 44 ($@9)
    IF           reduce using rule 44 ($@9)
    FOR          reduce using rule 44 ($@9)
    READ         reduce using rule 44 ($@9)
    WRITE        reduce using rule 44 ($@9)
    WRITELN      reduce using rule 44 ($@9)
    RETURN       reduce using rule 44 ($@9)
    STFUNC       reduce using rule 44 ($@9)
    PARENL       reduce using rule 44 ($@9)

    $@9  go to state 173


State 155

   40 condStmt: ifStmt primitiveStmt elseStmt •

    ID           reduce using rule 40 (condStmt)
    TYPE         reduce using rule 40 (condStmt)
    NIL          reduce using rule 40 (condStmt)
    INTEGER      reduce using rule 40 (condStmt)
    DECIMAL      reduce using rule 40 (condStmt)
    ERRORTOKEN   reduce using rule 40 (condStmt)
    ADD          reduce using rule 40 (condStmt)
    SUB          reduce using rule 40 (condStmt)
    HEADLIST     reduce using rule 40 (condStmt)
    TAILLIST     reduce using rule 40 (condStmt)
    DESTROYHEAD  reduce using rule 40 (condStmt)
    IF           reduce using rule 40 (condStmt)
    FOR          reduce using rule 40 (condStmt)
    READ         reduce using rule 40 (condStmt)
    WRITE        reduce using rule 40 (condStmt)
    WRITELN      reduce using rule 40 (condStmt)
    RETURN       reduce using rule 40 (condStmt)
    STFUNC       reduce using rule 40 (condStmt)
    ENDFUNC      reduce using rule 40 (condStmt)
    PARENL       reduce using rule 40 (condStmt)


State 156

   74 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR     reduce using rule 74 (binLogicalExp)
    AND    reduce using rule 74 (binLogicalExp)
    SEMIC  reduce using rule 74 (binLogicalExp)


State 157

   78 relationalExp: relationalExp relationalOp sumExp •
   86 sumExp: sumExp • ADD mulExp
   87       | sumExp • SUB mulExp

    ADD  shift, and go to state 124
    SUB  shift, and go to state 125

    OR         reduce using rule 78 (relationalExp)
    AND        reduce using rule 78 (relationalExp)
    SMALLER    reduce using rule 78 (relationalExp)
    GREATER    reduce using rule 78 (relationalExp)
    SMALLEQ    reduce using rule 78 (relationalExp)
    GREATEQ    reduce using rule 78 (relationalExp)
    EQUALS     reduce using rule 78 (relationalExp)
    DIFFERENT  reduce using rule 78 (relationalExp)
    SEMIC      reduce using rule 78 (relationalExp)


State 158

   86 sumExp: sumExp ADD mulExp •
   89 mulExp: mulExp • MULT factor
   90       | mulExp • DIV factor

    MULT  shift, and go to state 126
    DIV   shift, and go to state 127

    ADD        reduce using rule 86 (sumExp)
    SUB        reduce using rule 86 (sumExp)
    OR         reduce using rule 86 (sumExp)
    AND        reduce using rule 86 (sumExp)
    SMALLER    reduce using rule 86 (sumExp)
    GREATER    reduce using rule 86 (sumExp)
    SMALLEQ    reduce using rule 86 (sumExp)
    GREATEQ    reduce using rule 86 (sumExp)
    EQUALS     reduce using rule 86 (sumExp)
    DIFFERENT  reduce using rule 86 (sumExp)
    SEMIC      reduce using rule 86 (sumExp)


State 159

   87 sumExp: sumExp SUB mulExp •
   89 mulExp: mulExp • MULT factor
   90       | mulExp • DIV factor

    MULT  shift, and go to state 126
    DIV   shift, and go to state 127

    ADD        reduce using rule 87 (sumExp)
    SUB        reduce using rule 87 (sumExp)
    OR         reduce using rule 87 (sumExp)
    AND        reduce using rule 87 (sumExp)
    SMALLER    reduce using rule 87 (sumExp)
    GREATER    reduce using rule 87 (sumExp)
    SMALLEQ    reduce using rule 87 (sumExp)
    GREATEQ    reduce using rule 87 (sumExp)
    EQUALS     reduce using rule 87 (sumExp)
    DIFFERENT  reduce using rule 87 (sumExp)
    SEMIC      reduce using rule 87 (sumExp)


State 160

   89 mulExp: mulExp MULT factor •

    ADD        reduce using rule 89 (mulExp)
    SUB        reduce using rule 89 (mulExp)
    MULT       reduce using rule 89 (mulExp)
    DIV        reduce using rule 89 (mulExp)
    OR         reduce using rule 89 (mulExp)
    AND        reduce using rule 89 (mulExp)
    SMALLER    reduce using rule 89 (mulExp)
    GREATER    reduce using rule 89 (mulExp)
    SMALLEQ    reduce using rule 89 (mulExp)
    GREATEQ    reduce using rule 89 (mulExp)
    EQUALS     reduce using rule 89 (mulExp)
    DIFFERENT  reduce using rule 89 (mulExp)
    SEMIC      reduce using rule 89 (mulExp)


State 161

   90 mulExp: mulExp DIV factor •

    ADD        reduce using rule 90 (mulExp)
    SUB        reduce using rule 90 (mulExp)
    MULT       reduce using rule 90 (mulExp)
    DIV        reduce using rule 90 (mulExp)
    OR         reduce using rule 90 (mulExp)
    AND        reduce using rule 90 (mulExp)
    SMALLER    reduce using rule 90 (mulExp)
    GREATER    reduce using rule 90 (mulExp)
    SMALLEQ    reduce using rule 90 (mulExp)
    GREATEQ    reduce using rule 90 (mulExp)
    EQUALS     reduce using rule 90 (mulExp)
    DIFFERENT  reduce using rule 90 (mulExp)
    SEMIC      reduce using rule 90 (mulExp)


State 162

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    ENDFUNC      shift, and go to state 174
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    primitiveStmt         go to state 109
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 163

   19 funcDeclaration: TYPE LISTTYPE ID PARENL $@7 PARENR STFUNC $@8 stmtList ENDFUNC •

    $end  reduce using rule 19 (funcDeclaration)
    TYPE  reduce using rule 19 (funcDeclaration)


State 164

  101 callParams: callParams COMMA • simpleExp

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    ADD         shift, and go to state 228
    SUB         shift, and go to state 229
    PARENL      shift, and go to state 230

    simpleExp      go to state 175
    constOp        go to state 231
    binLogicalExp  go to state 232
    relationalExp  go to state 233
    sumExp         go to state 234
    mulExp         go to state 235
    factor         go to state 236
    fCall          go to state 237


State 165

   99 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 99 (fCall)
    SUB        reduce using rule 99 (fCall)
    MULT       reduce using rule 99 (fCall)
    DIV        reduce using rule 99 (fCall)
    OR         reduce using rule 99 (fCall)
    AND        reduce using rule 99 (fCall)
    SMALLER    reduce using rule 99 (fCall)
    GREATER    reduce using rule 99 (fCall)
    SMALLEQ    reduce using rule 99 (fCall)
    GREATEQ    reduce using rule 99 (fCall)
    EQUALS     reduce using rule 99 (fCall)
    DIFFERENT  reduce using rule 99 (fCall)
    SEMIC      reduce using rule 99 (fCall)


State 166

   43 ifStmt: IF PARENL simpleExp PARENR •

    ID           reduce using rule 43 (ifStmt)
    TYPE         reduce using rule 43 (ifStmt)
    NIL          reduce using rule 43 (ifStmt)
    INTEGER      reduce using rule 43 (ifStmt)
    DECIMAL      reduce using rule 43 (ifStmt)
    ERRORTOKEN   reduce using rule 43 (ifStmt)
    ADD          reduce using rule 43 (ifStmt)
    SUB          reduce using rule 43 (ifStmt)
    HEADLIST     reduce using rule 43 (ifStmt)
    TAILLIST     reduce using rule 43 (ifStmt)
    DESTROYHEAD  reduce using rule 43 (ifStmt)
    IF           reduce using rule 43 (ifStmt)
    FOR          reduce using rule 43 (ifStmt)
    READ         reduce using rule 43 (ifStmt)
    WRITE        reduce using rule 43 (ifStmt)
    WRITELN      reduce using rule 43 (ifStmt)
    RETURN       reduce using rule 43 (ifStmt)
    STFUNC       reduce using rule 43 (ifStmt)
    PARENL       reduce using rule 43 (ifStmt)


State 167

   46 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    ADD         shift, and go to state 46
    SUB         shift, and go to state 47
    PARENL      shift, and go to state 58

    simpleExp      go to state 176
    constOp        go to state 77
    binLogicalExp  go to state 80
    relationalExp  go to state 81
    sumExp         go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 168

   47 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    ADD         shift, and go to state 46
    SUB         shift, and go to state 47
    PARENL      shift, and go to state 58

    simpleExp      go to state 177
    constOp        go to state 77
    binLogicalExp  go to state 80
    relationalExp  go to state 81
    sumExp         go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 169

   68 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 178


State 170

   69 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 179


State 171

   70 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 180


State 172

   42 condStmt: ifStmt STFUNC ENDFUNC elseStmt •

    ID           reduce using rule 42 (condStmt)
    TYPE         reduce using rule 42 (condStmt)
    NIL          reduce using rule 42 (condStmt)
    INTEGER      reduce using rule 42 (condStmt)
    DECIMAL      reduce using rule 42 (condStmt)
    ERRORTOKEN   reduce using rule 42 (condStmt)
    ADD          reduce using rule 42 (condStmt)
    SUB          reduce using rule 42 (condStmt)
    HEADLIST     reduce using rule 42 (condStmt)
    TAILLIST     reduce using rule 42 (condStmt)
    DESTROYHEAD  reduce using rule 42 (condStmt)
    IF           reduce using rule 42 (condStmt)
    FOR          reduce using rule 42 (condStmt)
    READ         reduce using rule 42 (condStmt)
    WRITE        reduce using rule 42 (condStmt)
    WRITELN      reduce using rule 42 (condStmt)
    RETURN       reduce using rule 42 (condStmt)
    STFUNC       reduce using rule 42 (condStmt)
    ENDFUNC      reduce using rule 42 (condStmt)
    PARENL       reduce using rule 42 (condStmt)


State 173

   45 elseStmt: ELSE $@9 • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    primitiveStmt         go to state 181
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 174

   16 funcDeclaration: TYPE LISTTYPE ID PARENL $@5 params PARENR STFUNC $@6 stmtList ENDFUNC •

    $end  reduce using rule 16 (funcDeclaration)
    TYPE  reduce using rule 16 (funcDeclaration)


State 175

  101 callParams: callParams COMMA simpleExp •

    COMMA   reduce using rule 101 (callParams)
    PARENR  reduce using rule 101 (callParams)


State 176

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 182


State 177

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 183


State 178

   68 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduce using rule 68 (inOp)
    TYPE         reduce using rule 68 (inOp)
    NIL          reduce using rule 68 (inOp)
    INTEGER      reduce using rule 68 (inOp)
    DECIMAL      reduce using rule 68 (inOp)
    ERRORTOKEN   reduce using rule 68 (inOp)
    ADD          reduce using rule 68 (inOp)
    SUB          reduce using rule 68 (inOp)
    HEADLIST     reduce using rule 68 (inOp)
    TAILLIST     reduce using rule 68 (inOp)
    DESTROYHEAD  reduce using rule 68 (inOp)
    IF           reduce using rule 68 (inOp)
    FOR          reduce using rule 68 (inOp)
    READ         reduce using rule 68 (inOp)
    WRITE        reduce using rule 68 (inOp)
    WRITELN      reduce using rule 68 (inOp)
    RETURN       reduce using rule 68 (inOp)
    STFUNC       reduce using rule 68 (inOp)
    ENDFUNC      reduce using rule 68 (inOp)
    PARENL       reduce using rule 68 (inOp)


State 179

   69 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduce using rule 69 (outOp)
    TYPE         reduce using rule 69 (outOp)
    NIL          reduce using rule 69 (outOp)
    INTEGER      reduce using rule 69 (outOp)
    DECIMAL      reduce using rule 69 (outOp)
    ERRORTOKEN   reduce using rule 69 (outOp)
    ADD          reduce using rule 69 (outOp)
    SUB          reduce using rule 69 (outOp)
    HEADLIST     reduce using rule 69 (outOp)
    TAILLIST     reduce using rule 69 (outOp)
    DESTROYHEAD  reduce using rule 69 (outOp)
    IF           reduce using rule 69 (outOp)
    FOR          reduce using rule 69 (outOp)
    READ         reduce using rule 69 (outOp)
    WRITE        reduce using rule 69 (outOp)
    WRITELN      reduce using rule 69 (outOp)
    RETURN       reduce using rule 69 (outOp)
    STFUNC       reduce using rule 69 (outOp)
    ENDFUNC      reduce using rule 69 (outOp)
    PARENL       reduce using rule 69 (outOp)


State 180

   70 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduce using rule 70 (outOp)
    TYPE         reduce using rule 70 (outOp)
    NIL          reduce using rule 70 (outOp)
    INTEGER      reduce using rule 70 (outOp)
    DECIMAL      reduce using rule 70 (outOp)
    ERRORTOKEN   reduce using rule 70 (outOp)
    ADD          reduce using rule 70 (outOp)
    SUB          reduce using rule 70 (outOp)
    HEADLIST     reduce using rule 70 (outOp)
    TAILLIST     reduce using rule 70 (outOp)
    DESTROYHEAD  reduce using rule 70 (outOp)
    IF           reduce using rule 70 (outOp)
    FOR          reduce using rule 70 (outOp)
    READ         reduce using rule 70 (outOp)
    WRITE        reduce using rule 70 (outOp)
    WRITELN      reduce using rule 70 (outOp)
    RETURN       reduce using rule 70 (outOp)
    STFUNC       reduce using rule 70 (outOp)
    ENDFUNC      reduce using rule 70 (outOp)
    PARENL       reduce using rule 70 (outOp)


State 181

   45 elseStmt: ELSE $@9 primitiveStmt •

    ID           reduce using rule 45 (elseStmt)
    TYPE         reduce using rule 45 (elseStmt)
    NIL          reduce using rule 45 (elseStmt)
    INTEGER      reduce using rule 45 (elseStmt)
    DECIMAL      reduce using rule 45 (elseStmt)
    ERRORTOKEN   reduce using rule 45 (elseStmt)
    ADD          reduce using rule 45 (elseStmt)
    SUB          reduce using rule 45 (elseStmt)
    HEADLIST     reduce using rule 45 (elseStmt)
    TAILLIST     reduce using rule 45 (elseStmt)
    DESTROYHEAD  reduce using rule 45 (elseStmt)
    IF           reduce using rule 45 (elseStmt)
    FOR          reduce using rule 45 (elseStmt)
    READ         reduce using rule 45 (elseStmt)
    WRITE        reduce using rule 45 (elseStmt)
    WRITELN      reduce using rule 45 (elseStmt)
    RETURN       reduce using rule 45 (elseStmt)
    STFUNC       reduce using rule 45 (elseStmt)
    ENDFUNC      reduce using rule 45 (elseStmt)
    PARENL       reduce using rule 45 (elseStmt)


State 182

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 184

    assignExp  go to state 185


State 183

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 184

    assignExp  go to state 186


State 184

   63 assignExp: ID • ASSIGN expression

    ASSIGN  shift, and go to state 255


State 185

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 187


State 186

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 188


State 187

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    primitiveStmt         go to state 189
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 188

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    primitiveStmt         go to state 190
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 189

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduce using rule 46 (iterStmt)
    TYPE         reduce using rule 46 (iterStmt)
    NIL          reduce using rule 46 (iterStmt)
    INTEGER      reduce using rule 46 (iterStmt)
    DECIMAL      reduce using rule 46 (iterStmt)
    ERRORTOKEN   reduce using rule 46 (iterStmt)
    ADD          reduce using rule 46 (iterStmt)
    SUB          reduce using rule 46 (iterStmt)
    HEADLIST     reduce using rule 46 (iterStmt)
    TAILLIST     reduce using rule 46 (iterStmt)
    DESTROYHEAD  reduce using rule 46 (iterStmt)
    IF           reduce using rule 46 (iterStmt)
    FOR          reduce using rule 46 (iterStmt)
    READ         reduce using rule 46 (iterStmt)
    WRITE        reduce using rule 46 (iterStmt)
    WRITELN      reduce using rule 46 (iterStmt)
    RETURN       reduce using rule 46 (iterStmt)
    STFUNC       reduce using rule 46 (iterStmt)
    ENDFUNC      reduce using rule 46 (iterStmt)
    PARENL       reduce using rule 46 (iterStmt)


State 190

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduce using rule 47 (iterStmt)
    TYPE         reduce using rule 47 (iterStmt)
    NIL          reduce using rule 47 (iterStmt)
    INTEGER      reduce using rule 47 (iterStmt)
    DECIMAL      reduce using rule 47 (iterStmt)
    ERRORTOKEN   reduce using rule 47 (iterStmt)
    ADD          reduce using rule 47 (iterStmt)
    SUB          reduce using rule 47 (iterStmt)
    HEADLIST     reduce using rule 47 (iterStmt)
    TAILLIST     reduce using rule 47 (iterStmt)
    DESTROYHEAD  reduce using rule 47 (iterStmt)
    IF           reduce using rule 47 (iterStmt)
    FOR          reduce using rule 47 (iterStmt)
    READ         reduce using rule 47 (iterStmt)
    WRITE        reduce using rule 47 (iterStmt)
    WRITELN      reduce using rule 47 (iterStmt)
    RETURN       reduce using rule 47 (iterStmt)
    STFUNC       reduce using rule 47 (iterStmt)
    ENDFUNC      reduce using rule 47 (iterStmt)
    PARENL       reduce using rule 47 (iterStmt)


State 191

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 256


State 192

   94 factor: ID •
   99 fCall: ID • PARENL callParams PARENR
  100      | ID • PARENL PARENR

    PARENL  shift, and go to state 254

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    PARENR     reduce using rule 94 (factor)


State 193

   67 constOp: NIL •

    ADD        reduce using rule 67 (constOp)
    SUB        reduce using rule 67 (constOp)
    MULT       reduce using rule 67 (constOp)
    DIV        reduce using rule 67 (constOp)
    OR         reduce using rule 67 (constOp)
    AND        reduce using rule 67 (constOp)
    SMALLER    reduce using rule 67 (constOp)
    GREATER    reduce using rule 67 (constOp)
    SMALLEQ    reduce using rule 67 (constOp)
    GREATEQ    reduce using rule 67 (constOp)
    EQUALS     reduce using rule 67 (constOp)
    DIFFERENT  reduce using rule 67 (constOp)
    PARENR     reduce using rule 67 (constOp)


State 194

   65 constOp: INTEGER •

    ADD        reduce using rule 65 (constOp)
    SUB        reduce using rule 65 (constOp)
    MULT       reduce using rule 65 (constOp)
    DIV        reduce using rule 65 (constOp)
    OR         reduce using rule 65 (constOp)
    AND        reduce using rule 65 (constOp)
    SMALLER    reduce using rule 65 (constOp)
    GREATER    reduce using rule 65 (constOp)
    SMALLEQ    reduce using rule 65 (constOp)
    GREATEQ    reduce using rule 65 (constOp)
    EQUALS     reduce using rule 65 (constOp)
    DIFFERENT  reduce using rule 65 (constOp)
    PARENR     reduce using rule 65 (constOp)


State 195

   66 constOp: DECIMAL •

    ADD        reduce using rule 66 (constOp)
    SUB        reduce using rule 66 (constOp)
    MULT       reduce using rule 66 (constOp)
    DIV        reduce using rule 66 (constOp)
    OR         reduce using rule 66 (constOp)
    AND        reduce using rule 66 (constOp)
    SMALLER    reduce using rule 66 (constOp)
    GREATER    reduce using rule 66 (constOp)
    SMALLEQ    reduce using rule 66 (constOp)
    GREATEQ    reduce using rule 66 (constOp)
    EQUALS     reduce using rule 66 (constOp)
    DIFFERENT  reduce using rule 66 (constOp)
    PARENR     reduce using rule 66 (constOp)


State 196

   98 factor: ERRORTOKEN •

    ADD        reduce using rule 98 (factor)
    SUB        reduce using rule 98 (factor)
    MULT       reduce using rule 98 (factor)
    DIV        reduce using rule 98 (factor)
    OR         reduce using rule 98 (factor)
    AND        reduce using rule 98 (factor)
    SMALLER    reduce using rule 98 (factor)
    GREATER    reduce using rule 98 (factor)
    SMALLEQ    reduce using rule 98 (factor)
    GREATEQ    reduce using rule 98 (factor)
    EQUALS     reduce using rule 98 (factor)
    DIFFERENT  reduce using rule 98 (factor)
    PARENR     reduce using rule 98 (factor)


State 197

   92 mulExp: ADD • factor

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    PARENL      shift, and go to state 199

    constOp  go to state 200
    factor   go to state 257
    fCall    go to state 206


State 198

   93 mulExp: SUB • factor

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    PARENL      shift, and go to state 199

    constOp  go to state 200
    factor   go to state 258
    fCall    go to state 206


State 199

   96 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    ADD         shift, and go to state 197
    SUB         shift, and go to state 198
    PARENL      shift, and go to state 199

    simpleExp      go to state 259
    constOp        go to state 200
    binLogicalExp  go to state 201
    relationalExp  go to state 202
    sumExp         go to state 203
    mulExp         go to state 204
    factor         go to state 205
    fCall          go to state 206


State 200

   97 factor: constOp •

    ADD        reduce using rule 97 (factor)
    SUB        reduce using rule 97 (factor)
    MULT       reduce using rule 97 (factor)
    DIV        reduce using rule 97 (factor)
    OR         reduce using rule 97 (factor)
    AND        reduce using rule 97 (factor)
    SMALLER    reduce using rule 97 (factor)
    GREATER    reduce using rule 97 (factor)
    SMALLEQ    reduce using rule 97 (factor)
    GREATEQ    reduce using rule 97 (factor)
    EQUALS     reduce using rule 97 (factor)
    DIFFERENT  reduce using rule 97 (factor)
    PARENR     reduce using rule 97 (factor)


State 201

   64 simpleExp: binLogicalExp •
   74 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   shift, and go to state 114
    AND  shift, and go to state 115

    PARENR  reduce using rule 64 (simpleExp)

    binLogicalOp  go to state 260


State 202

   75 binLogicalExp: relationalExp •
   78 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 117
    GREATER    shift, and go to state 118
    SMALLEQ    shift, and go to state 119
    GREATEQ    shift, and go to state 120
    EQUALS     shift, and go to state 121
    DIFFERENT  shift, and go to state 122

    OR      reduce using rule 75 (binLogicalExp)
    AND     reduce using rule 75 (binLogicalExp)
    PARENR  reduce using rule 75 (binLogicalExp)

    relationalOp  go to state 261


State 203

   79 relationalExp: sumExp •
   86 sumExp: sumExp • ADD mulExp
   87       | sumExp • SUB mulExp

    ADD  shift, and go to state 262
    SUB  shift, and go to state 263

    OR         reduce using rule 79 (relationalExp)
    AND        reduce using rule 79 (relationalExp)
    SMALLER    reduce using rule 79 (relationalExp)
    GREATER    reduce using rule 79 (relationalExp)
    SMALLEQ    reduce using rule 79 (relationalExp)
    GREATEQ    reduce using rule 79 (relationalExp)
    EQUALS     reduce using rule 79 (relationalExp)
    DIFFERENT  reduce using rule 79 (relationalExp)
    PARENR     reduce using rule 79 (relationalExp)


State 204

   88 sumExp: mulExp •
   89 mulExp: mulExp • MULT factor
   90       | mulExp • DIV factor

    MULT  shift, and go to state 264
    DIV   shift, and go to state 265

    ADD        reduce using rule 88 (sumExp)
    SUB        reduce using rule 88 (sumExp)
    OR         reduce using rule 88 (sumExp)
    AND        reduce using rule 88 (sumExp)
    SMALLER    reduce using rule 88 (sumExp)
    GREATER    reduce using rule 88 (sumExp)
    SMALLEQ    reduce using rule 88 (sumExp)
    GREATEQ    reduce using rule 88 (sumExp)
    EQUALS     reduce using rule 88 (sumExp)
    DIFFERENT  reduce using rule 88 (sumExp)
    PARENR     reduce using rule 88 (sumExp)


State 205

   91 mulExp: factor •

    ADD        reduce using rule 91 (mulExp)
    SUB        reduce using rule 91 (mulExp)
    MULT       reduce using rule 91 (mulExp)
    DIV        reduce using rule 91 (mulExp)
    OR         reduce using rule 91 (mulExp)
    AND        reduce using rule 91 (mulExp)
    SMALLER    reduce using rule 91 (mulExp)
    GREATER    reduce using rule 91 (mulExp)
    SMALLEQ    reduce using rule 91 (mulExp)
    GREATEQ    reduce using rule 91 (mulExp)
    EQUALS     reduce using rule 91 (mulExp)
    DIFFERENT  reduce using rule 91 (mulExp)
    PARENR     reduce using rule 91 (mulExp)


State 206

   95 factor: fCall •

    ADD        reduce using rule 95 (factor)
    SUB        reduce using rule 95 (factor)
    MULT       reduce using rule 95 (factor)
    DIV        reduce using rule 95 (factor)
    OR         reduce using rule 95 (factor)
    AND        reduce using rule 95 (factor)
    SMALLER    reduce using rule 95 (factor)
    GREATER    reduce using rule 95 (factor)
    SMALLEQ    reduce using rule 95 (factor)
    GREATEQ    reduce using rule 95 (factor)
    EQUALS     reduce using rule 95 (factor)
    DIFFERENT  reduce using rule 95 (factor)
    PARENR     reduce using rule 95 (factor)


State 207

   46 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   47         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  shift, and go to state 266


State 208

   68 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 267


State 209

   69 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 268


State 210

   70 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 269


State 211

   48 returnStmt: RETURN • expression SEMIC

    ID           shift, and go to state 40
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    PARENL       shift, and go to state 58

    listExp         go to state 68
    appendOps       go to state 69
    returnListOps   go to state 70
    returnListOp    go to state 71
    destroyHeadOps  go to state 72
    mapFilterOps    go to state 73
    expression      go to state 270
    assignExp       go to state 75
    simpleExp       go to state 76
    constOp         go to state 77
    binLogicalExp   go to state 80
    relationalExp   go to state 81
    sumExp          go to state 82
    mulExp          go to state 83
    factor          go to state 84
    fCall           go to state 85


State 212

   37 primitiveStmt: varDeclaration •

    ID           reduce using rule 37 (primitiveStmt)
    TYPE         reduce using rule 37 (primitiveStmt)
    NIL          reduce using rule 37 (primitiveStmt)
    INTEGER      reduce using rule 37 (primitiveStmt)
    DECIMAL      reduce using rule 37 (primitiveStmt)
    ERRORTOKEN   reduce using rule 37 (primitiveStmt)
    ELSE         reduce using rule 37 (primitiveStmt)
    ADD          reduce using rule 37 (primitiveStmt)
    SUB          reduce using rule 37 (primitiveStmt)
    HEADLIST     reduce using rule 37 (primitiveStmt)
    TAILLIST     reduce using rule 37 (primitiveStmt)
    DESTROYHEAD  reduce using rule 37 (primitiveStmt)
    IF           reduce using rule 37 (primitiveStmt)
    FOR          reduce using rule 37 (primitiveStmt)
    READ         reduce using rule 37 (primitiveStmt)
    WRITE        reduce using rule 37 (primitiveStmt)
    WRITELN      reduce using rule 37 (primitiveStmt)
    RETURN       reduce using rule 37 (primitiveStmt)
    STFUNC       reduce using rule 37 (primitiveStmt)
    ENDFUNC      reduce using rule 37 (primitiveStmt)
    PARENL       reduce using rule 37 (primitiveStmt)


State 213

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 271


State 214

   31 primitiveStmt: compoundStmt •

    ID           reduce using rule 31 (primitiveStmt)
    TYPE         reduce using rule 31 (primitiveStmt)
    NIL          reduce using rule 31 (primitiveStmt)
    INTEGER      reduce using rule 31 (primitiveStmt)
    DECIMAL      reduce using rule 31 (primitiveStmt)
    ERRORTOKEN   reduce using rule 31 (primitiveStmt)
    ELSE         reduce using rule 31 (primitiveStmt)
    ADD          reduce using rule 31 (primitiveStmt)
    SUB          reduce using rule 31 (primitiveStmt)
    HEADLIST     reduce using rule 31 (primitiveStmt)
    TAILLIST     reduce using rule 31 (primitiveStmt)
    DESTROYHEAD  reduce using rule 31 (primitiveStmt)
    IF           reduce using rule 31 (primitiveStmt)
    FOR          reduce using rule 31 (primitiveStmt)
    READ         reduce using rule 31 (primitiveStmt)
    WRITE        reduce using rule 31 (primitiveStmt)
    WRITELN      reduce using rule 31 (primitiveStmt)
    RETURN       reduce using rule 31 (primitiveStmt)
    STFUNC       reduce using rule 31 (primitiveStmt)
    ENDFUNC      reduce using rule 31 (primitiveStmt)
    PARENL       reduce using rule 31 (primitiveStmt)


State 215

   30 primitiveStmt: exprStmt •

    ID           reduce using rule 30 (primitiveStmt)
    TYPE         reduce using rule 30 (primitiveStmt)
    NIL          reduce using rule 30 (primitiveStmt)
    INTEGER      reduce using rule 30 (primitiveStmt)
    DECIMAL      reduce using rule 30 (primitiveStmt)
    ERRORTOKEN   reduce using rule 30 (primitiveStmt)
    ELSE         reduce using rule 30 (primitiveStmt)
    ADD          reduce using rule 30 (primitiveStmt)
    SUB          reduce using rule 30 (primitiveStmt)
    HEADLIST     reduce using rule 30 (primitiveStmt)
    TAILLIST     reduce using rule 30 (primitiveStmt)
    DESTROYHEAD  reduce using rule 30 (primitiveStmt)
    IF           reduce using rule 30 (primitiveStmt)
    FOR          reduce using rule 30 (primitiveStmt)
    READ         reduce using rule 30 (primitiveStmt)
    WRITE        reduce using rule 30 (primitiveStmt)
    WRITELN      reduce using rule 30 (primitiveStmt)
    RETURN       reduce using rule 30 (primitiveStmt)
    STFUNC       reduce using rule 30 (primitiveStmt)
    ENDFUNC      reduce using rule 30 (primitiveStmt)
    PARENL       reduce using rule 30 (primitiveStmt)


State 216

   32 primitiveStmt: condStmt •

    ID           reduce using rule 32 (primitiveStmt)
    TYPE         reduce using rule 32 (primitiveStmt)
    NIL          reduce using rule 32 (primitiveStmt)
    INTEGER      reduce using rule 32 (primitiveStmt)
    DECIMAL      reduce using rule 32 (primitiveStmt)
    ERRORTOKEN   reduce using rule 32 (primitiveStmt)
    ELSE         reduce using rule 32 (primitiveStmt)
    ADD          reduce using rule 32 (primitiveStmt)
    SUB          reduce using rule 32 (primitiveStmt)
    HEADLIST     reduce using rule 32 (primitiveStmt)
    TAILLIST     reduce using rule 32 (primitiveStmt)
    DESTROYHEAD  reduce using rule 32 (primitiveStmt)
    IF           reduce using rule 32 (primitiveStmt)
    FOR          reduce using rule 32 (primitiveStmt)
    READ         reduce using rule 32 (primitiveStmt)
    WRITE        reduce using rule 32 (primitiveStmt)
    WRITELN      reduce using rule 32 (primitiveStmt)
    RETURN       reduce using rule 32 (primitiveStmt)
    STFUNC       reduce using rule 32 (primitiveStmt)
    ENDFUNC      reduce using rule 32 (primitiveStmt)
    PARENL       reduce using rule 32 (primitiveStmt)


State 217

   39 condStmt: ifStmt • primitiveStmt
   40         | ifStmt • primitiveStmt elseStmt
   41         | ifStmt • STFUNC ENDFUNC
   42         | ifStmt • STFUNC ENDFUNC elseStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 207
    READ         shift, and go to state 208
    WRITE        shift, and go to state 209
    WRITELN      shift, and go to state 210
    RETURN       shift, and go to state 211
    STFUNC       shift, and go to state 272
    PARENL       shift, and go to state 58

    varDeclaration        go to state 212
    simpleVarDeclaration  go to state 213
    compoundStmt          go to state 214
    primitiveStmt         go to state 273
    exprStmt              go to state 215
    condStmt              go to state 216
    ifStmt                go to state 217
    iterStmt              go to state 218
    returnStmt            go to state 219
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 220
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 221
    outOp                 go to state 222
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 218

   33 primitiveStmt: iterStmt •

    ID           reduce using rule 33 (primitiveStmt)
    TYPE         reduce using rule 33 (primitiveStmt)
    NIL          reduce using rule 33 (primitiveStmt)
    INTEGER      reduce using rule 33 (primitiveStmt)
    DECIMAL      reduce using rule 33 (primitiveStmt)
    ERRORTOKEN   reduce using rule 33 (primitiveStmt)
    ELSE         reduce using rule 33 (primitiveStmt)
    ADD          reduce using rule 33 (primitiveStmt)
    SUB          reduce using rule 33 (primitiveStmt)
    HEADLIST     reduce using rule 33 (primitiveStmt)
    TAILLIST     reduce using rule 33 (primitiveStmt)
    DESTROYHEAD  reduce using rule 33 (primitiveStmt)
    IF           reduce using rule 33 (primitiveStmt)
    FOR          reduce using rule 33 (primitiveStmt)
    READ         reduce using rule 33 (primitiveStmt)
    WRITE        reduce using rule 33 (primitiveStmt)
    WRITELN      reduce using rule 33 (primitiveStmt)
    RETURN       reduce using rule 33 (primitiveStmt)
    STFUNC       reduce using rule 33 (primitiveStmt)
    ENDFUNC      reduce using rule 33 (primitiveStmt)
    PARENL       reduce using rule 33 (primitiveStmt)


State 219

   34 primitiveStmt: returnStmt •

    ID           reduce using rule 34 (primitiveStmt)
    TYPE         reduce using rule 34 (primitiveStmt)
    NIL          reduce using rule 34 (primitiveStmt)
    INTEGER      reduce using rule 34 (primitiveStmt)
    DECIMAL      reduce using rule 34 (primitiveStmt)
    ERRORTOKEN   reduce using rule 34 (primitiveStmt)
    ELSE         reduce using rule 34 (primitiveStmt)
    ADD          reduce using rule 34 (primitiveStmt)
    SUB          reduce using rule 34 (primitiveStmt)
    HEADLIST     reduce using rule 34 (primitiveStmt)
    TAILLIST     reduce using rule 34 (primitiveStmt)
    DESTROYHEAD  reduce using rule 34 (primitiveStmt)
    IF           reduce using rule 34 (primitiveStmt)
    FOR          reduce using rule 34 (primitiveStmt)
    READ         reduce using rule 34 (primitiveStmt)
    WRITE        reduce using rule 34 (primitiveStmt)
    WRITELN      reduce using rule 34 (primitiveStmt)
    RETURN       reduce using rule 34 (primitiveStmt)
    STFUNC       reduce using rule 34 (primitiveStmt)
    ENDFUNC      reduce using rule 34 (primitiveStmt)
    PARENL       reduce using rule 34 (primitiveStmt)


State 220

   38 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 274


State 221

   35 primitiveStmt: inOp •

    ID           reduce using rule 35 (primitiveStmt)
    TYPE         reduce using rule 35 (primitiveStmt)
    NIL          reduce using rule 35 (primitiveStmt)
    INTEGER      reduce using rule 35 (primitiveStmt)
    DECIMAL      reduce using rule 35 (primitiveStmt)
    ERRORTOKEN   reduce using rule 35 (primitiveStmt)
    ELSE         reduce using rule 35 (primitiveStmt)
    ADD          reduce using rule 35 (primitiveStmt)
    SUB          reduce using rule 35 (primitiveStmt)
    HEADLIST     reduce using rule 35 (primitiveStmt)
    TAILLIST     reduce using rule 35 (primitiveStmt)
    DESTROYHEAD  reduce using rule 35 (primitiveStmt)
    IF           reduce using rule 35 (primitiveStmt)
    FOR          reduce using rule 35 (primitiveStmt)
    READ         reduce using rule 35 (primitiveStmt)
    WRITE        reduce using rule 35 (primitiveStmt)
    WRITELN      reduce using rule 35 (primitiveStmt)
    RETURN       reduce using rule 35 (primitiveStmt)
    STFUNC       reduce using rule 35 (primitiveStmt)
    ENDFUNC      reduce using rule 35 (primitiveStmt)
    PARENL       reduce using rule 35 (primitiveStmt)


State 222

   36 primitiveStmt: outOp •

    ID           reduce using rule 36 (primitiveStmt)
    TYPE         reduce using rule 36 (primitiveStmt)
    NIL          reduce using rule 36 (primitiveStmt)
    INTEGER      reduce using rule 36 (primitiveStmt)
    DECIMAL      reduce using rule 36 (primitiveStmt)
    ERRORTOKEN   reduce using rule 36 (primitiveStmt)
    ELSE         reduce using rule 36 (primitiveStmt)
    ADD          reduce using rule 36 (primitiveStmt)
    SUB          reduce using rule 36 (primitiveStmt)
    HEADLIST     reduce using rule 36 (primitiveStmt)
    TAILLIST     reduce using rule 36 (primitiveStmt)
    DESTROYHEAD  reduce using rule 36 (primitiveStmt)
    IF           reduce using rule 36 (primitiveStmt)
    FOR          reduce using rule 36 (primitiveStmt)
    READ         reduce using rule 36 (primitiveStmt)
    WRITE        reduce using rule 36 (primitiveStmt)
    WRITELN      reduce using rule 36 (primitiveStmt)
    RETURN       reduce using rule 36 (primitiveStmt)
    STFUNC       reduce using rule 36 (primitiveStmt)
    ENDFUNC      reduce using rule 36 (primitiveStmt)
    PARENL       reduce using rule 36 (primitiveStmt)


State 223

   94 factor: ID •
   99 fCall: ID • PARENL callParams PARENR
  100      | ID • PARENL PARENR

    PARENL  shift, and go to state 275

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    COMMA      reduce using rule 94 (factor)
    PARENR     reduce using rule 94 (factor)


State 224

   67 constOp: NIL •

    ADD        reduce using rule 67 (constOp)
    SUB        reduce using rule 67 (constOp)
    MULT       reduce using rule 67 (constOp)
    DIV        reduce using rule 67 (constOp)
    OR         reduce using rule 67 (constOp)
    AND        reduce using rule 67 (constOp)
    SMALLER    reduce using rule 67 (constOp)
    GREATER    reduce using rule 67 (constOp)
    SMALLEQ    reduce using rule 67 (constOp)
    GREATEQ    reduce using rule 67 (constOp)
    EQUALS     reduce using rule 67 (constOp)
    DIFFERENT  reduce using rule 67 (constOp)
    COMMA      reduce using rule 67 (constOp)
    PARENR     reduce using rule 67 (constOp)


State 225

   65 constOp: INTEGER •

    ADD        reduce using rule 65 (constOp)
    SUB        reduce using rule 65 (constOp)
    MULT       reduce using rule 65 (constOp)
    DIV        reduce using rule 65 (constOp)
    OR         reduce using rule 65 (constOp)
    AND        reduce using rule 65 (constOp)
    SMALLER    reduce using rule 65 (constOp)
    GREATER    reduce using rule 65 (constOp)
    SMALLEQ    reduce using rule 65 (constOp)
    GREATEQ    reduce using rule 65 (constOp)
    EQUALS     reduce using rule 65 (constOp)
    DIFFERENT  reduce using rule 65 (constOp)
    COMMA      reduce using rule 65 (constOp)
    PARENR     reduce using rule 65 (constOp)


State 226

   66 constOp: DECIMAL •

    ADD        reduce using rule 66 (constOp)
    SUB        reduce using rule 66 (constOp)
    MULT       reduce using rule 66 (constOp)
    DIV        reduce using rule 66 (constOp)
    OR         reduce using rule 66 (constOp)
    AND        reduce using rule 66 (constOp)
    SMALLER    reduce using rule 66 (constOp)
    GREATER    reduce using rule 66 (constOp)
    SMALLEQ    reduce using rule 66 (constOp)
    GREATEQ    reduce using rule 66 (constOp)
    EQUALS     reduce using rule 66 (constOp)
    DIFFERENT  reduce using rule 66 (constOp)
    COMMA      reduce using rule 66 (constOp)
    PARENR     reduce using rule 66 (constOp)


State 227

   98 factor: ERRORTOKEN •

    ADD        reduce using rule 98 (factor)
    SUB        reduce using rule 98 (factor)
    MULT       reduce using rule 98 (factor)
    DIV        reduce using rule 98 (factor)
    OR         reduce using rule 98 (factor)
    AND        reduce using rule 98 (factor)
    SMALLER    reduce using rule 98 (factor)
    GREATER    reduce using rule 98 (factor)
    SMALLEQ    reduce using rule 98 (factor)
    GREATEQ    reduce using rule 98 (factor)
    EQUALS     reduce using rule 98 (factor)
    DIFFERENT  reduce using rule 98 (factor)
    COMMA      reduce using rule 98 (factor)
    PARENR     reduce using rule 98 (factor)


State 228

   92 mulExp: ADD • factor

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    PARENL      shift, and go to state 230

    constOp  go to state 231
    factor   go to state 276
    fCall    go to state 237


State 229

   93 mulExp: SUB • factor

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    PARENL      shift, and go to state 230

    constOp  go to state 231
    factor   go to state 277
    fCall    go to state 237


State 230

   96 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    ADD         shift, and go to state 197
    SUB         shift, and go to state 198
    PARENL      shift, and go to state 199

    simpleExp      go to state 278
    constOp        go to state 200
    binLogicalExp  go to state 201
    relationalExp  go to state 202
    sumExp         go to state 203
    mulExp         go to state 204
    factor         go to state 205
    fCall          go to state 206


State 231

   97 factor: constOp •

    ADD        reduce using rule 97 (factor)
    SUB        reduce using rule 97 (factor)
    MULT       reduce using rule 97 (factor)
    DIV        reduce using rule 97 (factor)
    OR         reduce using rule 97 (factor)
    AND        reduce using rule 97 (factor)
    SMALLER    reduce using rule 97 (factor)
    GREATER    reduce using rule 97 (factor)
    SMALLEQ    reduce using rule 97 (factor)
    GREATEQ    reduce using rule 97 (factor)
    EQUALS     reduce using rule 97 (factor)
    DIFFERENT  reduce using rule 97 (factor)
    COMMA      reduce using rule 97 (factor)
    PARENR     reduce using rule 97 (factor)


State 232

   64 simpleExp: binLogicalExp •
   74 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   shift, and go to state 114
    AND  shift, and go to state 115

    COMMA   reduce using rule 64 (simpleExp)
    PARENR  reduce using rule 64 (simpleExp)

    binLogicalOp  go to state 279


State 233

   75 binLogicalExp: relationalExp •
   78 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 117
    GREATER    shift, and go to state 118
    SMALLEQ    shift, and go to state 119
    GREATEQ    shift, and go to state 120
    EQUALS     shift, and go to state 121
    DIFFERENT  shift, and go to state 122

    OR      reduce using rule 75 (binLogicalExp)
    AND     reduce using rule 75 (binLogicalExp)
    COMMA   reduce using rule 75 (binLogicalExp)
    PARENR  reduce using rule 75 (binLogicalExp)

    relationalOp  go to state 280


State 234

   79 relationalExp: sumExp •
   86 sumExp: sumExp • ADD mulExp
   87       | sumExp • SUB mulExp

    ADD  shift, and go to state 281
    SUB  shift, and go to state 282

    OR         reduce using rule 79 (relationalExp)
    AND        reduce using rule 79 (relationalExp)
    SMALLER    reduce using rule 79 (relationalExp)
    GREATER    reduce using rule 79 (relationalExp)
    SMALLEQ    reduce using rule 79 (relationalExp)
    GREATEQ    reduce using rule 79 (relationalExp)
    EQUALS     reduce using rule 79 (relationalExp)
    DIFFERENT  reduce using rule 79 (relationalExp)
    COMMA      reduce using rule 79 (relationalExp)
    PARENR     reduce using rule 79 (relationalExp)


State 235

   88 sumExp: mulExp •
   89 mulExp: mulExp • MULT factor
   90       | mulExp • DIV factor

    MULT  shift, and go to state 283
    DIV   shift, and go to state 284

    ADD        reduce using rule 88 (sumExp)
    SUB        reduce using rule 88 (sumExp)
    OR         reduce using rule 88 (sumExp)
    AND        reduce using rule 88 (sumExp)
    SMALLER    reduce using rule 88 (sumExp)
    GREATER    reduce using rule 88 (sumExp)
    SMALLEQ    reduce using rule 88 (sumExp)
    GREATEQ    reduce using rule 88 (sumExp)
    EQUALS     reduce using rule 88 (sumExp)
    DIFFERENT  reduce using rule 88 (sumExp)
    COMMA      reduce using rule 88 (sumExp)
    PARENR     reduce using rule 88 (sumExp)


State 236

   91 mulExp: factor •

    ADD        reduce using rule 91 (mulExp)
    SUB        reduce using rule 91 (mulExp)
    MULT       reduce using rule 91 (mulExp)
    DIV        reduce using rule 91 (mulExp)
    OR         reduce using rule 91 (mulExp)
    AND        reduce using rule 91 (mulExp)
    SMALLER    reduce using rule 91 (mulExp)
    GREATER    reduce using rule 91 (mulExp)
    SMALLEQ    reduce using rule 91 (mulExp)
    GREATEQ    reduce using rule 91 (mulExp)
    EQUALS     reduce using rule 91 (mulExp)
    DIFFERENT  reduce using rule 91 (mulExp)
    COMMA      reduce using rule 91 (mulExp)
    PARENR     reduce using rule 91 (mulExp)


State 237

   95 factor: fCall •

    ADD        reduce using rule 95 (factor)
    SUB        reduce using rule 95 (factor)
    MULT       reduce using rule 95 (factor)
    DIV        reduce using rule 95 (factor)
    OR         reduce using rule 95 (factor)
    AND        reduce using rule 95 (factor)
    SMALLER    reduce using rule 95 (factor)
    GREATER    reduce using rule 95 (factor)
    SMALLEQ    reduce using rule 95 (factor)
    GREATEQ    reduce using rule 95 (factor)
    EQUALS     reduce using rule 95 (factor)
    DIFFERENT  reduce using rule 95 (factor)
    COMMA      reduce using rule 95 (factor)
    PARENR     reduce using rule 95 (factor)


State 238

   57 destroyHeadOps: DESTROYHEAD • ID

    ID  shift, and go to state 285


State 239

   49 listExp: appendOps •

    PARENR  reduce using rule 49 (listExp)


State 240

   50 listExp: returnListOps •

    PARENR  reduce using rule 50 (listExp)


State 241

   54 returnListOps: returnListOp • ID

    ID  shift, and go to state 286


State 242

   51 listExp: destroyHeadOps •

    PARENR  reduce using rule 51 (listExp)


State 243

   52 listExp: mapFilterOps •

    PARENR  reduce using rule 52 (listExp)


State 244

   27 compoundStmt: STFUNC stmtList • ENDFUNC
   28 stmtList: stmtList • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    ENDFUNC      shift, and go to state 287
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    primitiveStmt         go to state 109
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 245

   80 relationalOp: SMALLER •

    OR     reduce using rule 80 (relationalOp)
    AND    reduce using rule 80 (relationalOp)
    SEMIC  reduce using rule 80 (relationalOp)


State 246

   81 relationalOp: GREATER •

    OR     reduce using rule 81 (relationalOp)
    AND    reduce using rule 81 (relationalOp)
    SEMIC  reduce using rule 81 (relationalOp)


State 247

   82 relationalOp: SMALLEQ •

    OR     reduce using rule 82 (relationalOp)
    AND    reduce using rule 82 (relationalOp)
    SEMIC  reduce using rule 82 (relationalOp)


State 248

   83 relationalOp: GREATEQ •

    OR     reduce using rule 83 (relationalOp)
    AND    reduce using rule 83 (relationalOp)
    SEMIC  reduce using rule 83 (relationalOp)


State 249

   84 relationalOp: EQUALS •

    OR     reduce using rule 84 (relationalOp)
    AND    reduce using rule 84 (relationalOp)
    SEMIC  reduce using rule 84 (relationalOp)


State 250

   85 relationalOp: DIFFERENT •

    OR     reduce using rule 85 (relationalOp)
    AND    reduce using rule 85 (relationalOp)
    SEMIC  reduce using rule 85 (relationalOp)


State 251

   53 appendOps: ID APPEND • ID

    ID  shift, and go to state 288


State 252

   59 mapFilterOps: ID FILTER • ID

    ID  shift, and go to state 289


State 253

   58 mapFilterOps: ID MAP • ID

    ID  shift, and go to state 290


State 254

   99 fCall: ID PARENL • callParams PARENR
  100      | ID PARENL • PARENR

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    ADD         shift, and go to state 228
    SUB         shift, and go to state 229
    PARENL      shift, and go to state 230
    PARENR      shift, and go to state 291

    simpleExp      go to state 136
    constOp        go to state 231
    binLogicalExp  go to state 232
    relationalExp  go to state 233
    sumExp         go to state 234
    mulExp         go to state 235
    factor         go to state 236
    fCall          go to state 237
    callParams     go to state 292


State 255

   63 assignExp: ID ASSIGN • expression

    ID           shift, and go to state 293
    NIL          shift, and go to state 193
    INTEGER      shift, and go to state 194
    DECIMAL      shift, and go to state 195
    ERRORTOKEN   shift, and go to state 196
    ADD          shift, and go to state 197
    SUB          shift, and go to state 198
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 238
    PARENL       shift, and go to state 199

    listExp         go to state 294
    appendOps       go to state 239
    returnListOps   go to state 240
    returnListOp    go to state 241
    destroyHeadOps  go to state 242
    mapFilterOps    go to state 243
    expression      go to state 295
    assignExp       go to state 296
    simpleExp       go to state 297
    constOp         go to state 200
    binLogicalExp   go to state 201
    relationalExp   go to state 202
    sumExp          go to state 203
    mulExp          go to state 204
    factor          go to state 205
    fCall           go to state 206


State 256

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduce using rule 7 (varDeclaration)
    TYPE         reduce using rule 7 (varDeclaration)
    NIL          reduce using rule 7 (varDeclaration)
    INTEGER      reduce using rule 7 (varDeclaration)
    DECIMAL      reduce using rule 7 (varDeclaration)
    ERRORTOKEN   reduce using rule 7 (varDeclaration)
    ADD          reduce using rule 7 (varDeclaration)
    SUB          reduce using rule 7 (varDeclaration)
    HEADLIST     reduce using rule 7 (varDeclaration)
    TAILLIST     reduce using rule 7 (varDeclaration)
    DESTROYHEAD  reduce using rule 7 (varDeclaration)
    IF           reduce using rule 7 (varDeclaration)
    FOR          reduce using rule 7 (varDeclaration)
    READ         reduce using rule 7 (varDeclaration)
    WRITE        reduce using rule 7 (varDeclaration)
    WRITELN      reduce using rule 7 (varDeclaration)
    RETURN       reduce using rule 7 (varDeclaration)
    STFUNC       reduce using rule 7 (varDeclaration)
    ENDFUNC      reduce using rule 7 (varDeclaration)
    PARENL       reduce using rule 7 (varDeclaration)


State 257

   92 mulExp: ADD factor •

    ADD        reduce using rule 92 (mulExp)
    SUB        reduce using rule 92 (mulExp)
    MULT       reduce using rule 92 (mulExp)
    DIV        reduce using rule 92 (mulExp)
    OR         reduce using rule 92 (mulExp)
    AND        reduce using rule 92 (mulExp)
    SMALLER    reduce using rule 92 (mulExp)
    GREATER    reduce using rule 92 (mulExp)
    SMALLEQ    reduce using rule 92 (mulExp)
    GREATEQ    reduce using rule 92 (mulExp)
    EQUALS     reduce using rule 92 (mulExp)
    DIFFERENT  reduce using rule 92 (mulExp)
    PARENR     reduce using rule 92 (mulExp)


State 258

   93 mulExp: SUB factor •

    ADD        reduce using rule 93 (mulExp)
    SUB        reduce using rule 93 (mulExp)
    MULT       reduce using rule 93 (mulExp)
    DIV        reduce using rule 93 (mulExp)
    OR         reduce using rule 93 (mulExp)
    AND        reduce using rule 93 (mulExp)
    SMALLER    reduce using rule 93 (mulExp)
    GREATER    reduce using rule 93 (mulExp)
    SMALLEQ    reduce using rule 93 (mulExp)
    GREATEQ    reduce using rule 93 (mulExp)
    EQUALS     reduce using rule 93 (mulExp)
    DIFFERENT  reduce using rule 93 (mulExp)
    PARENR     reduce using rule 93 (mulExp)


State 259

   96 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 298


State 260

   74 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    shift, and go to state 299
    GREATER    shift, and go to state 300
    SMALLEQ    shift, and go to state 301
    GREATEQ    shift, and go to state 302
    EQUALS     shift, and go to state 303
    DIFFERENT  shift, and go to state 304

    relationalOp  go to state 305


State 261

   78 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    ADD         shift, and go to state 197
    SUB         shift, and go to state 198
    PARENL      shift, and go to state 199

    constOp  go to state 200
    sumExp   go to state 306
    mulExp   go to state 204
    factor   go to state 205
    fCall    go to state 206


State 262

   86 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    ADD         shift, and go to state 197
    SUB         shift, and go to state 198
    PARENL      shift, and go to state 199

    constOp  go to state 200
    mulExp   go to state 307
    factor   go to state 205
    fCall    go to state 206


State 263

   87 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    ADD         shift, and go to state 197
    SUB         shift, and go to state 198
    PARENL      shift, and go to state 199

    constOp  go to state 200
    mulExp   go to state 308
    factor   go to state 205
    fCall    go to state 206


State 264

   89 mulExp: mulExp MULT • factor

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    PARENL      shift, and go to state 199

    constOp  go to state 200
    factor   go to state 309
    fCall    go to state 206


State 265

   90 mulExp: mulExp DIV • factor

    ID          shift, and go to state 192
    NIL         shift, and go to state 193
    INTEGER     shift, and go to state 194
    DECIMAL     shift, and go to state 195
    ERRORTOKEN  shift, and go to state 196
    PARENL      shift, and go to state 199

    constOp  go to state 200
    factor   go to state 310
    fCall    go to state 206


State 266

   46 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   47         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 140
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    ADD         shift, and go to state 46
    SUB         shift, and go to state 47
    PARENL      shift, and go to state 58

    assignExp      go to state 311
    simpleExp      go to state 312
    constOp        go to state 77
    binLogicalExp  go to state 80
    relationalExp  go to state 81
    sumExp         go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 267

   68 inOp: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 313


State 268

   69 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID           shift, and go to state 144
    STRING       shift, and go to state 145
    NIL          shift, and go to state 193
    INTEGER      shift, and go to state 194
    DECIMAL      shift, and go to state 195
    ERRORTOKEN   shift, and go to state 196
    ADD          shift, and go to state 197
    SUB          shift, and go to state 198
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 238
    PARENL       shift, and go to state 199

    listExp         go to state 146
    appendOps       go to state 239
    returnListOps   go to state 240
    returnListOp    go to state 241
    destroyHeadOps  go to state 242
    mapFilterOps    go to state 243
    simpleExp       go to state 147
    constOp         go to state 200
    outConst        go to state 314
    binLogicalExp   go to state 201
    relationalExp   go to state 202
    sumExp          go to state 203
    mulExp          go to state 204
    factor          go to state 205
    fCall           go to state 206


State 269

   70 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID           shift, and go to state 144
    STRING       shift, and go to state 145
    NIL          shift, and go to state 193
    INTEGER      shift, and go to state 194
    DECIMAL      shift, and go to state 195
    ERRORTOKEN   shift, and go to state 196
    ADD          shift, and go to state 197
    SUB          shift, and go to state 198
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 238
    PARENL       shift, and go to state 199

    listExp         go to state 146
    appendOps       go to state 239
    returnListOps   go to state 240
    returnListOp    go to state 241
    destroyHeadOps  go to state 242
    mapFilterOps    go to state 243
    simpleExp       go to state 147
    constOp         go to state 200
    outConst        go to state 315
    binLogicalExp   go to state 201
    relationalExp   go to state 202
    sumExp          go to state 203
    mulExp          go to state 204
    factor          go to state 205
    fCall           go to state 206


State 270

   48 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 316


State 271

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID           reduce using rule 7 (varDeclaration)
    TYPE         reduce using rule 7 (varDeclaration)
    NIL          reduce using rule 7 (varDeclaration)
    INTEGER      reduce using rule 7 (varDeclaration)
    DECIMAL      reduce using rule 7 (varDeclaration)
    ERRORTOKEN   reduce using rule 7 (varDeclaration)
    ELSE         reduce using rule 7 (varDeclaration)
    ADD          reduce using rule 7 (varDeclaration)
    SUB          reduce using rule 7 (varDeclaration)
    HEADLIST     reduce using rule 7 (varDeclaration)
    TAILLIST     reduce using rule 7 (varDeclaration)
    DESTROYHEAD  reduce using rule 7 (varDeclaration)
    IF           reduce using rule 7 (varDeclaration)
    FOR          reduce using rule 7 (varDeclaration)
    READ         reduce using rule 7 (varDeclaration)
    WRITE        reduce using rule 7 (varDeclaration)
    WRITELN      reduce using rule 7 (varDeclaration)
    RETURN       reduce using rule 7 (varDeclaration)
    STFUNC       reduce using rule 7 (varDeclaration)
    ENDFUNC      reduce using rule 7 (varDeclaration)
    PARENL       reduce using rule 7 (varDeclaration)


State 272

   27 compoundStmt: STFUNC • stmtList ENDFUNC
   41 condStmt: ifStmt STFUNC • ENDFUNC
   42         | ifStmt STFUNC • ENDFUNC elseStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    ENDFUNC      shift, and go to state 317
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    stmtList              go to state 244
    primitiveStmt         go to state 62
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 273

   39 condStmt: ifStmt primitiveStmt •
   40         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 318

    ID           reduce using rule 39 (condStmt)
    TYPE         reduce using rule 39 (condStmt)
    NIL          reduce using rule 39 (condStmt)
    INTEGER      reduce using rule 39 (condStmt)
    DECIMAL      reduce using rule 39 (condStmt)
    ERRORTOKEN   reduce using rule 39 (condStmt)
    ADD          reduce using rule 39 (condStmt)
    SUB          reduce using rule 39 (condStmt)
    HEADLIST     reduce using rule 39 (condStmt)
    TAILLIST     reduce using rule 39 (condStmt)
    DESTROYHEAD  reduce using rule 39 (condStmt)
    IF           reduce using rule 39 (condStmt)
    FOR          reduce using rule 39 (condStmt)
    READ         reduce using rule 39 (condStmt)
    WRITE        reduce using rule 39 (condStmt)
    WRITELN      reduce using rule 39 (condStmt)
    RETURN       reduce using rule 39 (condStmt)
    STFUNC       reduce using rule 39 (condStmt)
    ENDFUNC      reduce using rule 39 (condStmt)
    PARENL       reduce using rule 39 (condStmt)

    elseStmt  go to state 319


State 274

   38 exprStmt: expression SEMIC •

    ID           reduce using rule 38 (exprStmt)
    TYPE         reduce using rule 38 (exprStmt)
    NIL          reduce using rule 38 (exprStmt)
    INTEGER      reduce using rule 38 (exprStmt)
    DECIMAL      reduce using rule 38 (exprStmt)
    ERRORTOKEN   reduce using rule 38 (exprStmt)
    ELSE         reduce using rule 38 (exprStmt)
    ADD          reduce using rule 38 (exprStmt)
    SUB          reduce using rule 38 (exprStmt)
    HEADLIST     reduce using rule 38 (exprStmt)
    TAILLIST     reduce using rule 38 (exprStmt)
    DESTROYHEAD  reduce using rule 38 (exprStmt)
    IF           reduce using rule 38 (exprStmt)
    FOR          reduce using rule 38 (exprStmt)
    READ         reduce using rule 38 (exprStmt)
    WRITE        reduce using rule 38 (exprStmt)
    WRITELN      reduce using rule 38 (exprStmt)
    RETURN       reduce using rule 38 (exprStmt)
    STFUNC       reduce using rule 38 (exprStmt)
    ENDFUNC      reduce using rule 38 (exprStmt)
    PARENL       reduce using rule 38 (exprStmt)


State 275

   99 fCall: ID PARENL • callParams PARENR
  100      | ID PARENL • PARENR

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    ADD         shift, and go to state 228
    SUB         shift, and go to state 229
    PARENL      shift, and go to state 230
    PARENR      shift, and go to state 320

    simpleExp      go to state 136
    constOp        go to state 231
    binLogicalExp  go to state 232
    relationalExp  go to state 233
    sumExp         go to state 234
    mulExp         go to state 235
    factor         go to state 236
    fCall          go to state 237
    callParams     go to state 321


State 276

   92 mulExp: ADD factor •

    ADD        reduce using rule 92 (mulExp)
    SUB        reduce using rule 92 (mulExp)
    MULT       reduce using rule 92 (mulExp)
    DIV        reduce using rule 92 (mulExp)
    OR         reduce using rule 92 (mulExp)
    AND        reduce using rule 92 (mulExp)
    SMALLER    reduce using rule 92 (mulExp)
    GREATER    reduce using rule 92 (mulExp)
    SMALLEQ    reduce using rule 92 (mulExp)
    GREATEQ    reduce using rule 92 (mulExp)
    EQUALS     reduce using rule 92 (mulExp)
    DIFFERENT  reduce using rule 92 (mulExp)
    COMMA      reduce using rule 92 (mulExp)
    PARENR     reduce using rule 92 (mulExp)


State 277

   93 mulExp: SUB factor •

    ADD        reduce using rule 93 (mulExp)
    SUB        reduce using rule 93 (mulExp)
    MULT       reduce using rule 93 (mulExp)
    DIV        reduce using rule 93 (mulExp)
    OR         reduce using rule 93 (mulExp)
    AND        reduce using rule 93 (mulExp)
    SMALLER    reduce using rule 93 (mulExp)
    GREATER    reduce using rule 93 (mulExp)
    SMALLEQ    reduce using rule 93 (mulExp)
    GREATEQ    reduce using rule 93 (mulExp)
    EQUALS     reduce using rule 93 (mulExp)
    DIFFERENT  reduce using rule 93 (mulExp)
    COMMA      reduce using rule 93 (mulExp)
    PARENR     reduce using rule 93 (mulExp)


State 278

   96 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 322


State 279

   74 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    shift, and go to state 323
    GREATER    shift, and go to state 324
    SMALLEQ    shift, and go to state 325
    GREATEQ    shift, and go to state 326
    EQUALS     shift, and go to state 327
    DIFFERENT  shift, and go to state 328

    relationalOp  go to state 329


State 280

   78 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    ADD         shift, and go to state 228
    SUB         shift, and go to state 229
    PARENL      shift, and go to state 230

    constOp  go to state 231
    sumExp   go to state 330
    mulExp   go to state 235
    factor   go to state 236
    fCall    go to state 237


State 281

   86 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    ADD         shift, and go to state 228
    SUB         shift, and go to state 229
    PARENL      shift, and go to state 230

    constOp  go to state 231
    mulExp   go to state 331
    factor   go to state 236
    fCall    go to state 237


State 282

   87 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    ADD         shift, and go to state 228
    SUB         shift, and go to state 229
    PARENL      shift, and go to state 230

    constOp  go to state 231
    mulExp   go to state 332
    factor   go to state 236
    fCall    go to state 237


State 283

   89 mulExp: mulExp MULT • factor

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    PARENL      shift, and go to state 230

    constOp  go to state 231
    factor   go to state 333
    fCall    go to state 237


State 284

   90 mulExp: mulExp DIV • factor

    ID          shift, and go to state 223
    NIL         shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    ERRORTOKEN  shift, and go to state 227
    PARENL      shift, and go to state 230

    constOp  go to state 231
    factor   go to state 334
    fCall    go to state 237


State 285

   57 destroyHeadOps: DESTROYHEAD ID •

    PARENR  reduce using rule 57 (destroyHeadOps)


State 286

   54 returnListOps: returnListOp ID •

    PARENR  reduce using rule 54 (returnListOps)


State 287

   27 compoundStmt: STFUNC stmtList ENDFUNC •

    ID           reduce using rule 27 (compoundStmt)
    TYPE         reduce using rule 27 (compoundStmt)
    NIL          reduce using rule 27 (compoundStmt)
    INTEGER      reduce using rule 27 (compoundStmt)
    DECIMAL      reduce using rule 27 (compoundStmt)
    ERRORTOKEN   reduce using rule 27 (compoundStmt)
    ELSE         reduce using rule 27 (compoundStmt)
    ADD          reduce using rule 27 (compoundStmt)
    SUB          reduce using rule 27 (compoundStmt)
    HEADLIST     reduce using rule 27 (compoundStmt)
    TAILLIST     reduce using rule 27 (compoundStmt)
    DESTROYHEAD  reduce using rule 27 (compoundStmt)
    IF           reduce using rule 27 (compoundStmt)
    FOR          reduce using rule 27 (compoundStmt)
    READ         reduce using rule 27 (compoundStmt)
    WRITE        reduce using rule 27 (compoundStmt)
    WRITELN      reduce using rule 27 (compoundStmt)
    RETURN       reduce using rule 27 (compoundStmt)
    STFUNC       reduce using rule 27 (compoundStmt)
    ENDFUNC      reduce using rule 27 (compoundStmt)
    PARENL       reduce using rule 27 (compoundStmt)


State 288

   53 appendOps: ID APPEND ID •

    PARENR  reduce using rule 53 (appendOps)


State 289

   59 mapFilterOps: ID FILTER ID •

    PARENR  reduce using rule 59 (mapFilterOps)


State 290

   58 mapFilterOps: ID MAP ID •

    PARENR  reduce using rule 58 (mapFilterOps)


State 291

  100 fCall: ID PARENL PARENR •

    ADD        reduce using rule 100 (fCall)
    SUB        reduce using rule 100 (fCall)
    MULT       reduce using rule 100 (fCall)
    DIV        reduce using rule 100 (fCall)
    OR         reduce using rule 100 (fCall)
    AND        reduce using rule 100 (fCall)
    SMALLER    reduce using rule 100 (fCall)
    GREATER    reduce using rule 100 (fCall)
    SMALLEQ    reduce using rule 100 (fCall)
    GREATEQ    reduce using rule 100 (fCall)
    EQUALS     reduce using rule 100 (fCall)
    DIFFERENT  reduce using rule 100 (fCall)
    PARENR     reduce using rule 100 (fCall)


State 292

   99 fCall: ID PARENL callParams • PARENR
  101 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 164
    PARENR  shift, and go to state 335


State 293

   53 appendOps: ID • APPEND ID
   58 mapFilterOps: ID • MAP ID
   59             | ID • FILTER ID
   63 assignExp: ID • ASSIGN expression
   94 factor: ID •
   99 fCall: ID • PARENL callParams PARENR
  100      | ID • PARENL PARENR

    APPEND  shift, and go to state 251
    FILTER  shift, and go to state 252
    ASSIGN  shift, and go to state 255
    MAP     shift, and go to state 253
    PARENL  shift, and go to state 254

    ADD        reduce using rule 94 (factor)
    SUB        reduce using rule 94 (factor)
    MULT       reduce using rule 94 (factor)
    DIV        reduce using rule 94 (factor)
    OR         reduce using rule 94 (factor)
    AND        reduce using rule 94 (factor)
    SMALLER    reduce using rule 94 (factor)
    GREATER    reduce using rule 94 (factor)
    SMALLEQ    reduce using rule 94 (factor)
    GREATEQ    reduce using rule 94 (factor)
    EQUALS     reduce using rule 94 (factor)
    DIFFERENT  reduce using rule 94 (factor)
    PARENR     reduce using rule 94 (factor)


State 294

   62 expression: listExp •

    PARENR  reduce using rule 62 (expression)


State 295

   63 assignExp: ID ASSIGN expression •

    PARENR  reduce using rule 63 (assignExp)


State 296

   60 expression: assignExp •

    PARENR  reduce using rule 60 (expression)


State 297

   61 expression: simpleExp •

    PARENR  reduce using rule 61 (expression)


State 298

   96 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 96 (factor)
    SUB        reduce using rule 96 (factor)
    MULT       reduce using rule 96 (factor)
    DIV        reduce using rule 96 (factor)
    OR         reduce using rule 96 (factor)
    AND        reduce using rule 96 (factor)
    SMALLER    reduce using rule 96 (factor)
    GREATER    reduce using rule 96 (factor)
    SMALLEQ    reduce using rule 96 (factor)
    GREATEQ    reduce using rule 96 (factor)
    EQUALS     reduce using rule 96 (factor)
    DIFFERENT  reduce using rule 96 (factor)
    PARENR     reduce using rule 96 (factor)


State 299

   80 relationalOp: SMALLER •

    OR      reduce using rule 80 (relationalOp)
    AND     reduce using rule 80 (relationalOp)
    PARENR  reduce using rule 80 (relationalOp)


State 300

   81 relationalOp: GREATER •

    OR      reduce using rule 81 (relationalOp)
    AND     reduce using rule 81 (relationalOp)
    PARENR  reduce using rule 81 (relationalOp)


State 301

   82 relationalOp: SMALLEQ •

    OR      reduce using rule 82 (relationalOp)
    AND     reduce using rule 82 (relationalOp)
    PARENR  reduce using rule 82 (relationalOp)


State 302

   83 relationalOp: GREATEQ •

    OR      reduce using rule 83 (relationalOp)
    AND     reduce using rule 83 (relationalOp)
    PARENR  reduce using rule 83 (relationalOp)


State 303

   84 relationalOp: EQUALS •

    OR      reduce using rule 84 (relationalOp)
    AND     reduce using rule 84 (relationalOp)
    PARENR  reduce using rule 84 (relationalOp)


State 304

   85 relationalOp: DIFFERENT •

    OR      reduce using rule 85 (relationalOp)
    AND     reduce using rule 85 (relationalOp)
    PARENR  reduce using rule 85 (relationalOp)


State 305

   74 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduce using rule 74 (binLogicalExp)
    AND     reduce using rule 74 (binLogicalExp)
    PARENR  reduce using rule 74 (binLogicalExp)


State 306

   78 relationalExp: relationalExp relationalOp sumExp •
   86 sumExp: sumExp • ADD mulExp
   87       | sumExp • SUB mulExp

    ADD  shift, and go to state 262
    SUB  shift, and go to state 263

    OR         reduce using rule 78 (relationalExp)
    AND        reduce using rule 78 (relationalExp)
    SMALLER    reduce using rule 78 (relationalExp)
    GREATER    reduce using rule 78 (relationalExp)
    SMALLEQ    reduce using rule 78 (relationalExp)
    GREATEQ    reduce using rule 78 (relationalExp)
    EQUALS     reduce using rule 78 (relationalExp)
    DIFFERENT  reduce using rule 78 (relationalExp)
    PARENR     reduce using rule 78 (relationalExp)


State 307

   86 sumExp: sumExp ADD mulExp •
   89 mulExp: mulExp • MULT factor
   90       | mulExp • DIV factor

    MULT  shift, and go to state 264
    DIV   shift, and go to state 265

    ADD        reduce using rule 86 (sumExp)
    SUB        reduce using rule 86 (sumExp)
    OR         reduce using rule 86 (sumExp)
    AND        reduce using rule 86 (sumExp)
    SMALLER    reduce using rule 86 (sumExp)
    GREATER    reduce using rule 86 (sumExp)
    SMALLEQ    reduce using rule 86 (sumExp)
    GREATEQ    reduce using rule 86 (sumExp)
    EQUALS     reduce using rule 86 (sumExp)
    DIFFERENT  reduce using rule 86 (sumExp)
    PARENR     reduce using rule 86 (sumExp)


State 308

   87 sumExp: sumExp SUB mulExp •
   89 mulExp: mulExp • MULT factor
   90       | mulExp • DIV factor

    MULT  shift, and go to state 264
    DIV   shift, and go to state 265

    ADD        reduce using rule 87 (sumExp)
    SUB        reduce using rule 87 (sumExp)
    OR         reduce using rule 87 (sumExp)
    AND        reduce using rule 87 (sumExp)
    SMALLER    reduce using rule 87 (sumExp)
    GREATER    reduce using rule 87 (sumExp)
    SMALLEQ    reduce using rule 87 (sumExp)
    GREATEQ    reduce using rule 87 (sumExp)
    EQUALS     reduce using rule 87 (sumExp)
    DIFFERENT  reduce using rule 87 (sumExp)
    PARENR     reduce using rule 87 (sumExp)


State 309

   89 mulExp: mulExp MULT factor •

    ADD        reduce using rule 89 (mulExp)
    SUB        reduce using rule 89 (mulExp)
    MULT       reduce using rule 89 (mulExp)
    DIV        reduce using rule 89 (mulExp)
    OR         reduce using rule 89 (mulExp)
    AND        reduce using rule 89 (mulExp)
    SMALLER    reduce using rule 89 (mulExp)
    GREATER    reduce using rule 89 (mulExp)
    SMALLEQ    reduce using rule 89 (mulExp)
    GREATEQ    reduce using rule 89 (mulExp)
    EQUALS     reduce using rule 89 (mulExp)
    DIFFERENT  reduce using rule 89 (mulExp)
    PARENR     reduce using rule 89 (mulExp)


State 310

   90 mulExp: mulExp DIV factor •

    ADD        reduce using rule 90 (mulExp)
    SUB        reduce using rule 90 (mulExp)
    MULT       reduce using rule 90 (mulExp)
    DIV        reduce using rule 90 (mulExp)
    OR         reduce using rule 90 (mulExp)
    AND        reduce using rule 90 (mulExp)
    SMALLER    reduce using rule 90 (mulExp)
    GREATER    reduce using rule 90 (mulExp)
    SMALLEQ    reduce using rule 90 (mulExp)
    GREATEQ    reduce using rule 90 (mulExp)
    EQUALS     reduce using rule 90 (mulExp)
    DIFFERENT  reduce using rule 90 (mulExp)
    PARENR     reduce using rule 90 (mulExp)


State 311

   46 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 336


State 312

   47 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 337


State 313

   68 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 338


State 314

   69 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 339


State 315

   70 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 340


State 316

   48 returnStmt: RETURN expression SEMIC •

    ID           reduce using rule 48 (returnStmt)
    TYPE         reduce using rule 48 (returnStmt)
    NIL          reduce using rule 48 (returnStmt)
    INTEGER      reduce using rule 48 (returnStmt)
    DECIMAL      reduce using rule 48 (returnStmt)
    ERRORTOKEN   reduce using rule 48 (returnStmt)
    ELSE         reduce using rule 48 (returnStmt)
    ADD          reduce using rule 48 (returnStmt)
    SUB          reduce using rule 48 (returnStmt)
    HEADLIST     reduce using rule 48 (returnStmt)
    TAILLIST     reduce using rule 48 (returnStmt)
    DESTROYHEAD  reduce using rule 48 (returnStmt)
    IF           reduce using rule 48 (returnStmt)
    FOR          reduce using rule 48 (returnStmt)
    READ         reduce using rule 48 (returnStmt)
    WRITE        reduce using rule 48 (returnStmt)
    WRITELN      reduce using rule 48 (returnStmt)
    RETURN       reduce using rule 48 (returnStmt)
    STFUNC       reduce using rule 48 (returnStmt)
    ENDFUNC      reduce using rule 48 (returnStmt)
    PARENL       reduce using rule 48 (returnStmt)


State 317

   41 condStmt: ifStmt STFUNC ENDFUNC •
   42         | ifStmt STFUNC ENDFUNC • elseStmt

    ELSE  shift, and go to state 318

    ID           reduce using rule 41 (condStmt)
    TYPE         reduce using rule 41 (condStmt)
    NIL          reduce using rule 41 (condStmt)
    INTEGER      reduce using rule 41 (condStmt)
    DECIMAL      reduce using rule 41 (condStmt)
    ERRORTOKEN   reduce using rule 41 (condStmt)
    ADD          reduce using rule 41 (condStmt)
    SUB          reduce using rule 41 (condStmt)
    HEADLIST     reduce using rule 41 (condStmt)
    TAILLIST     reduce using rule 41 (condStmt)
    DESTROYHEAD  reduce using rule 41 (condStmt)
    IF           reduce using rule 41 (condStmt)
    FOR          reduce using rule 41 (condStmt)
    READ         reduce using rule 41 (condStmt)
    WRITE        reduce using rule 41 (condStmt)
    WRITELN      reduce using rule 41 (condStmt)
    RETURN       reduce using rule 41 (condStmt)
    STFUNC       reduce using rule 41 (condStmt)
    ENDFUNC      reduce using rule 41 (condStmt)
    PARENL       reduce using rule 41 (condStmt)

    elseStmt  go to state 341


State 318

   45 elseStmt: ELSE • $@9 primitiveStmt

    ID           reduce using rule 44 ($@9)
    TYPE         reduce using rule 44 ($@9)
    NIL          reduce using rule 44 ($@9)
    INTEGER      reduce using rule 44 ($@9)
    DECIMAL      reduce using rule 44 ($@9)
    ERRORTOKEN   reduce using rule 44 ($@9)
    ADD          reduce using rule 44 ($@9)
    SUB          reduce using rule 44 ($@9)
    HEADLIST     reduce using rule 44 ($@9)
    TAILLIST     reduce using rule 44 ($@9)
    DESTROYHEAD  reduce using rule 44 ($@9)
    IF           reduce using rule 44 ($@9)
    FOR          reduce using rule 44 ($@9)
    READ         reduce using rule 44 ($@9)
    WRITE        reduce using rule 44 ($@9)
    WRITELN      reduce using rule 44 ($@9)
    RETURN       reduce using rule 44 ($@9)
    STFUNC       reduce using rule 44 ($@9)
    PARENL       reduce using rule 44 ($@9)

    $@9  go to state 342


State 319

   40 condStmt: ifStmt primitiveStmt elseStmt •

    ID           reduce using rule 40 (condStmt)
    TYPE         reduce using rule 40 (condStmt)
    NIL          reduce using rule 40 (condStmt)
    INTEGER      reduce using rule 40 (condStmt)
    DECIMAL      reduce using rule 40 (condStmt)
    ERRORTOKEN   reduce using rule 40 (condStmt)
    ELSE         reduce using rule 40 (condStmt)
    ADD          reduce using rule 40 (condStmt)
    SUB          reduce using rule 40 (condStmt)
    HEADLIST     reduce using rule 40 (condStmt)
    TAILLIST     reduce using rule 40 (condStmt)
    DESTROYHEAD  reduce using rule 40 (condStmt)
    IF           reduce using rule 40 (condStmt)
    FOR          reduce using rule 40 (condStmt)
    READ         reduce using rule 40 (condStmt)
    WRITE        reduce using rule 40 (condStmt)
    WRITELN      reduce using rule 40 (condStmt)
    RETURN       reduce using rule 40 (condStmt)
    STFUNC       reduce using rule 40 (condStmt)
    ENDFUNC      reduce using rule 40 (condStmt)
    PARENL       reduce using rule 40 (condStmt)


State 320

  100 fCall: ID PARENL PARENR •

    ADD        reduce using rule 100 (fCall)
    SUB        reduce using rule 100 (fCall)
    MULT       reduce using rule 100 (fCall)
    DIV        reduce using rule 100 (fCall)
    OR         reduce using rule 100 (fCall)
    AND        reduce using rule 100 (fCall)
    SMALLER    reduce using rule 100 (fCall)
    GREATER    reduce using rule 100 (fCall)
    SMALLEQ    reduce using rule 100 (fCall)
    GREATEQ    reduce using rule 100 (fCall)
    EQUALS     reduce using rule 100 (fCall)
    DIFFERENT  reduce using rule 100 (fCall)
    COMMA      reduce using rule 100 (fCall)
    PARENR     reduce using rule 100 (fCall)


State 321

   99 fCall: ID PARENL callParams • PARENR
  101 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 164
    PARENR  shift, and go to state 343


State 322

   96 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 96 (factor)
    SUB        reduce using rule 96 (factor)
    MULT       reduce using rule 96 (factor)
    DIV        reduce using rule 96 (factor)
    OR         reduce using rule 96 (factor)
    AND        reduce using rule 96 (factor)
    SMALLER    reduce using rule 96 (factor)
    GREATER    reduce using rule 96 (factor)
    SMALLEQ    reduce using rule 96 (factor)
    GREATEQ    reduce using rule 96 (factor)
    EQUALS     reduce using rule 96 (factor)
    DIFFERENT  reduce using rule 96 (factor)
    COMMA      reduce using rule 96 (factor)
    PARENR     reduce using rule 96 (factor)


State 323

   80 relationalOp: SMALLER •

    OR      reduce using rule 80 (relationalOp)
    AND     reduce using rule 80 (relationalOp)
    COMMA   reduce using rule 80 (relationalOp)
    PARENR  reduce using rule 80 (relationalOp)


State 324

   81 relationalOp: GREATER •

    OR      reduce using rule 81 (relationalOp)
    AND     reduce using rule 81 (relationalOp)
    COMMA   reduce using rule 81 (relationalOp)
    PARENR  reduce using rule 81 (relationalOp)


State 325

   82 relationalOp: SMALLEQ •

    OR      reduce using rule 82 (relationalOp)
    AND     reduce using rule 82 (relationalOp)
    COMMA   reduce using rule 82 (relationalOp)
    PARENR  reduce using rule 82 (relationalOp)


State 326

   83 relationalOp: GREATEQ •

    OR      reduce using rule 83 (relationalOp)
    AND     reduce using rule 83 (relationalOp)
    COMMA   reduce using rule 83 (relationalOp)
    PARENR  reduce using rule 83 (relationalOp)


State 327

   84 relationalOp: EQUALS •

    OR      reduce using rule 84 (relationalOp)
    AND     reduce using rule 84 (relationalOp)
    COMMA   reduce using rule 84 (relationalOp)
    PARENR  reduce using rule 84 (relationalOp)


State 328

   85 relationalOp: DIFFERENT •

    OR      reduce using rule 85 (relationalOp)
    AND     reduce using rule 85 (relationalOp)
    COMMA   reduce using rule 85 (relationalOp)
    PARENR  reduce using rule 85 (relationalOp)


State 329

   74 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduce using rule 74 (binLogicalExp)
    AND     reduce using rule 74 (binLogicalExp)
    COMMA   reduce using rule 74 (binLogicalExp)
    PARENR  reduce using rule 74 (binLogicalExp)


State 330

   78 relationalExp: relationalExp relationalOp sumExp •
   86 sumExp: sumExp • ADD mulExp
   87       | sumExp • SUB mulExp

    ADD  shift, and go to state 281
    SUB  shift, and go to state 282

    OR         reduce using rule 78 (relationalExp)
    AND        reduce using rule 78 (relationalExp)
    SMALLER    reduce using rule 78 (relationalExp)
    GREATER    reduce using rule 78 (relationalExp)
    SMALLEQ    reduce using rule 78 (relationalExp)
    GREATEQ    reduce using rule 78 (relationalExp)
    EQUALS     reduce using rule 78 (relationalExp)
    DIFFERENT  reduce using rule 78 (relationalExp)
    COMMA      reduce using rule 78 (relationalExp)
    PARENR     reduce using rule 78 (relationalExp)


State 331

   86 sumExp: sumExp ADD mulExp •
   89 mulExp: mulExp • MULT factor
   90       | mulExp • DIV factor

    MULT  shift, and go to state 283
    DIV   shift, and go to state 284

    ADD        reduce using rule 86 (sumExp)
    SUB        reduce using rule 86 (sumExp)
    OR         reduce using rule 86 (sumExp)
    AND        reduce using rule 86 (sumExp)
    SMALLER    reduce using rule 86 (sumExp)
    GREATER    reduce using rule 86 (sumExp)
    SMALLEQ    reduce using rule 86 (sumExp)
    GREATEQ    reduce using rule 86 (sumExp)
    EQUALS     reduce using rule 86 (sumExp)
    DIFFERENT  reduce using rule 86 (sumExp)
    COMMA      reduce using rule 86 (sumExp)
    PARENR     reduce using rule 86 (sumExp)


State 332

   87 sumExp: sumExp SUB mulExp •
   89 mulExp: mulExp • MULT factor
   90       | mulExp • DIV factor

    MULT  shift, and go to state 283
    DIV   shift, and go to state 284

    ADD        reduce using rule 87 (sumExp)
    SUB        reduce using rule 87 (sumExp)
    OR         reduce using rule 87 (sumExp)
    AND        reduce using rule 87 (sumExp)
    SMALLER    reduce using rule 87 (sumExp)
    GREATER    reduce using rule 87 (sumExp)
    SMALLEQ    reduce using rule 87 (sumExp)
    GREATEQ    reduce using rule 87 (sumExp)
    EQUALS     reduce using rule 87 (sumExp)
    DIFFERENT  reduce using rule 87 (sumExp)
    COMMA      reduce using rule 87 (sumExp)
    PARENR     reduce using rule 87 (sumExp)


State 333

   89 mulExp: mulExp MULT factor •

    ADD        reduce using rule 89 (mulExp)
    SUB        reduce using rule 89 (mulExp)
    MULT       reduce using rule 89 (mulExp)
    DIV        reduce using rule 89 (mulExp)
    OR         reduce using rule 89 (mulExp)
    AND        reduce using rule 89 (mulExp)
    SMALLER    reduce using rule 89 (mulExp)
    GREATER    reduce using rule 89 (mulExp)
    SMALLEQ    reduce using rule 89 (mulExp)
    GREATEQ    reduce using rule 89 (mulExp)
    EQUALS     reduce using rule 89 (mulExp)
    DIFFERENT  reduce using rule 89 (mulExp)
    COMMA      reduce using rule 89 (mulExp)
    PARENR     reduce using rule 89 (mulExp)


State 334

   90 mulExp: mulExp DIV factor •

    ADD        reduce using rule 90 (mulExp)
    SUB        reduce using rule 90 (mulExp)
    MULT       reduce using rule 90 (mulExp)
    DIV        reduce using rule 90 (mulExp)
    OR         reduce using rule 90 (mulExp)
    AND        reduce using rule 90 (mulExp)
    SMALLER    reduce using rule 90 (mulExp)
    GREATER    reduce using rule 90 (mulExp)
    SMALLEQ    reduce using rule 90 (mulExp)
    GREATEQ    reduce using rule 90 (mulExp)
    EQUALS     reduce using rule 90 (mulExp)
    DIFFERENT  reduce using rule 90 (mulExp)
    COMMA      reduce using rule 90 (mulExp)
    PARENR     reduce using rule 90 (mulExp)


State 335

   99 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 99 (fCall)
    SUB        reduce using rule 99 (fCall)
    MULT       reduce using rule 99 (fCall)
    DIV        reduce using rule 99 (fCall)
    OR         reduce using rule 99 (fCall)
    AND        reduce using rule 99 (fCall)
    SMALLER    reduce using rule 99 (fCall)
    GREATER    reduce using rule 99 (fCall)
    SMALLEQ    reduce using rule 99 (fCall)
    GREATEQ    reduce using rule 99 (fCall)
    EQUALS     reduce using rule 99 (fCall)
    DIFFERENT  reduce using rule 99 (fCall)
    PARENR     reduce using rule 99 (fCall)


State 336

   46 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    ADD         shift, and go to state 46
    SUB         shift, and go to state 47
    PARENL      shift, and go to state 58

    simpleExp      go to state 344
    constOp        go to state 77
    binLogicalExp  go to state 80
    relationalExp  go to state 81
    sumExp         go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 337

   47 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 96
    NIL         shift, and go to state 42
    INTEGER     shift, and go to state 43
    DECIMAL     shift, and go to state 44
    ERRORTOKEN  shift, and go to state 45
    ADD         shift, and go to state 46
    SUB         shift, and go to state 47
    PARENL      shift, and go to state 58

    simpleExp      go to state 345
    constOp        go to state 77
    binLogicalExp  go to state 80
    relationalExp  go to state 81
    sumExp         go to state 82
    mulExp         go to state 83
    factor         go to state 84
    fCall          go to state 85


State 338

   68 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 346


State 339

   69 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 347


State 340

   70 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 348


State 341

   42 condStmt: ifStmt STFUNC ENDFUNC elseStmt •

    ID           reduce using rule 42 (condStmt)
    TYPE         reduce using rule 42 (condStmt)
    NIL          reduce using rule 42 (condStmt)
    INTEGER      reduce using rule 42 (condStmt)
    DECIMAL      reduce using rule 42 (condStmt)
    ERRORTOKEN   reduce using rule 42 (condStmt)
    ELSE         reduce using rule 42 (condStmt)
    ADD          reduce using rule 42 (condStmt)
    SUB          reduce using rule 42 (condStmt)
    HEADLIST     reduce using rule 42 (condStmt)
    TAILLIST     reduce using rule 42 (condStmt)
    DESTROYHEAD  reduce using rule 42 (condStmt)
    IF           reduce using rule 42 (condStmt)
    FOR          reduce using rule 42 (condStmt)
    READ         reduce using rule 42 (condStmt)
    WRITE        reduce using rule 42 (condStmt)
    WRITELN      reduce using rule 42 (condStmt)
    RETURN       reduce using rule 42 (condStmt)
    STFUNC       reduce using rule 42 (condStmt)
    ENDFUNC      reduce using rule 42 (condStmt)
    PARENL       reduce using rule 42 (condStmt)


State 342

   45 elseStmt: ELSE $@9 • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 207
    READ         shift, and go to state 208
    WRITE        shift, and go to state 209
    WRITELN      shift, and go to state 210
    RETURN       shift, and go to state 211
    STFUNC       shift, and go to state 349
    PARENL       shift, and go to state 58

    varDeclaration        go to state 212
    simpleVarDeclaration  go to state 213
    compoundStmt          go to state 214
    primitiveStmt         go to state 350
    exprStmt              go to state 215
    condStmt              go to state 216
    ifStmt                go to state 217
    iterStmt              go to state 218
    returnStmt            go to state 219
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 220
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 221
    outOp                 go to state 222
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 343

   99 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 99 (fCall)
    SUB        reduce using rule 99 (fCall)
    MULT       reduce using rule 99 (fCall)
    DIV        reduce using rule 99 (fCall)
    OR         reduce using rule 99 (fCall)
    AND        reduce using rule 99 (fCall)
    SMALLER    reduce using rule 99 (fCall)
    GREATER    reduce using rule 99 (fCall)
    SMALLEQ    reduce using rule 99 (fCall)
    GREATEQ    reduce using rule 99 (fCall)
    EQUALS     reduce using rule 99 (fCall)
    DIFFERENT  reduce using rule 99 (fCall)
    COMMA      reduce using rule 99 (fCall)
    PARENR     reduce using rule 99 (fCall)


State 344

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 351


State 345

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 352


State 346

   68 inOp: READ PARENL ID PARENR SEMIC •

    ID           reduce using rule 68 (inOp)
    TYPE         reduce using rule 68 (inOp)
    NIL          reduce using rule 68 (inOp)
    INTEGER      reduce using rule 68 (inOp)
    DECIMAL      reduce using rule 68 (inOp)
    ERRORTOKEN   reduce using rule 68 (inOp)
    ELSE         reduce using rule 68 (inOp)
    ADD          reduce using rule 68 (inOp)
    SUB          reduce using rule 68 (inOp)
    HEADLIST     reduce using rule 68 (inOp)
    TAILLIST     reduce using rule 68 (inOp)
    DESTROYHEAD  reduce using rule 68 (inOp)
    IF           reduce using rule 68 (inOp)
    FOR          reduce using rule 68 (inOp)
    READ         reduce using rule 68 (inOp)
    WRITE        reduce using rule 68 (inOp)
    WRITELN      reduce using rule 68 (inOp)
    RETURN       reduce using rule 68 (inOp)
    STFUNC       reduce using rule 68 (inOp)
    ENDFUNC      reduce using rule 68 (inOp)
    PARENL       reduce using rule 68 (inOp)


State 347

   69 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID           reduce using rule 69 (outOp)
    TYPE         reduce using rule 69 (outOp)
    NIL          reduce using rule 69 (outOp)
    INTEGER      reduce using rule 69 (outOp)
    DECIMAL      reduce using rule 69 (outOp)
    ERRORTOKEN   reduce using rule 69 (outOp)
    ELSE         reduce using rule 69 (outOp)
    ADD          reduce using rule 69 (outOp)
    SUB          reduce using rule 69 (outOp)
    HEADLIST     reduce using rule 69 (outOp)
    TAILLIST     reduce using rule 69 (outOp)
    DESTROYHEAD  reduce using rule 69 (outOp)
    IF           reduce using rule 69 (outOp)
    FOR          reduce using rule 69 (outOp)
    READ         reduce using rule 69 (outOp)
    WRITE        reduce using rule 69 (outOp)
    WRITELN      reduce using rule 69 (outOp)
    RETURN       reduce using rule 69 (outOp)
    STFUNC       reduce using rule 69 (outOp)
    ENDFUNC      reduce using rule 69 (outOp)
    PARENL       reduce using rule 69 (outOp)


State 348

   70 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID           reduce using rule 70 (outOp)
    TYPE         reduce using rule 70 (outOp)
    NIL          reduce using rule 70 (outOp)
    INTEGER      reduce using rule 70 (outOp)
    DECIMAL      reduce using rule 70 (outOp)
    ERRORTOKEN   reduce using rule 70 (outOp)
    ELSE         reduce using rule 70 (outOp)
    ADD          reduce using rule 70 (outOp)
    SUB          reduce using rule 70 (outOp)
    HEADLIST     reduce using rule 70 (outOp)
    TAILLIST     reduce using rule 70 (outOp)
    DESTROYHEAD  reduce using rule 70 (outOp)
    IF           reduce using rule 70 (outOp)
    FOR          reduce using rule 70 (outOp)
    READ         reduce using rule 70 (outOp)
    WRITE        reduce using rule 70 (outOp)
    WRITELN      reduce using rule 70 (outOp)
    RETURN       reduce using rule 70 (outOp)
    STFUNC       reduce using rule 70 (outOp)
    ENDFUNC      reduce using rule 70 (outOp)
    PARENL       reduce using rule 70 (outOp)


State 349

   27 compoundStmt: STFUNC • stmtList ENDFUNC

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 52
    READ         shift, and go to state 53
    WRITE        shift, and go to state 54
    WRITELN      shift, and go to state 55
    RETURN       shift, and go to state 56
    STFUNC       shift, and go to state 57
    PARENL       shift, and go to state 58

    varDeclaration        go to state 59
    simpleVarDeclaration  go to state 191
    compoundStmt          go to state 60
    stmtList              go to state 244
    primitiveStmt         go to state 62
    exprStmt              go to state 63
    condStmt              go to state 64
    ifStmt                go to state 65
    iterStmt              go to state 66
    returnStmt            go to state 67
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 74
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 78
    outOp                 go to state 79
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 350

   45 elseStmt: ELSE $@9 primitiveStmt •

    ID           reduce using rule 45 (elseStmt)
    TYPE         reduce using rule 45 (elseStmt)
    NIL          reduce using rule 45 (elseStmt)
    INTEGER      reduce using rule 45 (elseStmt)
    DECIMAL      reduce using rule 45 (elseStmt)
    ERRORTOKEN   reduce using rule 45 (elseStmt)
    ELSE         reduce using rule 45 (elseStmt)
    ADD          reduce using rule 45 (elseStmt)
    SUB          reduce using rule 45 (elseStmt)
    HEADLIST     reduce using rule 45 (elseStmt)
    TAILLIST     reduce using rule 45 (elseStmt)
    DESTROYHEAD  reduce using rule 45 (elseStmt)
    IF           reduce using rule 45 (elseStmt)
    FOR          reduce using rule 45 (elseStmt)
    READ         reduce using rule 45 (elseStmt)
    WRITE        reduce using rule 45 (elseStmt)
    WRITELN      reduce using rule 45 (elseStmt)
    RETURN       reduce using rule 45 (elseStmt)
    STFUNC       reduce using rule 45 (elseStmt)
    ENDFUNC      reduce using rule 45 (elseStmt)
    PARENL       reduce using rule 45 (elseStmt)


State 351

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 184

    assignExp  go to state 353


State 352

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 184

    assignExp  go to state 354


State 353

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 355


State 354

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 356


State 355

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 207
    READ         shift, and go to state 208
    WRITE        shift, and go to state 209
    WRITELN      shift, and go to state 210
    RETURN       shift, and go to state 211
    STFUNC       shift, and go to state 349
    PARENL       shift, and go to state 58

    varDeclaration        go to state 212
    simpleVarDeclaration  go to state 213
    compoundStmt          go to state 214
    primitiveStmt         go to state 357
    exprStmt              go to state 215
    condStmt              go to state 216
    ifStmt                go to state 217
    iterStmt              go to state 218
    returnStmt            go to state 219
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 220
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 221
    outOp                 go to state 222
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 356

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID           shift, and go to state 40
    TYPE         shift, and go to state 41
    NIL          shift, and go to state 42
    INTEGER      shift, and go to state 43
    DECIMAL      shift, and go to state 44
    ERRORTOKEN   shift, and go to state 45
    ADD          shift, and go to state 46
    SUB          shift, and go to state 47
    HEADLIST     shift, and go to state 48
    TAILLIST     shift, and go to state 49
    DESTROYHEAD  shift, and go to state 50
    IF           shift, and go to state 51
    FOR          shift, and go to state 207
    READ         shift, and go to state 208
    WRITE        shift, and go to state 209
    WRITELN      shift, and go to state 210
    RETURN       shift, and go to state 211
    STFUNC       shift, and go to state 349
    PARENL       shift, and go to state 58

    varDeclaration        go to state 212
    simpleVarDeclaration  go to state 213
    compoundStmt          go to state 214
    primitiveStmt         go to state 358
    exprStmt              go to state 215
    condStmt              go to state 216
    ifStmt                go to state 217
    iterStmt              go to state 218
    returnStmt            go to state 219
    listExp               go to state 68
    appendOps             go to state 69
    returnListOps         go to state 70
    returnListOp          go to state 71
    destroyHeadOps        go to state 72
    mapFilterOps          go to state 73
    expression            go to state 220
    assignExp             go to state 75
    simpleExp             go to state 76
    constOp               go to state 77
    inOp                  go to state 221
    outOp                 go to state 222
    binLogicalExp         go to state 80
    relationalExp         go to state 81
    sumExp                go to state 82
    mulExp                go to state 83
    factor                go to state 84
    fCall                 go to state 85


State 357

   46 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduce using rule 46 (iterStmt)
    TYPE         reduce using rule 46 (iterStmt)
    NIL          reduce using rule 46 (iterStmt)
    INTEGER      reduce using rule 46 (iterStmt)
    DECIMAL      reduce using rule 46 (iterStmt)
    ERRORTOKEN   reduce using rule 46 (iterStmt)
    ELSE         reduce using rule 46 (iterStmt)
    ADD          reduce using rule 46 (iterStmt)
    SUB          reduce using rule 46 (iterStmt)
    HEADLIST     reduce using rule 46 (iterStmt)
    TAILLIST     reduce using rule 46 (iterStmt)
    DESTROYHEAD  reduce using rule 46 (iterStmt)
    IF           reduce using rule 46 (iterStmt)
    FOR          reduce using rule 46 (iterStmt)
    READ         reduce using rule 46 (iterStmt)
    WRITE        reduce using rule 46 (iterStmt)
    WRITELN      reduce using rule 46 (iterStmt)
    RETURN       reduce using rule 46 (iterStmt)
    STFUNC       reduce using rule 46 (iterStmt)
    ENDFUNC      reduce using rule 46 (iterStmt)
    PARENL       reduce using rule 46 (iterStmt)


State 358

   47 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID           reduce using rule 47 (iterStmt)
    TYPE         reduce using rule 47 (iterStmt)
    NIL          reduce using rule 47 (iterStmt)
    INTEGER      reduce using rule 47 (iterStmt)
    DECIMAL      reduce using rule 47 (iterStmt)
    ERRORTOKEN   reduce using rule 47 (iterStmt)
    ELSE         reduce using rule 47 (iterStmt)
    ADD          reduce using rule 47 (iterStmt)
    SUB          reduce using rule 47 (iterStmt)
    HEADLIST     reduce using rule 47 (iterStmt)
    TAILLIST     reduce using rule 47 (iterStmt)
    DESTROYHEAD  reduce using rule 47 (iterStmt)
    IF           reduce using rule 47 (iterStmt)
    FOR          reduce using rule 47 (iterStmt)
    READ         reduce using rule 47 (iterStmt)
    WRITE        reduce using rule 47 (iterStmt)
    WRITELN      reduce using rule 47 (iterStmt)
    RETURN       reduce using rule 47 (iterStmt)
    STFUNC       reduce using rule 47 (iterStmt)
    ENDFUNC      reduce using rule 47 (iterStmt)
    PARENL       reduce using rule 47 (iterStmt)
