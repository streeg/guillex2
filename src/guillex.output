Terminals unused in grammar

    DESTROYHEAD


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration
    4                | error

    5 declaration: varDeclaration
    6            | funcDeclaration

    7 varDeclaration: simpleVarDeclaration SEMIC

    8 $@1: %empty

    9 $@2: %empty

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC

   11 $@3: %empty

   12 $@4: %empty

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC

   14 simpleVarDeclaration: TYPE ID

   15 params: params COMMA param
   16       | param
   17       | error

   18 param: TYPE ID

   19 compoundStmt: STFUNC stmtList ENDFUNC

   20 stmtList: stmtList primitiveStmt
   21         | primitiveStmt

   22 primitiveStmt: exprStmt
   23              | compoundStmt
   24              | condStmt
   25              | iterStmt
   26              | returnStmt
   27              | inOp
   28              | outOp
   29              | varDeclaration

   30 exprStmt: expression SEMIC

   31 condStmt: ifStmt primitiveStmt
   32         | ifStmt primitiveStmt elseStmt
   33         | ifStmt STFUNC ENDFUNC
   34         | ifStmt STFUNC ENDFUNC elseStmt

   35 ifStmt: IF PARENL simpleExp PARENR

   36 $@5: %empty

   37 elseStmt: ELSE $@5 primitiveStmt

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   39         | FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

   40 returnStmt: RETURN expression SEMIC

   41 expression: assignExp
   42           | simpleExp

   43 assignExp: ID ASSIGN expression

   44 simpleExp: binLogicalExp
   45          | binListExp

   46 constOp: INTEGER
   47        | DECIMAL
   48        | NIL

   49 inOp: READ PARENL ID PARENR SEMIC

   50 outOp: WRITE PARENL outConst PARENR SEMIC
   51      | WRITELN PARENL outConst PARENR SEMIC

   52 outConst: STRING
   53         | simpleExp

   54 binListExp: factor APPEND factor
   55           | factor MAP factor
   56           | factor FILTER factor

   57 unaryListExp: HEADLIST factor
   58             | TAILLIST factor

   59 binLogicalExp: binLogicalExp binLogicalOp relationalOp
   60              | relationalExp

   61 binLogicalOp: OR
   62             | AND

   63 relationalExp: relationalExp relationalOp sumExp
   64              | sumExp

   65 relationalOp: SMALLER
   66             | GREATER
   67             | SMALLEQ
   68             | GREATEQ
   69             | EQUALS
   70             | DIFFERENT

   71 sumExp: sumExp ADD mulExp
   72       | sumExp SUB mulExp
   73       | mulExp

   74 mulExp: mulExp MULT factor
   75       | mulExp DIV factor
   76       | factor
   77       | ADD factor
   78       | SUB factor
   79       | unaryListExp

   80 factor: ID
   81       | fCall
   82       | PARENL simpleExp PARENR
   83       | constOp
   84       | ERRORTOKEN

   85 fCall: ID PARENL callParams PARENR
   86      | ID PARENL PARENR

   87 callParams: callParams COMMA simpleExp
   88           | simpleExp


Terminals, with rules where they appear

    $end (0) 0
    error <treeNode> (256) 4 17
    ID <str> (258) 10 13 14 18 43 49 80 85 86
    TYPE <str> (259) 10 13 14 18
    STRING <str> (260) 52
    NIL <str> (261) 48
    INTEGER <integer> (262) 46
    DECIMAL <dec> (263) 47
    ERRORTOKEN <str> (264) 84
    ELSE <str> (265) 37
    THEN <str> (266)
    ADD <str> (267) 71 77
    SUB <str> (268) 72 78
    MULT <str> (269) 74
    DIV <str> (270) 75
    OR <str> (271) 61
    AND <str> (272) 62
    SMALLER <str> (273) 65
    GREATER <str> (274) 66
    SMALLEQ <str> (275) 67
    GREATEQ <str> (276) 68
    EQUALS <str> (277) 69
    DIFFERENT <str> (278) 70
    APPEND <str> (279) 54
    HEADLIST <str> (280) 57
    TAILLIST <str> (281) 58
    DESTROYHEAD <str> (282)
    FILTER <str> (283) 56
    ASSIGN <str> (284) 43
    MAP <str> (285) 55
    IF <str> (286) 35
    FOR <str> (287) 38 39
    READ <str> (288) 49
    WRITE <str> (289) 50
    WRITELN <str> (290) 51
    RETURN <str> (291) 40
    SEMIC <str> (292) 7 30 38 39 40 49 50 51
    COMMA <str> (293) 15 87
    STFUNC <str> (294) 10 13 19 33 34
    ENDFUNC <str> (295) 10 13 19 33 34
    PARENL <str> (296) 10 13 35 38 39 49 50 51 82 85 86
    PARENR <str> (297) 10 13 35 38 39 49 50 51 82 85 86


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <treeNode> (44)
        on left: 1
        on right: 0
    declarationList <treeNode> (45)
        on left: 2 3 4
        on right: 1 2
    declaration <treeNode> (46)
        on left: 5 6
        on right: 2 3
    varDeclaration <treeNode> (47)
        on left: 7
        on right: 5 29
    funcDeclaration <treeNode> (48)
        on left: 10 13
        on right: 6
    $@1 (49)
        on left: 8
        on right: 10
    $@2 (50)
        on left: 9
        on right: 10
    $@3 (51)
        on left: 11
        on right: 13
    $@4 (52)
        on left: 12
        on right: 13
    simpleVarDeclaration <treeNode> (53)
        on left: 14
        on right: 7
    params <treeNode> (54)
        on left: 15 16 17
        on right: 10 15
    param <treeNode> (55)
        on left: 18
        on right: 15 16
    compoundStmt <treeNode> (56)
        on left: 19
        on right: 23
    stmtList <treeNode> (57)
        on left: 20 21
        on right: 10 13 19 20
    primitiveStmt <treeNode> (58)
        on left: 22 23 24 25 26 27 28 29
        on right: 20 21 31 32 37 38 39
    exprStmt <treeNode> (59)
        on left: 30
        on right: 22
    condStmt <treeNode> (60)
        on left: 31 32 33 34
        on right: 24
    ifStmt <treeNode> (61)
        on left: 35
        on right: 31 32 33 34
    elseStmt <treeNode> (62)
        on left: 37
        on right: 32 34
    $@5 (63)
        on left: 36
        on right: 37
    iterStmt <treeNode> (64)
        on left: 38 39
        on right: 25
    returnStmt <treeNode> (65)
        on left: 40
        on right: 26
    expression <treeNode> (66)
        on left: 41 42
        on right: 30 40 43
    assignExp <treeNode> (67)
        on left: 43
        on right: 38 39 41
    simpleExp <treeNode> (68)
        on left: 44 45
        on right: 35 38 39 42 53 82 87 88
    constOp <treeNode> (69)
        on left: 46 47 48
        on right: 83
    inOp <treeNode> (70)
        on left: 49
        on right: 27
    outOp <treeNode> (71)
        on left: 50 51
        on right: 28
    outConst <treeNode> (72)
        on left: 52 53
        on right: 50 51
    binListExp <treeNode> (73)
        on left: 54 55 56
        on right: 45
    unaryListExp <treeNode> (74)
        on left: 57 58
        on right: 79
    binLogicalExp <treeNode> (75)
        on left: 59 60
        on right: 44 59
    binLogicalOp <treeNode> (76)
        on left: 61 62
        on right: 59
    relationalExp <treeNode> (77)
        on left: 63 64
        on right: 60 63
    relationalOp <treeNode> (78)
        on left: 65 66 67 68 69 70
        on right: 59 63
    sumExp <treeNode> (79)
        on left: 71 72 73
        on right: 63 64 71 72
    mulExp <treeNode> (80)
        on left: 74 75 76 77 78 79
        on right: 71 72 73 74 75
    factor <treeNode> (81)
        on left: 80 81 82 83 84
        on right: 54 55 56 57 58 74 75 76 77 78
    fCall <treeNode> (82)
        on left: 85 86
        on right: 81
    callParams <treeNode> (83)
        on left: 87 88
        on right: 85 87


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program               go to state 3
    declarationList       go to state 4
    declaration           go to state 5
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 1

    4 declarationList: error •

    $end  reduce using rule 4 (declarationList)
    TYPE  reduce using rule 4 (declarationList)


State 2

   10 funcDeclaration: TYPE • ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE • ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   14 simpleVarDeclaration: TYPE • ID

    ID  shift, and go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: declarationList •
    2 declarationList: declarationList • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration           go to state 11
    varDeclaration        go to state 6
    funcDeclaration       go to state 7
    simpleVarDeclaration  go to state 8


State 5

    3 declarationList: declaration •

    $end  reduce using rule 3 (declarationList)
    TYPE  reduce using rule 3 (declarationList)


State 6

    5 declaration: varDeclaration •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 7

    6 declaration: funcDeclaration •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 8

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 12


State 9

   10 funcDeclaration: TYPE ID • PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID • PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC
   14 simpleVarDeclaration: TYPE ID •

    PARENL  shift, and go to state 13

    SEMIC  reduce using rule 14 (simpleVarDeclaration)


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declarationList: declarationList declaration •

    $end  reduce using rule 2 (declarationList)
    TYPE  reduce using rule 2 (declarationList)


State 12

    7 varDeclaration: simpleVarDeclaration SEMIC •

    $end  reduce using rule 7 (varDeclaration)
    TYPE  reduce using rule 7 (varDeclaration)


State 13

   10 funcDeclaration: TYPE ID PARENL • $@1 params PARENR STFUNC $@2 stmtList ENDFUNC
   13                | TYPE ID PARENL • $@3 PARENR STFUNC $@4 stmtList ENDFUNC

    error   reduce using rule 8 ($@1)
    TYPE    reduce using rule 8 ($@1)
    PARENR  reduce using rule 11 ($@3)

    $@1  go to state 14
    $@3  go to state 15


State 14

   10 funcDeclaration: TYPE ID PARENL $@1 • params PARENR STFUNC $@2 stmtList ENDFUNC

    error  shift, and go to state 16
    TYPE   shift, and go to state 17

    params  go to state 18
    param   go to state 19


State 15

   13 funcDeclaration: TYPE ID PARENL $@3 • PARENR STFUNC $@4 stmtList ENDFUNC

    PARENR  shift, and go to state 20


State 16

   17 params: error •

    COMMA   reduce using rule 17 (params)
    PARENR  reduce using rule 17 (params)


State 17

   18 param: TYPE • ID

    ID  shift, and go to state 21


State 18

   10 funcDeclaration: TYPE ID PARENL $@1 params • PARENR STFUNC $@2 stmtList ENDFUNC
   15 params: params • COMMA param

    COMMA   shift, and go to state 22
    PARENR  shift, and go to state 23


State 19

   16 params: param •

    COMMA   reduce using rule 16 (params)
    PARENR  reduce using rule 16 (params)


State 20

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR • STFUNC $@4 stmtList ENDFUNC

    STFUNC  shift, and go to state 24


State 21

   18 param: TYPE ID •

    COMMA   reduce using rule 18 (param)
    PARENR  reduce using rule 18 (param)


State 22

   15 params: params COMMA • param

    TYPE  shift, and go to state 17

    param  go to state 25


State 23

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR • STFUNC $@2 stmtList ENDFUNC

    STFUNC  shift, and go to state 26


State 24

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC • $@4 stmtList ENDFUNC

    ID          reduce using rule 12 ($@4)
    TYPE        reduce using rule 12 ($@4)
    NIL         reduce using rule 12 ($@4)
    INTEGER     reduce using rule 12 ($@4)
    DECIMAL     reduce using rule 12 ($@4)
    ERRORTOKEN  reduce using rule 12 ($@4)
    ADD         reduce using rule 12 ($@4)
    SUB         reduce using rule 12 ($@4)
    HEADLIST    reduce using rule 12 ($@4)
    TAILLIST    reduce using rule 12 ($@4)
    IF          reduce using rule 12 ($@4)
    FOR         reduce using rule 12 ($@4)
    READ        reduce using rule 12 ($@4)
    WRITE       reduce using rule 12 ($@4)
    WRITELN     reduce using rule 12 ($@4)
    RETURN      reduce using rule 12 ($@4)
    STFUNC      reduce using rule 12 ($@4)
    PARENL      reduce using rule 12 ($@4)

    $@4  go to state 27


State 25

   15 params: params COMMA param •

    COMMA   reduce using rule 15 (params)
    PARENR  reduce using rule 15 (params)


State 26

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC • $@2 stmtList ENDFUNC

    ID          reduce using rule 9 ($@2)
    TYPE        reduce using rule 9 ($@2)
    NIL         reduce using rule 9 ($@2)
    INTEGER     reduce using rule 9 ($@2)
    DECIMAL     reduce using rule 9 ($@2)
    ERRORTOKEN  reduce using rule 9 ($@2)
    ADD         reduce using rule 9 ($@2)
    SUB         reduce using rule 9 ($@2)
    HEADLIST    reduce using rule 9 ($@2)
    TAILLIST    reduce using rule 9 ($@2)
    IF          reduce using rule 9 ($@2)
    FOR         reduce using rule 9 ($@2)
    READ        reduce using rule 9 ($@2)
    WRITE       reduce using rule 9 ($@2)
    WRITELN     reduce using rule 9 ($@2)
    RETURN      reduce using rule 9 ($@2)
    STFUNC      reduce using rule 9 ($@2)
    PARENL      reduce using rule 9 ($@2)

    $@2  go to state 28


State 27

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 • stmtList ENDFUNC

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    stmtList              go to state 49
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 28

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 • stmtList ENDFUNC

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    stmtList              go to state 70
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 29

   43 assignExp: ID • ASSIGN expression
   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    ASSIGN  shift, and go to state 71
    PARENL  shift, and go to state 72

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    APPEND     reduce using rule 80 (factor)
    FILTER     reduce using rule 80 (factor)
    MAP        reduce using rule 80 (factor)
    SEMIC      reduce using rule 80 (factor)


State 30

   14 simpleVarDeclaration: TYPE • ID

    ID  shift, and go to state 73


State 31

   48 constOp: NIL •

    ADD        reduce using rule 48 (constOp)
    SUB        reduce using rule 48 (constOp)
    MULT       reduce using rule 48 (constOp)
    DIV        reduce using rule 48 (constOp)
    OR         reduce using rule 48 (constOp)
    AND        reduce using rule 48 (constOp)
    SMALLER    reduce using rule 48 (constOp)
    GREATER    reduce using rule 48 (constOp)
    SMALLEQ    reduce using rule 48 (constOp)
    GREATEQ    reduce using rule 48 (constOp)
    EQUALS     reduce using rule 48 (constOp)
    DIFFERENT  reduce using rule 48 (constOp)
    APPEND     reduce using rule 48 (constOp)
    FILTER     reduce using rule 48 (constOp)
    MAP        reduce using rule 48 (constOp)
    SEMIC      reduce using rule 48 (constOp)


State 32

   46 constOp: INTEGER •

    ADD        reduce using rule 46 (constOp)
    SUB        reduce using rule 46 (constOp)
    MULT       reduce using rule 46 (constOp)
    DIV        reduce using rule 46 (constOp)
    OR         reduce using rule 46 (constOp)
    AND        reduce using rule 46 (constOp)
    SMALLER    reduce using rule 46 (constOp)
    GREATER    reduce using rule 46 (constOp)
    SMALLEQ    reduce using rule 46 (constOp)
    GREATEQ    reduce using rule 46 (constOp)
    EQUALS     reduce using rule 46 (constOp)
    DIFFERENT  reduce using rule 46 (constOp)
    APPEND     reduce using rule 46 (constOp)
    FILTER     reduce using rule 46 (constOp)
    MAP        reduce using rule 46 (constOp)
    SEMIC      reduce using rule 46 (constOp)


State 33

   47 constOp: DECIMAL •

    ADD        reduce using rule 47 (constOp)
    SUB        reduce using rule 47 (constOp)
    MULT       reduce using rule 47 (constOp)
    DIV        reduce using rule 47 (constOp)
    OR         reduce using rule 47 (constOp)
    AND        reduce using rule 47 (constOp)
    SMALLER    reduce using rule 47 (constOp)
    GREATER    reduce using rule 47 (constOp)
    SMALLEQ    reduce using rule 47 (constOp)
    GREATEQ    reduce using rule 47 (constOp)
    EQUALS     reduce using rule 47 (constOp)
    DIFFERENT  reduce using rule 47 (constOp)
    APPEND     reduce using rule 47 (constOp)
    FILTER     reduce using rule 47 (constOp)
    MAP        reduce using rule 47 (constOp)
    SEMIC      reduce using rule 47 (constOp)


State 34

   84 factor: ERRORTOKEN •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    APPEND     reduce using rule 84 (factor)
    FILTER     reduce using rule 84 (factor)
    MAP        reduce using rule 84 (factor)
    SEMIC      reduce using rule 84 (factor)


State 35

   77 mulExp: ADD • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 165
    INTEGER     shift, and go to state 166
    DECIMAL     shift, and go to state 167
    ERRORTOKEN  shift, and go to state 168
    PARENL      shift, and go to state 169

    constOp  go to state 170
    factor   go to state 75
    fCall    go to state 171


State 36

   78 mulExp: SUB • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 165
    INTEGER     shift, and go to state 166
    DECIMAL     shift, and go to state 167
    ERRORTOKEN  shift, and go to state 168
    PARENL      shift, and go to state 169

    constOp  go to state 170
    factor   go to state 76
    fCall    go to state 171


State 37

   57 unaryListExp: HEADLIST • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 165
    INTEGER     shift, and go to state 166
    DECIMAL     shift, and go to state 167
    ERRORTOKEN  shift, and go to state 168
    PARENL      shift, and go to state 169

    constOp  go to state 170
    factor   go to state 77
    fCall    go to state 171


State 38

   58 unaryListExp: TAILLIST • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 165
    INTEGER     shift, and go to state 166
    DECIMAL     shift, and go to state 167
    ERRORTOKEN  shift, and go to state 168
    PARENL      shift, and go to state 169

    constOp  go to state 170
    factor   go to state 78
    fCall    go to state 171


State 39

   35 ifStmt: IF • PARENL simpleExp PARENR

    PARENL  shift, and go to state 79


State 40

   38 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   39         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  shift, and go to state 80


State 41

   49 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 81


State 42

   50 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 82


State 43

   51 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 83


State 44

   40 returnStmt: RETURN • expression SEMIC

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    expression     go to state 84
    assignExp      go to state 57
    simpleExp      go to state 58
    constOp        go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 45

   19 compoundStmt: STFUNC • stmtList ENDFUNC

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    stmtList              go to state 85
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 46

   82 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 86
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 47

   29 primitiveStmt: varDeclaration •

    ID          reduce using rule 29 (primitiveStmt)
    TYPE        reduce using rule 29 (primitiveStmt)
    NIL         reduce using rule 29 (primitiveStmt)
    INTEGER     reduce using rule 29 (primitiveStmt)
    DECIMAL     reduce using rule 29 (primitiveStmt)
    ERRORTOKEN  reduce using rule 29 (primitiveStmt)
    ADD         reduce using rule 29 (primitiveStmt)
    SUB         reduce using rule 29 (primitiveStmt)
    HEADLIST    reduce using rule 29 (primitiveStmt)
    TAILLIST    reduce using rule 29 (primitiveStmt)
    IF          reduce using rule 29 (primitiveStmt)
    FOR         reduce using rule 29 (primitiveStmt)
    READ        reduce using rule 29 (primitiveStmt)
    WRITE       reduce using rule 29 (primitiveStmt)
    WRITELN     reduce using rule 29 (primitiveStmt)
    RETURN      reduce using rule 29 (primitiveStmt)
    STFUNC      reduce using rule 29 (primitiveStmt)
    ENDFUNC     reduce using rule 29 (primitiveStmt)
    PARENL      reduce using rule 29 (primitiveStmt)


State 48

   23 primitiveStmt: compoundStmt •

    ID          reduce using rule 23 (primitiveStmt)
    TYPE        reduce using rule 23 (primitiveStmt)
    NIL         reduce using rule 23 (primitiveStmt)
    INTEGER     reduce using rule 23 (primitiveStmt)
    DECIMAL     reduce using rule 23 (primitiveStmt)
    ERRORTOKEN  reduce using rule 23 (primitiveStmt)
    ADD         reduce using rule 23 (primitiveStmt)
    SUB         reduce using rule 23 (primitiveStmt)
    HEADLIST    reduce using rule 23 (primitiveStmt)
    TAILLIST    reduce using rule 23 (primitiveStmt)
    IF          reduce using rule 23 (primitiveStmt)
    FOR         reduce using rule 23 (primitiveStmt)
    READ        reduce using rule 23 (primitiveStmt)
    WRITE       reduce using rule 23 (primitiveStmt)
    WRITELN     reduce using rule 23 (primitiveStmt)
    RETURN      reduce using rule 23 (primitiveStmt)
    STFUNC      reduce using rule 23 (primitiveStmt)
    ENDFUNC     reduce using rule 23 (primitiveStmt)
    PARENL      reduce using rule 23 (primitiveStmt)


State 49

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 87
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    primitiveStmt         go to state 88
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 50

   21 stmtList: primitiveStmt •

    ID          reduce using rule 21 (stmtList)
    TYPE        reduce using rule 21 (stmtList)
    NIL         reduce using rule 21 (stmtList)
    INTEGER     reduce using rule 21 (stmtList)
    DECIMAL     reduce using rule 21 (stmtList)
    ERRORTOKEN  reduce using rule 21 (stmtList)
    ADD         reduce using rule 21 (stmtList)
    SUB         reduce using rule 21 (stmtList)
    HEADLIST    reduce using rule 21 (stmtList)
    TAILLIST    reduce using rule 21 (stmtList)
    IF          reduce using rule 21 (stmtList)
    FOR         reduce using rule 21 (stmtList)
    READ        reduce using rule 21 (stmtList)
    WRITE       reduce using rule 21 (stmtList)
    WRITELN     reduce using rule 21 (stmtList)
    RETURN      reduce using rule 21 (stmtList)
    STFUNC      reduce using rule 21 (stmtList)
    ENDFUNC     reduce using rule 21 (stmtList)
    PARENL      reduce using rule 21 (stmtList)


State 51

   22 primitiveStmt: exprStmt •

    ID          reduce using rule 22 (primitiveStmt)
    TYPE        reduce using rule 22 (primitiveStmt)
    NIL         reduce using rule 22 (primitiveStmt)
    INTEGER     reduce using rule 22 (primitiveStmt)
    DECIMAL     reduce using rule 22 (primitiveStmt)
    ERRORTOKEN  reduce using rule 22 (primitiveStmt)
    ADD         reduce using rule 22 (primitiveStmt)
    SUB         reduce using rule 22 (primitiveStmt)
    HEADLIST    reduce using rule 22 (primitiveStmt)
    TAILLIST    reduce using rule 22 (primitiveStmt)
    IF          reduce using rule 22 (primitiveStmt)
    FOR         reduce using rule 22 (primitiveStmt)
    READ        reduce using rule 22 (primitiveStmt)
    WRITE       reduce using rule 22 (primitiveStmt)
    WRITELN     reduce using rule 22 (primitiveStmt)
    RETURN      reduce using rule 22 (primitiveStmt)
    STFUNC      reduce using rule 22 (primitiveStmt)
    ENDFUNC     reduce using rule 22 (primitiveStmt)
    PARENL      reduce using rule 22 (primitiveStmt)


State 52

   24 primitiveStmt: condStmt •

    ID          reduce using rule 24 (primitiveStmt)
    TYPE        reduce using rule 24 (primitiveStmt)
    NIL         reduce using rule 24 (primitiveStmt)
    INTEGER     reduce using rule 24 (primitiveStmt)
    DECIMAL     reduce using rule 24 (primitiveStmt)
    ERRORTOKEN  reduce using rule 24 (primitiveStmt)
    ADD         reduce using rule 24 (primitiveStmt)
    SUB         reduce using rule 24 (primitiveStmt)
    HEADLIST    reduce using rule 24 (primitiveStmt)
    TAILLIST    reduce using rule 24 (primitiveStmt)
    IF          reduce using rule 24 (primitiveStmt)
    FOR         reduce using rule 24 (primitiveStmt)
    READ        reduce using rule 24 (primitiveStmt)
    WRITE       reduce using rule 24 (primitiveStmt)
    WRITELN     reduce using rule 24 (primitiveStmt)
    RETURN      reduce using rule 24 (primitiveStmt)
    STFUNC      reduce using rule 24 (primitiveStmt)
    ENDFUNC     reduce using rule 24 (primitiveStmt)
    PARENL      reduce using rule 24 (primitiveStmt)


State 53

   31 condStmt: ifStmt • primitiveStmt
   32         | ifStmt • primitiveStmt elseStmt
   33         | ifStmt • STFUNC ENDFUNC
   34         | ifStmt • STFUNC ENDFUNC elseStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 191
    READ        shift, and go to state 192
    WRITE       shift, and go to state 193
    WRITELN     shift, and go to state 194
    RETURN      shift, and go to state 195
    STFUNC      shift, and go to state 89
    PARENL      shift, and go to state 46

    varDeclaration        go to state 196
    simpleVarDeclaration  go to state 197
    compoundStmt          go to state 198
    primitiveStmt         go to state 90
    exprStmt              go to state 199
    condStmt              go to state 200
    ifStmt                go to state 201
    iterStmt              go to state 202
    returnStmt            go to state 203
    expression            go to state 204
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 205
    outOp                 go to state 206
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 54

   25 primitiveStmt: iterStmt •

    ID          reduce using rule 25 (primitiveStmt)
    TYPE        reduce using rule 25 (primitiveStmt)
    NIL         reduce using rule 25 (primitiveStmt)
    INTEGER     reduce using rule 25 (primitiveStmt)
    DECIMAL     reduce using rule 25 (primitiveStmt)
    ERRORTOKEN  reduce using rule 25 (primitiveStmt)
    ADD         reduce using rule 25 (primitiveStmt)
    SUB         reduce using rule 25 (primitiveStmt)
    HEADLIST    reduce using rule 25 (primitiveStmt)
    TAILLIST    reduce using rule 25 (primitiveStmt)
    IF          reduce using rule 25 (primitiveStmt)
    FOR         reduce using rule 25 (primitiveStmt)
    READ        reduce using rule 25 (primitiveStmt)
    WRITE       reduce using rule 25 (primitiveStmt)
    WRITELN     reduce using rule 25 (primitiveStmt)
    RETURN      reduce using rule 25 (primitiveStmt)
    STFUNC      reduce using rule 25 (primitiveStmt)
    ENDFUNC     reduce using rule 25 (primitiveStmt)
    PARENL      reduce using rule 25 (primitiveStmt)


State 55

   26 primitiveStmt: returnStmt •

    ID          reduce using rule 26 (primitiveStmt)
    TYPE        reduce using rule 26 (primitiveStmt)
    NIL         reduce using rule 26 (primitiveStmt)
    INTEGER     reduce using rule 26 (primitiveStmt)
    DECIMAL     reduce using rule 26 (primitiveStmt)
    ERRORTOKEN  reduce using rule 26 (primitiveStmt)
    ADD         reduce using rule 26 (primitiveStmt)
    SUB         reduce using rule 26 (primitiveStmt)
    HEADLIST    reduce using rule 26 (primitiveStmt)
    TAILLIST    reduce using rule 26 (primitiveStmt)
    IF          reduce using rule 26 (primitiveStmt)
    FOR         reduce using rule 26 (primitiveStmt)
    READ        reduce using rule 26 (primitiveStmt)
    WRITE       reduce using rule 26 (primitiveStmt)
    WRITELN     reduce using rule 26 (primitiveStmt)
    RETURN      reduce using rule 26 (primitiveStmt)
    STFUNC      reduce using rule 26 (primitiveStmt)
    ENDFUNC     reduce using rule 26 (primitiveStmt)
    PARENL      reduce using rule 26 (primitiveStmt)


State 56

   30 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 91


State 57

   41 expression: assignExp •

    SEMIC  reduce using rule 41 (expression)


State 58

   42 expression: simpleExp •

    SEMIC  reduce using rule 42 (expression)


State 59

   83 factor: constOp •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    APPEND     reduce using rule 83 (factor)
    FILTER     reduce using rule 83 (factor)
    MAP        reduce using rule 83 (factor)
    SEMIC      reduce using rule 83 (factor)


State 60

   27 primitiveStmt: inOp •

    ID          reduce using rule 27 (primitiveStmt)
    TYPE        reduce using rule 27 (primitiveStmt)
    NIL         reduce using rule 27 (primitiveStmt)
    INTEGER     reduce using rule 27 (primitiveStmt)
    DECIMAL     reduce using rule 27 (primitiveStmt)
    ERRORTOKEN  reduce using rule 27 (primitiveStmt)
    ADD         reduce using rule 27 (primitiveStmt)
    SUB         reduce using rule 27 (primitiveStmt)
    HEADLIST    reduce using rule 27 (primitiveStmt)
    TAILLIST    reduce using rule 27 (primitiveStmt)
    IF          reduce using rule 27 (primitiveStmt)
    FOR         reduce using rule 27 (primitiveStmt)
    READ        reduce using rule 27 (primitiveStmt)
    WRITE       reduce using rule 27 (primitiveStmt)
    WRITELN     reduce using rule 27 (primitiveStmt)
    RETURN      reduce using rule 27 (primitiveStmt)
    STFUNC      reduce using rule 27 (primitiveStmt)
    ENDFUNC     reduce using rule 27 (primitiveStmt)
    PARENL      reduce using rule 27 (primitiveStmt)


State 61

   28 primitiveStmt: outOp •

    ID          reduce using rule 28 (primitiveStmt)
    TYPE        reduce using rule 28 (primitiveStmt)
    NIL         reduce using rule 28 (primitiveStmt)
    INTEGER     reduce using rule 28 (primitiveStmt)
    DECIMAL     reduce using rule 28 (primitiveStmt)
    ERRORTOKEN  reduce using rule 28 (primitiveStmt)
    ADD         reduce using rule 28 (primitiveStmt)
    SUB         reduce using rule 28 (primitiveStmt)
    HEADLIST    reduce using rule 28 (primitiveStmt)
    TAILLIST    reduce using rule 28 (primitiveStmt)
    IF          reduce using rule 28 (primitiveStmt)
    FOR         reduce using rule 28 (primitiveStmt)
    READ        reduce using rule 28 (primitiveStmt)
    WRITE       reduce using rule 28 (primitiveStmt)
    WRITELN     reduce using rule 28 (primitiveStmt)
    RETURN      reduce using rule 28 (primitiveStmt)
    STFUNC      reduce using rule 28 (primitiveStmt)
    ENDFUNC     reduce using rule 28 (primitiveStmt)
    PARENL      reduce using rule 28 (primitiveStmt)


State 62

   45 simpleExp: binListExp •

    SEMIC  reduce using rule 45 (simpleExp)


State 63

   79 mulExp: unaryListExp •

    ADD        reduce using rule 79 (mulExp)
    SUB        reduce using rule 79 (mulExp)
    MULT       reduce using rule 79 (mulExp)
    DIV        reduce using rule 79 (mulExp)
    OR         reduce using rule 79 (mulExp)
    AND        reduce using rule 79 (mulExp)
    SMALLER    reduce using rule 79 (mulExp)
    GREATER    reduce using rule 79 (mulExp)
    SMALLEQ    reduce using rule 79 (mulExp)
    GREATEQ    reduce using rule 79 (mulExp)
    EQUALS     reduce using rule 79 (mulExp)
    DIFFERENT  reduce using rule 79 (mulExp)
    SEMIC      reduce using rule 79 (mulExp)


State 64

   44 simpleExp: binLogicalExp •
   59 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   shift, and go to state 92
    AND  shift, and go to state 93

    SEMIC  reduce using rule 44 (simpleExp)

    binLogicalOp  go to state 94


State 65

   60 binLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 95
    GREATER    shift, and go to state 96
    SMALLEQ    shift, and go to state 97
    GREATEQ    shift, and go to state 98
    EQUALS     shift, and go to state 99
    DIFFERENT  shift, and go to state 100

    OR     reduce using rule 60 (binLogicalExp)
    AND    reduce using rule 60 (binLogicalExp)
    SEMIC  reduce using rule 60 (binLogicalExp)

    relationalOp  go to state 101


State 66

   64 relationalExp: sumExp •
   71 sumExp: sumExp • ADD mulExp
   72       | sumExp • SUB mulExp

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    OR         reduce using rule 64 (relationalExp)
    AND        reduce using rule 64 (relationalExp)
    SMALLER    reduce using rule 64 (relationalExp)
    GREATER    reduce using rule 64 (relationalExp)
    SMALLEQ    reduce using rule 64 (relationalExp)
    GREATEQ    reduce using rule 64 (relationalExp)
    EQUALS     reduce using rule 64 (relationalExp)
    DIFFERENT  reduce using rule 64 (relationalExp)
    SEMIC      reduce using rule 64 (relationalExp)


State 67

   73 sumExp: mulExp •
   74 mulExp: mulExp • MULT factor
   75       | mulExp • DIV factor

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    ADD        reduce using rule 73 (sumExp)
    SUB        reduce using rule 73 (sumExp)
    OR         reduce using rule 73 (sumExp)
    AND        reduce using rule 73 (sumExp)
    SMALLER    reduce using rule 73 (sumExp)
    GREATER    reduce using rule 73 (sumExp)
    SMALLEQ    reduce using rule 73 (sumExp)
    GREATEQ    reduce using rule 73 (sumExp)
    EQUALS     reduce using rule 73 (sumExp)
    DIFFERENT  reduce using rule 73 (sumExp)
    SEMIC      reduce using rule 73 (sumExp)


State 68

   54 binListExp: factor • APPEND factor
   55           | factor • MAP factor
   56           | factor • FILTER factor
   76 mulExp: factor •

    APPEND  shift, and go to state 106
    FILTER  shift, and go to state 107
    MAP     shift, and go to state 108

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    SEMIC      reduce using rule 76 (mulExp)


State 69

   81 factor: fCall •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    SEMIC      reduce using rule 81 (factor)


State 70

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 109
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    primitiveStmt         go to state 88
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 71

   43 assignExp: ID ASSIGN • expression

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    expression     go to state 110
    assignExp      go to state 57
    simpleExp      go to state 58
    constOp        go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 72

   85 fCall: ID PARENL • callParams PARENR
   86      | ID PARENL • PARENR

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216
    PARENR      shift, and go to state 111

    simpleExp      go to state 112
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225
    callParams     go to state 113


State 73

   14 simpleVarDeclaration: TYPE ID •

    SEMIC  reduce using rule 14 (simpleVarDeclaration)


State 74

   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    PARENL  shift, and go to state 226

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    SEMIC      reduce using rule 80 (factor)


State 75

   77 mulExp: ADD factor •

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    SEMIC      reduce using rule 77 (mulExp)


State 76

   78 mulExp: SUB factor •

    ADD        reduce using rule 78 (mulExp)
    SUB        reduce using rule 78 (mulExp)
    MULT       reduce using rule 78 (mulExp)
    DIV        reduce using rule 78 (mulExp)
    OR         reduce using rule 78 (mulExp)
    AND        reduce using rule 78 (mulExp)
    SMALLER    reduce using rule 78 (mulExp)
    GREATER    reduce using rule 78 (mulExp)
    SMALLEQ    reduce using rule 78 (mulExp)
    GREATEQ    reduce using rule 78 (mulExp)
    EQUALS     reduce using rule 78 (mulExp)
    DIFFERENT  reduce using rule 78 (mulExp)
    SEMIC      reduce using rule 78 (mulExp)


State 77

   57 unaryListExp: HEADLIST factor •

    ADD        reduce using rule 57 (unaryListExp)
    SUB        reduce using rule 57 (unaryListExp)
    MULT       reduce using rule 57 (unaryListExp)
    DIV        reduce using rule 57 (unaryListExp)
    OR         reduce using rule 57 (unaryListExp)
    AND        reduce using rule 57 (unaryListExp)
    SMALLER    reduce using rule 57 (unaryListExp)
    GREATER    reduce using rule 57 (unaryListExp)
    SMALLEQ    reduce using rule 57 (unaryListExp)
    GREATEQ    reduce using rule 57 (unaryListExp)
    EQUALS     reduce using rule 57 (unaryListExp)
    DIFFERENT  reduce using rule 57 (unaryListExp)
    SEMIC      reduce using rule 57 (unaryListExp)


State 78

   58 unaryListExp: TAILLIST factor •

    ADD        reduce using rule 58 (unaryListExp)
    SUB        reduce using rule 58 (unaryListExp)
    MULT       reduce using rule 58 (unaryListExp)
    DIV        reduce using rule 58 (unaryListExp)
    OR         reduce using rule 58 (unaryListExp)
    AND        reduce using rule 58 (unaryListExp)
    SMALLER    reduce using rule 58 (unaryListExp)
    GREATER    reduce using rule 58 (unaryListExp)
    SMALLEQ    reduce using rule 58 (unaryListExp)
    GREATEQ    reduce using rule 58 (unaryListExp)
    EQUALS     reduce using rule 58 (unaryListExp)
    DIFFERENT  reduce using rule 58 (unaryListExp)
    SEMIC      reduce using rule 58 (unaryListExp)


State 79

   35 ifStmt: IF PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 114
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 80

   38 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   39         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    assignExp      go to state 115
    simpleExp      go to state 116
    constOp        go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 81

   49 inOp: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 117


State 82

   50 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 172
    STRING      shift, and go to state 118
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 119
    constOp        go to state 182
    outConst       go to state 120
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 83

   51 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 172
    STRING      shift, and go to state 118
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 119
    constOp        go to state 182
    outConst       go to state 121
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 84

   40 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 122


State 85

   19 compoundStmt: STFUNC stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 123
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    primitiveStmt         go to state 88
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 86

   82 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 124


State 87

   13 funcDeclaration: TYPE ID PARENL $@3 PARENR STFUNC $@4 stmtList ENDFUNC •

    $end  reduce using rule 13 (funcDeclaration)
    TYPE  reduce using rule 13 (funcDeclaration)


State 88

   20 stmtList: stmtList primitiveStmt •

    ID          reduce using rule 20 (stmtList)
    TYPE        reduce using rule 20 (stmtList)
    NIL         reduce using rule 20 (stmtList)
    INTEGER     reduce using rule 20 (stmtList)
    DECIMAL     reduce using rule 20 (stmtList)
    ERRORTOKEN  reduce using rule 20 (stmtList)
    ADD         reduce using rule 20 (stmtList)
    SUB         reduce using rule 20 (stmtList)
    HEADLIST    reduce using rule 20 (stmtList)
    TAILLIST    reduce using rule 20 (stmtList)
    IF          reduce using rule 20 (stmtList)
    FOR         reduce using rule 20 (stmtList)
    READ        reduce using rule 20 (stmtList)
    WRITE       reduce using rule 20 (stmtList)
    WRITELN     reduce using rule 20 (stmtList)
    RETURN      reduce using rule 20 (stmtList)
    STFUNC      reduce using rule 20 (stmtList)
    ENDFUNC     reduce using rule 20 (stmtList)
    PARENL      reduce using rule 20 (stmtList)


State 89

   19 compoundStmt: STFUNC • stmtList ENDFUNC
   33 condStmt: ifStmt STFUNC • ENDFUNC
   34         | ifStmt STFUNC • ENDFUNC elseStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 125
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    stmtList              go to state 227
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 90

   31 condStmt: ifStmt primitiveStmt •
   32         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 126

    ID          reduce using rule 31 (condStmt)
    TYPE        reduce using rule 31 (condStmt)
    NIL         reduce using rule 31 (condStmt)
    INTEGER     reduce using rule 31 (condStmt)
    DECIMAL     reduce using rule 31 (condStmt)
    ERRORTOKEN  reduce using rule 31 (condStmt)
    ADD         reduce using rule 31 (condStmt)
    SUB         reduce using rule 31 (condStmt)
    HEADLIST    reduce using rule 31 (condStmt)
    TAILLIST    reduce using rule 31 (condStmt)
    IF          reduce using rule 31 (condStmt)
    FOR         reduce using rule 31 (condStmt)
    READ        reduce using rule 31 (condStmt)
    WRITE       reduce using rule 31 (condStmt)
    WRITELN     reduce using rule 31 (condStmt)
    RETURN      reduce using rule 31 (condStmt)
    STFUNC      reduce using rule 31 (condStmt)
    ENDFUNC     reduce using rule 31 (condStmt)
    PARENL      reduce using rule 31 (condStmt)

    elseStmt  go to state 127


State 91

   30 exprStmt: expression SEMIC •

    ID          reduce using rule 30 (exprStmt)
    TYPE        reduce using rule 30 (exprStmt)
    NIL         reduce using rule 30 (exprStmt)
    INTEGER     reduce using rule 30 (exprStmt)
    DECIMAL     reduce using rule 30 (exprStmt)
    ERRORTOKEN  reduce using rule 30 (exprStmt)
    ADD         reduce using rule 30 (exprStmt)
    SUB         reduce using rule 30 (exprStmt)
    HEADLIST    reduce using rule 30 (exprStmt)
    TAILLIST    reduce using rule 30 (exprStmt)
    IF          reduce using rule 30 (exprStmt)
    FOR         reduce using rule 30 (exprStmt)
    READ        reduce using rule 30 (exprStmt)
    WRITE       reduce using rule 30 (exprStmt)
    WRITELN     reduce using rule 30 (exprStmt)
    RETURN      reduce using rule 30 (exprStmt)
    STFUNC      reduce using rule 30 (exprStmt)
    ENDFUNC     reduce using rule 30 (exprStmt)
    PARENL      reduce using rule 30 (exprStmt)


State 92

   61 binLogicalOp: OR •

    SMALLER    reduce using rule 61 (binLogicalOp)
    GREATER    reduce using rule 61 (binLogicalOp)
    SMALLEQ    reduce using rule 61 (binLogicalOp)
    GREATEQ    reduce using rule 61 (binLogicalOp)
    EQUALS     reduce using rule 61 (binLogicalOp)
    DIFFERENT  reduce using rule 61 (binLogicalOp)


State 93

   62 binLogicalOp: AND •

    SMALLER    reduce using rule 62 (binLogicalOp)
    GREATER    reduce using rule 62 (binLogicalOp)
    SMALLEQ    reduce using rule 62 (binLogicalOp)
    GREATEQ    reduce using rule 62 (binLogicalOp)
    EQUALS     reduce using rule 62 (binLogicalOp)
    DIFFERENT  reduce using rule 62 (binLogicalOp)


State 94

   59 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    shift, and go to state 228
    GREATER    shift, and go to state 229
    SMALLEQ    shift, and go to state 230
    GREATEQ    shift, and go to state 231
    EQUALS     shift, and go to state 232
    DIFFERENT  shift, and go to state 233

    relationalOp  go to state 128


State 95

   65 relationalOp: SMALLER •

    ID          reduce using rule 65 (relationalOp)
    NIL         reduce using rule 65 (relationalOp)
    INTEGER     reduce using rule 65 (relationalOp)
    DECIMAL     reduce using rule 65 (relationalOp)
    ERRORTOKEN  reduce using rule 65 (relationalOp)
    ADD         reduce using rule 65 (relationalOp)
    SUB         reduce using rule 65 (relationalOp)
    HEADLIST    reduce using rule 65 (relationalOp)
    TAILLIST    reduce using rule 65 (relationalOp)
    PARENL      reduce using rule 65 (relationalOp)


State 96

   66 relationalOp: GREATER •

    ID          reduce using rule 66 (relationalOp)
    NIL         reduce using rule 66 (relationalOp)
    INTEGER     reduce using rule 66 (relationalOp)
    DECIMAL     reduce using rule 66 (relationalOp)
    ERRORTOKEN  reduce using rule 66 (relationalOp)
    ADD         reduce using rule 66 (relationalOp)
    SUB         reduce using rule 66 (relationalOp)
    HEADLIST    reduce using rule 66 (relationalOp)
    TAILLIST    reduce using rule 66 (relationalOp)
    PARENL      reduce using rule 66 (relationalOp)


State 97

   67 relationalOp: SMALLEQ •

    ID          reduce using rule 67 (relationalOp)
    NIL         reduce using rule 67 (relationalOp)
    INTEGER     reduce using rule 67 (relationalOp)
    DECIMAL     reduce using rule 67 (relationalOp)
    ERRORTOKEN  reduce using rule 67 (relationalOp)
    ADD         reduce using rule 67 (relationalOp)
    SUB         reduce using rule 67 (relationalOp)
    HEADLIST    reduce using rule 67 (relationalOp)
    TAILLIST    reduce using rule 67 (relationalOp)
    PARENL      reduce using rule 67 (relationalOp)


State 98

   68 relationalOp: GREATEQ •

    ID          reduce using rule 68 (relationalOp)
    NIL         reduce using rule 68 (relationalOp)
    INTEGER     reduce using rule 68 (relationalOp)
    DECIMAL     reduce using rule 68 (relationalOp)
    ERRORTOKEN  reduce using rule 68 (relationalOp)
    ADD         reduce using rule 68 (relationalOp)
    SUB         reduce using rule 68 (relationalOp)
    HEADLIST    reduce using rule 68 (relationalOp)
    TAILLIST    reduce using rule 68 (relationalOp)
    PARENL      reduce using rule 68 (relationalOp)


State 99

   69 relationalOp: EQUALS •

    ID          reduce using rule 69 (relationalOp)
    NIL         reduce using rule 69 (relationalOp)
    INTEGER     reduce using rule 69 (relationalOp)
    DECIMAL     reduce using rule 69 (relationalOp)
    ERRORTOKEN  reduce using rule 69 (relationalOp)
    ADD         reduce using rule 69 (relationalOp)
    SUB         reduce using rule 69 (relationalOp)
    HEADLIST    reduce using rule 69 (relationalOp)
    TAILLIST    reduce using rule 69 (relationalOp)
    PARENL      reduce using rule 69 (relationalOp)


State 100

   70 relationalOp: DIFFERENT •

    ID          reduce using rule 70 (relationalOp)
    NIL         reduce using rule 70 (relationalOp)
    INTEGER     reduce using rule 70 (relationalOp)
    DECIMAL     reduce using rule 70 (relationalOp)
    ERRORTOKEN  reduce using rule 70 (relationalOp)
    ADD         reduce using rule 70 (relationalOp)
    SUB         reduce using rule 70 (relationalOp)
    HEADLIST    reduce using rule 70 (relationalOp)
    TAILLIST    reduce using rule 70 (relationalOp)
    PARENL      reduce using rule 70 (relationalOp)


State 101

   63 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 74
    NIL         shift, and go to state 165
    INTEGER     shift, and go to state 166
    DECIMAL     shift, and go to state 167
    ERRORTOKEN  shift, and go to state 168
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 169

    constOp       go to state 170
    unaryListExp  go to state 63
    sumExp        go to state 129
    mulExp        go to state 67
    factor        go to state 130
    fCall         go to state 171


State 102

   71 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 74
    NIL         shift, and go to state 165
    INTEGER     shift, and go to state 166
    DECIMAL     shift, and go to state 167
    ERRORTOKEN  shift, and go to state 168
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 169

    constOp       go to state 170
    unaryListExp  go to state 63
    mulExp        go to state 131
    factor        go to state 130
    fCall         go to state 171


State 103

   72 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 74
    NIL         shift, and go to state 165
    INTEGER     shift, and go to state 166
    DECIMAL     shift, and go to state 167
    ERRORTOKEN  shift, and go to state 168
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 169

    constOp       go to state 170
    unaryListExp  go to state 63
    mulExp        go to state 132
    factor        go to state 130
    fCall         go to state 171


State 104

   74 mulExp: mulExp MULT • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 165
    INTEGER     shift, and go to state 166
    DECIMAL     shift, and go to state 167
    ERRORTOKEN  shift, and go to state 168
    PARENL      shift, and go to state 169

    constOp  go to state 170
    factor   go to state 133
    fCall    go to state 171


State 105

   75 mulExp: mulExp DIV • factor

    ID          shift, and go to state 74
    NIL         shift, and go to state 165
    INTEGER     shift, and go to state 166
    DECIMAL     shift, and go to state 167
    ERRORTOKEN  shift, and go to state 168
    PARENL      shift, and go to state 169

    constOp  go to state 170
    factor   go to state 134
    fCall    go to state 171


State 106

   54 binListExp: factor APPEND • factor

    ID          shift, and go to state 234
    NIL         shift, and go to state 235
    INTEGER     shift, and go to state 236
    DECIMAL     shift, and go to state 237
    ERRORTOKEN  shift, and go to state 238
    PARENL      shift, and go to state 239

    constOp  go to state 240
    factor   go to state 135
    fCall    go to state 241


State 107

   56 binListExp: factor FILTER • factor

    ID          shift, and go to state 234
    NIL         shift, and go to state 235
    INTEGER     shift, and go to state 236
    DECIMAL     shift, and go to state 237
    ERRORTOKEN  shift, and go to state 238
    PARENL      shift, and go to state 239

    constOp  go to state 240
    factor   go to state 136
    fCall    go to state 241


State 108

   55 binListExp: factor MAP • factor

    ID          shift, and go to state 234
    NIL         shift, and go to state 235
    INTEGER     shift, and go to state 236
    DECIMAL     shift, and go to state 237
    ERRORTOKEN  shift, and go to state 238
    PARENL      shift, and go to state 239

    constOp  go to state 240
    factor   go to state 137
    fCall    go to state 241


State 109

   10 funcDeclaration: TYPE ID PARENL $@1 params PARENR STFUNC $@2 stmtList ENDFUNC •

    $end  reduce using rule 10 (funcDeclaration)
    TYPE  reduce using rule 10 (funcDeclaration)


State 110

   43 assignExp: ID ASSIGN expression •

    SEMIC  reduce using rule 43 (assignExp)


State 111

   86 fCall: ID PARENL PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    APPEND     reduce using rule 86 (fCall)
    FILTER     reduce using rule 86 (fCall)
    MAP        reduce using rule 86 (fCall)
    SEMIC      reduce using rule 86 (fCall)


State 112

   88 callParams: simpleExp •

    COMMA   reduce using rule 88 (callParams)
    PARENR  reduce using rule 88 (callParams)


State 113

   85 fCall: ID PARENL callParams • PARENR
   87 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 138
    PARENR  shift, and go to state 139


State 114

   35 ifStmt: IF PARENL simpleExp • PARENR

    PARENR  shift, and go to state 140


State 115

   38 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 141


State 116

   39 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 142


State 117

   49 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 143


State 118

   52 outConst: STRING •

    PARENR  reduce using rule 52 (outConst)


State 119

   53 outConst: simpleExp •

    PARENR  reduce using rule 53 (outConst)


State 120

   50 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 144


State 121

   51 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 145


State 122

   40 returnStmt: RETURN expression SEMIC •

    ID          reduce using rule 40 (returnStmt)
    TYPE        reduce using rule 40 (returnStmt)
    NIL         reduce using rule 40 (returnStmt)
    INTEGER     reduce using rule 40 (returnStmt)
    DECIMAL     reduce using rule 40 (returnStmt)
    ERRORTOKEN  reduce using rule 40 (returnStmt)
    ADD         reduce using rule 40 (returnStmt)
    SUB         reduce using rule 40 (returnStmt)
    HEADLIST    reduce using rule 40 (returnStmt)
    TAILLIST    reduce using rule 40 (returnStmt)
    IF          reduce using rule 40 (returnStmt)
    FOR         reduce using rule 40 (returnStmt)
    READ        reduce using rule 40 (returnStmt)
    WRITE       reduce using rule 40 (returnStmt)
    WRITELN     reduce using rule 40 (returnStmt)
    RETURN      reduce using rule 40 (returnStmt)
    STFUNC      reduce using rule 40 (returnStmt)
    ENDFUNC     reduce using rule 40 (returnStmt)
    PARENL      reduce using rule 40 (returnStmt)


State 123

   19 compoundStmt: STFUNC stmtList ENDFUNC •

    ID          reduce using rule 19 (compoundStmt)
    TYPE        reduce using rule 19 (compoundStmt)
    NIL         reduce using rule 19 (compoundStmt)
    INTEGER     reduce using rule 19 (compoundStmt)
    DECIMAL     reduce using rule 19 (compoundStmt)
    ERRORTOKEN  reduce using rule 19 (compoundStmt)
    ADD         reduce using rule 19 (compoundStmt)
    SUB         reduce using rule 19 (compoundStmt)
    HEADLIST    reduce using rule 19 (compoundStmt)
    TAILLIST    reduce using rule 19 (compoundStmt)
    IF          reduce using rule 19 (compoundStmt)
    FOR         reduce using rule 19 (compoundStmt)
    READ        reduce using rule 19 (compoundStmt)
    WRITE       reduce using rule 19 (compoundStmt)
    WRITELN     reduce using rule 19 (compoundStmt)
    RETURN      reduce using rule 19 (compoundStmt)
    STFUNC      reduce using rule 19 (compoundStmt)
    ENDFUNC     reduce using rule 19 (compoundStmt)
    PARENL      reduce using rule 19 (compoundStmt)


State 124

   82 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    APPEND     reduce using rule 82 (factor)
    FILTER     reduce using rule 82 (factor)
    MAP        reduce using rule 82 (factor)
    SEMIC      reduce using rule 82 (factor)


State 125

   33 condStmt: ifStmt STFUNC ENDFUNC •
   34         | ifStmt STFUNC ENDFUNC • elseStmt

    ELSE  shift, and go to state 126

    ID          reduce using rule 33 (condStmt)
    TYPE        reduce using rule 33 (condStmt)
    NIL         reduce using rule 33 (condStmt)
    INTEGER     reduce using rule 33 (condStmt)
    DECIMAL     reduce using rule 33 (condStmt)
    ERRORTOKEN  reduce using rule 33 (condStmt)
    ADD         reduce using rule 33 (condStmt)
    SUB         reduce using rule 33 (condStmt)
    HEADLIST    reduce using rule 33 (condStmt)
    TAILLIST    reduce using rule 33 (condStmt)
    IF          reduce using rule 33 (condStmt)
    FOR         reduce using rule 33 (condStmt)
    READ        reduce using rule 33 (condStmt)
    WRITE       reduce using rule 33 (condStmt)
    WRITELN     reduce using rule 33 (condStmt)
    RETURN      reduce using rule 33 (condStmt)
    STFUNC      reduce using rule 33 (condStmt)
    ENDFUNC     reduce using rule 33 (condStmt)
    PARENL      reduce using rule 33 (condStmt)

    elseStmt  go to state 146


State 126

   37 elseStmt: ELSE • $@5 primitiveStmt

    ID          reduce using rule 36 ($@5)
    TYPE        reduce using rule 36 ($@5)
    NIL         reduce using rule 36 ($@5)
    INTEGER     reduce using rule 36 ($@5)
    DECIMAL     reduce using rule 36 ($@5)
    ERRORTOKEN  reduce using rule 36 ($@5)
    ADD         reduce using rule 36 ($@5)
    SUB         reduce using rule 36 ($@5)
    HEADLIST    reduce using rule 36 ($@5)
    TAILLIST    reduce using rule 36 ($@5)
    IF          reduce using rule 36 ($@5)
    FOR         reduce using rule 36 ($@5)
    READ        reduce using rule 36 ($@5)
    WRITE       reduce using rule 36 ($@5)
    WRITELN     reduce using rule 36 ($@5)
    RETURN      reduce using rule 36 ($@5)
    STFUNC      reduce using rule 36 ($@5)
    PARENL      reduce using rule 36 ($@5)

    $@5  go to state 147


State 127

   32 condStmt: ifStmt primitiveStmt elseStmt •

    ID          reduce using rule 32 (condStmt)
    TYPE        reduce using rule 32 (condStmt)
    NIL         reduce using rule 32 (condStmt)
    INTEGER     reduce using rule 32 (condStmt)
    DECIMAL     reduce using rule 32 (condStmt)
    ERRORTOKEN  reduce using rule 32 (condStmt)
    ADD         reduce using rule 32 (condStmt)
    SUB         reduce using rule 32 (condStmt)
    HEADLIST    reduce using rule 32 (condStmt)
    TAILLIST    reduce using rule 32 (condStmt)
    IF          reduce using rule 32 (condStmt)
    FOR         reduce using rule 32 (condStmt)
    READ        reduce using rule 32 (condStmt)
    WRITE       reduce using rule 32 (condStmt)
    WRITELN     reduce using rule 32 (condStmt)
    RETURN      reduce using rule 32 (condStmt)
    STFUNC      reduce using rule 32 (condStmt)
    ENDFUNC     reduce using rule 32 (condStmt)
    PARENL      reduce using rule 32 (condStmt)


State 128

   59 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR     reduce using rule 59 (binLogicalExp)
    AND    reduce using rule 59 (binLogicalExp)
    SEMIC  reduce using rule 59 (binLogicalExp)


State 129

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • ADD mulExp
   72       | sumExp • SUB mulExp

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    OR         reduce using rule 63 (relationalExp)
    AND        reduce using rule 63 (relationalExp)
    SMALLER    reduce using rule 63 (relationalExp)
    GREATER    reduce using rule 63 (relationalExp)
    SMALLEQ    reduce using rule 63 (relationalExp)
    GREATEQ    reduce using rule 63 (relationalExp)
    EQUALS     reduce using rule 63 (relationalExp)
    DIFFERENT  reduce using rule 63 (relationalExp)
    SEMIC      reduce using rule 63 (relationalExp)


State 130

   76 mulExp: factor •

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    SEMIC      reduce using rule 76 (mulExp)


State 131

   71 sumExp: sumExp ADD mulExp •
   74 mulExp: mulExp • MULT factor
   75       | mulExp • DIV factor

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    ADD        reduce using rule 71 (sumExp)
    SUB        reduce using rule 71 (sumExp)
    OR         reduce using rule 71 (sumExp)
    AND        reduce using rule 71 (sumExp)
    SMALLER    reduce using rule 71 (sumExp)
    GREATER    reduce using rule 71 (sumExp)
    SMALLEQ    reduce using rule 71 (sumExp)
    GREATEQ    reduce using rule 71 (sumExp)
    EQUALS     reduce using rule 71 (sumExp)
    DIFFERENT  reduce using rule 71 (sumExp)
    SEMIC      reduce using rule 71 (sumExp)


State 132

   72 sumExp: sumExp SUB mulExp •
   74 mulExp: mulExp • MULT factor
   75       | mulExp • DIV factor

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105

    ADD        reduce using rule 72 (sumExp)
    SUB        reduce using rule 72 (sumExp)
    OR         reduce using rule 72 (sumExp)
    AND        reduce using rule 72 (sumExp)
    SMALLER    reduce using rule 72 (sumExp)
    GREATER    reduce using rule 72 (sumExp)
    SMALLEQ    reduce using rule 72 (sumExp)
    GREATEQ    reduce using rule 72 (sumExp)
    EQUALS     reduce using rule 72 (sumExp)
    DIFFERENT  reduce using rule 72 (sumExp)
    SEMIC      reduce using rule 72 (sumExp)


State 133

   74 mulExp: mulExp MULT factor •

    ADD        reduce using rule 74 (mulExp)
    SUB        reduce using rule 74 (mulExp)
    MULT       reduce using rule 74 (mulExp)
    DIV        reduce using rule 74 (mulExp)
    OR         reduce using rule 74 (mulExp)
    AND        reduce using rule 74 (mulExp)
    SMALLER    reduce using rule 74 (mulExp)
    GREATER    reduce using rule 74 (mulExp)
    SMALLEQ    reduce using rule 74 (mulExp)
    GREATEQ    reduce using rule 74 (mulExp)
    EQUALS     reduce using rule 74 (mulExp)
    DIFFERENT  reduce using rule 74 (mulExp)
    SEMIC      reduce using rule 74 (mulExp)


State 134

   75 mulExp: mulExp DIV factor •

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    SEMIC      reduce using rule 75 (mulExp)


State 135

   54 binListExp: factor APPEND factor •

    SEMIC  reduce using rule 54 (binListExp)


State 136

   56 binListExp: factor FILTER factor •

    SEMIC  reduce using rule 56 (binListExp)


State 137

   55 binListExp: factor MAP factor •

    SEMIC  reduce using rule 55 (binListExp)


State 138

   87 callParams: callParams COMMA • simpleExp

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216

    simpleExp      go to state 148
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225


State 139

   85 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 85 (fCall)
    SUB        reduce using rule 85 (fCall)
    MULT       reduce using rule 85 (fCall)
    DIV        reduce using rule 85 (fCall)
    OR         reduce using rule 85 (fCall)
    AND        reduce using rule 85 (fCall)
    SMALLER    reduce using rule 85 (fCall)
    GREATER    reduce using rule 85 (fCall)
    SMALLEQ    reduce using rule 85 (fCall)
    GREATEQ    reduce using rule 85 (fCall)
    EQUALS     reduce using rule 85 (fCall)
    DIFFERENT  reduce using rule 85 (fCall)
    APPEND     reduce using rule 85 (fCall)
    FILTER     reduce using rule 85 (fCall)
    MAP        reduce using rule 85 (fCall)
    SEMIC      reduce using rule 85 (fCall)


State 140

   35 ifStmt: IF PARENL simpleExp PARENR •

    ID          reduce using rule 35 (ifStmt)
    TYPE        reduce using rule 35 (ifStmt)
    NIL         reduce using rule 35 (ifStmt)
    INTEGER     reduce using rule 35 (ifStmt)
    DECIMAL     reduce using rule 35 (ifStmt)
    ERRORTOKEN  reduce using rule 35 (ifStmt)
    ADD         reduce using rule 35 (ifStmt)
    SUB         reduce using rule 35 (ifStmt)
    HEADLIST    reduce using rule 35 (ifStmt)
    TAILLIST    reduce using rule 35 (ifStmt)
    IF          reduce using rule 35 (ifStmt)
    FOR         reduce using rule 35 (ifStmt)
    READ        reduce using rule 35 (ifStmt)
    WRITE       reduce using rule 35 (ifStmt)
    WRITELN     reduce using rule 35 (ifStmt)
    RETURN      reduce using rule 35 (ifStmt)
    STFUNC      reduce using rule 35 (ifStmt)
    PARENL      reduce using rule 35 (ifStmt)


State 141

   38 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 242
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    simpleExp      go to state 149
    constOp        go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 142

   39 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 242
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    simpleExp      go to state 150
    constOp        go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 143

   49 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 151


State 144

   50 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 152


State 145

   51 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 153


State 146

   34 condStmt: ifStmt STFUNC ENDFUNC elseStmt •

    ID          reduce using rule 34 (condStmt)
    TYPE        reduce using rule 34 (condStmt)
    NIL         reduce using rule 34 (condStmt)
    INTEGER     reduce using rule 34 (condStmt)
    DECIMAL     reduce using rule 34 (condStmt)
    ERRORTOKEN  reduce using rule 34 (condStmt)
    ADD         reduce using rule 34 (condStmt)
    SUB         reduce using rule 34 (condStmt)
    HEADLIST    reduce using rule 34 (condStmt)
    TAILLIST    reduce using rule 34 (condStmt)
    IF          reduce using rule 34 (condStmt)
    FOR         reduce using rule 34 (condStmt)
    READ        reduce using rule 34 (condStmt)
    WRITE       reduce using rule 34 (condStmt)
    WRITELN     reduce using rule 34 (condStmt)
    RETURN      reduce using rule 34 (condStmt)
    STFUNC      reduce using rule 34 (condStmt)
    ENDFUNC     reduce using rule 34 (condStmt)
    PARENL      reduce using rule 34 (condStmt)


State 147

   37 elseStmt: ELSE $@5 • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    primitiveStmt         go to state 154
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 148

   87 callParams: callParams COMMA simpleExp •

    COMMA   reduce using rule 87 (callParams)
    PARENR  reduce using rule 87 (callParams)


State 149

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 155


State 150

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 156


State 151

   49 inOp: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 49 (inOp)
    TYPE        reduce using rule 49 (inOp)
    NIL         reduce using rule 49 (inOp)
    INTEGER     reduce using rule 49 (inOp)
    DECIMAL     reduce using rule 49 (inOp)
    ERRORTOKEN  reduce using rule 49 (inOp)
    ADD         reduce using rule 49 (inOp)
    SUB         reduce using rule 49 (inOp)
    HEADLIST    reduce using rule 49 (inOp)
    TAILLIST    reduce using rule 49 (inOp)
    IF          reduce using rule 49 (inOp)
    FOR         reduce using rule 49 (inOp)
    READ        reduce using rule 49 (inOp)
    WRITE       reduce using rule 49 (inOp)
    WRITELN     reduce using rule 49 (inOp)
    RETURN      reduce using rule 49 (inOp)
    STFUNC      reduce using rule 49 (inOp)
    ENDFUNC     reduce using rule 49 (inOp)
    PARENL      reduce using rule 49 (inOp)


State 152

   50 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID          reduce using rule 50 (outOp)
    TYPE        reduce using rule 50 (outOp)
    NIL         reduce using rule 50 (outOp)
    INTEGER     reduce using rule 50 (outOp)
    DECIMAL     reduce using rule 50 (outOp)
    ERRORTOKEN  reduce using rule 50 (outOp)
    ADD         reduce using rule 50 (outOp)
    SUB         reduce using rule 50 (outOp)
    HEADLIST    reduce using rule 50 (outOp)
    TAILLIST    reduce using rule 50 (outOp)
    IF          reduce using rule 50 (outOp)
    FOR         reduce using rule 50 (outOp)
    READ        reduce using rule 50 (outOp)
    WRITE       reduce using rule 50 (outOp)
    WRITELN     reduce using rule 50 (outOp)
    RETURN      reduce using rule 50 (outOp)
    STFUNC      reduce using rule 50 (outOp)
    ENDFUNC     reduce using rule 50 (outOp)
    PARENL      reduce using rule 50 (outOp)


State 153

   51 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID          reduce using rule 51 (outOp)
    TYPE        reduce using rule 51 (outOp)
    NIL         reduce using rule 51 (outOp)
    INTEGER     reduce using rule 51 (outOp)
    DECIMAL     reduce using rule 51 (outOp)
    ERRORTOKEN  reduce using rule 51 (outOp)
    ADD         reduce using rule 51 (outOp)
    SUB         reduce using rule 51 (outOp)
    HEADLIST    reduce using rule 51 (outOp)
    TAILLIST    reduce using rule 51 (outOp)
    IF          reduce using rule 51 (outOp)
    FOR         reduce using rule 51 (outOp)
    READ        reduce using rule 51 (outOp)
    WRITE       reduce using rule 51 (outOp)
    WRITELN     reduce using rule 51 (outOp)
    RETURN      reduce using rule 51 (outOp)
    STFUNC      reduce using rule 51 (outOp)
    ENDFUNC     reduce using rule 51 (outOp)
    PARENL      reduce using rule 51 (outOp)


State 154

   37 elseStmt: ELSE $@5 primitiveStmt •

    ID          reduce using rule 37 (elseStmt)
    TYPE        reduce using rule 37 (elseStmt)
    NIL         reduce using rule 37 (elseStmt)
    INTEGER     reduce using rule 37 (elseStmt)
    DECIMAL     reduce using rule 37 (elseStmt)
    ERRORTOKEN  reduce using rule 37 (elseStmt)
    ADD         reduce using rule 37 (elseStmt)
    SUB         reduce using rule 37 (elseStmt)
    HEADLIST    reduce using rule 37 (elseStmt)
    TAILLIST    reduce using rule 37 (elseStmt)
    IF          reduce using rule 37 (elseStmt)
    FOR         reduce using rule 37 (elseStmt)
    READ        reduce using rule 37 (elseStmt)
    WRITE       reduce using rule 37 (elseStmt)
    WRITELN     reduce using rule 37 (elseStmt)
    RETURN      reduce using rule 37 (elseStmt)
    STFUNC      reduce using rule 37 (elseStmt)
    ENDFUNC     reduce using rule 37 (elseStmt)
    PARENL      reduce using rule 37 (elseStmt)


State 155

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 157

    assignExp  go to state 158


State 156

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 157

    assignExp  go to state 159


State 157

   43 assignExp: ID • ASSIGN expression

    ASSIGN  shift, and go to state 243


State 158

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 160


State 159

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 161


State 160

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    primitiveStmt         go to state 162
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 161

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    primitiveStmt         go to state 163
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 162

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID          reduce using rule 38 (iterStmt)
    TYPE        reduce using rule 38 (iterStmt)
    NIL         reduce using rule 38 (iterStmt)
    INTEGER     reduce using rule 38 (iterStmt)
    DECIMAL     reduce using rule 38 (iterStmt)
    ERRORTOKEN  reduce using rule 38 (iterStmt)
    ADD         reduce using rule 38 (iterStmt)
    SUB         reduce using rule 38 (iterStmt)
    HEADLIST    reduce using rule 38 (iterStmt)
    TAILLIST    reduce using rule 38 (iterStmt)
    IF          reduce using rule 38 (iterStmt)
    FOR         reduce using rule 38 (iterStmt)
    READ        reduce using rule 38 (iterStmt)
    WRITE       reduce using rule 38 (iterStmt)
    WRITELN     reduce using rule 38 (iterStmt)
    RETURN      reduce using rule 38 (iterStmt)
    STFUNC      reduce using rule 38 (iterStmt)
    ENDFUNC     reduce using rule 38 (iterStmt)
    PARENL      reduce using rule 38 (iterStmt)


State 163

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID          reduce using rule 39 (iterStmt)
    TYPE        reduce using rule 39 (iterStmt)
    NIL         reduce using rule 39 (iterStmt)
    INTEGER     reduce using rule 39 (iterStmt)
    DECIMAL     reduce using rule 39 (iterStmt)
    ERRORTOKEN  reduce using rule 39 (iterStmt)
    ADD         reduce using rule 39 (iterStmt)
    SUB         reduce using rule 39 (iterStmt)
    HEADLIST    reduce using rule 39 (iterStmt)
    TAILLIST    reduce using rule 39 (iterStmt)
    IF          reduce using rule 39 (iterStmt)
    FOR         reduce using rule 39 (iterStmt)
    READ        reduce using rule 39 (iterStmt)
    WRITE       reduce using rule 39 (iterStmt)
    WRITELN     reduce using rule 39 (iterStmt)
    RETURN      reduce using rule 39 (iterStmt)
    STFUNC      reduce using rule 39 (iterStmt)
    ENDFUNC     reduce using rule 39 (iterStmt)
    PARENL      reduce using rule 39 (iterStmt)


State 164

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 244


State 165

   48 constOp: NIL •

    ADD        reduce using rule 48 (constOp)
    SUB        reduce using rule 48 (constOp)
    MULT       reduce using rule 48 (constOp)
    DIV        reduce using rule 48 (constOp)
    OR         reduce using rule 48 (constOp)
    AND        reduce using rule 48 (constOp)
    SMALLER    reduce using rule 48 (constOp)
    GREATER    reduce using rule 48 (constOp)
    SMALLEQ    reduce using rule 48 (constOp)
    GREATEQ    reduce using rule 48 (constOp)
    EQUALS     reduce using rule 48 (constOp)
    DIFFERENT  reduce using rule 48 (constOp)
    SEMIC      reduce using rule 48 (constOp)


State 166

   46 constOp: INTEGER •

    ADD        reduce using rule 46 (constOp)
    SUB        reduce using rule 46 (constOp)
    MULT       reduce using rule 46 (constOp)
    DIV        reduce using rule 46 (constOp)
    OR         reduce using rule 46 (constOp)
    AND        reduce using rule 46 (constOp)
    SMALLER    reduce using rule 46 (constOp)
    GREATER    reduce using rule 46 (constOp)
    SMALLEQ    reduce using rule 46 (constOp)
    GREATEQ    reduce using rule 46 (constOp)
    EQUALS     reduce using rule 46 (constOp)
    DIFFERENT  reduce using rule 46 (constOp)
    SEMIC      reduce using rule 46 (constOp)


State 167

   47 constOp: DECIMAL •

    ADD        reduce using rule 47 (constOp)
    SUB        reduce using rule 47 (constOp)
    MULT       reduce using rule 47 (constOp)
    DIV        reduce using rule 47 (constOp)
    OR         reduce using rule 47 (constOp)
    AND        reduce using rule 47 (constOp)
    SMALLER    reduce using rule 47 (constOp)
    GREATER    reduce using rule 47 (constOp)
    SMALLEQ    reduce using rule 47 (constOp)
    GREATEQ    reduce using rule 47 (constOp)
    EQUALS     reduce using rule 47 (constOp)
    DIFFERENT  reduce using rule 47 (constOp)
    SEMIC      reduce using rule 47 (constOp)


State 168

   84 factor: ERRORTOKEN •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    SEMIC      reduce using rule 84 (factor)


State 169

   82 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 245
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 170

   83 factor: constOp •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    SEMIC      reduce using rule 83 (factor)


State 171

   81 factor: fCall •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    SEMIC      reduce using rule 81 (factor)


State 172

   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    PARENL  shift, and go to state 246

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    APPEND     reduce using rule 80 (factor)
    FILTER     reduce using rule 80 (factor)
    MAP        reduce using rule 80 (factor)
    PARENR     reduce using rule 80 (factor)


State 173

   48 constOp: NIL •

    ADD        reduce using rule 48 (constOp)
    SUB        reduce using rule 48 (constOp)
    MULT       reduce using rule 48 (constOp)
    DIV        reduce using rule 48 (constOp)
    OR         reduce using rule 48 (constOp)
    AND        reduce using rule 48 (constOp)
    SMALLER    reduce using rule 48 (constOp)
    GREATER    reduce using rule 48 (constOp)
    SMALLEQ    reduce using rule 48 (constOp)
    GREATEQ    reduce using rule 48 (constOp)
    EQUALS     reduce using rule 48 (constOp)
    DIFFERENT  reduce using rule 48 (constOp)
    APPEND     reduce using rule 48 (constOp)
    FILTER     reduce using rule 48 (constOp)
    MAP        reduce using rule 48 (constOp)
    PARENR     reduce using rule 48 (constOp)


State 174

   46 constOp: INTEGER •

    ADD        reduce using rule 46 (constOp)
    SUB        reduce using rule 46 (constOp)
    MULT       reduce using rule 46 (constOp)
    DIV        reduce using rule 46 (constOp)
    OR         reduce using rule 46 (constOp)
    AND        reduce using rule 46 (constOp)
    SMALLER    reduce using rule 46 (constOp)
    GREATER    reduce using rule 46 (constOp)
    SMALLEQ    reduce using rule 46 (constOp)
    GREATEQ    reduce using rule 46 (constOp)
    EQUALS     reduce using rule 46 (constOp)
    DIFFERENT  reduce using rule 46 (constOp)
    APPEND     reduce using rule 46 (constOp)
    FILTER     reduce using rule 46 (constOp)
    MAP        reduce using rule 46 (constOp)
    PARENR     reduce using rule 46 (constOp)


State 175

   47 constOp: DECIMAL •

    ADD        reduce using rule 47 (constOp)
    SUB        reduce using rule 47 (constOp)
    MULT       reduce using rule 47 (constOp)
    DIV        reduce using rule 47 (constOp)
    OR         reduce using rule 47 (constOp)
    AND        reduce using rule 47 (constOp)
    SMALLER    reduce using rule 47 (constOp)
    GREATER    reduce using rule 47 (constOp)
    SMALLEQ    reduce using rule 47 (constOp)
    GREATEQ    reduce using rule 47 (constOp)
    EQUALS     reduce using rule 47 (constOp)
    DIFFERENT  reduce using rule 47 (constOp)
    APPEND     reduce using rule 47 (constOp)
    FILTER     reduce using rule 47 (constOp)
    MAP        reduce using rule 47 (constOp)
    PARENR     reduce using rule 47 (constOp)


State 176

   84 factor: ERRORTOKEN •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    APPEND     reduce using rule 84 (factor)
    FILTER     reduce using rule 84 (factor)
    MAP        reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 177

   77 mulExp: ADD • factor

    ID          shift, and go to state 247
    NIL         shift, and go to state 248
    INTEGER     shift, and go to state 249
    DECIMAL     shift, and go to state 250
    ERRORTOKEN  shift, and go to state 251
    PARENL      shift, and go to state 252

    constOp  go to state 253
    factor   go to state 254
    fCall    go to state 255


State 178

   78 mulExp: SUB • factor

    ID          shift, and go to state 247
    NIL         shift, and go to state 248
    INTEGER     shift, and go to state 249
    DECIMAL     shift, and go to state 250
    ERRORTOKEN  shift, and go to state 251
    PARENL      shift, and go to state 252

    constOp  go to state 253
    factor   go to state 256
    fCall    go to state 255


State 179

   57 unaryListExp: HEADLIST • factor

    ID          shift, and go to state 247
    NIL         shift, and go to state 248
    INTEGER     shift, and go to state 249
    DECIMAL     shift, and go to state 250
    ERRORTOKEN  shift, and go to state 251
    PARENL      shift, and go to state 252

    constOp  go to state 253
    factor   go to state 257
    fCall    go to state 255


State 180

   58 unaryListExp: TAILLIST • factor

    ID          shift, and go to state 247
    NIL         shift, and go to state 248
    INTEGER     shift, and go to state 249
    DECIMAL     shift, and go to state 250
    ERRORTOKEN  shift, and go to state 251
    PARENL      shift, and go to state 252

    constOp  go to state 253
    factor   go to state 258
    fCall    go to state 255


State 181

   82 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 259
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 182

   83 factor: constOp •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    APPEND     reduce using rule 83 (factor)
    FILTER     reduce using rule 83 (factor)
    MAP        reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 183

   45 simpleExp: binListExp •

    PARENR  reduce using rule 45 (simpleExp)


State 184

   79 mulExp: unaryListExp •

    ADD        reduce using rule 79 (mulExp)
    SUB        reduce using rule 79 (mulExp)
    MULT       reduce using rule 79 (mulExp)
    DIV        reduce using rule 79 (mulExp)
    OR         reduce using rule 79 (mulExp)
    AND        reduce using rule 79 (mulExp)
    SMALLER    reduce using rule 79 (mulExp)
    GREATER    reduce using rule 79 (mulExp)
    SMALLEQ    reduce using rule 79 (mulExp)
    GREATEQ    reduce using rule 79 (mulExp)
    EQUALS     reduce using rule 79 (mulExp)
    DIFFERENT  reduce using rule 79 (mulExp)
    PARENR     reduce using rule 79 (mulExp)


State 185

   44 simpleExp: binLogicalExp •
   59 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   shift, and go to state 92
    AND  shift, and go to state 93

    PARENR  reduce using rule 44 (simpleExp)

    binLogicalOp  go to state 260


State 186

   60 binLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 95
    GREATER    shift, and go to state 96
    SMALLEQ    shift, and go to state 97
    GREATEQ    shift, and go to state 98
    EQUALS     shift, and go to state 99
    DIFFERENT  shift, and go to state 100

    OR      reduce using rule 60 (binLogicalExp)
    AND     reduce using rule 60 (binLogicalExp)
    PARENR  reduce using rule 60 (binLogicalExp)

    relationalOp  go to state 261


State 187

   64 relationalExp: sumExp •
   71 sumExp: sumExp • ADD mulExp
   72       | sumExp • SUB mulExp

    ADD  shift, and go to state 262
    SUB  shift, and go to state 263

    OR         reduce using rule 64 (relationalExp)
    AND        reduce using rule 64 (relationalExp)
    SMALLER    reduce using rule 64 (relationalExp)
    GREATER    reduce using rule 64 (relationalExp)
    SMALLEQ    reduce using rule 64 (relationalExp)
    GREATEQ    reduce using rule 64 (relationalExp)
    EQUALS     reduce using rule 64 (relationalExp)
    DIFFERENT  reduce using rule 64 (relationalExp)
    PARENR     reduce using rule 64 (relationalExp)


State 188

   73 sumExp: mulExp •
   74 mulExp: mulExp • MULT factor
   75       | mulExp • DIV factor

    MULT  shift, and go to state 264
    DIV   shift, and go to state 265

    ADD        reduce using rule 73 (sumExp)
    SUB        reduce using rule 73 (sumExp)
    OR         reduce using rule 73 (sumExp)
    AND        reduce using rule 73 (sumExp)
    SMALLER    reduce using rule 73 (sumExp)
    GREATER    reduce using rule 73 (sumExp)
    SMALLEQ    reduce using rule 73 (sumExp)
    GREATEQ    reduce using rule 73 (sumExp)
    EQUALS     reduce using rule 73 (sumExp)
    DIFFERENT  reduce using rule 73 (sumExp)
    PARENR     reduce using rule 73 (sumExp)


State 189

   54 binListExp: factor • APPEND factor
   55           | factor • MAP factor
   56           | factor • FILTER factor
   76 mulExp: factor •

    APPEND  shift, and go to state 266
    FILTER  shift, and go to state 267
    MAP     shift, and go to state 268

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    PARENR     reduce using rule 76 (mulExp)


State 190

   81 factor: fCall •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 191

   38 iterStmt: FOR • PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   39         | FOR • PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    PARENL  shift, and go to state 269


State 192

   49 inOp: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 270


State 193

   50 outOp: WRITE • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 271


State 194

   51 outOp: WRITELN • PARENL outConst PARENR SEMIC

    PARENL  shift, and go to state 272


State 195

   40 returnStmt: RETURN • expression SEMIC

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    expression     go to state 273
    assignExp      go to state 57
    simpleExp      go to state 58
    constOp        go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 196

   29 primitiveStmt: varDeclaration •

    ID          reduce using rule 29 (primitiveStmt)
    TYPE        reduce using rule 29 (primitiveStmt)
    NIL         reduce using rule 29 (primitiveStmt)
    INTEGER     reduce using rule 29 (primitiveStmt)
    DECIMAL     reduce using rule 29 (primitiveStmt)
    ERRORTOKEN  reduce using rule 29 (primitiveStmt)
    ELSE        reduce using rule 29 (primitiveStmt)
    ADD         reduce using rule 29 (primitiveStmt)
    SUB         reduce using rule 29 (primitiveStmt)
    HEADLIST    reduce using rule 29 (primitiveStmt)
    TAILLIST    reduce using rule 29 (primitiveStmt)
    IF          reduce using rule 29 (primitiveStmt)
    FOR         reduce using rule 29 (primitiveStmt)
    READ        reduce using rule 29 (primitiveStmt)
    WRITE       reduce using rule 29 (primitiveStmt)
    WRITELN     reduce using rule 29 (primitiveStmt)
    RETURN      reduce using rule 29 (primitiveStmt)
    STFUNC      reduce using rule 29 (primitiveStmt)
    ENDFUNC     reduce using rule 29 (primitiveStmt)
    PARENL      reduce using rule 29 (primitiveStmt)


State 197

    7 varDeclaration: simpleVarDeclaration • SEMIC

    SEMIC  shift, and go to state 274


State 198

   23 primitiveStmt: compoundStmt •

    ID          reduce using rule 23 (primitiveStmt)
    TYPE        reduce using rule 23 (primitiveStmt)
    NIL         reduce using rule 23 (primitiveStmt)
    INTEGER     reduce using rule 23 (primitiveStmt)
    DECIMAL     reduce using rule 23 (primitiveStmt)
    ERRORTOKEN  reduce using rule 23 (primitiveStmt)
    ELSE        reduce using rule 23 (primitiveStmt)
    ADD         reduce using rule 23 (primitiveStmt)
    SUB         reduce using rule 23 (primitiveStmt)
    HEADLIST    reduce using rule 23 (primitiveStmt)
    TAILLIST    reduce using rule 23 (primitiveStmt)
    IF          reduce using rule 23 (primitiveStmt)
    FOR         reduce using rule 23 (primitiveStmt)
    READ        reduce using rule 23 (primitiveStmt)
    WRITE       reduce using rule 23 (primitiveStmt)
    WRITELN     reduce using rule 23 (primitiveStmt)
    RETURN      reduce using rule 23 (primitiveStmt)
    STFUNC      reduce using rule 23 (primitiveStmt)
    ENDFUNC     reduce using rule 23 (primitiveStmt)
    PARENL      reduce using rule 23 (primitiveStmt)


State 199

   22 primitiveStmt: exprStmt •

    ID          reduce using rule 22 (primitiveStmt)
    TYPE        reduce using rule 22 (primitiveStmt)
    NIL         reduce using rule 22 (primitiveStmt)
    INTEGER     reduce using rule 22 (primitiveStmt)
    DECIMAL     reduce using rule 22 (primitiveStmt)
    ERRORTOKEN  reduce using rule 22 (primitiveStmt)
    ELSE        reduce using rule 22 (primitiveStmt)
    ADD         reduce using rule 22 (primitiveStmt)
    SUB         reduce using rule 22 (primitiveStmt)
    HEADLIST    reduce using rule 22 (primitiveStmt)
    TAILLIST    reduce using rule 22 (primitiveStmt)
    IF          reduce using rule 22 (primitiveStmt)
    FOR         reduce using rule 22 (primitiveStmt)
    READ        reduce using rule 22 (primitiveStmt)
    WRITE       reduce using rule 22 (primitiveStmt)
    WRITELN     reduce using rule 22 (primitiveStmt)
    RETURN      reduce using rule 22 (primitiveStmt)
    STFUNC      reduce using rule 22 (primitiveStmt)
    ENDFUNC     reduce using rule 22 (primitiveStmt)
    PARENL      reduce using rule 22 (primitiveStmt)


State 200

   24 primitiveStmt: condStmt •

    ID          reduce using rule 24 (primitiveStmt)
    TYPE        reduce using rule 24 (primitiveStmt)
    NIL         reduce using rule 24 (primitiveStmt)
    INTEGER     reduce using rule 24 (primitiveStmt)
    DECIMAL     reduce using rule 24 (primitiveStmt)
    ERRORTOKEN  reduce using rule 24 (primitiveStmt)
    ELSE        reduce using rule 24 (primitiveStmt)
    ADD         reduce using rule 24 (primitiveStmt)
    SUB         reduce using rule 24 (primitiveStmt)
    HEADLIST    reduce using rule 24 (primitiveStmt)
    TAILLIST    reduce using rule 24 (primitiveStmt)
    IF          reduce using rule 24 (primitiveStmt)
    FOR         reduce using rule 24 (primitiveStmt)
    READ        reduce using rule 24 (primitiveStmt)
    WRITE       reduce using rule 24 (primitiveStmt)
    WRITELN     reduce using rule 24 (primitiveStmt)
    RETURN      reduce using rule 24 (primitiveStmt)
    STFUNC      reduce using rule 24 (primitiveStmt)
    ENDFUNC     reduce using rule 24 (primitiveStmt)
    PARENL      reduce using rule 24 (primitiveStmt)


State 201

   31 condStmt: ifStmt • primitiveStmt
   32         | ifStmt • primitiveStmt elseStmt
   33         | ifStmt • STFUNC ENDFUNC
   34         | ifStmt • STFUNC ENDFUNC elseStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 191
    READ        shift, and go to state 192
    WRITE       shift, and go to state 193
    WRITELN     shift, and go to state 194
    RETURN      shift, and go to state 195
    STFUNC      shift, and go to state 275
    PARENL      shift, and go to state 46

    varDeclaration        go to state 196
    simpleVarDeclaration  go to state 197
    compoundStmt          go to state 198
    primitiveStmt         go to state 276
    exprStmt              go to state 199
    condStmt              go to state 200
    ifStmt                go to state 201
    iterStmt              go to state 202
    returnStmt            go to state 203
    expression            go to state 204
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 205
    outOp                 go to state 206
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 202

   25 primitiveStmt: iterStmt •

    ID          reduce using rule 25 (primitiveStmt)
    TYPE        reduce using rule 25 (primitiveStmt)
    NIL         reduce using rule 25 (primitiveStmt)
    INTEGER     reduce using rule 25 (primitiveStmt)
    DECIMAL     reduce using rule 25 (primitiveStmt)
    ERRORTOKEN  reduce using rule 25 (primitiveStmt)
    ELSE        reduce using rule 25 (primitiveStmt)
    ADD         reduce using rule 25 (primitiveStmt)
    SUB         reduce using rule 25 (primitiveStmt)
    HEADLIST    reduce using rule 25 (primitiveStmt)
    TAILLIST    reduce using rule 25 (primitiveStmt)
    IF          reduce using rule 25 (primitiveStmt)
    FOR         reduce using rule 25 (primitiveStmt)
    READ        reduce using rule 25 (primitiveStmt)
    WRITE       reduce using rule 25 (primitiveStmt)
    WRITELN     reduce using rule 25 (primitiveStmt)
    RETURN      reduce using rule 25 (primitiveStmt)
    STFUNC      reduce using rule 25 (primitiveStmt)
    ENDFUNC     reduce using rule 25 (primitiveStmt)
    PARENL      reduce using rule 25 (primitiveStmt)


State 203

   26 primitiveStmt: returnStmt •

    ID          reduce using rule 26 (primitiveStmt)
    TYPE        reduce using rule 26 (primitiveStmt)
    NIL         reduce using rule 26 (primitiveStmt)
    INTEGER     reduce using rule 26 (primitiveStmt)
    DECIMAL     reduce using rule 26 (primitiveStmt)
    ERRORTOKEN  reduce using rule 26 (primitiveStmt)
    ELSE        reduce using rule 26 (primitiveStmt)
    ADD         reduce using rule 26 (primitiveStmt)
    SUB         reduce using rule 26 (primitiveStmt)
    HEADLIST    reduce using rule 26 (primitiveStmt)
    TAILLIST    reduce using rule 26 (primitiveStmt)
    IF          reduce using rule 26 (primitiveStmt)
    FOR         reduce using rule 26 (primitiveStmt)
    READ        reduce using rule 26 (primitiveStmt)
    WRITE       reduce using rule 26 (primitiveStmt)
    WRITELN     reduce using rule 26 (primitiveStmt)
    RETURN      reduce using rule 26 (primitiveStmt)
    STFUNC      reduce using rule 26 (primitiveStmt)
    ENDFUNC     reduce using rule 26 (primitiveStmt)
    PARENL      reduce using rule 26 (primitiveStmt)


State 204

   30 exprStmt: expression • SEMIC

    SEMIC  shift, and go to state 277


State 205

   27 primitiveStmt: inOp •

    ID          reduce using rule 27 (primitiveStmt)
    TYPE        reduce using rule 27 (primitiveStmt)
    NIL         reduce using rule 27 (primitiveStmt)
    INTEGER     reduce using rule 27 (primitiveStmt)
    DECIMAL     reduce using rule 27 (primitiveStmt)
    ERRORTOKEN  reduce using rule 27 (primitiveStmt)
    ELSE        reduce using rule 27 (primitiveStmt)
    ADD         reduce using rule 27 (primitiveStmt)
    SUB         reduce using rule 27 (primitiveStmt)
    HEADLIST    reduce using rule 27 (primitiveStmt)
    TAILLIST    reduce using rule 27 (primitiveStmt)
    IF          reduce using rule 27 (primitiveStmt)
    FOR         reduce using rule 27 (primitiveStmt)
    READ        reduce using rule 27 (primitiveStmt)
    WRITE       reduce using rule 27 (primitiveStmt)
    WRITELN     reduce using rule 27 (primitiveStmt)
    RETURN      reduce using rule 27 (primitiveStmt)
    STFUNC      reduce using rule 27 (primitiveStmt)
    ENDFUNC     reduce using rule 27 (primitiveStmt)
    PARENL      reduce using rule 27 (primitiveStmt)


State 206

   28 primitiveStmt: outOp •

    ID          reduce using rule 28 (primitiveStmt)
    TYPE        reduce using rule 28 (primitiveStmt)
    NIL         reduce using rule 28 (primitiveStmt)
    INTEGER     reduce using rule 28 (primitiveStmt)
    DECIMAL     reduce using rule 28 (primitiveStmt)
    ERRORTOKEN  reduce using rule 28 (primitiveStmt)
    ELSE        reduce using rule 28 (primitiveStmt)
    ADD         reduce using rule 28 (primitiveStmt)
    SUB         reduce using rule 28 (primitiveStmt)
    HEADLIST    reduce using rule 28 (primitiveStmt)
    TAILLIST    reduce using rule 28 (primitiveStmt)
    IF          reduce using rule 28 (primitiveStmt)
    FOR         reduce using rule 28 (primitiveStmt)
    READ        reduce using rule 28 (primitiveStmt)
    WRITE       reduce using rule 28 (primitiveStmt)
    WRITELN     reduce using rule 28 (primitiveStmt)
    RETURN      reduce using rule 28 (primitiveStmt)
    STFUNC      reduce using rule 28 (primitiveStmt)
    ENDFUNC     reduce using rule 28 (primitiveStmt)
    PARENL      reduce using rule 28 (primitiveStmt)


State 207

   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    PARENL  shift, and go to state 278

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    APPEND     reduce using rule 80 (factor)
    FILTER     reduce using rule 80 (factor)
    MAP        reduce using rule 80 (factor)
    COMMA      reduce using rule 80 (factor)
    PARENR     reduce using rule 80 (factor)


State 208

   48 constOp: NIL •

    ADD        reduce using rule 48 (constOp)
    SUB        reduce using rule 48 (constOp)
    MULT       reduce using rule 48 (constOp)
    DIV        reduce using rule 48 (constOp)
    OR         reduce using rule 48 (constOp)
    AND        reduce using rule 48 (constOp)
    SMALLER    reduce using rule 48 (constOp)
    GREATER    reduce using rule 48 (constOp)
    SMALLEQ    reduce using rule 48 (constOp)
    GREATEQ    reduce using rule 48 (constOp)
    EQUALS     reduce using rule 48 (constOp)
    DIFFERENT  reduce using rule 48 (constOp)
    APPEND     reduce using rule 48 (constOp)
    FILTER     reduce using rule 48 (constOp)
    MAP        reduce using rule 48 (constOp)
    COMMA      reduce using rule 48 (constOp)
    PARENR     reduce using rule 48 (constOp)


State 209

   46 constOp: INTEGER •

    ADD        reduce using rule 46 (constOp)
    SUB        reduce using rule 46 (constOp)
    MULT       reduce using rule 46 (constOp)
    DIV        reduce using rule 46 (constOp)
    OR         reduce using rule 46 (constOp)
    AND        reduce using rule 46 (constOp)
    SMALLER    reduce using rule 46 (constOp)
    GREATER    reduce using rule 46 (constOp)
    SMALLEQ    reduce using rule 46 (constOp)
    GREATEQ    reduce using rule 46 (constOp)
    EQUALS     reduce using rule 46 (constOp)
    DIFFERENT  reduce using rule 46 (constOp)
    APPEND     reduce using rule 46 (constOp)
    FILTER     reduce using rule 46 (constOp)
    MAP        reduce using rule 46 (constOp)
    COMMA      reduce using rule 46 (constOp)
    PARENR     reduce using rule 46 (constOp)


State 210

   47 constOp: DECIMAL •

    ADD        reduce using rule 47 (constOp)
    SUB        reduce using rule 47 (constOp)
    MULT       reduce using rule 47 (constOp)
    DIV        reduce using rule 47 (constOp)
    OR         reduce using rule 47 (constOp)
    AND        reduce using rule 47 (constOp)
    SMALLER    reduce using rule 47 (constOp)
    GREATER    reduce using rule 47 (constOp)
    SMALLEQ    reduce using rule 47 (constOp)
    GREATEQ    reduce using rule 47 (constOp)
    EQUALS     reduce using rule 47 (constOp)
    DIFFERENT  reduce using rule 47 (constOp)
    APPEND     reduce using rule 47 (constOp)
    FILTER     reduce using rule 47 (constOp)
    MAP        reduce using rule 47 (constOp)
    COMMA      reduce using rule 47 (constOp)
    PARENR     reduce using rule 47 (constOp)


State 211

   84 factor: ERRORTOKEN •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    APPEND     reduce using rule 84 (factor)
    FILTER     reduce using rule 84 (factor)
    MAP        reduce using rule 84 (factor)
    COMMA      reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 212

   77 mulExp: ADD • factor

    ID          shift, and go to state 279
    NIL         shift, and go to state 280
    INTEGER     shift, and go to state 281
    DECIMAL     shift, and go to state 282
    ERRORTOKEN  shift, and go to state 283
    PARENL      shift, and go to state 284

    constOp  go to state 285
    factor   go to state 286
    fCall    go to state 287


State 213

   78 mulExp: SUB • factor

    ID          shift, and go to state 279
    NIL         shift, and go to state 280
    INTEGER     shift, and go to state 281
    DECIMAL     shift, and go to state 282
    ERRORTOKEN  shift, and go to state 283
    PARENL      shift, and go to state 284

    constOp  go to state 285
    factor   go to state 288
    fCall    go to state 287


State 214

   57 unaryListExp: HEADLIST • factor

    ID          shift, and go to state 279
    NIL         shift, and go to state 280
    INTEGER     shift, and go to state 281
    DECIMAL     shift, and go to state 282
    ERRORTOKEN  shift, and go to state 283
    PARENL      shift, and go to state 284

    constOp  go to state 285
    factor   go to state 289
    fCall    go to state 287


State 215

   58 unaryListExp: TAILLIST • factor

    ID          shift, and go to state 279
    NIL         shift, and go to state 280
    INTEGER     shift, and go to state 281
    DECIMAL     shift, and go to state 282
    ERRORTOKEN  shift, and go to state 283
    PARENL      shift, and go to state 284

    constOp  go to state 285
    factor   go to state 290
    fCall    go to state 287


State 216

   82 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 291
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 217

   83 factor: constOp •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    APPEND     reduce using rule 83 (factor)
    FILTER     reduce using rule 83 (factor)
    MAP        reduce using rule 83 (factor)
    COMMA      reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 218

   45 simpleExp: binListExp •

    COMMA   reduce using rule 45 (simpleExp)
    PARENR  reduce using rule 45 (simpleExp)


State 219

   79 mulExp: unaryListExp •

    ADD        reduce using rule 79 (mulExp)
    SUB        reduce using rule 79 (mulExp)
    MULT       reduce using rule 79 (mulExp)
    DIV        reduce using rule 79 (mulExp)
    OR         reduce using rule 79 (mulExp)
    AND        reduce using rule 79 (mulExp)
    SMALLER    reduce using rule 79 (mulExp)
    GREATER    reduce using rule 79 (mulExp)
    SMALLEQ    reduce using rule 79 (mulExp)
    GREATEQ    reduce using rule 79 (mulExp)
    EQUALS     reduce using rule 79 (mulExp)
    DIFFERENT  reduce using rule 79 (mulExp)
    COMMA      reduce using rule 79 (mulExp)
    PARENR     reduce using rule 79 (mulExp)


State 220

   44 simpleExp: binLogicalExp •
   59 binLogicalExp: binLogicalExp • binLogicalOp relationalOp

    OR   shift, and go to state 92
    AND  shift, and go to state 93

    COMMA   reduce using rule 44 (simpleExp)
    PARENR  reduce using rule 44 (simpleExp)

    binLogicalOp  go to state 292


State 221

   60 binLogicalExp: relationalExp •
   63 relationalExp: relationalExp • relationalOp sumExp

    SMALLER    shift, and go to state 95
    GREATER    shift, and go to state 96
    SMALLEQ    shift, and go to state 97
    GREATEQ    shift, and go to state 98
    EQUALS     shift, and go to state 99
    DIFFERENT  shift, and go to state 100

    OR      reduce using rule 60 (binLogicalExp)
    AND     reduce using rule 60 (binLogicalExp)
    COMMA   reduce using rule 60 (binLogicalExp)
    PARENR  reduce using rule 60 (binLogicalExp)

    relationalOp  go to state 293


State 222

   64 relationalExp: sumExp •
   71 sumExp: sumExp • ADD mulExp
   72       | sumExp • SUB mulExp

    ADD  shift, and go to state 294
    SUB  shift, and go to state 295

    OR         reduce using rule 64 (relationalExp)
    AND        reduce using rule 64 (relationalExp)
    SMALLER    reduce using rule 64 (relationalExp)
    GREATER    reduce using rule 64 (relationalExp)
    SMALLEQ    reduce using rule 64 (relationalExp)
    GREATEQ    reduce using rule 64 (relationalExp)
    EQUALS     reduce using rule 64 (relationalExp)
    DIFFERENT  reduce using rule 64 (relationalExp)
    COMMA      reduce using rule 64 (relationalExp)
    PARENR     reduce using rule 64 (relationalExp)


State 223

   73 sumExp: mulExp •
   74 mulExp: mulExp • MULT factor
   75       | mulExp • DIV factor

    MULT  shift, and go to state 296
    DIV   shift, and go to state 297

    ADD        reduce using rule 73 (sumExp)
    SUB        reduce using rule 73 (sumExp)
    OR         reduce using rule 73 (sumExp)
    AND        reduce using rule 73 (sumExp)
    SMALLER    reduce using rule 73 (sumExp)
    GREATER    reduce using rule 73 (sumExp)
    SMALLEQ    reduce using rule 73 (sumExp)
    GREATEQ    reduce using rule 73 (sumExp)
    EQUALS     reduce using rule 73 (sumExp)
    DIFFERENT  reduce using rule 73 (sumExp)
    COMMA      reduce using rule 73 (sumExp)
    PARENR     reduce using rule 73 (sumExp)


State 224

   54 binListExp: factor • APPEND factor
   55           | factor • MAP factor
   56           | factor • FILTER factor
   76 mulExp: factor •

    APPEND  shift, and go to state 298
    FILTER  shift, and go to state 299
    MAP     shift, and go to state 300

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    COMMA      reduce using rule 76 (mulExp)
    PARENR     reduce using rule 76 (mulExp)


State 225

   81 factor: fCall •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    APPEND     reduce using rule 81 (factor)
    FILTER     reduce using rule 81 (factor)
    MAP        reduce using rule 81 (factor)
    COMMA      reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 226

   85 fCall: ID PARENL • callParams PARENR
   86      | ID PARENL • PARENR

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216
    PARENR      shift, and go to state 301

    simpleExp      go to state 112
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225
    callParams     go to state 302


State 227

   19 compoundStmt: STFUNC stmtList • ENDFUNC
   20 stmtList: stmtList • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 303
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    primitiveStmt         go to state 88
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 228

   65 relationalOp: SMALLER •

    OR     reduce using rule 65 (relationalOp)
    AND    reduce using rule 65 (relationalOp)
    SEMIC  reduce using rule 65 (relationalOp)


State 229

   66 relationalOp: GREATER •

    OR     reduce using rule 66 (relationalOp)
    AND    reduce using rule 66 (relationalOp)
    SEMIC  reduce using rule 66 (relationalOp)


State 230

   67 relationalOp: SMALLEQ •

    OR     reduce using rule 67 (relationalOp)
    AND    reduce using rule 67 (relationalOp)
    SEMIC  reduce using rule 67 (relationalOp)


State 231

   68 relationalOp: GREATEQ •

    OR     reduce using rule 68 (relationalOp)
    AND    reduce using rule 68 (relationalOp)
    SEMIC  reduce using rule 68 (relationalOp)


State 232

   69 relationalOp: EQUALS •

    OR     reduce using rule 69 (relationalOp)
    AND    reduce using rule 69 (relationalOp)
    SEMIC  reduce using rule 69 (relationalOp)


State 233

   70 relationalOp: DIFFERENT •

    OR     reduce using rule 70 (relationalOp)
    AND    reduce using rule 70 (relationalOp)
    SEMIC  reduce using rule 70 (relationalOp)


State 234

   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    PARENL  shift, and go to state 304

    SEMIC  reduce using rule 80 (factor)


State 235

   48 constOp: NIL •

    SEMIC  reduce using rule 48 (constOp)


State 236

   46 constOp: INTEGER •

    SEMIC  reduce using rule 46 (constOp)


State 237

   47 constOp: DECIMAL •

    SEMIC  reduce using rule 47 (constOp)


State 238

   84 factor: ERRORTOKEN •

    SEMIC  reduce using rule 84 (factor)


State 239

   82 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 305
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 240

   83 factor: constOp •

    SEMIC  reduce using rule 83 (factor)


State 241

   81 factor: fCall •

    SEMIC  reduce using rule 81 (factor)


State 242

   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    PARENL  shift, and go to state 72

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    APPEND     reduce using rule 80 (factor)
    FILTER     reduce using rule 80 (factor)
    MAP        reduce using rule 80 (factor)
    SEMIC      reduce using rule 80 (factor)


State 243

   43 assignExp: ID ASSIGN • expression

    ID          shift, and go to state 306
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    expression     go to state 307
    assignExp      go to state 308
    simpleExp      go to state 309
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 244

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID          reduce using rule 7 (varDeclaration)
    TYPE        reduce using rule 7 (varDeclaration)
    NIL         reduce using rule 7 (varDeclaration)
    INTEGER     reduce using rule 7 (varDeclaration)
    DECIMAL     reduce using rule 7 (varDeclaration)
    ERRORTOKEN  reduce using rule 7 (varDeclaration)
    ADD         reduce using rule 7 (varDeclaration)
    SUB         reduce using rule 7 (varDeclaration)
    HEADLIST    reduce using rule 7 (varDeclaration)
    TAILLIST    reduce using rule 7 (varDeclaration)
    IF          reduce using rule 7 (varDeclaration)
    FOR         reduce using rule 7 (varDeclaration)
    READ        reduce using rule 7 (varDeclaration)
    WRITE       reduce using rule 7 (varDeclaration)
    WRITELN     reduce using rule 7 (varDeclaration)
    RETURN      reduce using rule 7 (varDeclaration)
    STFUNC      reduce using rule 7 (varDeclaration)
    ENDFUNC     reduce using rule 7 (varDeclaration)
    PARENL      reduce using rule 7 (varDeclaration)


State 245

   82 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 310


State 246

   85 fCall: ID PARENL • callParams PARENR
   86      | ID PARENL • PARENR

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216
    PARENR      shift, and go to state 311

    simpleExp      go to state 112
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225
    callParams     go to state 312


State 247

   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    PARENL  shift, and go to state 313

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    PARENR     reduce using rule 80 (factor)


State 248

   48 constOp: NIL •

    ADD        reduce using rule 48 (constOp)
    SUB        reduce using rule 48 (constOp)
    MULT       reduce using rule 48 (constOp)
    DIV        reduce using rule 48 (constOp)
    OR         reduce using rule 48 (constOp)
    AND        reduce using rule 48 (constOp)
    SMALLER    reduce using rule 48 (constOp)
    GREATER    reduce using rule 48 (constOp)
    SMALLEQ    reduce using rule 48 (constOp)
    GREATEQ    reduce using rule 48 (constOp)
    EQUALS     reduce using rule 48 (constOp)
    DIFFERENT  reduce using rule 48 (constOp)
    PARENR     reduce using rule 48 (constOp)


State 249

   46 constOp: INTEGER •

    ADD        reduce using rule 46 (constOp)
    SUB        reduce using rule 46 (constOp)
    MULT       reduce using rule 46 (constOp)
    DIV        reduce using rule 46 (constOp)
    OR         reduce using rule 46 (constOp)
    AND        reduce using rule 46 (constOp)
    SMALLER    reduce using rule 46 (constOp)
    GREATER    reduce using rule 46 (constOp)
    SMALLEQ    reduce using rule 46 (constOp)
    GREATEQ    reduce using rule 46 (constOp)
    EQUALS     reduce using rule 46 (constOp)
    DIFFERENT  reduce using rule 46 (constOp)
    PARENR     reduce using rule 46 (constOp)


State 250

   47 constOp: DECIMAL •

    ADD        reduce using rule 47 (constOp)
    SUB        reduce using rule 47 (constOp)
    MULT       reduce using rule 47 (constOp)
    DIV        reduce using rule 47 (constOp)
    OR         reduce using rule 47 (constOp)
    AND        reduce using rule 47 (constOp)
    SMALLER    reduce using rule 47 (constOp)
    GREATER    reduce using rule 47 (constOp)
    SMALLEQ    reduce using rule 47 (constOp)
    GREATEQ    reduce using rule 47 (constOp)
    EQUALS     reduce using rule 47 (constOp)
    DIFFERENT  reduce using rule 47 (constOp)
    PARENR     reduce using rule 47 (constOp)


State 251

   84 factor: ERRORTOKEN •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 252

   82 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 314
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 253

   83 factor: constOp •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 254

   77 mulExp: ADD factor •

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    PARENR     reduce using rule 77 (mulExp)


State 255

   81 factor: fCall •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 256

   78 mulExp: SUB factor •

    ADD        reduce using rule 78 (mulExp)
    SUB        reduce using rule 78 (mulExp)
    MULT       reduce using rule 78 (mulExp)
    DIV        reduce using rule 78 (mulExp)
    OR         reduce using rule 78 (mulExp)
    AND        reduce using rule 78 (mulExp)
    SMALLER    reduce using rule 78 (mulExp)
    GREATER    reduce using rule 78 (mulExp)
    SMALLEQ    reduce using rule 78 (mulExp)
    GREATEQ    reduce using rule 78 (mulExp)
    EQUALS     reduce using rule 78 (mulExp)
    DIFFERENT  reduce using rule 78 (mulExp)
    PARENR     reduce using rule 78 (mulExp)


State 257

   57 unaryListExp: HEADLIST factor •

    ADD        reduce using rule 57 (unaryListExp)
    SUB        reduce using rule 57 (unaryListExp)
    MULT       reduce using rule 57 (unaryListExp)
    DIV        reduce using rule 57 (unaryListExp)
    OR         reduce using rule 57 (unaryListExp)
    AND        reduce using rule 57 (unaryListExp)
    SMALLER    reduce using rule 57 (unaryListExp)
    GREATER    reduce using rule 57 (unaryListExp)
    SMALLEQ    reduce using rule 57 (unaryListExp)
    GREATEQ    reduce using rule 57 (unaryListExp)
    EQUALS     reduce using rule 57 (unaryListExp)
    DIFFERENT  reduce using rule 57 (unaryListExp)
    PARENR     reduce using rule 57 (unaryListExp)


State 258

   58 unaryListExp: TAILLIST factor •

    ADD        reduce using rule 58 (unaryListExp)
    SUB        reduce using rule 58 (unaryListExp)
    MULT       reduce using rule 58 (unaryListExp)
    DIV        reduce using rule 58 (unaryListExp)
    OR         reduce using rule 58 (unaryListExp)
    AND        reduce using rule 58 (unaryListExp)
    SMALLER    reduce using rule 58 (unaryListExp)
    GREATER    reduce using rule 58 (unaryListExp)
    SMALLEQ    reduce using rule 58 (unaryListExp)
    GREATEQ    reduce using rule 58 (unaryListExp)
    EQUALS     reduce using rule 58 (unaryListExp)
    DIFFERENT  reduce using rule 58 (unaryListExp)
    PARENR     reduce using rule 58 (unaryListExp)


State 259

   82 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 315


State 260

   59 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    shift, and go to state 316
    GREATER    shift, and go to state 317
    SMALLEQ    shift, and go to state 318
    GREATEQ    shift, and go to state 319
    EQUALS     shift, and go to state 320
    DIFFERENT  shift, and go to state 321

    relationalOp  go to state 322


State 261

   63 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 247
    NIL         shift, and go to state 248
    INTEGER     shift, and go to state 249
    DECIMAL     shift, and go to state 250
    ERRORTOKEN  shift, and go to state 251
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 252

    constOp       go to state 253
    unaryListExp  go to state 184
    sumExp        go to state 323
    mulExp        go to state 188
    factor        go to state 324
    fCall         go to state 255


State 262

   71 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 247
    NIL         shift, and go to state 248
    INTEGER     shift, and go to state 249
    DECIMAL     shift, and go to state 250
    ERRORTOKEN  shift, and go to state 251
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 252

    constOp       go to state 253
    unaryListExp  go to state 184
    mulExp        go to state 325
    factor        go to state 324
    fCall         go to state 255


State 263

   72 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 247
    NIL         shift, and go to state 248
    INTEGER     shift, and go to state 249
    DECIMAL     shift, and go to state 250
    ERRORTOKEN  shift, and go to state 251
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 252

    constOp       go to state 253
    unaryListExp  go to state 184
    mulExp        go to state 326
    factor        go to state 324
    fCall         go to state 255


State 264

   74 mulExp: mulExp MULT • factor

    ID          shift, and go to state 247
    NIL         shift, and go to state 248
    INTEGER     shift, and go to state 249
    DECIMAL     shift, and go to state 250
    ERRORTOKEN  shift, and go to state 251
    PARENL      shift, and go to state 252

    constOp  go to state 253
    factor   go to state 327
    fCall    go to state 255


State 265

   75 mulExp: mulExp DIV • factor

    ID          shift, and go to state 247
    NIL         shift, and go to state 248
    INTEGER     shift, and go to state 249
    DECIMAL     shift, and go to state 250
    ERRORTOKEN  shift, and go to state 251
    PARENL      shift, and go to state 252

    constOp  go to state 253
    factor   go to state 328
    fCall    go to state 255


State 266

   54 binListExp: factor APPEND • factor

    ID          shift, and go to state 329
    NIL         shift, and go to state 330
    INTEGER     shift, and go to state 331
    DECIMAL     shift, and go to state 332
    ERRORTOKEN  shift, and go to state 333
    PARENL      shift, and go to state 334

    constOp  go to state 335
    factor   go to state 336
    fCall    go to state 337


State 267

   56 binListExp: factor FILTER • factor

    ID          shift, and go to state 329
    NIL         shift, and go to state 330
    INTEGER     shift, and go to state 331
    DECIMAL     shift, and go to state 332
    ERRORTOKEN  shift, and go to state 333
    PARENL      shift, and go to state 334

    constOp  go to state 335
    factor   go to state 338
    fCall    go to state 337


State 268

   55 binListExp: factor MAP • factor

    ID          shift, and go to state 329
    NIL         shift, and go to state 330
    INTEGER     shift, and go to state 331
    DECIMAL     shift, and go to state 332
    ERRORTOKEN  shift, and go to state 333
    PARENL      shift, and go to state 334

    constOp  go to state 335
    factor   go to state 339
    fCall    go to state 337


State 269

   38 iterStmt: FOR PARENL • assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt
   39         | FOR PARENL • simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 29
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    assignExp      go to state 340
    simpleExp      go to state 341
    constOp        go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 270

   49 inOp: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 342


State 271

   50 outOp: WRITE PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 172
    STRING      shift, and go to state 118
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 119
    constOp        go to state 182
    outConst       go to state 343
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 272

   51 outOp: WRITELN PARENL • outConst PARENR SEMIC

    ID          shift, and go to state 172
    STRING      shift, and go to state 118
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 119
    constOp        go to state 182
    outConst       go to state 344
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 273

   40 returnStmt: RETURN expression • SEMIC

    SEMIC  shift, and go to state 345


State 274

    7 varDeclaration: simpleVarDeclaration SEMIC •

    ID          reduce using rule 7 (varDeclaration)
    TYPE        reduce using rule 7 (varDeclaration)
    NIL         reduce using rule 7 (varDeclaration)
    INTEGER     reduce using rule 7 (varDeclaration)
    DECIMAL     reduce using rule 7 (varDeclaration)
    ERRORTOKEN  reduce using rule 7 (varDeclaration)
    ELSE        reduce using rule 7 (varDeclaration)
    ADD         reduce using rule 7 (varDeclaration)
    SUB         reduce using rule 7 (varDeclaration)
    HEADLIST    reduce using rule 7 (varDeclaration)
    TAILLIST    reduce using rule 7 (varDeclaration)
    IF          reduce using rule 7 (varDeclaration)
    FOR         reduce using rule 7 (varDeclaration)
    READ        reduce using rule 7 (varDeclaration)
    WRITE       reduce using rule 7 (varDeclaration)
    WRITELN     reduce using rule 7 (varDeclaration)
    RETURN      reduce using rule 7 (varDeclaration)
    STFUNC      reduce using rule 7 (varDeclaration)
    ENDFUNC     reduce using rule 7 (varDeclaration)
    PARENL      reduce using rule 7 (varDeclaration)


State 275

   19 compoundStmt: STFUNC • stmtList ENDFUNC
   33 condStmt: ifStmt STFUNC • ENDFUNC
   34         | ifStmt STFUNC • ENDFUNC elseStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    ENDFUNC     shift, and go to state 346
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    stmtList              go to state 227
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 276

   31 condStmt: ifStmt primitiveStmt •
   32         | ifStmt primitiveStmt • elseStmt

    ELSE  shift, and go to state 347

    ID          reduce using rule 31 (condStmt)
    TYPE        reduce using rule 31 (condStmt)
    NIL         reduce using rule 31 (condStmt)
    INTEGER     reduce using rule 31 (condStmt)
    DECIMAL     reduce using rule 31 (condStmt)
    ERRORTOKEN  reduce using rule 31 (condStmt)
    ADD         reduce using rule 31 (condStmt)
    SUB         reduce using rule 31 (condStmt)
    HEADLIST    reduce using rule 31 (condStmt)
    TAILLIST    reduce using rule 31 (condStmt)
    IF          reduce using rule 31 (condStmt)
    FOR         reduce using rule 31 (condStmt)
    READ        reduce using rule 31 (condStmt)
    WRITE       reduce using rule 31 (condStmt)
    WRITELN     reduce using rule 31 (condStmt)
    RETURN      reduce using rule 31 (condStmt)
    STFUNC      reduce using rule 31 (condStmt)
    ENDFUNC     reduce using rule 31 (condStmt)
    PARENL      reduce using rule 31 (condStmt)

    elseStmt  go to state 348


State 277

   30 exprStmt: expression SEMIC •

    ID          reduce using rule 30 (exprStmt)
    TYPE        reduce using rule 30 (exprStmt)
    NIL         reduce using rule 30 (exprStmt)
    INTEGER     reduce using rule 30 (exprStmt)
    DECIMAL     reduce using rule 30 (exprStmt)
    ERRORTOKEN  reduce using rule 30 (exprStmt)
    ELSE        reduce using rule 30 (exprStmt)
    ADD         reduce using rule 30 (exprStmt)
    SUB         reduce using rule 30 (exprStmt)
    HEADLIST    reduce using rule 30 (exprStmt)
    TAILLIST    reduce using rule 30 (exprStmt)
    IF          reduce using rule 30 (exprStmt)
    FOR         reduce using rule 30 (exprStmt)
    READ        reduce using rule 30 (exprStmt)
    WRITE       reduce using rule 30 (exprStmt)
    WRITELN     reduce using rule 30 (exprStmt)
    RETURN      reduce using rule 30 (exprStmt)
    STFUNC      reduce using rule 30 (exprStmt)
    ENDFUNC     reduce using rule 30 (exprStmt)
    PARENL      reduce using rule 30 (exprStmt)


State 278

   85 fCall: ID PARENL • callParams PARENR
   86      | ID PARENL • PARENR

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216
    PARENR      shift, and go to state 349

    simpleExp      go to state 112
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225
    callParams     go to state 350


State 279

   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    PARENL  shift, and go to state 351

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    COMMA      reduce using rule 80 (factor)
    PARENR     reduce using rule 80 (factor)


State 280

   48 constOp: NIL •

    ADD        reduce using rule 48 (constOp)
    SUB        reduce using rule 48 (constOp)
    MULT       reduce using rule 48 (constOp)
    DIV        reduce using rule 48 (constOp)
    OR         reduce using rule 48 (constOp)
    AND        reduce using rule 48 (constOp)
    SMALLER    reduce using rule 48 (constOp)
    GREATER    reduce using rule 48 (constOp)
    SMALLEQ    reduce using rule 48 (constOp)
    GREATEQ    reduce using rule 48 (constOp)
    EQUALS     reduce using rule 48 (constOp)
    DIFFERENT  reduce using rule 48 (constOp)
    COMMA      reduce using rule 48 (constOp)
    PARENR     reduce using rule 48 (constOp)


State 281

   46 constOp: INTEGER •

    ADD        reduce using rule 46 (constOp)
    SUB        reduce using rule 46 (constOp)
    MULT       reduce using rule 46 (constOp)
    DIV        reduce using rule 46 (constOp)
    OR         reduce using rule 46 (constOp)
    AND        reduce using rule 46 (constOp)
    SMALLER    reduce using rule 46 (constOp)
    GREATER    reduce using rule 46 (constOp)
    SMALLEQ    reduce using rule 46 (constOp)
    GREATEQ    reduce using rule 46 (constOp)
    EQUALS     reduce using rule 46 (constOp)
    DIFFERENT  reduce using rule 46 (constOp)
    COMMA      reduce using rule 46 (constOp)
    PARENR     reduce using rule 46 (constOp)


State 282

   47 constOp: DECIMAL •

    ADD        reduce using rule 47 (constOp)
    SUB        reduce using rule 47 (constOp)
    MULT       reduce using rule 47 (constOp)
    DIV        reduce using rule 47 (constOp)
    OR         reduce using rule 47 (constOp)
    AND        reduce using rule 47 (constOp)
    SMALLER    reduce using rule 47 (constOp)
    GREATER    reduce using rule 47 (constOp)
    SMALLEQ    reduce using rule 47 (constOp)
    GREATEQ    reduce using rule 47 (constOp)
    EQUALS     reduce using rule 47 (constOp)
    DIFFERENT  reduce using rule 47 (constOp)
    COMMA      reduce using rule 47 (constOp)
    PARENR     reduce using rule 47 (constOp)


State 283

   84 factor: ERRORTOKEN •

    ADD        reduce using rule 84 (factor)
    SUB        reduce using rule 84 (factor)
    MULT       reduce using rule 84 (factor)
    DIV        reduce using rule 84 (factor)
    OR         reduce using rule 84 (factor)
    AND        reduce using rule 84 (factor)
    SMALLER    reduce using rule 84 (factor)
    GREATER    reduce using rule 84 (factor)
    SMALLEQ    reduce using rule 84 (factor)
    GREATEQ    reduce using rule 84 (factor)
    EQUALS     reduce using rule 84 (factor)
    DIFFERENT  reduce using rule 84 (factor)
    COMMA      reduce using rule 84 (factor)
    PARENR     reduce using rule 84 (factor)


State 284

   82 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 352
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 285

   83 factor: constOp •

    ADD        reduce using rule 83 (factor)
    SUB        reduce using rule 83 (factor)
    MULT       reduce using rule 83 (factor)
    DIV        reduce using rule 83 (factor)
    OR         reduce using rule 83 (factor)
    AND        reduce using rule 83 (factor)
    SMALLER    reduce using rule 83 (factor)
    GREATER    reduce using rule 83 (factor)
    SMALLEQ    reduce using rule 83 (factor)
    GREATEQ    reduce using rule 83 (factor)
    EQUALS     reduce using rule 83 (factor)
    DIFFERENT  reduce using rule 83 (factor)
    COMMA      reduce using rule 83 (factor)
    PARENR     reduce using rule 83 (factor)


State 286

   77 mulExp: ADD factor •

    ADD        reduce using rule 77 (mulExp)
    SUB        reduce using rule 77 (mulExp)
    MULT       reduce using rule 77 (mulExp)
    DIV        reduce using rule 77 (mulExp)
    OR         reduce using rule 77 (mulExp)
    AND        reduce using rule 77 (mulExp)
    SMALLER    reduce using rule 77 (mulExp)
    GREATER    reduce using rule 77 (mulExp)
    SMALLEQ    reduce using rule 77 (mulExp)
    GREATEQ    reduce using rule 77 (mulExp)
    EQUALS     reduce using rule 77 (mulExp)
    DIFFERENT  reduce using rule 77 (mulExp)
    COMMA      reduce using rule 77 (mulExp)
    PARENR     reduce using rule 77 (mulExp)


State 287

   81 factor: fCall •

    ADD        reduce using rule 81 (factor)
    SUB        reduce using rule 81 (factor)
    MULT       reduce using rule 81 (factor)
    DIV        reduce using rule 81 (factor)
    OR         reduce using rule 81 (factor)
    AND        reduce using rule 81 (factor)
    SMALLER    reduce using rule 81 (factor)
    GREATER    reduce using rule 81 (factor)
    SMALLEQ    reduce using rule 81 (factor)
    GREATEQ    reduce using rule 81 (factor)
    EQUALS     reduce using rule 81 (factor)
    DIFFERENT  reduce using rule 81 (factor)
    COMMA      reduce using rule 81 (factor)
    PARENR     reduce using rule 81 (factor)


State 288

   78 mulExp: SUB factor •

    ADD        reduce using rule 78 (mulExp)
    SUB        reduce using rule 78 (mulExp)
    MULT       reduce using rule 78 (mulExp)
    DIV        reduce using rule 78 (mulExp)
    OR         reduce using rule 78 (mulExp)
    AND        reduce using rule 78 (mulExp)
    SMALLER    reduce using rule 78 (mulExp)
    GREATER    reduce using rule 78 (mulExp)
    SMALLEQ    reduce using rule 78 (mulExp)
    GREATEQ    reduce using rule 78 (mulExp)
    EQUALS     reduce using rule 78 (mulExp)
    DIFFERENT  reduce using rule 78 (mulExp)
    COMMA      reduce using rule 78 (mulExp)
    PARENR     reduce using rule 78 (mulExp)


State 289

   57 unaryListExp: HEADLIST factor •

    ADD        reduce using rule 57 (unaryListExp)
    SUB        reduce using rule 57 (unaryListExp)
    MULT       reduce using rule 57 (unaryListExp)
    DIV        reduce using rule 57 (unaryListExp)
    OR         reduce using rule 57 (unaryListExp)
    AND        reduce using rule 57 (unaryListExp)
    SMALLER    reduce using rule 57 (unaryListExp)
    GREATER    reduce using rule 57 (unaryListExp)
    SMALLEQ    reduce using rule 57 (unaryListExp)
    GREATEQ    reduce using rule 57 (unaryListExp)
    EQUALS     reduce using rule 57 (unaryListExp)
    DIFFERENT  reduce using rule 57 (unaryListExp)
    COMMA      reduce using rule 57 (unaryListExp)
    PARENR     reduce using rule 57 (unaryListExp)


State 290

   58 unaryListExp: TAILLIST factor •

    ADD        reduce using rule 58 (unaryListExp)
    SUB        reduce using rule 58 (unaryListExp)
    MULT       reduce using rule 58 (unaryListExp)
    DIV        reduce using rule 58 (unaryListExp)
    OR         reduce using rule 58 (unaryListExp)
    AND        reduce using rule 58 (unaryListExp)
    SMALLER    reduce using rule 58 (unaryListExp)
    GREATER    reduce using rule 58 (unaryListExp)
    SMALLEQ    reduce using rule 58 (unaryListExp)
    GREATEQ    reduce using rule 58 (unaryListExp)
    EQUALS     reduce using rule 58 (unaryListExp)
    DIFFERENT  reduce using rule 58 (unaryListExp)
    COMMA      reduce using rule 58 (unaryListExp)
    PARENR     reduce using rule 58 (unaryListExp)


State 291

   82 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 353


State 292

   59 binLogicalExp: binLogicalExp binLogicalOp • relationalOp

    SMALLER    shift, and go to state 354
    GREATER    shift, and go to state 355
    SMALLEQ    shift, and go to state 356
    GREATEQ    shift, and go to state 357
    EQUALS     shift, and go to state 358
    DIFFERENT  shift, and go to state 359

    relationalOp  go to state 360


State 293

   63 relationalExp: relationalExp relationalOp • sumExp

    ID          shift, and go to state 279
    NIL         shift, and go to state 280
    INTEGER     shift, and go to state 281
    DECIMAL     shift, and go to state 282
    ERRORTOKEN  shift, and go to state 283
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 284

    constOp       go to state 285
    unaryListExp  go to state 219
    sumExp        go to state 361
    mulExp        go to state 223
    factor        go to state 362
    fCall         go to state 287


State 294

   71 sumExp: sumExp ADD • mulExp

    ID          shift, and go to state 279
    NIL         shift, and go to state 280
    INTEGER     shift, and go to state 281
    DECIMAL     shift, and go to state 282
    ERRORTOKEN  shift, and go to state 283
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 284

    constOp       go to state 285
    unaryListExp  go to state 219
    mulExp        go to state 363
    factor        go to state 362
    fCall         go to state 287


State 295

   72 sumExp: sumExp SUB • mulExp

    ID          shift, and go to state 279
    NIL         shift, and go to state 280
    INTEGER     shift, and go to state 281
    DECIMAL     shift, and go to state 282
    ERRORTOKEN  shift, and go to state 283
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 284

    constOp       go to state 285
    unaryListExp  go to state 219
    mulExp        go to state 364
    factor        go to state 362
    fCall         go to state 287


State 296

   74 mulExp: mulExp MULT • factor

    ID          shift, and go to state 279
    NIL         shift, and go to state 280
    INTEGER     shift, and go to state 281
    DECIMAL     shift, and go to state 282
    ERRORTOKEN  shift, and go to state 283
    PARENL      shift, and go to state 284

    constOp  go to state 285
    factor   go to state 365
    fCall    go to state 287


State 297

   75 mulExp: mulExp DIV • factor

    ID          shift, and go to state 279
    NIL         shift, and go to state 280
    INTEGER     shift, and go to state 281
    DECIMAL     shift, and go to state 282
    ERRORTOKEN  shift, and go to state 283
    PARENL      shift, and go to state 284

    constOp  go to state 285
    factor   go to state 366
    fCall    go to state 287


State 298

   54 binListExp: factor APPEND • factor

    ID          shift, and go to state 367
    NIL         shift, and go to state 368
    INTEGER     shift, and go to state 369
    DECIMAL     shift, and go to state 370
    ERRORTOKEN  shift, and go to state 371
    PARENL      shift, and go to state 372

    constOp  go to state 373
    factor   go to state 374
    fCall    go to state 375


State 299

   56 binListExp: factor FILTER • factor

    ID          shift, and go to state 367
    NIL         shift, and go to state 368
    INTEGER     shift, and go to state 369
    DECIMAL     shift, and go to state 370
    ERRORTOKEN  shift, and go to state 371
    PARENL      shift, and go to state 372

    constOp  go to state 373
    factor   go to state 376
    fCall    go to state 375


State 300

   55 binListExp: factor MAP • factor

    ID          shift, and go to state 367
    NIL         shift, and go to state 368
    INTEGER     shift, and go to state 369
    DECIMAL     shift, and go to state 370
    ERRORTOKEN  shift, and go to state 371
    PARENL      shift, and go to state 372

    constOp  go to state 373
    factor   go to state 377
    fCall    go to state 375


State 301

   86 fCall: ID PARENL PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    SEMIC      reduce using rule 86 (fCall)


State 302

   85 fCall: ID PARENL callParams • PARENR
   87 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 138
    PARENR  shift, and go to state 378


State 303

   19 compoundStmt: STFUNC stmtList ENDFUNC •

    ID          reduce using rule 19 (compoundStmt)
    TYPE        reduce using rule 19 (compoundStmt)
    NIL         reduce using rule 19 (compoundStmt)
    INTEGER     reduce using rule 19 (compoundStmt)
    DECIMAL     reduce using rule 19 (compoundStmt)
    ERRORTOKEN  reduce using rule 19 (compoundStmt)
    ELSE        reduce using rule 19 (compoundStmt)
    ADD         reduce using rule 19 (compoundStmt)
    SUB         reduce using rule 19 (compoundStmt)
    HEADLIST    reduce using rule 19 (compoundStmt)
    TAILLIST    reduce using rule 19 (compoundStmt)
    IF          reduce using rule 19 (compoundStmt)
    FOR         reduce using rule 19 (compoundStmt)
    READ        reduce using rule 19 (compoundStmt)
    WRITE       reduce using rule 19 (compoundStmt)
    WRITELN     reduce using rule 19 (compoundStmt)
    RETURN      reduce using rule 19 (compoundStmt)
    STFUNC      reduce using rule 19 (compoundStmt)
    ENDFUNC     reduce using rule 19 (compoundStmt)
    PARENL      reduce using rule 19 (compoundStmt)


State 304

   85 fCall: ID PARENL • callParams PARENR
   86      | ID PARENL • PARENR

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216
    PARENR      shift, and go to state 379

    simpleExp      go to state 112
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225
    callParams     go to state 380


State 305

   82 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 381


State 306

   43 assignExp: ID • ASSIGN expression
   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    ASSIGN  shift, and go to state 243
    PARENL  shift, and go to state 246

    ADD        reduce using rule 80 (factor)
    SUB        reduce using rule 80 (factor)
    MULT       reduce using rule 80 (factor)
    DIV        reduce using rule 80 (factor)
    OR         reduce using rule 80 (factor)
    AND        reduce using rule 80 (factor)
    SMALLER    reduce using rule 80 (factor)
    GREATER    reduce using rule 80 (factor)
    SMALLEQ    reduce using rule 80 (factor)
    GREATEQ    reduce using rule 80 (factor)
    EQUALS     reduce using rule 80 (factor)
    DIFFERENT  reduce using rule 80 (factor)
    APPEND     reduce using rule 80 (factor)
    FILTER     reduce using rule 80 (factor)
    MAP        reduce using rule 80 (factor)
    PARENR     reduce using rule 80 (factor)


State 307

   43 assignExp: ID ASSIGN expression •

    PARENR  reduce using rule 43 (assignExp)


State 308

   41 expression: assignExp •

    PARENR  reduce using rule 41 (expression)


State 309

   42 expression: simpleExp •

    PARENR  reduce using rule 42 (expression)


State 310

   82 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    SEMIC      reduce using rule 82 (factor)


State 311

   86 fCall: ID PARENL PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    APPEND     reduce using rule 86 (fCall)
    FILTER     reduce using rule 86 (fCall)
    MAP        reduce using rule 86 (fCall)
    PARENR     reduce using rule 86 (fCall)


State 312

   85 fCall: ID PARENL callParams • PARENR
   87 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 138
    PARENR  shift, and go to state 382


State 313

   85 fCall: ID PARENL • callParams PARENR
   86      | ID PARENL • PARENR

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216
    PARENR      shift, and go to state 383

    simpleExp      go to state 112
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225
    callParams     go to state 384


State 314

   82 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 385


State 315

   82 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    APPEND     reduce using rule 82 (factor)
    FILTER     reduce using rule 82 (factor)
    MAP        reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 316

   65 relationalOp: SMALLER •

    OR      reduce using rule 65 (relationalOp)
    AND     reduce using rule 65 (relationalOp)
    PARENR  reduce using rule 65 (relationalOp)


State 317

   66 relationalOp: GREATER •

    OR      reduce using rule 66 (relationalOp)
    AND     reduce using rule 66 (relationalOp)
    PARENR  reduce using rule 66 (relationalOp)


State 318

   67 relationalOp: SMALLEQ •

    OR      reduce using rule 67 (relationalOp)
    AND     reduce using rule 67 (relationalOp)
    PARENR  reduce using rule 67 (relationalOp)


State 319

   68 relationalOp: GREATEQ •

    OR      reduce using rule 68 (relationalOp)
    AND     reduce using rule 68 (relationalOp)
    PARENR  reduce using rule 68 (relationalOp)


State 320

   69 relationalOp: EQUALS •

    OR      reduce using rule 69 (relationalOp)
    AND     reduce using rule 69 (relationalOp)
    PARENR  reduce using rule 69 (relationalOp)


State 321

   70 relationalOp: DIFFERENT •

    OR      reduce using rule 70 (relationalOp)
    AND     reduce using rule 70 (relationalOp)
    PARENR  reduce using rule 70 (relationalOp)


State 322

   59 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduce using rule 59 (binLogicalExp)
    AND     reduce using rule 59 (binLogicalExp)
    PARENR  reduce using rule 59 (binLogicalExp)


State 323

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • ADD mulExp
   72       | sumExp • SUB mulExp

    ADD  shift, and go to state 262
    SUB  shift, and go to state 263

    OR         reduce using rule 63 (relationalExp)
    AND        reduce using rule 63 (relationalExp)
    SMALLER    reduce using rule 63 (relationalExp)
    GREATER    reduce using rule 63 (relationalExp)
    SMALLEQ    reduce using rule 63 (relationalExp)
    GREATEQ    reduce using rule 63 (relationalExp)
    EQUALS     reduce using rule 63 (relationalExp)
    DIFFERENT  reduce using rule 63 (relationalExp)
    PARENR     reduce using rule 63 (relationalExp)


State 324

   76 mulExp: factor •

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    PARENR     reduce using rule 76 (mulExp)


State 325

   71 sumExp: sumExp ADD mulExp •
   74 mulExp: mulExp • MULT factor
   75       | mulExp • DIV factor

    MULT  shift, and go to state 264
    DIV   shift, and go to state 265

    ADD        reduce using rule 71 (sumExp)
    SUB        reduce using rule 71 (sumExp)
    OR         reduce using rule 71 (sumExp)
    AND        reduce using rule 71 (sumExp)
    SMALLER    reduce using rule 71 (sumExp)
    GREATER    reduce using rule 71 (sumExp)
    SMALLEQ    reduce using rule 71 (sumExp)
    GREATEQ    reduce using rule 71 (sumExp)
    EQUALS     reduce using rule 71 (sumExp)
    DIFFERENT  reduce using rule 71 (sumExp)
    PARENR     reduce using rule 71 (sumExp)


State 326

   72 sumExp: sumExp SUB mulExp •
   74 mulExp: mulExp • MULT factor
   75       | mulExp • DIV factor

    MULT  shift, and go to state 264
    DIV   shift, and go to state 265

    ADD        reduce using rule 72 (sumExp)
    SUB        reduce using rule 72 (sumExp)
    OR         reduce using rule 72 (sumExp)
    AND        reduce using rule 72 (sumExp)
    SMALLER    reduce using rule 72 (sumExp)
    GREATER    reduce using rule 72 (sumExp)
    SMALLEQ    reduce using rule 72 (sumExp)
    GREATEQ    reduce using rule 72 (sumExp)
    EQUALS     reduce using rule 72 (sumExp)
    DIFFERENT  reduce using rule 72 (sumExp)
    PARENR     reduce using rule 72 (sumExp)


State 327

   74 mulExp: mulExp MULT factor •

    ADD        reduce using rule 74 (mulExp)
    SUB        reduce using rule 74 (mulExp)
    MULT       reduce using rule 74 (mulExp)
    DIV        reduce using rule 74 (mulExp)
    OR         reduce using rule 74 (mulExp)
    AND        reduce using rule 74 (mulExp)
    SMALLER    reduce using rule 74 (mulExp)
    GREATER    reduce using rule 74 (mulExp)
    SMALLEQ    reduce using rule 74 (mulExp)
    GREATEQ    reduce using rule 74 (mulExp)
    EQUALS     reduce using rule 74 (mulExp)
    DIFFERENT  reduce using rule 74 (mulExp)
    PARENR     reduce using rule 74 (mulExp)


State 328

   75 mulExp: mulExp DIV factor •

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    PARENR     reduce using rule 75 (mulExp)


State 329

   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    PARENL  shift, and go to state 386

    PARENR  reduce using rule 80 (factor)


State 330

   48 constOp: NIL •

    PARENR  reduce using rule 48 (constOp)


State 331

   46 constOp: INTEGER •

    PARENR  reduce using rule 46 (constOp)


State 332

   47 constOp: DECIMAL •

    PARENR  reduce using rule 47 (constOp)


State 333

   84 factor: ERRORTOKEN •

    PARENR  reduce using rule 84 (factor)


State 334

   82 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 387
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 335

   83 factor: constOp •

    PARENR  reduce using rule 83 (factor)


State 336

   54 binListExp: factor APPEND factor •

    PARENR  reduce using rule 54 (binListExp)


State 337

   81 factor: fCall •

    PARENR  reduce using rule 81 (factor)


State 338

   56 binListExp: factor FILTER factor •

    PARENR  reduce using rule 56 (binListExp)


State 339

   55 binListExp: factor MAP factor •

    PARENR  reduce using rule 55 (binListExp)


State 340

   38 iterStmt: FOR PARENL assignExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 388


State 341

   39 iterStmt: FOR PARENL simpleExp • SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 389


State 342

   49 inOp: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 390


State 343

   50 outOp: WRITE PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 391


State 344

   51 outOp: WRITELN PARENL outConst • PARENR SEMIC

    PARENR  shift, and go to state 392


State 345

   40 returnStmt: RETURN expression SEMIC •

    ID          reduce using rule 40 (returnStmt)
    TYPE        reduce using rule 40 (returnStmt)
    NIL         reduce using rule 40 (returnStmt)
    INTEGER     reduce using rule 40 (returnStmt)
    DECIMAL     reduce using rule 40 (returnStmt)
    ERRORTOKEN  reduce using rule 40 (returnStmt)
    ELSE        reduce using rule 40 (returnStmt)
    ADD         reduce using rule 40 (returnStmt)
    SUB         reduce using rule 40 (returnStmt)
    HEADLIST    reduce using rule 40 (returnStmt)
    TAILLIST    reduce using rule 40 (returnStmt)
    IF          reduce using rule 40 (returnStmt)
    FOR         reduce using rule 40 (returnStmt)
    READ        reduce using rule 40 (returnStmt)
    WRITE       reduce using rule 40 (returnStmt)
    WRITELN     reduce using rule 40 (returnStmt)
    RETURN      reduce using rule 40 (returnStmt)
    STFUNC      reduce using rule 40 (returnStmt)
    ENDFUNC     reduce using rule 40 (returnStmt)
    PARENL      reduce using rule 40 (returnStmt)


State 346

   33 condStmt: ifStmt STFUNC ENDFUNC •
   34         | ifStmt STFUNC ENDFUNC • elseStmt

    ELSE  shift, and go to state 347

    ID          reduce using rule 33 (condStmt)
    TYPE        reduce using rule 33 (condStmt)
    NIL         reduce using rule 33 (condStmt)
    INTEGER     reduce using rule 33 (condStmt)
    DECIMAL     reduce using rule 33 (condStmt)
    ERRORTOKEN  reduce using rule 33 (condStmt)
    ADD         reduce using rule 33 (condStmt)
    SUB         reduce using rule 33 (condStmt)
    HEADLIST    reduce using rule 33 (condStmt)
    TAILLIST    reduce using rule 33 (condStmt)
    IF          reduce using rule 33 (condStmt)
    FOR         reduce using rule 33 (condStmt)
    READ        reduce using rule 33 (condStmt)
    WRITE       reduce using rule 33 (condStmt)
    WRITELN     reduce using rule 33 (condStmt)
    RETURN      reduce using rule 33 (condStmt)
    STFUNC      reduce using rule 33 (condStmt)
    ENDFUNC     reduce using rule 33 (condStmt)
    PARENL      reduce using rule 33 (condStmt)

    elseStmt  go to state 393


State 347

   37 elseStmt: ELSE • $@5 primitiveStmt

    ID          reduce using rule 36 ($@5)
    TYPE        reduce using rule 36 ($@5)
    NIL         reduce using rule 36 ($@5)
    INTEGER     reduce using rule 36 ($@5)
    DECIMAL     reduce using rule 36 ($@5)
    ERRORTOKEN  reduce using rule 36 ($@5)
    ADD         reduce using rule 36 ($@5)
    SUB         reduce using rule 36 ($@5)
    HEADLIST    reduce using rule 36 ($@5)
    TAILLIST    reduce using rule 36 ($@5)
    IF          reduce using rule 36 ($@5)
    FOR         reduce using rule 36 ($@5)
    READ        reduce using rule 36 ($@5)
    WRITE       reduce using rule 36 ($@5)
    WRITELN     reduce using rule 36 ($@5)
    RETURN      reduce using rule 36 ($@5)
    STFUNC      reduce using rule 36 ($@5)
    PARENL      reduce using rule 36 ($@5)

    $@5  go to state 394


State 348

   32 condStmt: ifStmt primitiveStmt elseStmt •

    ID          reduce using rule 32 (condStmt)
    TYPE        reduce using rule 32 (condStmt)
    NIL         reduce using rule 32 (condStmt)
    INTEGER     reduce using rule 32 (condStmt)
    DECIMAL     reduce using rule 32 (condStmt)
    ERRORTOKEN  reduce using rule 32 (condStmt)
    ELSE        reduce using rule 32 (condStmt)
    ADD         reduce using rule 32 (condStmt)
    SUB         reduce using rule 32 (condStmt)
    HEADLIST    reduce using rule 32 (condStmt)
    TAILLIST    reduce using rule 32 (condStmt)
    IF          reduce using rule 32 (condStmt)
    FOR         reduce using rule 32 (condStmt)
    READ        reduce using rule 32 (condStmt)
    WRITE       reduce using rule 32 (condStmt)
    WRITELN     reduce using rule 32 (condStmt)
    RETURN      reduce using rule 32 (condStmt)
    STFUNC      reduce using rule 32 (condStmt)
    ENDFUNC     reduce using rule 32 (condStmt)
    PARENL      reduce using rule 32 (condStmt)


State 349

   86 fCall: ID PARENL PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    APPEND     reduce using rule 86 (fCall)
    FILTER     reduce using rule 86 (fCall)
    MAP        reduce using rule 86 (fCall)
    COMMA      reduce using rule 86 (fCall)
    PARENR     reduce using rule 86 (fCall)


State 350

   85 fCall: ID PARENL callParams • PARENR
   87 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 138
    PARENR  shift, and go to state 395


State 351

   85 fCall: ID PARENL • callParams PARENR
   86      | ID PARENL • PARENR

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216
    PARENR      shift, and go to state 396

    simpleExp      go to state 112
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225
    callParams     go to state 397


State 352

   82 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 398


State 353

   82 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    APPEND     reduce using rule 82 (factor)
    FILTER     reduce using rule 82 (factor)
    MAP        reduce using rule 82 (factor)
    COMMA      reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 354

   65 relationalOp: SMALLER •

    OR      reduce using rule 65 (relationalOp)
    AND     reduce using rule 65 (relationalOp)
    COMMA   reduce using rule 65 (relationalOp)
    PARENR  reduce using rule 65 (relationalOp)


State 355

   66 relationalOp: GREATER •

    OR      reduce using rule 66 (relationalOp)
    AND     reduce using rule 66 (relationalOp)
    COMMA   reduce using rule 66 (relationalOp)
    PARENR  reduce using rule 66 (relationalOp)


State 356

   67 relationalOp: SMALLEQ •

    OR      reduce using rule 67 (relationalOp)
    AND     reduce using rule 67 (relationalOp)
    COMMA   reduce using rule 67 (relationalOp)
    PARENR  reduce using rule 67 (relationalOp)


State 357

   68 relationalOp: GREATEQ •

    OR      reduce using rule 68 (relationalOp)
    AND     reduce using rule 68 (relationalOp)
    COMMA   reduce using rule 68 (relationalOp)
    PARENR  reduce using rule 68 (relationalOp)


State 358

   69 relationalOp: EQUALS •

    OR      reduce using rule 69 (relationalOp)
    AND     reduce using rule 69 (relationalOp)
    COMMA   reduce using rule 69 (relationalOp)
    PARENR  reduce using rule 69 (relationalOp)


State 359

   70 relationalOp: DIFFERENT •

    OR      reduce using rule 70 (relationalOp)
    AND     reduce using rule 70 (relationalOp)
    COMMA   reduce using rule 70 (relationalOp)
    PARENR  reduce using rule 70 (relationalOp)


State 360

   59 binLogicalExp: binLogicalExp binLogicalOp relationalOp •

    OR      reduce using rule 59 (binLogicalExp)
    AND     reduce using rule 59 (binLogicalExp)
    COMMA   reduce using rule 59 (binLogicalExp)
    PARENR  reduce using rule 59 (binLogicalExp)


State 361

   63 relationalExp: relationalExp relationalOp sumExp •
   71 sumExp: sumExp • ADD mulExp
   72       | sumExp • SUB mulExp

    ADD  shift, and go to state 294
    SUB  shift, and go to state 295

    OR         reduce using rule 63 (relationalExp)
    AND        reduce using rule 63 (relationalExp)
    SMALLER    reduce using rule 63 (relationalExp)
    GREATER    reduce using rule 63 (relationalExp)
    SMALLEQ    reduce using rule 63 (relationalExp)
    GREATEQ    reduce using rule 63 (relationalExp)
    EQUALS     reduce using rule 63 (relationalExp)
    DIFFERENT  reduce using rule 63 (relationalExp)
    COMMA      reduce using rule 63 (relationalExp)
    PARENR     reduce using rule 63 (relationalExp)


State 362

   76 mulExp: factor •

    ADD        reduce using rule 76 (mulExp)
    SUB        reduce using rule 76 (mulExp)
    MULT       reduce using rule 76 (mulExp)
    DIV        reduce using rule 76 (mulExp)
    OR         reduce using rule 76 (mulExp)
    AND        reduce using rule 76 (mulExp)
    SMALLER    reduce using rule 76 (mulExp)
    GREATER    reduce using rule 76 (mulExp)
    SMALLEQ    reduce using rule 76 (mulExp)
    GREATEQ    reduce using rule 76 (mulExp)
    EQUALS     reduce using rule 76 (mulExp)
    DIFFERENT  reduce using rule 76 (mulExp)
    COMMA      reduce using rule 76 (mulExp)
    PARENR     reduce using rule 76 (mulExp)


State 363

   71 sumExp: sumExp ADD mulExp •
   74 mulExp: mulExp • MULT factor
   75       | mulExp • DIV factor

    MULT  shift, and go to state 296
    DIV   shift, and go to state 297

    ADD        reduce using rule 71 (sumExp)
    SUB        reduce using rule 71 (sumExp)
    OR         reduce using rule 71 (sumExp)
    AND        reduce using rule 71 (sumExp)
    SMALLER    reduce using rule 71 (sumExp)
    GREATER    reduce using rule 71 (sumExp)
    SMALLEQ    reduce using rule 71 (sumExp)
    GREATEQ    reduce using rule 71 (sumExp)
    EQUALS     reduce using rule 71 (sumExp)
    DIFFERENT  reduce using rule 71 (sumExp)
    COMMA      reduce using rule 71 (sumExp)
    PARENR     reduce using rule 71 (sumExp)


State 364

   72 sumExp: sumExp SUB mulExp •
   74 mulExp: mulExp • MULT factor
   75       | mulExp • DIV factor

    MULT  shift, and go to state 296
    DIV   shift, and go to state 297

    ADD        reduce using rule 72 (sumExp)
    SUB        reduce using rule 72 (sumExp)
    OR         reduce using rule 72 (sumExp)
    AND        reduce using rule 72 (sumExp)
    SMALLER    reduce using rule 72 (sumExp)
    GREATER    reduce using rule 72 (sumExp)
    SMALLEQ    reduce using rule 72 (sumExp)
    GREATEQ    reduce using rule 72 (sumExp)
    EQUALS     reduce using rule 72 (sumExp)
    DIFFERENT  reduce using rule 72 (sumExp)
    COMMA      reduce using rule 72 (sumExp)
    PARENR     reduce using rule 72 (sumExp)


State 365

   74 mulExp: mulExp MULT factor •

    ADD        reduce using rule 74 (mulExp)
    SUB        reduce using rule 74 (mulExp)
    MULT       reduce using rule 74 (mulExp)
    DIV        reduce using rule 74 (mulExp)
    OR         reduce using rule 74 (mulExp)
    AND        reduce using rule 74 (mulExp)
    SMALLER    reduce using rule 74 (mulExp)
    GREATER    reduce using rule 74 (mulExp)
    SMALLEQ    reduce using rule 74 (mulExp)
    GREATEQ    reduce using rule 74 (mulExp)
    EQUALS     reduce using rule 74 (mulExp)
    DIFFERENT  reduce using rule 74 (mulExp)
    COMMA      reduce using rule 74 (mulExp)
    PARENR     reduce using rule 74 (mulExp)


State 366

   75 mulExp: mulExp DIV factor •

    ADD        reduce using rule 75 (mulExp)
    SUB        reduce using rule 75 (mulExp)
    MULT       reduce using rule 75 (mulExp)
    DIV        reduce using rule 75 (mulExp)
    OR         reduce using rule 75 (mulExp)
    AND        reduce using rule 75 (mulExp)
    SMALLER    reduce using rule 75 (mulExp)
    GREATER    reduce using rule 75 (mulExp)
    SMALLEQ    reduce using rule 75 (mulExp)
    GREATEQ    reduce using rule 75 (mulExp)
    EQUALS     reduce using rule 75 (mulExp)
    DIFFERENT  reduce using rule 75 (mulExp)
    COMMA      reduce using rule 75 (mulExp)
    PARENR     reduce using rule 75 (mulExp)


State 367

   80 factor: ID •
   85 fCall: ID • PARENL callParams PARENR
   86      | ID • PARENL PARENR

    PARENL  shift, and go to state 399

    COMMA   reduce using rule 80 (factor)
    PARENR  reduce using rule 80 (factor)


State 368

   48 constOp: NIL •

    COMMA   reduce using rule 48 (constOp)
    PARENR  reduce using rule 48 (constOp)


State 369

   46 constOp: INTEGER •

    COMMA   reduce using rule 46 (constOp)
    PARENR  reduce using rule 46 (constOp)


State 370

   47 constOp: DECIMAL •

    COMMA   reduce using rule 47 (constOp)
    PARENR  reduce using rule 47 (constOp)


State 371

   84 factor: ERRORTOKEN •

    COMMA   reduce using rule 84 (factor)
    PARENR  reduce using rule 84 (factor)


State 372

   82 factor: PARENL • simpleExp PARENR

    ID          shift, and go to state 172
    NIL         shift, and go to state 173
    INTEGER     shift, and go to state 174
    DECIMAL     shift, and go to state 175
    ERRORTOKEN  shift, and go to state 176
    ADD         shift, and go to state 177
    SUB         shift, and go to state 178
    HEADLIST    shift, and go to state 179
    TAILLIST    shift, and go to state 180
    PARENL      shift, and go to state 181

    simpleExp      go to state 400
    constOp        go to state 182
    binListExp     go to state 183
    unaryListExp   go to state 184
    binLogicalExp  go to state 185
    relationalExp  go to state 186
    sumExp         go to state 187
    mulExp         go to state 188
    factor         go to state 189
    fCall          go to state 190


State 373

   83 factor: constOp •

    COMMA   reduce using rule 83 (factor)
    PARENR  reduce using rule 83 (factor)


State 374

   54 binListExp: factor APPEND factor •

    COMMA   reduce using rule 54 (binListExp)
    PARENR  reduce using rule 54 (binListExp)


State 375

   81 factor: fCall •

    COMMA   reduce using rule 81 (factor)
    PARENR  reduce using rule 81 (factor)


State 376

   56 binListExp: factor FILTER factor •

    COMMA   reduce using rule 56 (binListExp)
    PARENR  reduce using rule 56 (binListExp)


State 377

   55 binListExp: factor MAP factor •

    COMMA   reduce using rule 55 (binListExp)
    PARENR  reduce using rule 55 (binListExp)


State 378

   85 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 85 (fCall)
    SUB        reduce using rule 85 (fCall)
    MULT       reduce using rule 85 (fCall)
    DIV        reduce using rule 85 (fCall)
    OR         reduce using rule 85 (fCall)
    AND        reduce using rule 85 (fCall)
    SMALLER    reduce using rule 85 (fCall)
    GREATER    reduce using rule 85 (fCall)
    SMALLEQ    reduce using rule 85 (fCall)
    GREATEQ    reduce using rule 85 (fCall)
    EQUALS     reduce using rule 85 (fCall)
    DIFFERENT  reduce using rule 85 (fCall)
    SEMIC      reduce using rule 85 (fCall)


State 379

   86 fCall: ID PARENL PARENR •

    SEMIC  reduce using rule 86 (fCall)


State 380

   85 fCall: ID PARENL callParams • PARENR
   87 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 138
    PARENR  shift, and go to state 401


State 381

   82 factor: PARENL simpleExp PARENR •

    SEMIC  reduce using rule 82 (factor)


State 382

   85 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 85 (fCall)
    SUB        reduce using rule 85 (fCall)
    MULT       reduce using rule 85 (fCall)
    DIV        reduce using rule 85 (fCall)
    OR         reduce using rule 85 (fCall)
    AND        reduce using rule 85 (fCall)
    SMALLER    reduce using rule 85 (fCall)
    GREATER    reduce using rule 85 (fCall)
    SMALLEQ    reduce using rule 85 (fCall)
    GREATEQ    reduce using rule 85 (fCall)
    EQUALS     reduce using rule 85 (fCall)
    DIFFERENT  reduce using rule 85 (fCall)
    APPEND     reduce using rule 85 (fCall)
    FILTER     reduce using rule 85 (fCall)
    MAP        reduce using rule 85 (fCall)
    PARENR     reduce using rule 85 (fCall)


State 383

   86 fCall: ID PARENL PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    PARENR     reduce using rule 86 (fCall)


State 384

   85 fCall: ID PARENL callParams • PARENR
   87 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 138
    PARENR  shift, and go to state 402


State 385

   82 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 386

   85 fCall: ID PARENL • callParams PARENR
   86      | ID PARENL • PARENR

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216
    PARENR      shift, and go to state 403

    simpleExp      go to state 112
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225
    callParams     go to state 404


State 387

   82 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 405


State 388

   38 iterStmt: FOR PARENL assignExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 242
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    simpleExp      go to state 406
    constOp        go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 389

   39 iterStmt: FOR PARENL simpleExp SEMIC • simpleExp SEMIC assignExp PARENR primitiveStmt

    ID          shift, and go to state 242
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    PARENL      shift, and go to state 46

    simpleExp      go to state 407
    constOp        go to state 59
    binListExp     go to state 62
    unaryListExp   go to state 63
    binLogicalExp  go to state 64
    relationalExp  go to state 65
    sumExp         go to state 66
    mulExp         go to state 67
    factor         go to state 68
    fCall          go to state 69


State 390

   49 inOp: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 408


State 391

   50 outOp: WRITE PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 409


State 392

   51 outOp: WRITELN PARENL outConst PARENR • SEMIC

    SEMIC  shift, and go to state 410


State 393

   34 condStmt: ifStmt STFUNC ENDFUNC elseStmt •

    ID          reduce using rule 34 (condStmt)
    TYPE        reduce using rule 34 (condStmt)
    NIL         reduce using rule 34 (condStmt)
    INTEGER     reduce using rule 34 (condStmt)
    DECIMAL     reduce using rule 34 (condStmt)
    ERRORTOKEN  reduce using rule 34 (condStmt)
    ELSE        reduce using rule 34 (condStmt)
    ADD         reduce using rule 34 (condStmt)
    SUB         reduce using rule 34 (condStmt)
    HEADLIST    reduce using rule 34 (condStmt)
    TAILLIST    reduce using rule 34 (condStmt)
    IF          reduce using rule 34 (condStmt)
    FOR         reduce using rule 34 (condStmt)
    READ        reduce using rule 34 (condStmt)
    WRITE       reduce using rule 34 (condStmt)
    WRITELN     reduce using rule 34 (condStmt)
    RETURN      reduce using rule 34 (condStmt)
    STFUNC      reduce using rule 34 (condStmt)
    ENDFUNC     reduce using rule 34 (condStmt)
    PARENL      reduce using rule 34 (condStmt)


State 394

   37 elseStmt: ELSE $@5 • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 191
    READ        shift, and go to state 192
    WRITE       shift, and go to state 193
    WRITELN     shift, and go to state 194
    RETURN      shift, and go to state 195
    STFUNC      shift, and go to state 411
    PARENL      shift, and go to state 46

    varDeclaration        go to state 196
    simpleVarDeclaration  go to state 197
    compoundStmt          go to state 198
    primitiveStmt         go to state 412
    exprStmt              go to state 199
    condStmt              go to state 200
    ifStmt                go to state 201
    iterStmt              go to state 202
    returnStmt            go to state 203
    expression            go to state 204
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 205
    outOp                 go to state 206
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 395

   85 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 85 (fCall)
    SUB        reduce using rule 85 (fCall)
    MULT       reduce using rule 85 (fCall)
    DIV        reduce using rule 85 (fCall)
    OR         reduce using rule 85 (fCall)
    AND        reduce using rule 85 (fCall)
    SMALLER    reduce using rule 85 (fCall)
    GREATER    reduce using rule 85 (fCall)
    SMALLEQ    reduce using rule 85 (fCall)
    GREATEQ    reduce using rule 85 (fCall)
    EQUALS     reduce using rule 85 (fCall)
    DIFFERENT  reduce using rule 85 (fCall)
    APPEND     reduce using rule 85 (fCall)
    FILTER     reduce using rule 85 (fCall)
    MAP        reduce using rule 85 (fCall)
    COMMA      reduce using rule 85 (fCall)
    PARENR     reduce using rule 85 (fCall)


State 396

   86 fCall: ID PARENL PARENR •

    ADD        reduce using rule 86 (fCall)
    SUB        reduce using rule 86 (fCall)
    MULT       reduce using rule 86 (fCall)
    DIV        reduce using rule 86 (fCall)
    OR         reduce using rule 86 (fCall)
    AND        reduce using rule 86 (fCall)
    SMALLER    reduce using rule 86 (fCall)
    GREATER    reduce using rule 86 (fCall)
    SMALLEQ    reduce using rule 86 (fCall)
    GREATEQ    reduce using rule 86 (fCall)
    EQUALS     reduce using rule 86 (fCall)
    DIFFERENT  reduce using rule 86 (fCall)
    COMMA      reduce using rule 86 (fCall)
    PARENR     reduce using rule 86 (fCall)


State 397

   85 fCall: ID PARENL callParams • PARENR
   87 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 138
    PARENR  shift, and go to state 413


State 398

   82 factor: PARENL simpleExp PARENR •

    ADD        reduce using rule 82 (factor)
    SUB        reduce using rule 82 (factor)
    MULT       reduce using rule 82 (factor)
    DIV        reduce using rule 82 (factor)
    OR         reduce using rule 82 (factor)
    AND        reduce using rule 82 (factor)
    SMALLER    reduce using rule 82 (factor)
    GREATER    reduce using rule 82 (factor)
    SMALLEQ    reduce using rule 82 (factor)
    GREATEQ    reduce using rule 82 (factor)
    EQUALS     reduce using rule 82 (factor)
    DIFFERENT  reduce using rule 82 (factor)
    COMMA      reduce using rule 82 (factor)
    PARENR     reduce using rule 82 (factor)


State 399

   85 fCall: ID PARENL • callParams PARENR
   86      | ID PARENL • PARENR

    ID          shift, and go to state 207
    NIL         shift, and go to state 208
    INTEGER     shift, and go to state 209
    DECIMAL     shift, and go to state 210
    ERRORTOKEN  shift, and go to state 211
    ADD         shift, and go to state 212
    SUB         shift, and go to state 213
    HEADLIST    shift, and go to state 214
    TAILLIST    shift, and go to state 215
    PARENL      shift, and go to state 216
    PARENR      shift, and go to state 414

    simpleExp      go to state 112
    constOp        go to state 217
    binListExp     go to state 218
    unaryListExp   go to state 219
    binLogicalExp  go to state 220
    relationalExp  go to state 221
    sumExp         go to state 222
    mulExp         go to state 223
    factor         go to state 224
    fCall          go to state 225
    callParams     go to state 415


State 400

   82 factor: PARENL simpleExp • PARENR

    PARENR  shift, and go to state 416


State 401

   85 fCall: ID PARENL callParams PARENR •

    SEMIC  reduce using rule 85 (fCall)


State 402

   85 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 85 (fCall)
    SUB        reduce using rule 85 (fCall)
    MULT       reduce using rule 85 (fCall)
    DIV        reduce using rule 85 (fCall)
    OR         reduce using rule 85 (fCall)
    AND        reduce using rule 85 (fCall)
    SMALLER    reduce using rule 85 (fCall)
    GREATER    reduce using rule 85 (fCall)
    SMALLEQ    reduce using rule 85 (fCall)
    GREATEQ    reduce using rule 85 (fCall)
    EQUALS     reduce using rule 85 (fCall)
    DIFFERENT  reduce using rule 85 (fCall)
    PARENR     reduce using rule 85 (fCall)


State 403

   86 fCall: ID PARENL PARENR •

    PARENR  reduce using rule 86 (fCall)


State 404

   85 fCall: ID PARENL callParams • PARENR
   87 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 138
    PARENR  shift, and go to state 417


State 405

   82 factor: PARENL simpleExp PARENR •

    PARENR  reduce using rule 82 (factor)


State 406

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 418


State 407

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp • SEMIC assignExp PARENR primitiveStmt

    SEMIC  shift, and go to state 419


State 408

   49 inOp: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 49 (inOp)
    TYPE        reduce using rule 49 (inOp)
    NIL         reduce using rule 49 (inOp)
    INTEGER     reduce using rule 49 (inOp)
    DECIMAL     reduce using rule 49 (inOp)
    ERRORTOKEN  reduce using rule 49 (inOp)
    ELSE        reduce using rule 49 (inOp)
    ADD         reduce using rule 49 (inOp)
    SUB         reduce using rule 49 (inOp)
    HEADLIST    reduce using rule 49 (inOp)
    TAILLIST    reduce using rule 49 (inOp)
    IF          reduce using rule 49 (inOp)
    FOR         reduce using rule 49 (inOp)
    READ        reduce using rule 49 (inOp)
    WRITE       reduce using rule 49 (inOp)
    WRITELN     reduce using rule 49 (inOp)
    RETURN      reduce using rule 49 (inOp)
    STFUNC      reduce using rule 49 (inOp)
    ENDFUNC     reduce using rule 49 (inOp)
    PARENL      reduce using rule 49 (inOp)


State 409

   50 outOp: WRITE PARENL outConst PARENR SEMIC •

    ID          reduce using rule 50 (outOp)
    TYPE        reduce using rule 50 (outOp)
    NIL         reduce using rule 50 (outOp)
    INTEGER     reduce using rule 50 (outOp)
    DECIMAL     reduce using rule 50 (outOp)
    ERRORTOKEN  reduce using rule 50 (outOp)
    ELSE        reduce using rule 50 (outOp)
    ADD         reduce using rule 50 (outOp)
    SUB         reduce using rule 50 (outOp)
    HEADLIST    reduce using rule 50 (outOp)
    TAILLIST    reduce using rule 50 (outOp)
    IF          reduce using rule 50 (outOp)
    FOR         reduce using rule 50 (outOp)
    READ        reduce using rule 50 (outOp)
    WRITE       reduce using rule 50 (outOp)
    WRITELN     reduce using rule 50 (outOp)
    RETURN      reduce using rule 50 (outOp)
    STFUNC      reduce using rule 50 (outOp)
    ENDFUNC     reduce using rule 50 (outOp)
    PARENL      reduce using rule 50 (outOp)


State 410

   51 outOp: WRITELN PARENL outConst PARENR SEMIC •

    ID          reduce using rule 51 (outOp)
    TYPE        reduce using rule 51 (outOp)
    NIL         reduce using rule 51 (outOp)
    INTEGER     reduce using rule 51 (outOp)
    DECIMAL     reduce using rule 51 (outOp)
    ERRORTOKEN  reduce using rule 51 (outOp)
    ELSE        reduce using rule 51 (outOp)
    ADD         reduce using rule 51 (outOp)
    SUB         reduce using rule 51 (outOp)
    HEADLIST    reduce using rule 51 (outOp)
    TAILLIST    reduce using rule 51 (outOp)
    IF          reduce using rule 51 (outOp)
    FOR         reduce using rule 51 (outOp)
    READ        reduce using rule 51 (outOp)
    WRITE       reduce using rule 51 (outOp)
    WRITELN     reduce using rule 51 (outOp)
    RETURN      reduce using rule 51 (outOp)
    STFUNC      reduce using rule 51 (outOp)
    ENDFUNC     reduce using rule 51 (outOp)
    PARENL      reduce using rule 51 (outOp)


State 411

   19 compoundStmt: STFUNC • stmtList ENDFUNC

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    RETURN      shift, and go to state 44
    STFUNC      shift, and go to state 45
    PARENL      shift, and go to state 46

    varDeclaration        go to state 47
    simpleVarDeclaration  go to state 164
    compoundStmt          go to state 48
    stmtList              go to state 227
    primitiveStmt         go to state 50
    exprStmt              go to state 51
    condStmt              go to state 52
    ifStmt                go to state 53
    iterStmt              go to state 54
    returnStmt            go to state 55
    expression            go to state 56
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 60
    outOp                 go to state 61
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 412

   37 elseStmt: ELSE $@5 primitiveStmt •

    ID          reduce using rule 37 (elseStmt)
    TYPE        reduce using rule 37 (elseStmt)
    NIL         reduce using rule 37 (elseStmt)
    INTEGER     reduce using rule 37 (elseStmt)
    DECIMAL     reduce using rule 37 (elseStmt)
    ERRORTOKEN  reduce using rule 37 (elseStmt)
    ELSE        reduce using rule 37 (elseStmt)
    ADD         reduce using rule 37 (elseStmt)
    SUB         reduce using rule 37 (elseStmt)
    HEADLIST    reduce using rule 37 (elseStmt)
    TAILLIST    reduce using rule 37 (elseStmt)
    IF          reduce using rule 37 (elseStmt)
    FOR         reduce using rule 37 (elseStmt)
    READ        reduce using rule 37 (elseStmt)
    WRITE       reduce using rule 37 (elseStmt)
    WRITELN     reduce using rule 37 (elseStmt)
    RETURN      reduce using rule 37 (elseStmt)
    STFUNC      reduce using rule 37 (elseStmt)
    ENDFUNC     reduce using rule 37 (elseStmt)
    PARENL      reduce using rule 37 (elseStmt)


State 413

   85 fCall: ID PARENL callParams PARENR •

    ADD        reduce using rule 85 (fCall)
    SUB        reduce using rule 85 (fCall)
    MULT       reduce using rule 85 (fCall)
    DIV        reduce using rule 85 (fCall)
    OR         reduce using rule 85 (fCall)
    AND        reduce using rule 85 (fCall)
    SMALLER    reduce using rule 85 (fCall)
    GREATER    reduce using rule 85 (fCall)
    SMALLEQ    reduce using rule 85 (fCall)
    GREATEQ    reduce using rule 85 (fCall)
    EQUALS     reduce using rule 85 (fCall)
    DIFFERENT  reduce using rule 85 (fCall)
    COMMA      reduce using rule 85 (fCall)
    PARENR     reduce using rule 85 (fCall)


State 414

   86 fCall: ID PARENL PARENR •

    COMMA   reduce using rule 86 (fCall)
    PARENR  reduce using rule 86 (fCall)


State 415

   85 fCall: ID PARENL callParams • PARENR
   87 callParams: callParams • COMMA simpleExp

    COMMA   shift, and go to state 138
    PARENR  shift, and go to state 420


State 416

   82 factor: PARENL simpleExp PARENR •

    COMMA   reduce using rule 82 (factor)
    PARENR  reduce using rule 82 (factor)


State 417

   85 fCall: ID PARENL callParams PARENR •

    PARENR  reduce using rule 85 (fCall)


State 418

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 157

    assignExp  go to state 421


State 419

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC • assignExp PARENR primitiveStmt

    ID  shift, and go to state 157

    assignExp  go to state 422


State 420

   85 fCall: ID PARENL callParams PARENR •

    COMMA   reduce using rule 85 (fCall)
    PARENR  reduce using rule 85 (fCall)


State 421

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 423


State 422

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp • PARENR primitiveStmt

    PARENR  shift, and go to state 424


State 423

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 191
    READ        shift, and go to state 192
    WRITE       shift, and go to state 193
    WRITELN     shift, and go to state 194
    RETURN      shift, and go to state 195
    STFUNC      shift, and go to state 411
    PARENL      shift, and go to state 46

    varDeclaration        go to state 196
    simpleVarDeclaration  go to state 197
    compoundStmt          go to state 198
    primitiveStmt         go to state 425
    exprStmt              go to state 199
    condStmt              go to state 200
    ifStmt                go to state 201
    iterStmt              go to state 202
    returnStmt            go to state 203
    expression            go to state 204
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 205
    outOp                 go to state 206
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 424

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR • primitiveStmt

    ID          shift, and go to state 29
    TYPE        shift, and go to state 30
    NIL         shift, and go to state 31
    INTEGER     shift, and go to state 32
    DECIMAL     shift, and go to state 33
    ERRORTOKEN  shift, and go to state 34
    ADD         shift, and go to state 35
    SUB         shift, and go to state 36
    HEADLIST    shift, and go to state 37
    TAILLIST    shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 191
    READ        shift, and go to state 192
    WRITE       shift, and go to state 193
    WRITELN     shift, and go to state 194
    RETURN      shift, and go to state 195
    STFUNC      shift, and go to state 411
    PARENL      shift, and go to state 46

    varDeclaration        go to state 196
    simpleVarDeclaration  go to state 197
    compoundStmt          go to state 198
    primitiveStmt         go to state 426
    exprStmt              go to state 199
    condStmt              go to state 200
    ifStmt                go to state 201
    iterStmt              go to state 202
    returnStmt            go to state 203
    expression            go to state 204
    assignExp             go to state 57
    simpleExp             go to state 58
    constOp               go to state 59
    inOp                  go to state 205
    outOp                 go to state 206
    binListExp            go to state 62
    unaryListExp          go to state 63
    binLogicalExp         go to state 64
    relationalExp         go to state 65
    sumExp                go to state 66
    mulExp                go to state 67
    factor                go to state 68
    fCall                 go to state 69


State 425

   38 iterStmt: FOR PARENL assignExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID          reduce using rule 38 (iterStmt)
    TYPE        reduce using rule 38 (iterStmt)
    NIL         reduce using rule 38 (iterStmt)
    INTEGER     reduce using rule 38 (iterStmt)
    DECIMAL     reduce using rule 38 (iterStmt)
    ERRORTOKEN  reduce using rule 38 (iterStmt)
    ELSE        reduce using rule 38 (iterStmt)
    ADD         reduce using rule 38 (iterStmt)
    SUB         reduce using rule 38 (iterStmt)
    HEADLIST    reduce using rule 38 (iterStmt)
    TAILLIST    reduce using rule 38 (iterStmt)
    IF          reduce using rule 38 (iterStmt)
    FOR         reduce using rule 38 (iterStmt)
    READ        reduce using rule 38 (iterStmt)
    WRITE       reduce using rule 38 (iterStmt)
    WRITELN     reduce using rule 38 (iterStmt)
    RETURN      reduce using rule 38 (iterStmt)
    STFUNC      reduce using rule 38 (iterStmt)
    ENDFUNC     reduce using rule 38 (iterStmt)
    PARENL      reduce using rule 38 (iterStmt)


State 426

   39 iterStmt: FOR PARENL simpleExp SEMIC simpleExp SEMIC assignExp PARENR primitiveStmt •

    ID          reduce using rule 39 (iterStmt)
    TYPE        reduce using rule 39 (iterStmt)
    NIL         reduce using rule 39 (iterStmt)
    INTEGER     reduce using rule 39 (iterStmt)
    DECIMAL     reduce using rule 39 (iterStmt)
    ERRORTOKEN  reduce using rule 39 (iterStmt)
    ELSE        reduce using rule 39 (iterStmt)
    ADD         reduce using rule 39 (iterStmt)
    SUB         reduce using rule 39 (iterStmt)
    HEADLIST    reduce using rule 39 (iterStmt)
    TAILLIST    reduce using rule 39 (iterStmt)
    IF          reduce using rule 39 (iterStmt)
    FOR         reduce using rule 39 (iterStmt)
    READ        reduce using rule 39 (iterStmt)
    WRITE       reduce using rule 39 (iterStmt)
    WRITELN     reduce using rule 39 (iterStmt)
    RETURN      reduce using rule 39 (iterStmt)
    STFUNC      reduce using rule 39 (iterStmt)
    ENDFUNC     reduce using rule 39 (iterStmt)
    PARENL      reduce using rule 39 (iterStmt)
